/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include <unistd.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"

static void initial_message() { printf("\n\n***CE PROGRAMME UTILISE DES POINTEURS***\n");}

int main()
{
  printf("Hello from Nios II!\n");

  volatile int * LED_ptr 			= (int *)LEDR_BASE;
  volatile int * SW_switch_ptr 		= (int *)INTERRUPTEURS_BASE;
  volatile int * KEY_ptr 			= (int *)BOUTONS_POUSSOIRS_BASE;
  volatile int * HEX3_HEX0_ptr 		= (int *)HEX3_HEX0_BASE;

  int HEX_bits = 0x0;
  int LED_bits = 0x0;
  int SW_value;
  int press, delay_count = 0;

  initial_message();

  while(1)
  {
	  SW_value = *(SW_switch_ptr);
	  press = *(KEY_ptr + 3);
	  *(KEY_ptr + 3) = press;

	  if (press & 0x01)
		  HEX_bits = SW_value;

	  if (press & 0x02)
		  HEX_bits = !SW_value;

	  *(HEX3_HEX0_ptr) = HEX_bits;
	  *(LED_ptr) = LED_bits;

	  if (HEX_bits & 0x80000000)
		  HEX_bits = (HEX_bits << 1) | 1;
	  else
		  HEX_bits = HEX_bits << 1;

	  if (LED_bits & 0x1)
		  LED_bits = (LED_bits >> 1) | 0x80000000;
	  else
		  LED_bits = (LED_bits >> 1) & 0x7FFFFFFF;

	  for (delay_count = 200000; delay_count != 0; --delay_count);
  }


  return 0;
}
