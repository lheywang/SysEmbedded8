
project_soft.elf:     file format elf32-littlenios2
project_soft.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00013ba8 memsz 0x00013ba8 flags r-x
    LOAD off    0x00014bc8 vaddr 0x00033bc8 paddr 0x000356bc align 2**12
         filesz 0x00001af4 memsz 0x00001af4 flags rw-
    LOAD off    0x000171b0 vaddr 0x000371b0 paddr 0x000371b0 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001356c  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000418  000337b0  000337b0  000147b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af4  00033bc8  000356bc  00014bc8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  000371b0  000371b0  000171b0  2**2
                  ALLOC, SMALL_DATA
  6 .MEMOIRE_ONCHIP 00000000  00037310  00037310  000166bc  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000166bc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fc8  00000000  00000000  000166e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00026f0c  00000000  00000000  000176a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009bf5  00000000  00000000  0003e5b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000d0be  00000000  00000000  000481a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002440  00000000  00000000  00055268  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003ae0  00000000  00000000  000576a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001c53f  00000000  00000000  0005b188  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000050  00000000  00000000  000776c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001a88  00000000  00000000  00077718  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007c63e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  0007c641  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007c64b  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007c64c  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0007c64d  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007c651  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007c655  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0007c659  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0007c664  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0007c66f  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000006  00000000  00000000  0007c67a  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001f  00000000  00000000  0007c680  2**0
                  CONTENTS, READONLY
 29 .jdi          0000538d  00000000  00000000  0007c69f  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0006f62d  00000000  00000000  00081a2c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
000337b0 l    d  .rodata	00000000 .rodata
00033bc8 l    d  .rwdata	00000000 .rwdata
000371b0 l    d  .bss	00000000 .bss
00037310 l    d  .MEMOIRE_ONCHIP	00000000 .MEMOIRE_ONCHIP
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../project_soft_bsp//obj/HAL/src/crt0.o
0002027c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 buzzer.c
00035674 l     O .rwdata	00000004 val
00000000 l    df *ABS*	00000000 hello_world.c
00035678 l     O .rwdata	00000004 val
00020580 l     F .text	00000070 PWM_ISR
000205f0 l     F .text	00000070 SW_ISR
00000000 l    df *ABS*	00000000 hex.c
00033824 l     O .rodata	00000058 chars
00000000 l    df *ABS*	00000000 ptime.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000338ce l     O .rodata	00000010 zeroes.4389
000338de l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
000338ee l     O .rodata	00000010 zeroes.4404
00025560 l     F .text	000000bc __sbprintf
000338fe l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00025770 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000272a0 l     F .text	00000008 __fp_unlock
000272b4 l     F .text	0000019c __sinit.part.1
00027450 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00033bc8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0003400c l     O .rwdata	00000020 lc_ctype_charset
00033fec l     O .rwdata	00000020 lc_message_charset
0003402c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00033930 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00033a64 l     O .rodata	00000010 blanks.4332
00033a54 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfprintf.c
0002bc58 l     F .text	000000fc __sprint_r.part.0
00033a84 l     O .rodata	00000010 blanks.4348
00033a74 l     O .rodata	00000010 zeroes.4349
0002d1e4 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00030ea0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00030fac l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00030fd8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00031364 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00031444 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00031530 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00031704 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000356b0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00031980 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00031ab4 l     F .text	00000034 alt_dev_reg
00034614 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00031da8 l     F .text	0000020c altera_avalon_jtag_uart_irq
00031fb4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000325ec l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00032984 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00032bf4 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
00032d34 l     F .text	0000003c alt_get_errno
00032d70 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000371dc g     O .bss	00000004 alt_instruction_exception_handler
00029e90 g     F .text	00000074 _mprec_log10
00029f7c g     F .text	0000008c __any_on
0002d780 g     F .text	00000054 _isatty_r
0003393c g     O .rodata	00000028 __mprec_tinytens
00031640 g     F .text	0000007c alt_main
00020f44 g     F .text	000000c0 _puts_r
00037210 g     O .bss	00000100 alt_irq
0002d7d4 g     F .text	00000060 _lseek_r
000356bc g       *ABS*	00000000 __flash_rwdata_start
0002f9cc g     F .text	00000088 .hidden __eqdf2
00037310 g       *ABS*	00000000 __alt_heap_start
00020f08 g     F .text	0000003c printf
0002d9ec g     F .text	0000009c _wcrtomb_r
0002a70c g     F .text	0000005c __sseek
000275f0 g     F .text	00000010 __sinit
0002d894 g     F .text	00000140 __swbuf_r
000280b8 g     F .text	0000007c _setlocale_r
00027458 g     F .text	00000068 __sfmoreglue
000316e0 g     F .text	00000024 __malloc_unlock
00028d88 g     F .text	0000015c memmove
000275d8 g     F .text	00000018 _cleanup
0002900c g     F .text	000000a8 _Balloc
0002fa54 g     F .text	000000dc .hidden __gtdf2
0003312c g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
0002d724 g     F .text	0000005c _fstat_r
000371c8 g     O .bss	00000004 errno
0002a688 g     F .text	00000008 __seofread
0002aa1c g     F .text	0000123c ___svfiprintf_internal_r
000371d4 g     O .bss	00000004 alt_argv
0003d674 g       *ABS*	00000000 _gp
00031950 g     F .text	00000030 usleep
000204cc g     F .text	00000080 buzzer_play
00034494 g     O .rwdata	00000180 alt_fd_list
00033150 g     F .text	00000090 alt_find_dev
00028c40 g     F .text	00000148 memcpy
000272a8 g     F .text	0000000c _cleanup_r
00030cb8 g     F .text	000000dc .hidden __floatsidf
000202ec g     F .text	000000a0 buzzer_set_volume
00032cb8 g     F .text	0000007c alt_io_redirect
0002fb30 g     F .text	000000f4 .hidden __ltdf2
000337b0 g       *ABS*	00000000 __DTOR_END__
00021004 g     F .text	00000014 puts
00032b58 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0002a56c g     F .text	00000074 __fpclassifyd
00029dec g     F .text	000000a4 __ratio
0002d1c8 g     F .text	0000001c __vfiprintf_internal
000321ac g     F .text	0000021c altera_avalon_jtag_uart_read
00020ed8 g     F .text	00000030 _printf_r
0002e77c g     F .text	00000064 .hidden __udivsi3
000313a0 g     F .text	000000a4 isatty
00020280 g     F .text	0000006c buzzer_set_note
0003398c g     O .rodata	000000c8 __mprec_tens
00028134 g     F .text	0000000c __locale_charset
0003338c g     F .text	00000090 alt_icache_flush
00020ddc g     F .text	000000fc time_print
000371c4 g     O .bss	00000004 __malloc_top_pad
00035684 g     O .rwdata	00000004 __mb_cur_max
00028164 g     F .text	0000000c _localeconv_r
00029418 g     F .text	0000003c __i2b
00027a74 g     F .text	000004bc __sfvwrite_r
0002a5e0 g     F .text	00000054 _sbrk_r
0002d834 g     F .text	00000060 _read_r
000356a4 g     O .rwdata	00000004 alt_max_fd
0002d418 g     F .text	000000f0 _fclose_r
00027270 g     F .text	00000030 fflush
000371c0 g     O .bss	00000004 __malloc_max_sbrked_mem
0002e838 g     F .text	000008ac .hidden __adddf3
00029b94 g     F .text	0000010c __b2d
0002e14c g     F .text	00000538 .hidden __umoddi3
0003156c g     F .text	000000d4 lseek
0003567c g     O .rwdata	00000004 _global_impure_ptr
0002a008 g     F .text	00000564 _realloc_r
00037310 g       *ABS*	00000000 __bss_end
00031274 g     F .text	000000f0 alt_iic_isr_register
00033024 g     F .text	00000108 alt_tick
0002dbd4 g     F .text	00000578 .hidden __udivdi3
0002d680 g     F .text	00000024 _fputwc_r
00033964 g     O .rodata	00000028 __mprec_bigtens
000291fc g     F .text	00000104 __s2b
00030d94 g     F .text	000000a8 .hidden __floatunsidf
000298d4 g     F .text	00000060 __mcmp
00027610 g     F .text	00000018 __fp_lock_all
00031228 g     F .text	0000004c alt_ic_irq_enabled
00032f88 g     F .text	0000009c alt_alarm_stop
000371cc g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
0003446c g     O .rwdata	00000028 alt_dev_null
00032964 g     F .text	00000020 alt_dcache_flush_all
00029300 g     F .text	00000068 __hi0bits
00030c38 g     F .text	00000080 .hidden __fixdfsi
000356bc g       *ABS*	00000000 __ram_rwdata_end
0003569c g     O .rwdata	00000008 alt_dev_list
000319bc g     F .text	000000f8 write
00033bc8 g       *ABS*	00000000 __ram_rodata_end
00031014 g     F .text	000000b0 fstat
0002fb30 g     F .text	000000f4 .hidden __ledf2
0002964c g     F .text	00000140 __pow5mult
0002bd6c g     F .text	0000145c ___vfiprintf_internal_r
000371b8 g     O .bss	00000004 __nlocale_changed
0002e7e0 g     F .text	00000058 .hidden __umodsi3
00037310 g       *ABS*	00000000 end
00031ce8 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
000337b0 g       *ABS*	00000000 __CTOR_LIST__
0003e000 g       *ABS*	00000000 __alt_stack_pointer
00032664 g     F .text	0000007c alt_avalon_timer_sc_init
00030e3c g     F .text	00000064 .hidden __clzsi2
000323c8 g     F .text	00000224 altera_avalon_jtag_uart_write
00027600 g     F .text	00000004 __sfp_lock_acquire
00028b5c g     F .text	000000e4 memchr
0002334c g     F .text	000021f8 ___vfprintf_internal_r
00021018 g     F .text	00000058 _sprintf_r
00027764 g     F .text	00000310 _free_r
00028140 g     F .text	00000010 __locale_mb_cur_max
000335fc g     F .text	00000180 __call_exitprocs
000371b4 g     O .bss	00000004 __mlocale_changed
00035688 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000003c _start
000371e0 g     O .bss	00000004 _alt_tick_rate
0002978c g     F .text	00000148 __lshift
000371e4 g     O .bss	00000004 _alt_nticks
00031740 g     F .text	000000fc read
00031b20 g     F .text	00000064 alt_sys_init
0002a84c g     F .text	000001d0 __ssprint_r
000334e4 g     F .text	00000118 __register_exitproc
00029454 g     F .text	000001f8 __multiply
00032054 g     F .text	00000068 altera_avalon_jtag_uart_close
00033bc8 g       *ABS*	00000000 __ram_rwdata_start
000337b0 g       *ABS*	00000000 __ram_rodata_start
000371e8 g     O .bss	00000028 __malloc_current_mallinfo
00029ca0 g     F .text	0000014c __d2b
00031b84 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000332e8 g     F .text	000000a4 alt_get_fd
0002042c g     F .text	000000a0 buzzer_set_duration
0003280c g     F .text	00000158 alt_busy_sleep
0002d300 g     F .text	00000054 _close_r
00033468 g     F .text	0000007c memcmp
00031c44 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00037310 g       *ABS*	00000000 __alt_stack_base
00031c94 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0002561c g     F .text	00000154 __swsetup_r
0002f0e4 g     F .text	000008e8 .hidden __divdf3
000274c0 g     F .text	00000118 __sfp
00029f04 g     F .text	00000078 __copybits
00020788 g     F .text	00000270 char27seg
00034064 g     O .rwdata	00000408 __malloc_av_
0002760c g     F .text	00000004 __sinit_lock_release
0002fc24 g     F .text	00000718 .hidden __muldf3
0002a634 g     F .text	00000054 __sread
000331e0 g     F .text	00000108 alt_find_file
000329c0 g     F .text	000000a4 alt_dev_llist_insert
000316bc g     F .text	00000024 __malloc_lock
000318a0 g     F .text	000000b0 sbrk
00021174 g     F .text	000021d8 ___svfprintf_internal_r
00027214 g     F .text	0000005c _fflush_r
0002d354 g     F .text	000000c4 _calloc_r
000371b0 g       *ABS*	00000000 __bss_start
00028ee4 g     F .text	00000128 memset
00020660 g     F .text	00000128 main
000371d8 g     O .bss	00000004 alt_envp
000371bc g     O .bss	00000004 __malloc_max_total_mem
00031be4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002d9d4 g     F .text	00000018 __swbuf
0002a768 g     F .text	00000008 __sclose
0003e000 g       *ABS*	00000000 __alt_heap_limit
0002d508 g     F .text	00000014 fclose
00025970 g     F .text	00001688 _dtoa_r
00028350 g     F .text	0000080c _malloc_r
0002db48 g     F .text	00000030 __ascii_wctomb
000356a8 g     O .rwdata	00000004 alt_errno
000203e0 g     F .text	0000004c buzzer_disable
000209f8 g     F .text	00000324 hex_display
00027f30 g     F .text	000000c4 _fwalk
0002e684 g     F .text	00000084 .hidden __divsi3
00027640 g     F .text	00000124 _malloc_trim_r
000337b0 g       *ABS*	00000000 __CTOR_END__
0002a770 g     F .text	000000dc strcmp
000337b0 g       *ABS*	00000000 __flash_rodata_start
000337b0 g       *ABS*	00000000 __DTOR_LIST__
0002f9cc g     F .text	00000088 .hidden __nedf2
00031ae8 g     F .text	00000038 alt_irq_init
0003183c g     F .text	00000064 alt_release_fd
00021070 g     F .text	0000006c sprintf
00033a94 g     O .rodata	00000100 .hidden __clz_tab
000371b0 g     O .bss	00000004 _PathLocale
0003341c g     F .text	00000014 atexit
0002d2a0 g     F .text	00000060 _write_r
00028170 g     F .text	00000018 setlocale
00020000 g       *ABS*	00000000 __alt_mem_MEMOIRE_ONCHIP
00035680 g     O .rwdata	00000004 _impure_ptr
0002054c g     F .text	00000034 buzzer_play_song
000371d0 g     O .bss	00000004 alt_argc
00026ff8 g     F .text	0000021c __sflush_r
00032ac4 g     F .text	00000060 _do_dtors
0002815c g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
00029b30 g     F .text	00000064 __ulp
00027628 g     F .text	00000018 __fp_unlock_all
00035694 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
00028188 g     F .text	0000000c localeconv
0002038c g     F .text	00000054 buzzer_enable
000310c4 g     F .text	00000050 alt_ic_isr_register
000356bc g       *ABS*	00000000 _edata
00020d1c g     F .text	000000c0 time_increment
00037310 g       *ABS*	00000000 _end
0002d51c g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
000320bc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0003119c g     F .text	0000008c alt_ic_irq_disable
0002a690 g     F .text	0000007c __swrite
0003568c g     O .rwdata	00000004 __malloc_trim_threshold
00028150 g     F .text	0000000c __locale_msgcharset
00033430 g     F .text	00000038 exit
00027ff4 g     F .text	000000c4 _fwalk_reent
00029934 g     F .text	000001fc __mdiff
0002e708 g     F .text	00000074 .hidden __modsi3
0003e000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00027604 g     F .text	00000004 __sfp_lock_release
0003377c g     F .text	00000034 _exit
000326e0 g     F .text	0000012c alt_alarm_start
00028194 g     F .text	000001bc __smakebuf_r
000210dc g     F .text	00000098 strlen
00032e34 g     F .text	00000154 open
0002fa54 g     F .text	000000dc .hidden __gedf2
00035690 g     O .rwdata	00000004 __wctomb
0002bd54 g     F .text	00000018 __sprint_r
00032b24 g     F .text	00000034 alt_icache_flush_all
000356ac g     O .rwdata	00000004 alt_priority_mask
00031114 g     F .text	00000088 alt_ic_irq_enable
00025544 g     F .text	0000001c __vfprintf_internal
0002db78 g     F .text	0000005c _wctomb_r
0003033c g     F .text	000008fc .hidden __subdf3
00029368 g     F .text	000000b0 __lo0bits
000356b4 g     O .rwdata	00000008 alt_alarm_list
00032a64 g     F .text	00000060 _do_ctors
0002da88 g     F .text	000000c0 wcrtomb
00030edc g     F .text	000000d0 close
000314ac g     F .text	00000084 alt_load
0002d6a4 g     F .text	00000080 fputwc
00027608 g     F .text	00000004 __sinit_lock_acquire
000290dc g     F .text	00000120 __multadd
000290b4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_MEMOIRE_ONCHIP-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	109c8404 	addi	r2,r2,29200
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	109c8404 	addi	r2,r2,29200
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6da17 	ldw	r2,-25752(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6da17 	ldw	r2,-25752(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20244:	06c000f4 	movhi	sp,3
    ori sp, sp, %lo(__alt_stack_pointer)
   20248:	def80014 	ori	sp,sp,57344
    movhi gp, %hi(_gp)
   2024c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20250:	d6b59d14 	ori	gp,gp,54900
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20254:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20258:	109c6c14 	ori	r2,r2,29104

    movhi r3, %hi(__bss_end)
   2025c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20260:	18dcc414 	ori	r3,r3,29456

    beq r2, r3, 1f
   20264:	10c00326 	beq	r2,r3,20274 <_start+0x30>

0:
    stw zero, (r2)
   20268:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2026c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20270:	10fffd36 	bltu	r2,r3,20268 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20274:	00314ac0 	call	314ac <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20278:	00316400 	call	31640 <alt_main>

0002027c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2027c:	003fff06 	br	2027c <alt_after_alt_main>

00020280 <buzzer_set_note>:
 *	FUNCTIONS
 *  =======================================================================
 */

int buzzer_set_note(enum note freq)
{
   20280:	defffc04 	addi	sp,sp,-16
   20284:	df000315 	stw	fp,12(sp)
   20288:	df000304 	addi	fp,sp,12
   2028c:	e13fff15 	stw	r4,-4(fp)
	// Set the 8 LSB
	uint32_t tmp_reg = PWM_IORD_ODATA;
   20290:	00800134 	movhi	r2,4
   20294:	10841c04 	addi	r2,r2,4208
   20298:	10800037 	ldwio	r2,0(r2)
   2029c:	e0bffd15 	stw	r2,-12(fp)
	uint8_t tmp_val = freq & 0xFF;
   202a0:	e0bfff17 	ldw	r2,-4(fp)
   202a4:	e0bffe05 	stb	r2,-8(fp)

	// Bit masking to configure the 8 LSBS.
	tmp_reg &= 0xFFFFFF00;
   202a8:	e0fffd17 	ldw	r3,-12(fp)
   202ac:	00bfc004 	movi	r2,-256
   202b0:	1884703a 	and	r2,r3,r2
   202b4:	e0bffd15 	stw	r2,-12(fp)
	tmp_reg |= tmp_val;
   202b8:	e0bffe03 	ldbu	r2,-8(fp)
   202bc:	e0fffd17 	ldw	r3,-12(fp)
   202c0:	1884b03a 	or	r2,r3,r2
   202c4:	e0bffd15 	stw	r2,-12(fp)

	// Write
	PWM_IOWR_DATA(tmp_reg);
   202c8:	e0fffd17 	ldw	r3,-12(fp)
   202cc:	00800134 	movhi	r2,4
   202d0:	10841c04 	addi	r2,r2,4208
   202d4:	10c00035 	stwio	r3,0(r2)

	return 0;
   202d8:	0005883a 	mov	r2,zero
}
   202dc:	e037883a 	mov	sp,fp
   202e0:	df000017 	ldw	fp,0(sp)
   202e4:	dec00104 	addi	sp,sp,4
   202e8:	f800283a 	ret

000202ec <buzzer_set_volume>:

int buzzer_set_volume(int volume)
{
   202ec:	defffc04 	addi	sp,sp,-16
   202f0:	df000315 	stw	fp,12(sp)
   202f4:	df000304 	addi	fp,sp,12
   202f8:	e13fff15 	stw	r4,-4(fp)
	// Inputs checks
	if ((volume > 255) | (volume < 0))
   202fc:	e0bfff17 	ldw	r2,-4(fp)
   20300:	10804008 	cmpgei	r2,r2,256
   20304:	1007883a 	mov	r3,r2
   20308:	e0bfff17 	ldw	r2,-4(fp)
   2030c:	1004d7fa 	srli	r2,r2,31
   20310:	1884b03a 	or	r2,r3,r2
   20314:	10803fcc 	andi	r2,r2,255
   20318:	10000226 	beq	r2,zero,20324 <buzzer_set_volume+0x38>
	{
		return -1;
   2031c:	00bfffc4 	movi	r2,-1
   20320:	00001606 	br	2037c <buzzer_set_volume+0x90>
	}

	// Set the 15-8 LSB
	uint32_t tmp_reg = PWM_IORD_ODATA;
   20324:	00800134 	movhi	r2,4
   20328:	10841c04 	addi	r2,r2,4208
   2032c:	10800037 	ldwio	r2,0(r2)
   20330:	e0bffd15 	stw	r2,-12(fp)
	uint8_t tmp_val = volume & 0xFF;
   20334:	e0bfff17 	ldw	r2,-4(fp)
   20338:	e0bffe05 	stb	r2,-8(fp)

	// Bit masking to configure the 15-8 LSBS.
	tmp_reg &= 0xFFFF00FF;
   2033c:	e0fffd17 	ldw	r3,-12(fp)
   20340:	00bffff4 	movhi	r2,65535
   20344:	10803fc4 	addi	r2,r2,255
   20348:	1884703a 	and	r2,r3,r2
   2034c:	e0bffd15 	stw	r2,-12(fp)
	tmp_reg |= (tmp_val << 8);
   20350:	e0bffe03 	ldbu	r2,-8(fp)
   20354:	1004923a 	slli	r2,r2,8
   20358:	1007883a 	mov	r3,r2
   2035c:	e0bffd17 	ldw	r2,-12(fp)
   20360:	10c4b03a 	or	r2,r2,r3
   20364:	e0bffd15 	stw	r2,-12(fp)

	// Write
	PWM_IOWR_DATA(tmp_reg);
   20368:	e0fffd17 	ldw	r3,-12(fp)
   2036c:	00800134 	movhi	r2,4
   20370:	10841c04 	addi	r2,r2,4208
   20374:	10c00035 	stwio	r3,0(r2)

	return 0;
   20378:	0005883a 	mov	r2,zero
}
   2037c:	e037883a 	mov	sp,fp
   20380:	df000017 	ldw	fp,0(sp)
   20384:	dec00104 	addi	sp,sp,4
   20388:	f800283a 	ret

0002038c <buzzer_enable>:

int buzzer_enable()
{
   2038c:	defffe04 	addi	sp,sp,-8
   20390:	df000115 	stw	fp,4(sp)
   20394:	df000104 	addi	fp,sp,4
	// Set the bit 31 to 0 to enable
	uint32_t tmp_reg = PWM_IORD_ODATA;
   20398:	00800134 	movhi	r2,4
   2039c:	10841c04 	addi	r2,r2,4208
   203a0:	10800037 	ldwio	r2,0(r2)
   203a4:	e0bfff15 	stw	r2,-4(fp)
	tmp_reg &= 0x7FFFFFFF;
   203a8:	e0ffff17 	ldw	r3,-4(fp)
   203ac:	00a00034 	movhi	r2,32768
   203b0:	10bfffc4 	addi	r2,r2,-1
   203b4:	1884703a 	and	r2,r3,r2
   203b8:	e0bfff15 	stw	r2,-4(fp)
	PWM_IOWR_DATA(tmp_reg);
   203bc:	e0ffff17 	ldw	r3,-4(fp)
   203c0:	00800134 	movhi	r2,4
   203c4:	10841c04 	addi	r2,r2,4208
   203c8:	10c00035 	stwio	r3,0(r2)

	return 0;
   203cc:	0005883a 	mov	r2,zero
}
   203d0:	e037883a 	mov	sp,fp
   203d4:	df000017 	ldw	fp,0(sp)
   203d8:	dec00104 	addi	sp,sp,4
   203dc:	f800283a 	ret

000203e0 <buzzer_disable>:

int buzzer_disable()
{
   203e0:	defffe04 	addi	sp,sp,-8
   203e4:	df000115 	stw	fp,4(sp)
   203e8:	df000104 	addi	fp,sp,4
	// Set the bit 31 to 1 to disable
	uint32_t tmp_reg = PWM_IORD_ODATA;
   203ec:	00800134 	movhi	r2,4
   203f0:	10841c04 	addi	r2,r2,4208
   203f4:	10800037 	ldwio	r2,0(r2)
   203f8:	e0bfff15 	stw	r2,-4(fp)
	tmp_reg |= 0x80000000;
   203fc:	e0bfff17 	ldw	r2,-4(fp)
   20400:	10a00034 	orhi	r2,r2,32768
   20404:	e0bfff15 	stw	r2,-4(fp)
	PWM_IOWR_DATA(tmp_reg);
   20408:	e0ffff17 	ldw	r3,-4(fp)
   2040c:	00800134 	movhi	r2,4
   20410:	10841c04 	addi	r2,r2,4208
   20414:	10c00035 	stwio	r3,0(r2)

	return 0;
   20418:	0005883a 	mov	r2,zero
}
   2041c:	e037883a 	mov	sp,fp
   20420:	df000017 	ldw	fp,0(sp)
   20424:	dec00104 	addi	sp,sp,4
   20428:	f800283a 	ret

0002042c <buzzer_set_duration>:

int buzzer_set_duration(int ms)
{
   2042c:	defffc04 	addi	sp,sp,-16
   20430:	df000315 	stw	fp,12(sp)
   20434:	df000304 	addi	fp,sp,12
   20438:	e13fff15 	stw	r4,-4(fp)
	// Inputs checks
	if ((ms > 255) | (ms < 0))
   2043c:	e0bfff17 	ldw	r2,-4(fp)
   20440:	10804008 	cmpgei	r2,r2,256
   20444:	1007883a 	mov	r3,r2
   20448:	e0bfff17 	ldw	r2,-4(fp)
   2044c:	1004d7fa 	srli	r2,r2,31
   20450:	1884b03a 	or	r2,r3,r2
   20454:	10803fcc 	andi	r2,r2,255
   20458:	10000226 	beq	r2,zero,20464 <buzzer_set_duration+0x38>
	{
		return -1;
   2045c:	00bfffc4 	movi	r2,-1
   20460:	00001606 	br	204bc <buzzer_set_duration+0x90>
	}

	// Set the 23-16 LSB
	uint32_t tmp_reg = PWM_IORD_ODATA;
   20464:	00800134 	movhi	r2,4
   20468:	10841c04 	addi	r2,r2,4208
   2046c:	10800037 	ldwio	r2,0(r2)
   20470:	e0bffd15 	stw	r2,-12(fp)
	uint8_t tmp_val = ms & 0xFF;
   20474:	e0bfff17 	ldw	r2,-4(fp)
   20478:	e0bffe05 	stb	r2,-8(fp)

	// Bit masking to configure the 23-16 LSBS.
	tmp_reg &= 0xFF00FFFF;
   2047c:	e0fffd17 	ldw	r3,-12(fp)
   20480:	00bfc074 	movhi	r2,65281
   20484:	10bfffc4 	addi	r2,r2,-1
   20488:	1884703a 	and	r2,r3,r2
   2048c:	e0bffd15 	stw	r2,-12(fp)
	tmp_reg |= (tmp_val << 16);
   20490:	e0bffe03 	ldbu	r2,-8(fp)
   20494:	1004943a 	slli	r2,r2,16
   20498:	1007883a 	mov	r3,r2
   2049c:	e0bffd17 	ldw	r2,-12(fp)
   204a0:	10c4b03a 	or	r2,r2,r3
   204a4:	e0bffd15 	stw	r2,-12(fp)

	// Write
	PWM_IOWR_DATA(tmp_reg);
   204a8:	e0fffd17 	ldw	r3,-12(fp)
   204ac:	00800134 	movhi	r2,4
   204b0:	10841c04 	addi	r2,r2,4208
   204b4:	10c00035 	stwio	r3,0(r2)

	return 0;
   204b8:	0005883a 	mov	r2,zero
}
   204bc:	e037883a 	mov	sp,fp
   204c0:	df000017 	ldw	fp,0(sp)
   204c4:	dec00104 	addi	sp,sp,4
   204c8:	f800283a 	ret

000204cc <buzzer_play>:

int buzzer_play()
{
   204cc:	defffd04 	addi	sp,sp,-12
   204d0:	dfc00215 	stw	ra,8(sp)
   204d4:	df000115 	stw	fp,4(sp)
   204d8:	df000104 	addi	fp,sp,4
	// Set the bit 30 to 1 to trigger start.
	uint32_t tmp_reg = PWM_IORD_ODATA;
   204dc:	00800134 	movhi	r2,4
   204e0:	10841c04 	addi	r2,r2,4208
   204e4:	10800037 	ldwio	r2,0(r2)
   204e8:	e0bfff15 	stw	r2,-4(fp)
	tmp_reg |= 0x40000000;
   204ec:	e0bfff17 	ldw	r2,-4(fp)
   204f0:	10900034 	orhi	r2,r2,16384
   204f4:	e0bfff15 	stw	r2,-4(fp)
	PWM_IOWR_DATA(tmp_reg);
   204f8:	e0ffff17 	ldw	r3,-4(fp)
   204fc:	00800134 	movhi	r2,4
   20500:	10841c04 	addi	r2,r2,4208
   20504:	10c00035 	stwio	r3,0(r2)

	usleep(1); // 1 microsecond to let the hardware register the event.
   20508:	01000044 	movi	r4,1
   2050c:	00319500 	call	31950 <usleep>

	// Set back the bit 30 to 0 to re-arm the device
	tmp_reg &= 0xBFFFFFFF;
   20510:	e0ffff17 	ldw	r3,-4(fp)
   20514:	00b00034 	movhi	r2,49152
   20518:	10bfffc4 	addi	r2,r2,-1
   2051c:	1884703a 	and	r2,r3,r2
   20520:	e0bfff15 	stw	r2,-4(fp)
	PWM_IOWR_DATA(tmp_reg);
   20524:	e0ffff17 	ldw	r3,-4(fp)
   20528:	00800134 	movhi	r2,4
   2052c:	10841c04 	addi	r2,r2,4208
   20530:	10c00035 	stwio	r3,0(r2)

	return 0;
   20534:	0005883a 	mov	r2,zero
}
   20538:	e037883a 	mov	sp,fp
   2053c:	dfc00117 	ldw	ra,4(sp)
   20540:	df000017 	ldw	fp,0(sp)
   20544:	dec00204 	addi	sp,sp,8
   20548:	f800283a 	ret

0002054c <buzzer_play_song>:

int buzzer_play_song(const struct song *Song)
{
   2054c:	defffe04 	addi	sp,sp,-8
   20550:	df000115 	stw	fp,4(sp)
   20554:	df000104 	addi	fp,sp,4
   20558:	e13fff15 	stw	r4,-4(fp)
	if (Song == NULL)
   2055c:	e0bfff17 	ldw	r2,-4(fp)
   20560:	1000021e 	bne	r2,zero,2056c <buzzer_play_song+0x20>
	{
		return -1;
   20564:	00bfffc4 	movi	r2,-1
   20568:	00000106 	br	20570 <buzzer_play_song+0x24>
	}

	// Do something here

	return 0;
   2056c:	0005883a 	mov	r2,zero
}
   20570:	e037883a 	mov	sp,fp
   20574:	df000017 	ldw	fp,0(sp)
   20578:	dec00104 	addi	sp,sp,4
   2057c:	f800283a 	ret

00020580 <PWM_ISR>:
#include <system.h>
#include <altera_avalon_pio_regs.h>
#include <unistd.h>

static void PWM_ISR(void *context, alt_u32 id)
{
   20580:	defffb04 	addi	sp,sp,-20
   20584:	dfc00415 	stw	ra,16(sp)
   20588:	df000315 	stw	fp,12(sp)
   2058c:	df000304 	addi	fp,sp,12
   20590:	e13ffe15 	stw	r4,-8(fp)
   20594:	e17fff15 	stw	r5,-4(fp)
	int button_position;
	button_position = IORD_ALTERA_AVALON_PIO_EDGE_CAP(PWM_STATUS_BASE);
   20598:	00800134 	movhi	r2,4
   2059c:	10841b04 	addi	r2,r2,4204
   205a0:	10800037 	ldwio	r2,0(r2)
   205a4:	e0bffd15 	stw	r2,-12(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(PWM_STATUS_BASE, button_position);
   205a8:	00800134 	movhi	r2,4
   205ac:	10841804 	addi	r2,r2,4192
   205b0:	e0fffd17 	ldw	r3,-12(fp)
   205b4:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PWM_STATUS_BASE, 0x0);
   205b8:	0007883a 	mov	r3,zero
   205bc:	00800134 	movhi	r2,4
   205c0:	10841b04 	addi	r2,r2,4204
   205c4:	10c00035 	stwio	r3,0(r2)
    button_position = 0x0;
   205c8:	e03ffd15 	stw	zero,-12(fp)

	printf("Interrupt from the PIO !");
   205cc:	010000f4 	movhi	r4,3
   205d0:	210dec04 	addi	r4,r4,14256
   205d4:	0020f080 	call	20f08 <printf>

	return;
   205d8:	0001883a 	nop
}
   205dc:	e037883a 	mov	sp,fp
   205e0:	dfc00117 	ldw	ra,4(sp)
   205e4:	df000017 	ldw	fp,0(sp)
   205e8:	dec00204 	addi	sp,sp,8
   205ec:	f800283a 	ret

000205f0 <SW_ISR>:

static void SW_ISR(void *context, alt_u32 id)
{
   205f0:	defffb04 	addi	sp,sp,-20
   205f4:	dfc00415 	stw	ra,16(sp)
   205f8:	df000315 	stw	fp,12(sp)
   205fc:	df000304 	addi	fp,sp,12
   20600:	e13ffe15 	stw	r4,-8(fp)
   20604:	e17fff15 	stw	r5,-4(fp)
	int button_position;
	button_position = IORD_ALTERA_AVALON_PIO_EDGE_CAP(BOUTONS_POUSSOIRS_BASE);
   20608:	00800134 	movhi	r2,4
   2060c:	10842f04 	addi	r2,r2,4284
   20610:	10800037 	ldwio	r2,0(r2)
   20614:	e0bffd15 	stw	r2,-12(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(BOUTONS_POUSSOIRS_BASE, button_position);
   20618:	00800134 	movhi	r2,4
   2061c:	10842c04 	addi	r2,r2,4272
   20620:	e0fffd17 	ldw	r3,-12(fp)
   20624:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BOUTONS_POUSSOIRS_BASE, 0x0);
   20628:	0007883a 	mov	r3,zero
   2062c:	00800134 	movhi	r2,4
   20630:	10842f04 	addi	r2,r2,4284
   20634:	10c00035 	stwio	r3,0(r2)
    button_position = 0x0;
   20638:	e03ffd15 	stw	zero,-12(fp)

	printf("Interrupt from the PIO (SW) !");
   2063c:	010000f4 	movhi	r4,3
   20640:	210df304 	addi	r4,r4,14284
   20644:	0020f080 	call	20f08 <printf>

	return;
   20648:	0001883a 	nop
}
   2064c:	e037883a 	mov	sp,fp
   20650:	dfc00117 	ldw	ra,4(sp)
   20654:	df000017 	ldw	fp,0(sp)
   20658:	dec00204 	addi	sp,sp,8
   2065c:	f800283a 	ret

00020660 <main>:

int main()
{
   20660:	defffc04 	addi	sp,sp,-16
   20664:	dfc00315 	stw	ra,12(sp)
   20668:	df000215 	stw	fp,8(sp)
   2066c:	df000204 	addi	fp,sp,8
  printf("Hello from Nios II!\n");
   20670:	010000f4 	movhi	r4,3
   20674:	210dfb04 	addi	r4,r4,14316
   20678:	00210040 	call	21004 <puts>

  // Enable interrupts
  printf("PIO NOK !\n");
   2067c:	010000f4 	movhi	r4,3
   20680:	210e0004 	addi	r4,r4,14336
   20684:	00210040 	call	21004 <puts>

  IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PWM_STATUS_BASE, 0xFF);
   20688:	00c03fc4 	movi	r3,255
   2068c:	00800134 	movhi	r2,4
   20690:	10841a04 	addi	r2,r2,4200
   20694:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PWM_STATUS_BASE, 0x0);
   20698:	0007883a 	mov	r3,zero
   2069c:	00800134 	movhi	r2,4
   206a0:	10841b04 	addi	r2,r2,4204
   206a4:	10c00035 	stwio	r3,0(r2)
  alt_ic_isr_register(PWM_STATUS_IRQ_INTERRUPT_CONTROLLER_ID, PWM_STATUS_BASE, (void *)PWM_ISR, NULL, 0x00);
   206a8:	d8000015 	stw	zero,0(sp)
   206ac:	000f883a 	mov	r7,zero
   206b0:	018000b4 	movhi	r6,2
   206b4:	31816004 	addi	r6,r6,1408
   206b8:	01400134 	movhi	r5,4
   206bc:	29441804 	addi	r5,r5,4192
   206c0:	0009883a 	mov	r4,zero
   206c4:	00310c40 	call	310c4 <alt_ic_isr_register>

  IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_POUSSOIRS_BASE, 0xFF);
   206c8:	00c03fc4 	movi	r3,255
   206cc:	00800134 	movhi	r2,4
   206d0:	10842e04 	addi	r2,r2,4280
   206d4:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BOUTONS_POUSSOIRS_BASE, 0x0);
   206d8:	0007883a 	mov	r3,zero
   206dc:	00800134 	movhi	r2,4
   206e0:	10842f04 	addi	r2,r2,4284
   206e4:	10c00035 	stwio	r3,0(r2)
  alt_ic_isr_register(BOUTONS_POUSSOIRS_IRQ_INTERRUPT_CONTROLLER_ID, BOUTONS_POUSSOIRS_BASE, (void *)SW_ISR, NULL, 0x00);
   206e8:	d8000015 	stw	zero,0(sp)
   206ec:	000f883a 	mov	r7,zero
   206f0:	018000b4 	movhi	r6,2
   206f4:	31817c04 	addi	r6,r6,1520
   206f8:	01400134 	movhi	r5,4
   206fc:	29442c04 	addi	r5,r5,4272
   20700:	0009883a 	mov	r4,zero
   20704:	00310c40 	call	310c4 <alt_ic_isr_register>

  // Play a note
  usleep(500 * 1000);
   20708:	01000234 	movhi	r4,8
   2070c:	21284804 	addi	r4,r4,-24288
   20710:	00319500 	call	31950 <usleep>
  buzzer_enable();
   20714:	002038c0 	call	2038c <buzzer_enable>
  buzzer_set_volume(255);
   20718:	01003fc4 	movi	r4,255
   2071c:	00202ec0 	call	202ec <buzzer_set_volume>
  buzzer_set_duration(100);
   20720:	01001904 	movi	r4,100
   20724:	002042c0 	call	2042c <buzzer_set_duration>
  buzzer_set_note(La4);
   20728:	01000b84 	movi	r4,46
   2072c:	00202800 	call	20280 <buzzer_set_note>
  buzzer_play();
   20730:	00204cc0 	call	204cc <buzzer_play>
  usleep(1200 * 1000);
   20734:	010004b4 	movhi	r4,18
   20738:	2113e004 	addi	r4,r4,20352
   2073c:	00319500 	call	31950 <usleep>
  buzzer_play();
   20740:	00204cc0 	call	204cc <buzzer_play>

  // Hex displaying
  hex_display("cccccc", 6, 0);
   20744:	000d883a 	mov	r6,zero
   20748:	01400184 	movi	r5,6
   2074c:	010000f4 	movhi	r4,3
   20750:	210e0304 	addi	r4,r4,14348
   20754:	00209f80 	call	209f8 <hex_display>

  int cnt = 0;
   20758:	e03fff15 	stw	zero,-4(fp)
  while(1){
	  usleep(1000 * 1000);
   2075c:	010003f4 	movhi	r4,15
   20760:	21109004 	addi	r4,r4,16960
   20764:	00319500 	call	31950 <usleep>
	  printf("Looping... %d\n", cnt++);
   20768:	e0bfff17 	ldw	r2,-4(fp)
   2076c:	10c00044 	addi	r3,r2,1
   20770:	e0ffff15 	stw	r3,-4(fp)
   20774:	100b883a 	mov	r5,r2
   20778:	010000f4 	movhi	r4,3
   2077c:	210e0504 	addi	r4,r4,14356
   20780:	0020f080 	call	20f08 <printf>
  }
   20784:	003ff506 	br	2075c <main+0xfc>

00020788 <char27seg>:
 *  =======================================================================
 */

// Local function to convert from one base to the other !
int char27seg(char in, int * val)
{
   20788:	defffd04 	addi	sp,sp,-12
   2078c:	df000215 	stw	fp,8(sp)
   20790:	df000204 	addi	fp,sp,8
   20794:	2005883a 	mov	r2,r4
   20798:	e17fff15 	stw	r5,-4(fp)
   2079c:	e0bffe05 	stb	r2,-8(fp)
	*val = 0; // Clear the value
   207a0:	e0bfff17 	ldw	r2,-4(fp)
   207a4:	10000015 	stw	zero,0(r2)

	switch (in)
   207a8:	e0bffe07 	ldb	r2,-8(fp)
   207ac:	10bff4c4 	addi	r2,r2,-45
   207b0:	10c01268 	cmpgeui	r3,r2,73
   207b4:	1800891e 	bne	r3,zero,209dc <char27seg+0x254>
   207b8:	100690ba 	slli	r3,r2,2
   207bc:	008000b4 	movhi	r2,2
   207c0:	1081f404 	addi	r2,r2,2000
   207c4:	1885883a 	add	r2,r3,r2
   207c8:	10800017 	ldw	r2,0(r2)
   207cc:	1000683a 	jmp	r2
   207d0:	000209ac 	andhi	zero,zero,2086
   207d4:	000209ac 	andhi	zero,zero,2086
   207d8:	000209dc 	xori	zero,zero,2087
   207dc:	000208f4 	movhi	zero,2083
   207e0:	000208f4 	movhi	zero,2083
   207e4:	000208f4 	movhi	zero,2083
   207e8:	000208f4 	movhi	zero,2083
   207ec:	000208f4 	movhi	zero,2083
   207f0:	000208f4 	movhi	zero,2083
   207f4:	000208f4 	movhi	zero,2083
   207f8:	000208f4 	movhi	zero,2083
   207fc:	000208f4 	movhi	zero,2083
   20800:	000208f4 	movhi	zero,2083
   20804:	000209dc 	xori	zero,zero,2087
   20808:	000209dc 	xori	zero,zero,2087
   2080c:	000209dc 	xori	zero,zero,2087
   20810:	000209dc 	xori	zero,zero,2087
   20814:	000209dc 	xori	zero,zero,2087
   20818:	000209dc 	xori	zero,zero,2087
   2081c:	000209dc 	xori	zero,zero,2087
   20820:	000209dc 	xori	zero,zero,2087
   20824:	000209dc 	xori	zero,zero,2087
   20828:	000209dc 	xori	zero,zero,2087
   2082c:	000209dc 	xori	zero,zero,2087
   20830:	000209dc 	xori	zero,zero,2087
   20834:	000209dc 	xori	zero,zero,2087
   20838:	000209dc 	xori	zero,zero,2087
   2083c:	000209dc 	xori	zero,zero,2087
   20840:	000209dc 	xori	zero,zero,2087
   20844:	000209dc 	xori	zero,zero,2087
   20848:	000209dc 	xori	zero,zero,2087
   2084c:	000209dc 	xori	zero,zero,2087
   20850:	000209dc 	xori	zero,zero,2087
   20854:	000209dc 	xori	zero,zero,2087
   20858:	000209dc 	xori	zero,zero,2087
   2085c:	000209dc 	xori	zero,zero,2087
   20860:	000209dc 	xori	zero,zero,2087
   20864:	000209dc 	xori	zero,zero,2087
   20868:	000209dc 	xori	zero,zero,2087
   2086c:	000209dc 	xori	zero,zero,2087
   20870:	000209dc 	xori	zero,zero,2087
   20874:	000209dc 	xori	zero,zero,2087
   20878:	000209dc 	xori	zero,zero,2087
   2087c:	000209dc 	xori	zero,zero,2087
   20880:	000209dc 	xori	zero,zero,2087
   20884:	000209dc 	xori	zero,zero,2087
   20888:	000209dc 	xori	zero,zero,2087
   2088c:	000209dc 	xori	zero,zero,2087
   20890:	000209dc 	xori	zero,zero,2087
   20894:	000209dc 	xori	zero,zero,2087
   20898:	000209dc 	xori	zero,zero,2087
   2089c:	000209dc 	xori	zero,zero,2087
   208a0:	00020924 	muli	zero,zero,2084
   208a4:	00020924 	muli	zero,zero,2084
   208a8:	00020924 	muli	zero,zero,2084
   208ac:	00020924 	muli	zero,zero,2084
   208b0:	00020924 	muli	zero,zero,2084
   208b4:	00020924 	muli	zero,zero,2084
   208b8:	000209dc 	xori	zero,zero,2087
   208bc:	00020954 	movui	zero,2085
   208c0:	00020954 	movui	zero,2085
   208c4:	000209dc 	xori	zero,zero,2087
   208c8:	000209dc 	xori	zero,zero,2087
   208cc:	000209dc 	xori	zero,zero,2087
   208d0:	000209dc 	xori	zero,zero,2087
   208d4:	000209dc 	xori	zero,zero,2087
   208d8:	00020984 	movi	zero,2086
   208dc:	000209dc 	xori	zero,zero,2087
   208e0:	000209dc 	xori	zero,zero,2087
   208e4:	000209dc 	xori	zero,zero,2087
   208e8:	000209dc 	xori	zero,zero,2087
   208ec:	000209dc 	xori	zero,zero,2087
   208f0:	00020998 	cmpnei	zero,zero,2086
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
		*val = chars[(in - 0x30) + 0];
   208f4:	e0bffe07 	ldb	r2,-8(fp)
   208f8:	10fff404 	addi	r3,r2,-48
   208fc:	008000f4 	movhi	r2,3
   20900:	108e0904 	addi	r2,r2,14372
   20904:	18c7883a 	add	r3,r3,r3
   20908:	18c7883a 	add	r3,r3,r3
   2090c:	10c5883a 	add	r2,r2,r3
   20910:	10c00017 	ldw	r3,0(r2)
   20914:	e0bfff17 	ldw	r2,-4(fp)
   20918:	10c00015 	stw	r3,0(r2)
		return 0;
   2091c:	0005883a 	mov	r2,zero
   20920:	00003106 	br	209e8 <char27seg+0x260>
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
		*val = chars[(in - 0x61) + 10];
   20924:	e0bffe07 	ldb	r2,-8(fp)
   20928:	10ffea44 	addi	r3,r2,-87
   2092c:	008000f4 	movhi	r2,3
   20930:	108e0904 	addi	r2,r2,14372
   20934:	18c7883a 	add	r3,r3,r3
   20938:	18c7883a 	add	r3,r3,r3
   2093c:	10c5883a 	add	r2,r2,r3
   20940:	10c00017 	ldw	r3,0(r2)
   20944:	e0bfff17 	ldw	r2,-4(fp)
   20948:	10c00015 	stw	r3,0(r2)
		return 0;
   2094c:	0005883a 	mov	r2,zero
   20950:	00002506 	br	209e8 <char27seg+0x260>
		break;

	// Handling another group of letters
	case 'h':
	case 'i':
		*val = chars[(in - 0x68) + 16];
   20954:	e0bffe07 	ldb	r2,-8(fp)
   20958:	10ffea04 	addi	r3,r2,-88
   2095c:	008000f4 	movhi	r2,3
   20960:	108e0904 	addi	r2,r2,14372
   20964:	18c7883a 	add	r3,r3,r3
   20968:	18c7883a 	add	r3,r3,r3
   2096c:	10c5883a 	add	r2,r2,r3
   20970:	10c00017 	ldw	r3,0(r2)
   20974:	e0bfff17 	ldw	r2,-4(fp)
   20978:	10c00015 	stw	r3,0(r2)
		return 0;
   2097c:	0005883a 	mov	r2,zero
   20980:	00001906 	br	209e8 <char27seg+0x260>
		break;

	// Last chars...
	case 'o':
		*val = chars[18];
   20984:	00c028c4 	movi	r3,163
   20988:	e0bfff17 	ldw	r2,-4(fp)
   2098c:	10c00015 	stw	r3,0(r2)
		return 0;
   20990:	0005883a 	mov	r2,zero
   20994:	00001406 	br	209e8 <char27seg+0x260>
		break;

	case 'u':
		*val = chars[19];
   20998:	00c038c4 	movi	r3,227
   2099c:	e0bfff17 	ldw	r2,-4(fp)
   209a0:	10c00015 	stw	r3,0(r2)
		return 0;
   209a4:	0005883a 	mov	r2,zero
   209a8:	00000f06 	br	209e8 <char27seg+0x260>
		break;

	// Handling two special chars
	case '-':
	case '.':
		*val = chars[(in - 0x2D) + 20];
   209ac:	e0bffe07 	ldb	r2,-8(fp)
   209b0:	10fff9c4 	addi	r3,r2,-25
   209b4:	008000f4 	movhi	r2,3
   209b8:	108e0904 	addi	r2,r2,14372
   209bc:	18c7883a 	add	r3,r3,r3
   209c0:	18c7883a 	add	r3,r3,r3
   209c4:	10c5883a 	add	r2,r2,r3
   209c8:	10c00017 	ldw	r3,0(r2)
   209cc:	e0bfff17 	ldw	r2,-4(fp)
   209d0:	10c00015 	stw	r3,0(r2)
		return 0;
   209d4:	0005883a 	mov	r2,zero
   209d8:	00000306 	br	209e8 <char27seg+0x260>
		break;

	default:
		*val = 0b00000000; // ALL
   209dc:	e0bfff17 	ldw	r2,-4(fp)
   209e0:	10000015 	stw	zero,0(r2)
		return -1;
   209e4:	00bfffc4 	movi	r2,-1
	}

	return -1;
}
   209e8:	e037883a 	mov	sp,fp
   209ec:	df000017 	ldw	fp,0(sp)
   209f0:	dec00104 	addi	sp,sp,4
   209f4:	f800283a 	ret

000209f8 <hex_display>:

int hex_display(char* values, int len, int first)
{
   209f8:	deffeb04 	addi	sp,sp,-84
   209fc:	dfc01415 	stw	ra,80(sp)
   20a00:	df001315 	stw	fp,76(sp)
   20a04:	dcc01215 	stw	r19,72(sp)
   20a08:	dc801115 	stw	r18,68(sp)
   20a0c:	dc401015 	stw	r17,64(sp)
   20a10:	dc000f15 	stw	r16,60(sp)
   20a14:	df001304 	addi	fp,sp,76
   20a18:	e13ff915 	stw	r4,-28(fp)
   20a1c:	e17ffa15 	stw	r5,-24(fp)
   20a20:	e1bffb15 	stw	r6,-20(fp)
	// First, ensure the operation is possible
	if ((first + len) > HEX_NB)
   20a24:	e17ffb17 	ldw	r5,-20(fp)
   20a28:	e13ffa17 	ldw	r4,-24(fp)
   20a2c:	2909883a 	add	r4,r5,r4
   20a30:	210001d0 	cmplti	r4,r4,7
   20a34:	2000021e 	bne	r4,zero,20a40 <hex_display+0x48>
	{
		return -1;
   20a38:	00bfffc4 	movi	r2,-1
   20a3c:	0000ae06 	br	20cf8 <hex_display+0x300>
	}
	if (len > HEX_NB)
   20a40:	e13ffa17 	ldw	r4,-24(fp)
   20a44:	210001d0 	cmplti	r4,r4,7
   20a48:	2000021e 	bne	r4,zero,20a54 <hex_display+0x5c>
	{
		return -1;
   20a4c:	00bfffc4 	movi	r2,-1
   20a50:	0000a906 	br	20cf8 <hex_display+0x300>
	}
	if ((first > HEX_NB - 1) | (first < 0))
   20a54:	e13ffb17 	ldw	r4,-20(fp)
   20a58:	21000188 	cmpgei	r4,r4,6
   20a5c:	200b883a 	mov	r5,r4
   20a60:	e13ffb17 	ldw	r4,-20(fp)
   20a64:	2008d7fa 	srli	r4,r4,31
   20a68:	2908b03a 	or	r4,r5,r4
   20a6c:	21003fcc 	andi	r4,r4,255
   20a70:	20000226 	beq	r4,zero,20a7c <hex_display+0x84>
	{
		return -1;
   20a74:	00bfffc4 	movi	r2,-1
   20a78:	00009f06 	br	20cf8 <hex_display+0x300>
	}

	// Copy the data
	char buf[] = {'\0', '\0', '\0', '\0', '\0', '\0'};
   20a7c:	e03ff605 	stb	zero,-40(fp)
   20a80:	e03ff645 	stb	zero,-39(fp)
   20a84:	e03ff685 	stb	zero,-38(fp)
   20a88:	e03ff6c5 	stb	zero,-37(fp)
   20a8c:	e03ff705 	stb	zero,-36(fp)
   20a90:	e03ff745 	stb	zero,-35(fp)
	for (int k = first; k < first + len; k++)
   20a94:	e13ffb17 	ldw	r4,-20(fp)
   20a98:	e13fed15 	stw	r4,-76(fp)
   20a9c:	00000e06 	br	20ad8 <hex_display+0xe0>
	{
		buf[k] = values[k - first];
   20aa0:	e17fed17 	ldw	r5,-76(fp)
   20aa4:	e13ffb17 	ldw	r4,-20(fp)
   20aa8:	2909c83a 	sub	r4,r5,r4
   20aac:	200b883a 	mov	r5,r4
   20ab0:	e13ff917 	ldw	r4,-28(fp)
   20ab4:	2149883a 	add	r4,r4,r5
   20ab8:	21400003 	ldbu	r5,0(r4)
   20abc:	e1bff604 	addi	r6,fp,-40
   20ac0:	e13fed17 	ldw	r4,-76(fp)
   20ac4:	3109883a 	add	r4,r6,r4
   20ac8:	21400005 	stb	r5,0(r4)
		return -1;
	}

	// Copy the data
	char buf[] = {'\0', '\0', '\0', '\0', '\0', '\0'};
	for (int k = first; k < first + len; k++)
   20acc:	e13fed17 	ldw	r4,-76(fp)
   20ad0:	21000044 	addi	r4,r4,1
   20ad4:	e13fed15 	stw	r4,-76(fp)
   20ad8:	e17ffb17 	ldw	r5,-20(fp)
   20adc:	e13ffa17 	ldw	r4,-24(fp)
   20ae0:	2909883a 	add	r4,r5,r4
   20ae4:	e17fed17 	ldw	r5,-76(fp)
   20ae8:	293fed16 	blt	r5,r4,20aa0 <hex_display+0xa8>
	{
		buf[k] = values[k - first];
	}

	// Temp variables
	int tmp = 0;
   20aec:	e03ff815 	stw	zero,-32(fp)
	int err = 0;
   20af0:	e03fee15 	stw	zero,-72(fp)

	// 64 bits variable that represent the whole port
	uint64_t bits = 0;
   20af4:	e03fef15 	stw	zero,-68(fp)
   20af8:	e03ff015 	stw	zero,-64(fp)
	uint64_t mask = 0;
   20afc:	e03ff115 	stw	zero,-60(fp)
   20b00:	e03ff215 	stw	zero,-56(fp)
	uint64_t actual = ((uint64_t)HEX2_IORD_DATA << 32) | (uint64_t)HEX_IORD_DATA;
   20b04:	01000134 	movhi	r4,4
   20b08:	21042004 	addi	r4,r4,4224
   20b0c:	21000037 	ldwio	r4,0(r4)
   20b10:	2013883a 	mov	r9,r4
   20b14:	2009d7fa 	srai	r4,r4,31
   20b18:	2015883a 	mov	r10,r4
   20b1c:	4806983a 	sll	r3,r9,zero
   20b20:	0005883a 	mov	r2,zero
   20b24:	01000134 	movhi	r4,4
   20b28:	21042404 	addi	r4,r4,4240
   20b2c:	21000037 	ldwio	r4,0(r4)
   20b30:	200f883a 	mov	r7,r4
   20b34:	2009d7fa 	srai	r4,r4,31
   20b38:	2011883a 	mov	r8,r4
   20b3c:	11c8b03a 	or	r4,r2,r7
   20b40:	e13ff415 	stw	r4,-48(fp)
   20b44:	1a04b03a 	or	r2,r3,r8
   20b48:	e0bff515 	stw	r2,-44(fp)

	for (int k = 0; k < HEX_NB; k++)
   20b4c:	e03ff315 	stw	zero,-52(fp)
   20b50:	00003c06 	br	20c44 <hex_display+0x24c>
	{
		// Get the associated char (and return if a char is not handled !)
		if (char27seg(buf[k], &tmp) < 0)
   20b54:	e0fff604 	addi	r3,fp,-40
   20b58:	e0bff317 	ldw	r2,-52(fp)
   20b5c:	1885883a 	add	r2,r3,r2
   20b60:	10800003 	ldbu	r2,0(r2)
   20b64:	10803fcc 	andi	r2,r2,255
   20b68:	1080201c 	xori	r2,r2,128
   20b6c:	10bfe004 	addi	r2,r2,-128
   20b70:	e0fff804 	addi	r3,fp,-32
   20b74:	180b883a 	mov	r5,r3
   20b78:	1009883a 	mov	r4,r2
   20b7c:	00207880 	call	20788 <char27seg>
   20b80:	1000030e 	bge	r2,zero,20b90 <hex_display+0x198>
		{
			err += 1;
   20b84:	e0bfee17 	ldw	r2,-72(fp)
   20b88:	10800044 	addi	r2,r2,1
   20b8c:	e0bfee15 	stw	r2,-72(fp)
		}

		// Clear the bits to write and write
		bits = bits << 8;
   20b90:	e0bfef17 	ldw	r2,-68(fp)
   20b94:	1004d63a 	srli	r2,r2,24
   20b98:	e0fff017 	ldw	r3,-64(fp)
   20b9c:	1806923a 	slli	r3,r3,8
   20ba0:	1884b03a 	or	r2,r3,r2
   20ba4:	e0bff015 	stw	r2,-64(fp)
   20ba8:	e0bfef17 	ldw	r2,-68(fp)
   20bac:	1004923a 	slli	r2,r2,8
   20bb0:	e0bfef15 	stw	r2,-68(fp)
		mask = mask << 8;
   20bb4:	e0bff117 	ldw	r2,-60(fp)
   20bb8:	1004d63a 	srli	r2,r2,24
   20bbc:	e0fff217 	ldw	r3,-56(fp)
   20bc0:	1806923a 	slli	r3,r3,8
   20bc4:	1884b03a 	or	r2,r3,r2
   20bc8:	e0bff215 	stw	r2,-56(fp)
   20bcc:	e0bff117 	ldw	r2,-60(fp)
   20bd0:	1004923a 	slli	r2,r2,8
   20bd4:	e0bff115 	stw	r2,-60(fp)

		bits |= tmp;
   20bd8:	e0bff817 	ldw	r2,-32(fp)
   20bdc:	1021883a 	mov	r16,r2
   20be0:	1005d7fa 	srai	r2,r2,31
   20be4:	1023883a 	mov	r17,r2
   20be8:	e0bfef17 	ldw	r2,-68(fp)
   20bec:	1404b03a 	or	r2,r2,r16
   20bf0:	e0bfef15 	stw	r2,-68(fp)
   20bf4:	e0bff017 	ldw	r2,-64(fp)
   20bf8:	1444b03a 	or	r2,r2,r17
   20bfc:	e0bff015 	stw	r2,-64(fp)

		if (buf[k] == 0x00)
   20c00:	e0fff604 	addi	r3,fp,-40
   20c04:	e0bff317 	ldw	r2,-52(fp)
   20c08:	1885883a 	add	r2,r3,r2
   20c0c:	10800003 	ldbu	r2,0(r2)
   20c10:	10803fcc 	andi	r2,r2,255
   20c14:	1080201c 	xori	r2,r2,128
   20c18:	10bfe004 	addi	r2,r2,-128
   20c1c:	1000061e 	bne	r2,zero,20c38 <hex_display+0x240>
		{
			mask |= 0xFF;
   20c20:	e0bff117 	ldw	r2,-60(fp)
   20c24:	10803fd4 	ori	r2,r2,255
   20c28:	e0bff115 	stw	r2,-60(fp)
   20c2c:	e0bff217 	ldw	r2,-56(fp)
   20c30:	1004b03a 	or	r2,r2,zero
   20c34:	e0bff215 	stw	r2,-56(fp)
	// 64 bits variable that represent the whole port
	uint64_t bits = 0;
	uint64_t mask = 0;
	uint64_t actual = ((uint64_t)HEX2_IORD_DATA << 32) | (uint64_t)HEX_IORD_DATA;

	for (int k = 0; k < HEX_NB; k++)
   20c38:	e0bff317 	ldw	r2,-52(fp)
   20c3c:	10800044 	addi	r2,r2,1
   20c40:	e0bff315 	stw	r2,-52(fp)
   20c44:	e0bff317 	ldw	r2,-52(fp)
   20c48:	10800190 	cmplti	r2,r2,6
   20c4c:	103fc11e 	bne	r2,zero,20b54 <hex_display+0x15c>
			mask |= 0xFF;
		}
	}

	// Clearing the needed bits (mask contain 0 where char are)
	actual &= mask;
   20c50:	e0fff417 	ldw	r3,-48(fp)
   20c54:	e0bff117 	ldw	r2,-60(fp)
   20c58:	1884703a 	and	r2,r3,r2
   20c5c:	e0bff415 	stw	r2,-48(fp)
   20c60:	e0fff517 	ldw	r3,-44(fp)
   20c64:	e0bff217 	ldw	r2,-56(fp)
   20c68:	1884703a 	and	r2,r3,r2
   20c6c:	e0bff515 	stw	r2,-44(fp)

	// Inverting the mask and getting the masked bits (mask contain 1 where char are)
	mask = ~mask;
   20c70:	e0bff117 	ldw	r2,-60(fp)
   20c74:	0084303a 	nor	r2,zero,r2
   20c78:	e0bff115 	stw	r2,-60(fp)
   20c7c:	e0bff217 	ldw	r2,-56(fp)
   20c80:	0084303a 	nor	r2,zero,r2
   20c84:	e0bff215 	stw	r2,-56(fp)
	bits &= mask;
   20c88:	e0ffef17 	ldw	r3,-68(fp)
   20c8c:	e0bff117 	ldw	r2,-60(fp)
   20c90:	1884703a 	and	r2,r3,r2
   20c94:	e0bfef15 	stw	r2,-68(fp)
   20c98:	e0fff017 	ldw	r3,-64(fp)
   20c9c:	e0bff217 	ldw	r2,-56(fp)
   20ca0:	1884703a 	and	r2,r3,r2
   20ca4:	e0bff015 	stw	r2,-64(fp)

	// Finally, getting the final bit stream
	bits = actual | bits;
   20ca8:	e0ffef17 	ldw	r3,-68(fp)
   20cac:	e0bff417 	ldw	r2,-48(fp)
   20cb0:	1884b03a 	or	r2,r3,r2
   20cb4:	e0bfef15 	stw	r2,-68(fp)
   20cb8:	e0fff017 	ldw	r3,-64(fp)
   20cbc:	e0bff517 	ldw	r2,-44(fp)
   20cc0:	1884b03a 	or	r2,r3,r2
   20cc4:	e0bff015 	stw	r2,-64(fp)

	// Writing the new value
	HEX2_IOWR_DATA((bits & 0xFFFFFFFF00000000) >> 32); // HEX 5 and 4 (16 LSB are ignored)
   20cc8:	e0bff017 	ldw	r2,-64(fp)
   20ccc:	1024d83a 	srl	r18,r2,zero
   20cd0:	0027883a 	mov	r19,zero
   20cd4:	9007883a 	mov	r3,r18
   20cd8:	00800134 	movhi	r2,4
   20cdc:	10842004 	addi	r2,r2,4224
   20ce0:	10c00035 	stwio	r3,0(r2)
	HEX_IOWR_DATA( bits & 0xFFFFFFFF); // HEX 3 to 0;
   20ce4:	e0ffef17 	ldw	r3,-68(fp)
   20ce8:	00800134 	movhi	r2,4
   20cec:	10842404 	addi	r2,r2,4240
   20cf0:	10c00035 	stwio	r3,0(r2)

	return err;
   20cf4:	e0bfee17 	ldw	r2,-72(fp)
}
   20cf8:	e6fffc04 	addi	sp,fp,-16
   20cfc:	dfc00517 	ldw	ra,20(sp)
   20d00:	df000417 	ldw	fp,16(sp)
   20d04:	dcc00317 	ldw	r19,12(sp)
   20d08:	dc800217 	ldw	r18,8(sp)
   20d0c:	dc400117 	ldw	r17,4(sp)
   20d10:	dc000017 	ldw	r16,0(sp)
   20d14:	dec00604 	addi	sp,sp,24
   20d18:	f800283a 	ret

00020d1c <time_increment>:
/** =======================================================================
 *	FUNCTIONS
 *  =======================================================================
 */

int time_increment(struct time * const hour){
   20d1c:	defffe04 	addi	sp,sp,-8
   20d20:	df000115 	stw	fp,4(sp)
   20d24:	df000104 	addi	fp,sp,4
   20d28:	e13fff15 	stw	r4,-4(fp)
	// Input checks
	if (hour == NULL)
   20d2c:	e0bfff17 	ldw	r2,-4(fp)
   20d30:	1000021e 	bne	r2,zero,20d3c <time_increment+0x20>
	{
		return -1;
   20d34:	00bfffc4 	movi	r2,-1
   20d38:	00002406 	br	20dcc <time_increment+0xb0>
	}

	// Increment seconds
	hour->second += 1;
   20d3c:	e0bfff17 	ldw	r2,-4(fp)
   20d40:	10800217 	ldw	r2,8(r2)
   20d44:	10c00044 	addi	r3,r2,1
   20d48:	e0bfff17 	ldw	r2,-4(fp)
   20d4c:	10c00215 	stw	r3,8(r2)

	// Check if a minute is elapsed
	if (hour->second > 59)
   20d50:	e0bfff17 	ldw	r2,-4(fp)
   20d54:	10800217 	ldw	r2,8(r2)
   20d58:	10800f10 	cmplti	r2,r2,60
   20d5c:	1000071e 	bne	r2,zero,20d7c <time_increment+0x60>
	{
		hour->second = 0;
   20d60:	e0bfff17 	ldw	r2,-4(fp)
   20d64:	10000215 	stw	zero,8(r2)
		hour->minute += 1;
   20d68:	e0bfff17 	ldw	r2,-4(fp)
   20d6c:	10800117 	ldw	r2,4(r2)
   20d70:	10c00044 	addi	r3,r2,1
   20d74:	e0bfff17 	ldw	r2,-4(fp)
   20d78:	10c00115 	stw	r3,4(r2)
	}

	// Check if an hour is elapsed
	if (hour->minute > 59)
   20d7c:	e0bfff17 	ldw	r2,-4(fp)
   20d80:	10800117 	ldw	r2,4(r2)
   20d84:	10800f10 	cmplti	r2,r2,60
   20d88:	1000071e 	bne	r2,zero,20da8 <time_increment+0x8c>
	{
		hour->minute = 0;
   20d8c:	e0bfff17 	ldw	r2,-4(fp)
   20d90:	10000115 	stw	zero,4(r2)
		hour->hour += 1;
   20d94:	e0bfff17 	ldw	r2,-4(fp)
   20d98:	10800017 	ldw	r2,0(r2)
   20d9c:	10c00044 	addi	r3,r2,1
   20da0:	e0bfff17 	ldw	r2,-4(fp)
   20da4:	10c00015 	stw	r3,0(r2)
	}

	// Check if a day is elapsed (and output an overflow)
	if (hour->hour > 23)
   20da8:	e0bfff17 	ldw	r2,-4(fp)
   20dac:	10800017 	ldw	r2,0(r2)
   20db0:	10800610 	cmplti	r2,r2,24
   20db4:	1000041e 	bne	r2,zero,20dc8 <time_increment+0xac>
	{
		hour->hour = 0;
   20db8:	e0bfff17 	ldw	r2,-4(fp)
   20dbc:	10000015 	stw	zero,0(r2)
		return -2;
   20dc0:	00bfff84 	movi	r2,-2
   20dc4:	00000106 	br	20dcc <time_increment+0xb0>
	}

	return 0;
   20dc8:	0005883a 	mov	r2,zero
}
   20dcc:	e037883a 	mov	sp,fp
   20dd0:	df000017 	ldw	fp,0(sp)
   20dd4:	dec00104 	addi	sp,sp,4
   20dd8:	f800283a 	ret

00020ddc <time_print>:

int time_print(const struct time * const hour, char buf[6]){
   20ddc:	defffb04 	addi	sp,sp,-20
   20de0:	dfc00415 	stw	ra,16(sp)
   20de4:	df000315 	stw	fp,12(sp)
   20de8:	df000304 	addi	fp,sp,12
   20dec:	e13ffe15 	stw	r4,-8(fp)
   20df0:	e17fff15 	stw	r5,-4(fp)
	// Input checks
	if (hour == NULL)
   20df4:	e0bffe17 	ldw	r2,-8(fp)
   20df8:	1000021e 	bne	r2,zero,20e04 <time_print+0x28>
	{
		return -1;
   20dfc:	00bfffc4 	movi	r2,-1
   20e00:	00003006 	br	20ec4 <time_print+0xe8>
	/*
	 * We print the value using sprintf, which return the number of char printed.
	 * We use that value to check for any formatting errors.
	 */

	buf = "......"; // empty char (. is not handled by the hex.h lib).
   20e04:	008000f4 	movhi	r2,3
   20e08:	108e1f04 	addi	r2,r2,14460
   20e0c:	e0bfff15 	stw	r2,-4(fp)

	int val = 0;
   20e10:	e03ffd15 	stw	zero,-12(fp)
	val = sprintf(&buf[0], "%d", hour->hour);
   20e14:	e0bffe17 	ldw	r2,-8(fp)
   20e18:	10800017 	ldw	r2,0(r2)
   20e1c:	100d883a 	mov	r6,r2
   20e20:	014000f4 	movhi	r5,3
   20e24:	294e2104 	addi	r5,r5,14468
   20e28:	e13fff17 	ldw	r4,-4(fp)
   20e2c:	00210700 	call	21070 <sprintf>
   20e30:	e0bffd15 	stw	r2,-12(fp)
	if (val > 2)
   20e34:	e0bffd17 	ldw	r2,-12(fp)
   20e38:	108000d0 	cmplti	r2,r2,3
   20e3c:	1000021e 	bne	r2,zero,20e48 <time_print+0x6c>
	{
		return -2;
   20e40:	00bfff84 	movi	r2,-2
   20e44:	00001f06 	br	20ec4 <time_print+0xe8>
	}
	val = sprintf(&buf[2], "%d", hour->minute);
   20e48:	e0bfff17 	ldw	r2,-4(fp)
   20e4c:	10c00084 	addi	r3,r2,2
   20e50:	e0bffe17 	ldw	r2,-8(fp)
   20e54:	10800117 	ldw	r2,4(r2)
   20e58:	100d883a 	mov	r6,r2
   20e5c:	014000f4 	movhi	r5,3
   20e60:	294e2104 	addi	r5,r5,14468
   20e64:	1809883a 	mov	r4,r3
   20e68:	00210700 	call	21070 <sprintf>
   20e6c:	e0bffd15 	stw	r2,-12(fp)
	if (val > 2)
   20e70:	e0bffd17 	ldw	r2,-12(fp)
   20e74:	108000d0 	cmplti	r2,r2,3
   20e78:	1000021e 	bne	r2,zero,20e84 <time_print+0xa8>
	{
		return -2;
   20e7c:	00bfff84 	movi	r2,-2
   20e80:	00001006 	br	20ec4 <time_print+0xe8>
	}
	val = sprintf(&buf[4], "%d", hour->second);
   20e84:	e0bfff17 	ldw	r2,-4(fp)
   20e88:	10c00104 	addi	r3,r2,4
   20e8c:	e0bffe17 	ldw	r2,-8(fp)
   20e90:	10800217 	ldw	r2,8(r2)
   20e94:	100d883a 	mov	r6,r2
   20e98:	014000f4 	movhi	r5,3
   20e9c:	294e2104 	addi	r5,r5,14468
   20ea0:	1809883a 	mov	r4,r3
   20ea4:	00210700 	call	21070 <sprintf>
   20ea8:	e0bffd15 	stw	r2,-12(fp)
	if (val > 2)
   20eac:	e0bffd17 	ldw	r2,-12(fp)
   20eb0:	108000d0 	cmplti	r2,r2,3
   20eb4:	1000021e 	bne	r2,zero,20ec0 <time_print+0xe4>
	{
		return -2;
   20eb8:	00bfff84 	movi	r2,-2
   20ebc:	00000106 	br	20ec4 <time_print+0xe8>
	}

	return 0;
   20ec0:	0005883a 	mov	r2,zero
}
   20ec4:	e037883a 	mov	sp,fp
   20ec8:	dfc00117 	ldw	ra,4(sp)
   20ecc:	df000017 	ldw	fp,0(sp)
   20ed0:	dec00204 	addi	sp,sp,8
   20ed4:	f800283a 	ret

00020ed8 <_printf_r>:
   20ed8:	defffd04 	addi	sp,sp,-12
   20edc:	2805883a 	mov	r2,r5
   20ee0:	dfc00015 	stw	ra,0(sp)
   20ee4:	d9800115 	stw	r6,4(sp)
   20ee8:	d9c00215 	stw	r7,8(sp)
   20eec:	21400217 	ldw	r5,8(r4)
   20ef0:	d9c00104 	addi	r7,sp,4
   20ef4:	100d883a 	mov	r6,r2
   20ef8:	002334c0 	call	2334c <___vfprintf_internal_r>
   20efc:	dfc00017 	ldw	ra,0(sp)
   20f00:	dec00304 	addi	sp,sp,12
   20f04:	f800283a 	ret

00020f08 <printf>:
   20f08:	defffc04 	addi	sp,sp,-16
   20f0c:	dfc00015 	stw	ra,0(sp)
   20f10:	d9400115 	stw	r5,4(sp)
   20f14:	d9800215 	stw	r6,8(sp)
   20f18:	d9c00315 	stw	r7,12(sp)
   20f1c:	008000f4 	movhi	r2,3
   20f20:	1095a004 	addi	r2,r2,22144
   20f24:	10800017 	ldw	r2,0(r2)
   20f28:	200b883a 	mov	r5,r4
   20f2c:	d9800104 	addi	r6,sp,4
   20f30:	11000217 	ldw	r4,8(r2)
   20f34:	00255440 	call	25544 <__vfprintf_internal>
   20f38:	dfc00017 	ldw	ra,0(sp)
   20f3c:	dec00404 	addi	sp,sp,16
   20f40:	f800283a 	ret

00020f44 <_puts_r>:
   20f44:	defff604 	addi	sp,sp,-40
   20f48:	dc000715 	stw	r16,28(sp)
   20f4c:	2021883a 	mov	r16,r4
   20f50:	2809883a 	mov	r4,r5
   20f54:	dc400815 	stw	r17,32(sp)
   20f58:	dfc00915 	stw	ra,36(sp)
   20f5c:	2823883a 	mov	r17,r5
   20f60:	00210dc0 	call	210dc <strlen>
   20f64:	10c00044 	addi	r3,r2,1
   20f68:	d8800115 	stw	r2,4(sp)
   20f6c:	008000f4 	movhi	r2,3
   20f70:	108e2204 	addi	r2,r2,14472
   20f74:	d8800215 	stw	r2,8(sp)
   20f78:	00800044 	movi	r2,1
   20f7c:	d8800315 	stw	r2,12(sp)
   20f80:	00800084 	movi	r2,2
   20f84:	dc400015 	stw	r17,0(sp)
   20f88:	d8c00615 	stw	r3,24(sp)
   20f8c:	dec00415 	stw	sp,16(sp)
   20f90:	d8800515 	stw	r2,20(sp)
   20f94:	80000226 	beq	r16,zero,20fa0 <_puts_r+0x5c>
   20f98:	80800e17 	ldw	r2,56(r16)
   20f9c:	10001426 	beq	r2,zero,20ff0 <_puts_r+0xac>
   20fa0:	81400217 	ldw	r5,8(r16)
   20fa4:	2880030b 	ldhu	r2,12(r5)
   20fa8:	10c8000c 	andi	r3,r2,8192
   20fac:	1800061e 	bne	r3,zero,20fc8 <_puts_r+0x84>
   20fb0:	29001917 	ldw	r4,100(r5)
   20fb4:	00f7ffc4 	movi	r3,-8193
   20fb8:	10880014 	ori	r2,r2,8192
   20fbc:	20c6703a 	and	r3,r4,r3
   20fc0:	2880030d 	sth	r2,12(r5)
   20fc4:	28c01915 	stw	r3,100(r5)
   20fc8:	d9800404 	addi	r6,sp,16
   20fcc:	8009883a 	mov	r4,r16
   20fd0:	0027a740 	call	27a74 <__sfvwrite_r>
   20fd4:	1000091e 	bne	r2,zero,20ffc <_puts_r+0xb8>
   20fd8:	00800284 	movi	r2,10
   20fdc:	dfc00917 	ldw	ra,36(sp)
   20fe0:	dc400817 	ldw	r17,32(sp)
   20fe4:	dc000717 	ldw	r16,28(sp)
   20fe8:	dec00a04 	addi	sp,sp,40
   20fec:	f800283a 	ret
   20ff0:	8009883a 	mov	r4,r16
   20ff4:	00275f00 	call	275f0 <__sinit>
   20ff8:	003fe906 	br	20fa0 <_puts_r+0x5c>
   20ffc:	00bfffc4 	movi	r2,-1
   21000:	003ff606 	br	20fdc <_puts_r+0x98>

00021004 <puts>:
   21004:	008000f4 	movhi	r2,3
   21008:	1095a004 	addi	r2,r2,22144
   2100c:	200b883a 	mov	r5,r4
   21010:	11000017 	ldw	r4,0(r2)
   21014:	0020f441 	jmpi	20f44 <_puts_r>

00021018 <_sprintf_r>:
   21018:	deffe404 	addi	sp,sp,-112
   2101c:	2807883a 	mov	r3,r5
   21020:	dfc01a15 	stw	ra,104(sp)
   21024:	d9c01b15 	stw	r7,108(sp)
   21028:	00a00034 	movhi	r2,32768
   2102c:	10bfffc4 	addi	r2,r2,-1
   21030:	02008204 	movi	r8,520
   21034:	d8800215 	stw	r2,8(sp)
   21038:	d8800515 	stw	r2,20(sp)
   2103c:	d9c01b04 	addi	r7,sp,108
   21040:	d80b883a 	mov	r5,sp
   21044:	00bfffc4 	movi	r2,-1
   21048:	d8c00015 	stw	r3,0(sp)
   2104c:	d8c00415 	stw	r3,16(sp)
   21050:	da00030d 	sth	r8,12(sp)
   21054:	d880038d 	sth	r2,14(sp)
   21058:	00211740 	call	21174 <___svfprintf_internal_r>
   2105c:	d8c00017 	ldw	r3,0(sp)
   21060:	18000005 	stb	zero,0(r3)
   21064:	dfc01a17 	ldw	ra,104(sp)
   21068:	dec01c04 	addi	sp,sp,112
   2106c:	f800283a 	ret

00021070 <sprintf>:
   21070:	deffe304 	addi	sp,sp,-116
   21074:	2007883a 	mov	r3,r4
   21078:	dfc01a15 	stw	ra,104(sp)
   2107c:	d9801b15 	stw	r6,108(sp)
   21080:	d9c01c15 	stw	r7,112(sp)
   21084:	010000f4 	movhi	r4,3
   21088:	2115a004 	addi	r4,r4,22144
   2108c:	21000017 	ldw	r4,0(r4)
   21090:	00a00034 	movhi	r2,32768
   21094:	10bfffc4 	addi	r2,r2,-1
   21098:	280d883a 	mov	r6,r5
   2109c:	02008204 	movi	r8,520
   210a0:	d8800215 	stw	r2,8(sp)
   210a4:	d8800515 	stw	r2,20(sp)
   210a8:	d9c01b04 	addi	r7,sp,108
   210ac:	d80b883a 	mov	r5,sp
   210b0:	00bfffc4 	movi	r2,-1
   210b4:	d8c00015 	stw	r3,0(sp)
   210b8:	d8c00415 	stw	r3,16(sp)
   210bc:	da00030d 	sth	r8,12(sp)
   210c0:	d880038d 	sth	r2,14(sp)
   210c4:	00211740 	call	21174 <___svfprintf_internal_r>
   210c8:	d8c00017 	ldw	r3,0(sp)
   210cc:	18000005 	stb	zero,0(r3)
   210d0:	dfc01a17 	ldw	ra,104(sp)
   210d4:	dec01d04 	addi	sp,sp,116
   210d8:	f800283a 	ret

000210dc <strlen>:
   210dc:	208000cc 	andi	r2,r4,3
   210e0:	10002026 	beq	r2,zero,21164 <strlen+0x88>
   210e4:	20800007 	ldb	r2,0(r4)
   210e8:	10002026 	beq	r2,zero,2116c <strlen+0x90>
   210ec:	2005883a 	mov	r2,r4
   210f0:	00000206 	br	210fc <strlen+0x20>
   210f4:	10c00007 	ldb	r3,0(r2)
   210f8:	18001826 	beq	r3,zero,2115c <strlen+0x80>
   210fc:	10800044 	addi	r2,r2,1
   21100:	10c000cc 	andi	r3,r2,3
   21104:	183ffb1e 	bne	r3,zero,210f4 <strlen+0x18>
   21108:	10c00017 	ldw	r3,0(r2)
   2110c:	01ffbff4 	movhi	r7,65279
   21110:	39ffbfc4 	addi	r7,r7,-257
   21114:	00ca303a 	nor	r5,zero,r3
   21118:	01a02074 	movhi	r6,32897
   2111c:	19c7883a 	add	r3,r3,r7
   21120:	31a02004 	addi	r6,r6,-32640
   21124:	1946703a 	and	r3,r3,r5
   21128:	1986703a 	and	r3,r3,r6
   2112c:	1800091e 	bne	r3,zero,21154 <strlen+0x78>
   21130:	10800104 	addi	r2,r2,4
   21134:	10c00017 	ldw	r3,0(r2)
   21138:	19cb883a 	add	r5,r3,r7
   2113c:	00c6303a 	nor	r3,zero,r3
   21140:	28c6703a 	and	r3,r5,r3
   21144:	1986703a 	and	r3,r3,r6
   21148:	183ff926 	beq	r3,zero,21130 <strlen+0x54>
   2114c:	00000106 	br	21154 <strlen+0x78>
   21150:	10800044 	addi	r2,r2,1
   21154:	10c00007 	ldb	r3,0(r2)
   21158:	183ffd1e 	bne	r3,zero,21150 <strlen+0x74>
   2115c:	1105c83a 	sub	r2,r2,r4
   21160:	f800283a 	ret
   21164:	2005883a 	mov	r2,r4
   21168:	003fe706 	br	21108 <strlen+0x2c>
   2116c:	0005883a 	mov	r2,zero
   21170:	f800283a 	ret

00021174 <___svfprintf_internal_r>:
   21174:	deffb704 	addi	sp,sp,-292
   21178:	dfc04815 	stw	ra,288(sp)
   2117c:	ddc04615 	stw	r23,280(sp)
   21180:	d9402c15 	stw	r5,176(sp)
   21184:	d9003915 	stw	r4,228(sp)
   21188:	302f883a 	mov	r23,r6
   2118c:	d9c02d15 	stw	r7,180(sp)
   21190:	df004715 	stw	fp,284(sp)
   21194:	dd804515 	stw	r22,276(sp)
   21198:	dd404415 	stw	r21,272(sp)
   2119c:	dd004315 	stw	r20,268(sp)
   211a0:	dcc04215 	stw	r19,264(sp)
   211a4:	dc804115 	stw	r18,260(sp)
   211a8:	dc404015 	stw	r17,256(sp)
   211ac:	dc003f15 	stw	r16,252(sp)
   211b0:	00281640 	call	28164 <_localeconv_r>
   211b4:	10800017 	ldw	r2,0(r2)
   211b8:	1009883a 	mov	r4,r2
   211bc:	d8803415 	stw	r2,208(sp)
   211c0:	00210dc0 	call	210dc <strlen>
   211c4:	d8c02c17 	ldw	r3,176(sp)
   211c8:	d8803815 	stw	r2,224(sp)
   211cc:	1880030b 	ldhu	r2,12(r3)
   211d0:	1080200c 	andi	r2,r2,128
   211d4:	10000226 	beq	r2,zero,211e0 <___svfprintf_internal_r+0x6c>
   211d8:	18800417 	ldw	r2,16(r3)
   211dc:	10067f26 	beq	r2,zero,22bdc <___svfprintf_internal_r+0x1a68>
   211e0:	dcc03917 	ldw	r19,228(sp)
   211e4:	d8c00404 	addi	r3,sp,16
   211e8:	054000f4 	movhi	r21,3
   211ec:	d9001e04 	addi	r4,sp,120
   211f0:	ad4e3384 	addi	r21,r21,14542
   211f4:	d8c01e15 	stw	r3,120(sp)
   211f8:	d8002015 	stw	zero,128(sp)
   211fc:	d8001f15 	stw	zero,124(sp)
   21200:	d8003315 	stw	zero,204(sp)
   21204:	d8003615 	stw	zero,216(sp)
   21208:	d8003715 	stw	zero,220(sp)
   2120c:	1811883a 	mov	r8,r3
   21210:	d8003a15 	stw	zero,232(sp)
   21214:	d8003b15 	stw	zero,236(sp)
   21218:	d8002f15 	stw	zero,188(sp)
   2121c:	d9002815 	stw	r4,160(sp)
   21220:	b8800007 	ldb	r2,0(r23)
   21224:	10026726 	beq	r2,zero,21bc4 <___svfprintf_internal_r+0xa50>
   21228:	00c00944 	movi	r3,37
   2122c:	b821883a 	mov	r16,r23
   21230:	10c0021e 	bne	r2,r3,2123c <___svfprintf_internal_r+0xc8>
   21234:	00001406 	br	21288 <___svfprintf_internal_r+0x114>
   21238:	10c00326 	beq	r2,r3,21248 <___svfprintf_internal_r+0xd4>
   2123c:	84000044 	addi	r16,r16,1
   21240:	80800007 	ldb	r2,0(r16)
   21244:	103ffc1e 	bne	r2,zero,21238 <___svfprintf_internal_r+0xc4>
   21248:	85e3c83a 	sub	r17,r16,r23
   2124c:	88000e26 	beq	r17,zero,21288 <___svfprintf_internal_r+0x114>
   21250:	d8c02017 	ldw	r3,128(sp)
   21254:	d8801f17 	ldw	r2,124(sp)
   21258:	45c00015 	stw	r23,0(r8)
   2125c:	1c47883a 	add	r3,r3,r17
   21260:	10800044 	addi	r2,r2,1
   21264:	d8c02015 	stw	r3,128(sp)
   21268:	44400115 	stw	r17,4(r8)
   2126c:	d8801f15 	stw	r2,124(sp)
   21270:	00c001c4 	movi	r3,7
   21274:	18809716 	blt	r3,r2,214d4 <___svfprintf_internal_r+0x360>
   21278:	42000204 	addi	r8,r8,8
   2127c:	d9402f17 	ldw	r5,188(sp)
   21280:	2c4b883a 	add	r5,r5,r17
   21284:	d9402f15 	stw	r5,188(sp)
   21288:	80800007 	ldb	r2,0(r16)
   2128c:	10009826 	beq	r2,zero,214f0 <___svfprintf_internal_r+0x37c>
   21290:	84400047 	ldb	r17,1(r16)
   21294:	00bfffc4 	movi	r2,-1
   21298:	85c00044 	addi	r23,r16,1
   2129c:	d8002785 	stb	zero,158(sp)
   212a0:	0007883a 	mov	r3,zero
   212a4:	000f883a 	mov	r7,zero
   212a8:	d8802915 	stw	r2,164(sp)
   212ac:	d8003115 	stw	zero,196(sp)
   212b0:	0025883a 	mov	r18,zero
   212b4:	01401604 	movi	r5,88
   212b8:	01800244 	movi	r6,9
   212bc:	02800a84 	movi	r10,42
   212c0:	02401b04 	movi	r9,108
   212c4:	bdc00044 	addi	r23,r23,1
   212c8:	88bff804 	addi	r2,r17,-32
   212cc:	2882f036 	bltu	r5,r2,21e90 <___svfprintf_internal_r+0xd1c>
   212d0:	100490ba 	slli	r2,r2,2
   212d4:	010000b4 	movhi	r4,2
   212d8:	2104ba04 	addi	r4,r4,4840
   212dc:	1105883a 	add	r2,r2,r4
   212e0:	10800017 	ldw	r2,0(r2)
   212e4:	1000683a 	jmp	r2
   212e8:	00021df8 	rdprs	zero,zero,2167
   212ec:	00021e90 	cmplti	zero,zero,2170
   212f0:	00021e90 	cmplti	zero,zero,2170
   212f4:	00021dec 	andhi	zero,zero,2167
   212f8:	00021e90 	cmplti	zero,zero,2170
   212fc:	00021e90 	cmplti	zero,zero,2170
   21300:	00021e90 	cmplti	zero,zero,2170
   21304:	00021e90 	cmplti	zero,zero,2170
   21308:	00021e90 	cmplti	zero,zero,2170
   2130c:	00021e90 	cmplti	zero,zero,2170
   21310:	0002154c 	andi	zero,zero,2133
   21314:	00021d28 	cmpgeui	zero,zero,2164
   21318:	00021e90 	cmplti	zero,zero,2170
   2131c:	0002145c 	xori	zero,zero,2129
   21320:	00021574 	movhi	zero,2133
   21324:	00021e90 	cmplti	zero,zero,2170
   21328:	000215e8 	cmpgeui	zero,zero,2135
   2132c:	000215b4 	movhi	zero,2134
   21330:	000215b4 	movhi	zero,2134
   21334:	000215b4 	movhi	zero,2134
   21338:	000215b4 	movhi	zero,2134
   2133c:	000215b4 	movhi	zero,2134
   21340:	000215b4 	movhi	zero,2134
   21344:	000215b4 	movhi	zero,2134
   21348:	000215b4 	movhi	zero,2134
   2134c:	000215b4 	movhi	zero,2134
   21350:	00021e90 	cmplti	zero,zero,2170
   21354:	00021e90 	cmplti	zero,zero,2170
   21358:	00021e90 	cmplti	zero,zero,2170
   2135c:	00021e90 	cmplti	zero,zero,2170
   21360:	00021e90 	cmplti	zero,zero,2170
   21364:	00021e90 	cmplti	zero,zero,2170
   21368:	00021e90 	cmplti	zero,zero,2170
   2136c:	00021e90 	cmplti	zero,zero,2170
   21370:	00021e90 	cmplti	zero,zero,2170
   21374:	00021e90 	cmplti	zero,zero,2170
   21378:	000216a0 	cmpeqi	zero,zero,2138
   2137c:	000215f4 	movhi	zero,2135
   21380:	00021e90 	cmplti	zero,zero,2170
   21384:	000215f4 	movhi	zero,2135
   21388:	00021e90 	cmplti	zero,zero,2170
   2138c:	00021e90 	cmplti	zero,zero,2170
   21390:	00021e90 	cmplti	zero,zero,2170
   21394:	00021e90 	cmplti	zero,zero,2170
   21398:	00021694 	movui	zero,2138
   2139c:	00021e90 	cmplti	zero,zero,2170
   213a0:	00021e90 	cmplti	zero,zero,2170
   213a4:	0002175c 	xori	zero,zero,2141
   213a8:	00021e90 	cmplti	zero,zero,2170
   213ac:	00021e90 	cmplti	zero,zero,2170
   213b0:	00021e90 	cmplti	zero,zero,2170
   213b4:	00021e90 	cmplti	zero,zero,2170
   213b8:	00021e90 	cmplti	zero,zero,2170
   213bc:	00021bcc 	andi	zero,zero,2159
   213c0:	00021e90 	cmplti	zero,zero,2170
   213c4:	00021e90 	cmplti	zero,zero,2170
   213c8:	00021c2c 	andhi	zero,zero,2160
   213cc:	00021e90 	cmplti	zero,zero,2170
   213d0:	00021e90 	cmplti	zero,zero,2170
   213d4:	00021e90 	cmplti	zero,zero,2170
   213d8:	00021e90 	cmplti	zero,zero,2170
   213dc:	00021e90 	cmplti	zero,zero,2170
   213e0:	00021e90 	cmplti	zero,zero,2170
   213e4:	00021e90 	cmplti	zero,zero,2170
   213e8:	00021e90 	cmplti	zero,zero,2170
   213ec:	00021e90 	cmplti	zero,zero,2170
   213f0:	00021e90 	cmplti	zero,zero,2170
   213f4:	00021cdc 	xori	zero,zero,2163
   213f8:	00021e18 	cmpnei	zero,zero,2168
   213fc:	000215f4 	movhi	zero,2135
   21400:	000215f4 	movhi	zero,2135
   21404:	000215f4 	movhi	zero,2135
   21408:	00021e6c 	andhi	zero,zero,2169
   2140c:	00021e18 	cmpnei	zero,zero,2168
   21410:	00021e90 	cmplti	zero,zero,2170
   21414:	00021e90 	cmplti	zero,zero,2170
   21418:	00021e28 	cmpgeui	zero,zero,2168
   2141c:	00021e90 	cmplti	zero,zero,2170
   21420:	00021e38 	rdprs	zero,zero,2168
   21424:	00021d18 	cmpnei	zero,zero,2164
   21428:	00021468 	cmpgeui	zero,zero,2129
   2142c:	00021d38 	rdprs	zero,zero,2164
   21430:	00021e90 	cmplti	zero,zero,2170
   21434:	00021d44 	movi	zero,2165
   21438:	00021e90 	cmplti	zero,zero,2170
   2143c:	00021da0 	cmpeqi	zero,zero,2166
   21440:	00021e90 	cmplti	zero,zero,2170
   21444:	00021e90 	cmplti	zero,zero,2170
   21448:	00021db0 	cmpltui	zero,zero,2166
   2144c:	d9003117 	ldw	r4,196(sp)
   21450:	d8802d15 	stw	r2,180(sp)
   21454:	0109c83a 	sub	r4,zero,r4
   21458:	d9003115 	stw	r4,196(sp)
   2145c:	94800114 	ori	r18,r18,4
   21460:	bc400007 	ldb	r17,0(r23)
   21464:	003f9706 	br	212c4 <___svfprintf_internal_r+0x150>
   21468:	00800c04 	movi	r2,48
   2146c:	d9002d17 	ldw	r4,180(sp)
   21470:	d9402917 	ldw	r5,164(sp)
   21474:	d8802705 	stb	r2,156(sp)
   21478:	00801e04 	movi	r2,120
   2147c:	d8802745 	stb	r2,157(sp)
   21480:	d8002785 	stb	zero,158(sp)
   21484:	20c00104 	addi	r3,r4,4
   21488:	25000017 	ldw	r20,0(r4)
   2148c:	002d883a 	mov	r22,zero
   21490:	90800094 	ori	r2,r18,2
   21494:	28028616 	blt	r5,zero,21eb0 <___svfprintf_internal_r+0xd3c>
   21498:	00bfdfc4 	movi	r2,-129
   2149c:	90a4703a 	and	r18,r18,r2
   214a0:	d8c02d15 	stw	r3,180(sp)
   214a4:	94800094 	ori	r18,r18,2
   214a8:	a002731e 	bne	r20,zero,21e78 <___svfprintf_internal_r+0xd04>
   214ac:	008000f4 	movhi	r2,3
   214b0:	108e2c04 	addi	r2,r2,14512
   214b4:	d8803a15 	stw	r2,232(sp)
   214b8:	04401e04 	movi	r17,120
   214bc:	d8c02917 	ldw	r3,164(sp)
   214c0:	0039883a 	mov	fp,zero
   214c4:	1801d526 	beq	r3,zero,21c1c <___svfprintf_internal_r+0xaa8>
   214c8:	0029883a 	mov	r20,zero
   214cc:	002d883a 	mov	r22,zero
   214d0:	0001f106 	br	21c98 <___svfprintf_internal_r+0xb24>
   214d4:	d9402c17 	ldw	r5,176(sp)
   214d8:	d9801e04 	addi	r6,sp,120
   214dc:	9809883a 	mov	r4,r19
   214e0:	002a84c0 	call	2a84c <__ssprint_r>
   214e4:	1000081e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   214e8:	da000404 	addi	r8,sp,16
   214ec:	003f6306 	br	2127c <___svfprintf_internal_r+0x108>
   214f0:	d8802017 	ldw	r2,128(sp)
   214f4:	10000426 	beq	r2,zero,21508 <___svfprintf_internal_r+0x394>
   214f8:	d9402c17 	ldw	r5,176(sp)
   214fc:	d9003917 	ldw	r4,228(sp)
   21500:	d9801e04 	addi	r6,sp,120
   21504:	002a84c0 	call	2a84c <__ssprint_r>
   21508:	d8802c17 	ldw	r2,176(sp)
   2150c:	10c0030b 	ldhu	r3,12(r2)
   21510:	d8802f17 	ldw	r2,188(sp)
   21514:	18c0100c 	andi	r3,r3,64
   21518:	1805f51e 	bne	r3,zero,22cf0 <___svfprintf_internal_r+0x1b7c>
   2151c:	dfc04817 	ldw	ra,288(sp)
   21520:	df004717 	ldw	fp,284(sp)
   21524:	ddc04617 	ldw	r23,280(sp)
   21528:	dd804517 	ldw	r22,276(sp)
   2152c:	dd404417 	ldw	r21,272(sp)
   21530:	dd004317 	ldw	r20,268(sp)
   21534:	dcc04217 	ldw	r19,264(sp)
   21538:	dc804117 	ldw	r18,260(sp)
   2153c:	dc404017 	ldw	r17,256(sp)
   21540:	dc003f17 	ldw	r16,252(sp)
   21544:	dec04904 	addi	sp,sp,292
   21548:	f800283a 	ret
   2154c:	d8802d17 	ldw	r2,180(sp)
   21550:	d9002d17 	ldw	r4,180(sp)
   21554:	10800017 	ldw	r2,0(r2)
   21558:	d8803115 	stw	r2,196(sp)
   2155c:	20800104 	addi	r2,r4,4
   21560:	d9003117 	ldw	r4,196(sp)
   21564:	203fb916 	blt	r4,zero,2144c <___svfprintf_internal_r+0x2d8>
   21568:	d8802d15 	stw	r2,180(sp)
   2156c:	bc400007 	ldb	r17,0(r23)
   21570:	003f5406 	br	212c4 <___svfprintf_internal_r+0x150>
   21574:	bc400007 	ldb	r17,0(r23)
   21578:	bac00044 	addi	r11,r23,1
   2157c:	8a873926 	beq	r17,r10,23264 <___svfprintf_internal_r+0x20f0>
   21580:	88bff404 	addi	r2,r17,-48
   21584:	0009883a 	mov	r4,zero
   21588:	30868836 	bltu	r6,r2,22fac <___svfprintf_internal_r+0x1e38>
   2158c:	5c400007 	ldb	r17,0(r11)
   21590:	210002a4 	muli	r4,r4,10
   21594:	5dc00044 	addi	r23,r11,1
   21598:	b817883a 	mov	r11,r23
   2159c:	2089883a 	add	r4,r4,r2
   215a0:	88bff404 	addi	r2,r17,-48
   215a4:	30bff92e 	bgeu	r6,r2,2158c <___svfprintf_internal_r+0x418>
   215a8:	2005d716 	blt	r4,zero,22d08 <___svfprintf_internal_r+0x1b94>
   215ac:	d9002915 	stw	r4,164(sp)
   215b0:	003f4506 	br	212c8 <___svfprintf_internal_r+0x154>
   215b4:	b809883a 	mov	r4,r23
   215b8:	d8003115 	stw	zero,196(sp)
   215bc:	88bff404 	addi	r2,r17,-48
   215c0:	0017883a 	mov	r11,zero
   215c4:	24400007 	ldb	r17,0(r4)
   215c8:	5ac002a4 	muli	r11,r11,10
   215cc:	bdc00044 	addi	r23,r23,1
   215d0:	b809883a 	mov	r4,r23
   215d4:	12d7883a 	add	r11,r2,r11
   215d8:	88bff404 	addi	r2,r17,-48
   215dc:	30bff92e 	bgeu	r6,r2,215c4 <___svfprintf_internal_r+0x450>
   215e0:	dac03115 	stw	r11,196(sp)
   215e4:	003f3806 	br	212c8 <___svfprintf_internal_r+0x154>
   215e8:	94802014 	ori	r18,r18,128
   215ec:	bc400007 	ldb	r17,0(r23)
   215f0:	003f3406 	br	212c4 <___svfprintf_internal_r+0x150>
   215f4:	18c03fcc 	andi	r3,r3,255
   215f8:	1807471e 	bne	r3,zero,23318 <___svfprintf_internal_r+0x21a4>
   215fc:	9080020c 	andi	r2,r18,8
   21600:	10047d26 	beq	r2,zero,227f8 <___svfprintf_internal_r+0x1684>
   21604:	d8c02d17 	ldw	r3,180(sp)
   21608:	d9002d17 	ldw	r4,180(sp)
   2160c:	d9402d17 	ldw	r5,180(sp)
   21610:	18c00017 	ldw	r3,0(r3)
   21614:	21000117 	ldw	r4,4(r4)
   21618:	29400204 	addi	r5,r5,8
   2161c:	d8c03615 	stw	r3,216(sp)
   21620:	d9003715 	stw	r4,220(sp)
   21624:	d9402d15 	stw	r5,180(sp)
   21628:	d9003617 	ldw	r4,216(sp)
   2162c:	d9403717 	ldw	r5,220(sp)
   21630:	da003e15 	stw	r8,248(sp)
   21634:	04000044 	movi	r16,1
   21638:	002a56c0 	call	2a56c <__fpclassifyd>
   2163c:	da003e17 	ldw	r8,248(sp)
   21640:	14044b1e 	bne	r2,r16,22770 <___svfprintf_internal_r+0x15fc>
   21644:	d9003617 	ldw	r4,216(sp)
   21648:	d9403717 	ldw	r5,220(sp)
   2164c:	000d883a 	mov	r6,zero
   21650:	000f883a 	mov	r7,zero
   21654:	002fb300 	call	2fb30 <__ledf2>
   21658:	da003e17 	ldw	r8,248(sp)
   2165c:	1005f316 	blt	r2,zero,22e2c <___svfprintf_internal_r+0x1cb8>
   21660:	df002783 	ldbu	fp,158(sp)
   21664:	008011c4 	movi	r2,71
   21668:	1445590e 	bge	r2,r17,22bd0 <___svfprintf_internal_r+0x1a5c>
   2166c:	040000f4 	movhi	r16,3
   21670:	840e2404 	addi	r16,r16,14480
   21674:	00c000c4 	movi	r3,3
   21678:	00bfdfc4 	movi	r2,-129
   2167c:	d8c02a15 	stw	r3,168(sp)
   21680:	90a4703a 	and	r18,r18,r2
   21684:	d8c02e15 	stw	r3,184(sp)
   21688:	d8002915 	stw	zero,164(sp)
   2168c:	d8003215 	stw	zero,200(sp)
   21690:	00006606 	br	2182c <___svfprintf_internal_r+0x6b8>
   21694:	94800214 	ori	r18,r18,8
   21698:	bc400007 	ldb	r17,0(r23)
   2169c:	003f0906 	br	212c4 <___svfprintf_internal_r+0x150>
   216a0:	18c03fcc 	andi	r3,r3,255
   216a4:	1807181e 	bne	r3,zero,23308 <___svfprintf_internal_r+0x2194>
   216a8:	94800414 	ori	r18,r18,16
   216ac:	9080080c 	andi	r2,r18,32
   216b0:	10039626 	beq	r2,zero,2250c <___svfprintf_internal_r+0x1398>
   216b4:	d9402d17 	ldw	r5,180(sp)
   216b8:	28800117 	ldw	r2,4(r5)
   216bc:	2d000017 	ldw	r20,0(r5)
   216c0:	29400204 	addi	r5,r5,8
   216c4:	d9402d15 	stw	r5,180(sp)
   216c8:	102d883a 	mov	r22,r2
   216cc:	10039816 	blt	r2,zero,22530 <___svfprintf_internal_r+0x13bc>
   216d0:	d9402917 	ldw	r5,164(sp)
   216d4:	df002783 	ldbu	fp,158(sp)
   216d8:	2803ab16 	blt	r5,zero,22588 <___svfprintf_internal_r+0x1414>
   216dc:	00ffdfc4 	movi	r3,-129
   216e0:	a584b03a 	or	r2,r20,r22
   216e4:	90e4703a 	and	r18,r18,r3
   216e8:	10014a26 	beq	r2,zero,21c14 <___svfprintf_internal_r+0xaa0>
   216ec:	b0034b26 	beq	r22,zero,2241c <___svfprintf_internal_r+0x12a8>
   216f0:	dc402a15 	stw	r17,168(sp)
   216f4:	dc001e04 	addi	r16,sp,120
   216f8:	b023883a 	mov	r17,r22
   216fc:	402d883a 	mov	r22,r8
   21700:	a009883a 	mov	r4,r20
   21704:	880b883a 	mov	r5,r17
   21708:	01800284 	movi	r6,10
   2170c:	000f883a 	mov	r7,zero
   21710:	002e14c0 	call	2e14c <__umoddi3>
   21714:	10800c04 	addi	r2,r2,48
   21718:	843fffc4 	addi	r16,r16,-1
   2171c:	a009883a 	mov	r4,r20
   21720:	880b883a 	mov	r5,r17
   21724:	80800005 	stb	r2,0(r16)
   21728:	01800284 	movi	r6,10
   2172c:	000f883a 	mov	r7,zero
   21730:	002dbd40 	call	2dbd4 <__udivdi3>
   21734:	1029883a 	mov	r20,r2
   21738:	10c4b03a 	or	r2,r2,r3
   2173c:	1823883a 	mov	r17,r3
   21740:	103fef1e 	bne	r2,zero,21700 <___svfprintf_internal_r+0x58c>
   21744:	d8c02817 	ldw	r3,160(sp)
   21748:	dc402a17 	ldw	r17,168(sp)
   2174c:	b011883a 	mov	r8,r22
   21750:	1c07c83a 	sub	r3,r3,r16
   21754:	d8c02e15 	stw	r3,184(sp)
   21758:	00002e06 	br	21814 <___svfprintf_internal_r+0x6a0>
   2175c:	18c03fcc 	andi	r3,r3,255
   21760:	1806e71e 	bne	r3,zero,23300 <___svfprintf_internal_r+0x218c>
   21764:	94800414 	ori	r18,r18,16
   21768:	9080080c 	andi	r2,r18,32
   2176c:	1002d426 	beq	r2,zero,222c0 <___svfprintf_internal_r+0x114c>
   21770:	d9402d17 	ldw	r5,180(sp)
   21774:	d8c02917 	ldw	r3,164(sp)
   21778:	d8002785 	stb	zero,158(sp)
   2177c:	28800204 	addi	r2,r5,8
   21780:	2d000017 	ldw	r20,0(r5)
   21784:	2d800117 	ldw	r22,4(r5)
   21788:	18041516 	blt	r3,zero,227e0 <___svfprintf_internal_r+0x166c>
   2178c:	013fdfc4 	movi	r4,-129
   21790:	a586b03a 	or	r3,r20,r22
   21794:	d8802d15 	stw	r2,180(sp)
   21798:	9124703a 	and	r18,r18,r4
   2179c:	1802d51e 	bne	r3,zero,222f4 <___svfprintf_internal_r+0x1180>
   217a0:	d9402917 	ldw	r5,164(sp)
   217a4:	0039883a 	mov	fp,zero
   217a8:	2806be26 	beq	r5,zero,232a4 <___svfprintf_internal_r+0x2130>
   217ac:	0029883a 	mov	r20,zero
   217b0:	002d883a 	mov	r22,zero
   217b4:	dc001e04 	addi	r16,sp,120
   217b8:	a006d0fa 	srli	r3,r20,3
   217bc:	b008977a 	slli	r4,r22,29
   217c0:	b02cd0fa 	srli	r22,r22,3
   217c4:	a50001cc 	andi	r20,r20,7
   217c8:	a0800c04 	addi	r2,r20,48
   217cc:	843fffc4 	addi	r16,r16,-1
   217d0:	20e8b03a 	or	r20,r4,r3
   217d4:	80800005 	stb	r2,0(r16)
   217d8:	a586b03a 	or	r3,r20,r22
   217dc:	183ff61e 	bne	r3,zero,217b8 <___svfprintf_internal_r+0x644>
   217e0:	90c0004c 	andi	r3,r18,1
   217e4:	18013926 	beq	r3,zero,21ccc <___svfprintf_internal_r+0xb58>
   217e8:	10803fcc 	andi	r2,r2,255
   217ec:	1080201c 	xori	r2,r2,128
   217f0:	10bfe004 	addi	r2,r2,-128
   217f4:	00c00c04 	movi	r3,48
   217f8:	10c13426 	beq	r2,r3,21ccc <___svfprintf_internal_r+0xb58>
   217fc:	80ffffc5 	stb	r3,-1(r16)
   21800:	d8c02817 	ldw	r3,160(sp)
   21804:	80bfffc4 	addi	r2,r16,-1
   21808:	1021883a 	mov	r16,r2
   2180c:	1887c83a 	sub	r3,r3,r2
   21810:	d8c02e15 	stw	r3,184(sp)
   21814:	d8802e17 	ldw	r2,184(sp)
   21818:	d9002917 	ldw	r4,164(sp)
   2181c:	1100010e 	bge	r2,r4,21824 <___svfprintf_internal_r+0x6b0>
   21820:	2005883a 	mov	r2,r4
   21824:	d8802a15 	stw	r2,168(sp)
   21828:	d8003215 	stw	zero,200(sp)
   2182c:	e7003fcc 	andi	fp,fp,255
   21830:	e700201c 	xori	fp,fp,128
   21834:	e73fe004 	addi	fp,fp,-128
   21838:	e0000326 	beq	fp,zero,21848 <___svfprintf_internal_r+0x6d4>
   2183c:	d8c02a17 	ldw	r3,168(sp)
   21840:	18c00044 	addi	r3,r3,1
   21844:	d8c02a15 	stw	r3,168(sp)
   21848:	90c0008c 	andi	r3,r18,2
   2184c:	d8c02b15 	stw	r3,172(sp)
   21850:	18000326 	beq	r3,zero,21860 <___svfprintf_internal_r+0x6ec>
   21854:	d8c02a17 	ldw	r3,168(sp)
   21858:	18c00084 	addi	r3,r3,2
   2185c:	d8c02a15 	stw	r3,168(sp)
   21860:	90c0210c 	andi	r3,r18,132
   21864:	d8c03015 	stw	r3,192(sp)
   21868:	1801a11e 	bne	r3,zero,21ef0 <___svfprintf_internal_r+0xd7c>
   2186c:	d9003117 	ldw	r4,196(sp)
   21870:	d8c02a17 	ldw	r3,168(sp)
   21874:	20e9c83a 	sub	r20,r4,r3
   21878:	05019d0e 	bge	zero,r20,21ef0 <___svfprintf_internal_r+0xd7c>
   2187c:	02400404 	movi	r9,16
   21880:	d8c02017 	ldw	r3,128(sp)
   21884:	d8801f17 	ldw	r2,124(sp)
   21888:	4d051b0e 	bge	r9,r20,22cf8 <___svfprintf_internal_r+0x1b84>
   2188c:	014000f4 	movhi	r5,3
   21890:	294e3784 	addi	r5,r5,14558
   21894:	dc403c15 	stw	r17,240(sp)
   21898:	d9403515 	stw	r5,212(sp)
   2189c:	a023883a 	mov	r17,r20
   218a0:	482d883a 	mov	r22,r9
   218a4:	9029883a 	mov	r20,r18
   218a8:	070001c4 	movi	fp,7
   218ac:	8025883a 	mov	r18,r16
   218b0:	dc002c17 	ldw	r16,176(sp)
   218b4:	00000306 	br	218c4 <___svfprintf_internal_r+0x750>
   218b8:	8c7ffc04 	addi	r17,r17,-16
   218bc:	42000204 	addi	r8,r8,8
   218c0:	b440130e 	bge	r22,r17,21910 <___svfprintf_internal_r+0x79c>
   218c4:	010000f4 	movhi	r4,3
   218c8:	18c00404 	addi	r3,r3,16
   218cc:	10800044 	addi	r2,r2,1
   218d0:	210e3784 	addi	r4,r4,14558
   218d4:	41000015 	stw	r4,0(r8)
   218d8:	45800115 	stw	r22,4(r8)
   218dc:	d8c02015 	stw	r3,128(sp)
   218e0:	d8801f15 	stw	r2,124(sp)
   218e4:	e0bff40e 	bge	fp,r2,218b8 <___svfprintf_internal_r+0x744>
   218e8:	d9801e04 	addi	r6,sp,120
   218ec:	800b883a 	mov	r5,r16
   218f0:	9809883a 	mov	r4,r19
   218f4:	002a84c0 	call	2a84c <__ssprint_r>
   218f8:	103f031e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   218fc:	8c7ffc04 	addi	r17,r17,-16
   21900:	d8c02017 	ldw	r3,128(sp)
   21904:	d8801f17 	ldw	r2,124(sp)
   21908:	da000404 	addi	r8,sp,16
   2190c:	b47fed16 	blt	r22,r17,218c4 <___svfprintf_internal_r+0x750>
   21910:	9021883a 	mov	r16,r18
   21914:	a025883a 	mov	r18,r20
   21918:	8829883a 	mov	r20,r17
   2191c:	dc403c17 	ldw	r17,240(sp)
   21920:	d9403517 	ldw	r5,212(sp)
   21924:	a0c7883a 	add	r3,r20,r3
   21928:	10800044 	addi	r2,r2,1
   2192c:	41400015 	stw	r5,0(r8)
   21930:	45000115 	stw	r20,4(r8)
   21934:	d8c02015 	stw	r3,128(sp)
   21938:	d8801f15 	stw	r2,124(sp)
   2193c:	010001c4 	movi	r4,7
   21940:	20829f16 	blt	r4,r2,223c0 <___svfprintf_internal_r+0x124c>
   21944:	df002787 	ldb	fp,158(sp)
   21948:	42000204 	addi	r8,r8,8
   2194c:	e0000c26 	beq	fp,zero,21980 <___svfprintf_internal_r+0x80c>
   21950:	d8801f17 	ldw	r2,124(sp)
   21954:	d9002784 	addi	r4,sp,158
   21958:	18c00044 	addi	r3,r3,1
   2195c:	10800044 	addi	r2,r2,1
   21960:	41000015 	stw	r4,0(r8)
   21964:	01000044 	movi	r4,1
   21968:	41000115 	stw	r4,4(r8)
   2196c:	d8c02015 	stw	r3,128(sp)
   21970:	d8801f15 	stw	r2,124(sp)
   21974:	010001c4 	movi	r4,7
   21978:	20823816 	blt	r4,r2,2225c <___svfprintf_internal_r+0x10e8>
   2197c:	42000204 	addi	r8,r8,8
   21980:	d8802b17 	ldw	r2,172(sp)
   21984:	10000c26 	beq	r2,zero,219b8 <___svfprintf_internal_r+0x844>
   21988:	d8801f17 	ldw	r2,124(sp)
   2198c:	d9002704 	addi	r4,sp,156
   21990:	18c00084 	addi	r3,r3,2
   21994:	10800044 	addi	r2,r2,1
   21998:	41000015 	stw	r4,0(r8)
   2199c:	01000084 	movi	r4,2
   219a0:	41000115 	stw	r4,4(r8)
   219a4:	d8c02015 	stw	r3,128(sp)
   219a8:	d8801f15 	stw	r2,124(sp)
   219ac:	010001c4 	movi	r4,7
   219b0:	20823216 	blt	r4,r2,2227c <___svfprintf_internal_r+0x1108>
   219b4:	42000204 	addi	r8,r8,8
   219b8:	d9003017 	ldw	r4,192(sp)
   219bc:	00802004 	movi	r2,128
   219c0:	20819726 	beq	r4,r2,22020 <___svfprintf_internal_r+0xeac>
   219c4:	d9402917 	ldw	r5,164(sp)
   219c8:	d8802e17 	ldw	r2,184(sp)
   219cc:	28adc83a 	sub	r22,r5,r2
   219d0:	05802f0e 	bge	zero,r22,21a90 <___svfprintf_internal_r+0x91c>
   219d4:	07000404 	movi	fp,16
   219d8:	d8801f17 	ldw	r2,124(sp)
   219dc:	e583c00e 	bge	fp,r22,228e0 <___svfprintf_internal_r+0x176c>
   219e0:	014000f4 	movhi	r5,3
   219e4:	294e3384 	addi	r5,r5,14542
   219e8:	dc402915 	stw	r17,164(sp)
   219ec:	d9402b15 	stw	r5,172(sp)
   219f0:	b023883a 	mov	r17,r22
   219f4:	050001c4 	movi	r20,7
   219f8:	902d883a 	mov	r22,r18
   219fc:	8025883a 	mov	r18,r16
   21a00:	dc002c17 	ldw	r16,176(sp)
   21a04:	00000306 	br	21a14 <___svfprintf_internal_r+0x8a0>
   21a08:	8c7ffc04 	addi	r17,r17,-16
   21a0c:	42000204 	addi	r8,r8,8
   21a10:	e440110e 	bge	fp,r17,21a58 <___svfprintf_internal_r+0x8e4>
   21a14:	18c00404 	addi	r3,r3,16
   21a18:	10800044 	addi	r2,r2,1
   21a1c:	45400015 	stw	r21,0(r8)
   21a20:	47000115 	stw	fp,4(r8)
   21a24:	d8c02015 	stw	r3,128(sp)
   21a28:	d8801f15 	stw	r2,124(sp)
   21a2c:	a0bff60e 	bge	r20,r2,21a08 <___svfprintf_internal_r+0x894>
   21a30:	d9801e04 	addi	r6,sp,120
   21a34:	800b883a 	mov	r5,r16
   21a38:	9809883a 	mov	r4,r19
   21a3c:	002a84c0 	call	2a84c <__ssprint_r>
   21a40:	103eb11e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   21a44:	8c7ffc04 	addi	r17,r17,-16
   21a48:	d8c02017 	ldw	r3,128(sp)
   21a4c:	d8801f17 	ldw	r2,124(sp)
   21a50:	da000404 	addi	r8,sp,16
   21a54:	e47fef16 	blt	fp,r17,21a14 <___svfprintf_internal_r+0x8a0>
   21a58:	9021883a 	mov	r16,r18
   21a5c:	b025883a 	mov	r18,r22
   21a60:	882d883a 	mov	r22,r17
   21a64:	dc402917 	ldw	r17,164(sp)
   21a68:	d9002b17 	ldw	r4,172(sp)
   21a6c:	1d87883a 	add	r3,r3,r22
   21a70:	10800044 	addi	r2,r2,1
   21a74:	41000015 	stw	r4,0(r8)
   21a78:	45800115 	stw	r22,4(r8)
   21a7c:	d8c02015 	stw	r3,128(sp)
   21a80:	d8801f15 	stw	r2,124(sp)
   21a84:	010001c4 	movi	r4,7
   21a88:	2081ec16 	blt	r4,r2,2223c <___svfprintf_internal_r+0x10c8>
   21a8c:	42000204 	addi	r8,r8,8
   21a90:	9080400c 	andi	r2,r18,256
   21a94:	1001181e 	bne	r2,zero,21ef8 <___svfprintf_internal_r+0xd84>
   21a98:	d9402e17 	ldw	r5,184(sp)
   21a9c:	d8801f17 	ldw	r2,124(sp)
   21aa0:	44000015 	stw	r16,0(r8)
   21aa4:	1947883a 	add	r3,r3,r5
   21aa8:	10800044 	addi	r2,r2,1
   21aac:	41400115 	stw	r5,4(r8)
   21ab0:	d8c02015 	stw	r3,128(sp)
   21ab4:	d8801f15 	stw	r2,124(sp)
   21ab8:	010001c4 	movi	r4,7
   21abc:	2081d116 	blt	r4,r2,22204 <___svfprintf_internal_r+0x1090>
   21ac0:	42000204 	addi	r8,r8,8
   21ac4:	9480010c 	andi	r18,r18,4
   21ac8:	90003226 	beq	r18,zero,21b94 <___svfprintf_internal_r+0xa20>
   21acc:	d9403117 	ldw	r5,196(sp)
   21ad0:	d8802a17 	ldw	r2,168(sp)
   21ad4:	28a1c83a 	sub	r16,r5,r2
   21ad8:	04002e0e 	bge	zero,r16,21b94 <___svfprintf_internal_r+0xa20>
   21adc:	04400404 	movi	r17,16
   21ae0:	d8801f17 	ldw	r2,124(sp)
   21ae4:	8c04b90e 	bge	r17,r16,22dcc <___svfprintf_internal_r+0x1c58>
   21ae8:	014000f4 	movhi	r5,3
   21aec:	294e3784 	addi	r5,r5,14558
   21af0:	d9403515 	stw	r5,212(sp)
   21af4:	048001c4 	movi	r18,7
   21af8:	dd002c17 	ldw	r20,176(sp)
   21afc:	00000306 	br	21b0c <___svfprintf_internal_r+0x998>
   21b00:	843ffc04 	addi	r16,r16,-16
   21b04:	42000204 	addi	r8,r8,8
   21b08:	8c00130e 	bge	r17,r16,21b58 <___svfprintf_internal_r+0x9e4>
   21b0c:	010000f4 	movhi	r4,3
   21b10:	18c00404 	addi	r3,r3,16
   21b14:	10800044 	addi	r2,r2,1
   21b18:	210e3784 	addi	r4,r4,14558
   21b1c:	41000015 	stw	r4,0(r8)
   21b20:	44400115 	stw	r17,4(r8)
   21b24:	d8c02015 	stw	r3,128(sp)
   21b28:	d8801f15 	stw	r2,124(sp)
   21b2c:	90bff40e 	bge	r18,r2,21b00 <___svfprintf_internal_r+0x98c>
   21b30:	d9801e04 	addi	r6,sp,120
   21b34:	a00b883a 	mov	r5,r20
   21b38:	9809883a 	mov	r4,r19
   21b3c:	002a84c0 	call	2a84c <__ssprint_r>
   21b40:	103e711e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   21b44:	843ffc04 	addi	r16,r16,-16
   21b48:	d8c02017 	ldw	r3,128(sp)
   21b4c:	d8801f17 	ldw	r2,124(sp)
   21b50:	da000404 	addi	r8,sp,16
   21b54:	8c3fed16 	blt	r17,r16,21b0c <___svfprintf_internal_r+0x998>
   21b58:	d9403517 	ldw	r5,212(sp)
   21b5c:	1c07883a 	add	r3,r3,r16
   21b60:	10800044 	addi	r2,r2,1
   21b64:	41400015 	stw	r5,0(r8)
   21b68:	44000115 	stw	r16,4(r8)
   21b6c:	d8c02015 	stw	r3,128(sp)
   21b70:	d8801f15 	stw	r2,124(sp)
   21b74:	010001c4 	movi	r4,7
   21b78:	2080060e 	bge	r4,r2,21b94 <___svfprintf_internal_r+0xa20>
   21b7c:	d9402c17 	ldw	r5,176(sp)
   21b80:	d9801e04 	addi	r6,sp,120
   21b84:	9809883a 	mov	r4,r19
   21b88:	002a84c0 	call	2a84c <__ssprint_r>
   21b8c:	103e5e1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   21b90:	d8c02017 	ldw	r3,128(sp)
   21b94:	d8803117 	ldw	r2,196(sp)
   21b98:	d9002a17 	ldw	r4,168(sp)
   21b9c:	1100010e 	bge	r2,r4,21ba4 <___svfprintf_internal_r+0xa30>
   21ba0:	2005883a 	mov	r2,r4
   21ba4:	d9402f17 	ldw	r5,188(sp)
   21ba8:	288b883a 	add	r5,r5,r2
   21bac:	d9402f15 	stw	r5,188(sp)
   21bb0:	18019c1e 	bne	r3,zero,22224 <___svfprintf_internal_r+0x10b0>
   21bb4:	b8800007 	ldb	r2,0(r23)
   21bb8:	d8001f15 	stw	zero,124(sp)
   21bbc:	da000404 	addi	r8,sp,16
   21bc0:	103d991e 	bne	r2,zero,21228 <___svfprintf_internal_r+0xb4>
   21bc4:	b821883a 	mov	r16,r23
   21bc8:	003daf06 	br	21288 <___svfprintf_internal_r+0x114>
   21bcc:	18c03fcc 	andi	r3,r3,255
   21bd0:	1805c71e 	bne	r3,zero,232f0 <___svfprintf_internal_r+0x217c>
   21bd4:	94800414 	ori	r18,r18,16
   21bd8:	9080080c 	andi	r2,r18,32
   21bdc:	10020126 	beq	r2,zero,223e4 <___svfprintf_internal_r+0x1270>
   21be0:	d8802d17 	ldw	r2,180(sp)
   21be4:	d9002917 	ldw	r4,164(sp)
   21be8:	d8002785 	stb	zero,158(sp)
   21bec:	10c00204 	addi	r3,r2,8
   21bf0:	15000017 	ldw	r20,0(r2)
   21bf4:	15800117 	ldw	r22,4(r2)
   21bf8:	20038e16 	blt	r4,zero,22a34 <___svfprintf_internal_r+0x18c0>
   21bfc:	013fdfc4 	movi	r4,-129
   21c00:	a584b03a 	or	r2,r20,r22
   21c04:	d8c02d15 	stw	r3,180(sp)
   21c08:	9124703a 	and	r18,r18,r4
   21c0c:	0039883a 	mov	fp,zero
   21c10:	103eb61e 	bne	r2,zero,216ec <___svfprintf_internal_r+0x578>
   21c14:	d8802917 	ldw	r2,164(sp)
   21c18:	1002c81e 	bne	r2,zero,2273c <___svfprintf_internal_r+0x15c8>
   21c1c:	d8002915 	stw	zero,164(sp)
   21c20:	d8002e15 	stw	zero,184(sp)
   21c24:	dc001e04 	addi	r16,sp,120
   21c28:	003efa06 	br	21814 <___svfprintf_internal_r+0x6a0>
   21c2c:	18c03fcc 	andi	r3,r3,255
   21c30:	1805ad1e 	bne	r3,zero,232e8 <___svfprintf_internal_r+0x2174>
   21c34:	014000f4 	movhi	r5,3
   21c38:	294e2704 	addi	r5,r5,14492
   21c3c:	d9403a15 	stw	r5,232(sp)
   21c40:	9080080c 	andi	r2,r18,32
   21c44:	10006126 	beq	r2,zero,21dcc <___svfprintf_internal_r+0xc58>
   21c48:	d8802d17 	ldw	r2,180(sp)
   21c4c:	15000017 	ldw	r20,0(r2)
   21c50:	15800117 	ldw	r22,4(r2)
   21c54:	10800204 	addi	r2,r2,8
   21c58:	d8802d15 	stw	r2,180(sp)
   21c5c:	9080004c 	andi	r2,r18,1
   21c60:	10018e26 	beq	r2,zero,2229c <___svfprintf_internal_r+0x1128>
   21c64:	a584b03a 	or	r2,r20,r22
   21c68:	10030926 	beq	r2,zero,22890 <___svfprintf_internal_r+0x171c>
   21c6c:	d8c02917 	ldw	r3,164(sp)
   21c70:	00800c04 	movi	r2,48
   21c74:	d8802705 	stb	r2,156(sp)
   21c78:	dc402745 	stb	r17,157(sp)
   21c7c:	d8002785 	stb	zero,158(sp)
   21c80:	90800094 	ori	r2,r18,2
   21c84:	18048716 	blt	r3,zero,22ea4 <___svfprintf_internal_r+0x1d30>
   21c88:	00bfdfc4 	movi	r2,-129
   21c8c:	90a4703a 	and	r18,r18,r2
   21c90:	94800094 	ori	r18,r18,2
   21c94:	0039883a 	mov	fp,zero
   21c98:	d9003a17 	ldw	r4,232(sp)
   21c9c:	dc001e04 	addi	r16,sp,120
   21ca0:	a08003cc 	andi	r2,r20,15
   21ca4:	b006973a 	slli	r3,r22,28
   21ca8:	2085883a 	add	r2,r4,r2
   21cac:	a028d13a 	srli	r20,r20,4
   21cb0:	10800003 	ldbu	r2,0(r2)
   21cb4:	b02cd13a 	srli	r22,r22,4
   21cb8:	843fffc4 	addi	r16,r16,-1
   21cbc:	1d28b03a 	or	r20,r3,r20
   21cc0:	80800005 	stb	r2,0(r16)
   21cc4:	a584b03a 	or	r2,r20,r22
   21cc8:	103ff51e 	bne	r2,zero,21ca0 <___svfprintf_internal_r+0xb2c>
   21ccc:	d8c02817 	ldw	r3,160(sp)
   21cd0:	1c07c83a 	sub	r3,r3,r16
   21cd4:	d8c02e15 	stw	r3,184(sp)
   21cd8:	003ece06 	br	21814 <___svfprintf_internal_r+0x6a0>
   21cdc:	d8c02d17 	ldw	r3,180(sp)
   21ce0:	d9002d17 	ldw	r4,180(sp)
   21ce4:	d8002785 	stb	zero,158(sp)
   21ce8:	18800017 	ldw	r2,0(r3)
   21cec:	21000104 	addi	r4,r4,4
   21cf0:	00c00044 	movi	r3,1
   21cf4:	d8c02a15 	stw	r3,168(sp)
   21cf8:	d8801405 	stb	r2,80(sp)
   21cfc:	d9002d15 	stw	r4,180(sp)
   21d00:	d8c02e15 	stw	r3,184(sp)
   21d04:	d8002915 	stw	zero,164(sp)
   21d08:	d8003215 	stw	zero,200(sp)
   21d0c:	dc001404 	addi	r16,sp,80
   21d10:	0039883a 	mov	fp,zero
   21d14:	003ecc06 	br	21848 <___svfprintf_internal_r+0x6d4>
   21d18:	18c03fcc 	andi	r3,r3,255
   21d1c:	183e9226 	beq	r3,zero,21768 <___svfprintf_internal_r+0x5f4>
   21d20:	d9c02785 	stb	r7,158(sp)
   21d24:	003e9006 	br	21768 <___svfprintf_internal_r+0x5f4>
   21d28:	00c00044 	movi	r3,1
   21d2c:	01c00ac4 	movi	r7,43
   21d30:	bc400007 	ldb	r17,0(r23)
   21d34:	003d6306 	br	212c4 <___svfprintf_internal_r+0x150>
   21d38:	94800814 	ori	r18,r18,32
   21d3c:	bc400007 	ldb	r17,0(r23)
   21d40:	003d6006 	br	212c4 <___svfprintf_internal_r+0x150>
   21d44:	d8c02d17 	ldw	r3,180(sp)
   21d48:	d8002785 	stb	zero,158(sp)
   21d4c:	1c000017 	ldw	r16,0(r3)
   21d50:	1d000104 	addi	r20,r3,4
   21d54:	80040f26 	beq	r16,zero,22d94 <___svfprintf_internal_r+0x1c20>
   21d58:	d9002917 	ldw	r4,164(sp)
   21d5c:	2003dc16 	blt	r4,zero,22cd0 <___svfprintf_internal_r+0x1b5c>
   21d60:	200d883a 	mov	r6,r4
   21d64:	000b883a 	mov	r5,zero
   21d68:	8009883a 	mov	r4,r16
   21d6c:	da003e15 	stw	r8,248(sp)
   21d70:	0028b5c0 	call	28b5c <memchr>
   21d74:	da003e17 	ldw	r8,248(sp)
   21d78:	10045826 	beq	r2,zero,22edc <___svfprintf_internal_r+0x1d68>
   21d7c:	1405c83a 	sub	r2,r2,r16
   21d80:	d8802e15 	stw	r2,184(sp)
   21d84:	1003d816 	blt	r2,zero,22ce8 <___svfprintf_internal_r+0x1b74>
   21d88:	df002783 	ldbu	fp,158(sp)
   21d8c:	d8802a15 	stw	r2,168(sp)
   21d90:	dd002d15 	stw	r20,180(sp)
   21d94:	d8002915 	stw	zero,164(sp)
   21d98:	d8003215 	stw	zero,200(sp)
   21d9c:	003ea306 	br	2182c <___svfprintf_internal_r+0x6b8>
   21da0:	18c03fcc 	andi	r3,r3,255
   21da4:	183f8c26 	beq	r3,zero,21bd8 <___svfprintf_internal_r+0xa64>
   21da8:	d9c02785 	stb	r7,158(sp)
   21dac:	003f8a06 	br	21bd8 <___svfprintf_internal_r+0xa64>
   21db0:	18c03fcc 	andi	r3,r3,255
   21db4:	1805631e 	bne	r3,zero,23344 <___svfprintf_internal_r+0x21d0>
   21db8:	014000f4 	movhi	r5,3
   21dbc:	294e2c04 	addi	r5,r5,14512
   21dc0:	d9403a15 	stw	r5,232(sp)
   21dc4:	9080080c 	andi	r2,r18,32
   21dc8:	103f9f1e 	bne	r2,zero,21c48 <___svfprintf_internal_r+0xad4>
   21dcc:	9080040c 	andi	r2,r18,16
   21dd0:	10029c26 	beq	r2,zero,22844 <___svfprintf_internal_r+0x16d0>
   21dd4:	d8c02d17 	ldw	r3,180(sp)
   21dd8:	002d883a 	mov	r22,zero
   21ddc:	1d000017 	ldw	r20,0(r3)
   21de0:	18c00104 	addi	r3,r3,4
   21de4:	d8c02d15 	stw	r3,180(sp)
   21de8:	003f9c06 	br	21c5c <___svfprintf_internal_r+0xae8>
   21dec:	94800054 	ori	r18,r18,1
   21df0:	bc400007 	ldb	r17,0(r23)
   21df4:	003d3306 	br	212c4 <___svfprintf_internal_r+0x150>
   21df8:	38803fcc 	andi	r2,r7,255
   21dfc:	1080201c 	xori	r2,r2,128
   21e00:	10bfe004 	addi	r2,r2,-128
   21e04:	1002971e 	bne	r2,zero,22864 <___svfprintf_internal_r+0x16f0>
   21e08:	00c00044 	movi	r3,1
   21e0c:	01c00804 	movi	r7,32
   21e10:	bc400007 	ldb	r17,0(r23)
   21e14:	003d2b06 	br	212c4 <___svfprintf_internal_r+0x150>
   21e18:	18c03fcc 	andi	r3,r3,255
   21e1c:	183e2326 	beq	r3,zero,216ac <___svfprintf_internal_r+0x538>
   21e20:	d9c02785 	stb	r7,158(sp)
   21e24:	003e2106 	br	216ac <___svfprintf_internal_r+0x538>
   21e28:	bc400007 	ldb	r17,0(r23)
   21e2c:	8a430426 	beq	r17,r9,22a40 <___svfprintf_internal_r+0x18cc>
   21e30:	94800414 	ori	r18,r18,16
   21e34:	003d2306 	br	212c4 <___svfprintf_internal_r+0x150>
   21e38:	18c03fcc 	andi	r3,r3,255
   21e3c:	18053f1e 	bne	r3,zero,2333c <___svfprintf_internal_r+0x21c8>
   21e40:	9080080c 	andi	r2,r18,32
   21e44:	10028926 	beq	r2,zero,2286c <___svfprintf_internal_r+0x16f8>
   21e48:	d9402d17 	ldw	r5,180(sp)
   21e4c:	d9002f17 	ldw	r4,188(sp)
   21e50:	28800017 	ldw	r2,0(r5)
   21e54:	2007d7fa 	srai	r3,r4,31
   21e58:	29400104 	addi	r5,r5,4
   21e5c:	d9402d15 	stw	r5,180(sp)
   21e60:	11000015 	stw	r4,0(r2)
   21e64:	10c00115 	stw	r3,4(r2)
   21e68:	003ced06 	br	21220 <___svfprintf_internal_r+0xac>
   21e6c:	94801014 	ori	r18,r18,64
   21e70:	bc400007 	ldb	r17,0(r23)
   21e74:	003d1306 	br	212c4 <___svfprintf_internal_r+0x150>
   21e78:	010000f4 	movhi	r4,3
   21e7c:	210e2c04 	addi	r4,r4,14512
   21e80:	0039883a 	mov	fp,zero
   21e84:	d9003a15 	stw	r4,232(sp)
   21e88:	04401e04 	movi	r17,120
   21e8c:	003f8206 	br	21c98 <___svfprintf_internal_r+0xb24>
   21e90:	18c03fcc 	andi	r3,r3,255
   21e94:	1805221e 	bne	r3,zero,23320 <___svfprintf_internal_r+0x21ac>
   21e98:	883d9526 	beq	r17,zero,214f0 <___svfprintf_internal_r+0x37c>
   21e9c:	00c00044 	movi	r3,1
   21ea0:	d8c02a15 	stw	r3,168(sp)
   21ea4:	dc401405 	stb	r17,80(sp)
   21ea8:	d8002785 	stb	zero,158(sp)
   21eac:	003f9406 	br	21d00 <___svfprintf_internal_r+0xb8c>
   21eb0:	010000f4 	movhi	r4,3
   21eb4:	210e2c04 	addi	r4,r4,14512
   21eb8:	d9003a15 	stw	r4,232(sp)
   21ebc:	d8c02d15 	stw	r3,180(sp)
   21ec0:	1025883a 	mov	r18,r2
   21ec4:	04401e04 	movi	r17,120
   21ec8:	a584b03a 	or	r2,r20,r22
   21ecc:	1000fa1e 	bne	r2,zero,222b8 <___svfprintf_internal_r+0x1144>
   21ed0:	0039883a 	mov	fp,zero
   21ed4:	00800084 	movi	r2,2
   21ed8:	10803fcc 	andi	r2,r2,255
   21edc:	00c00044 	movi	r3,1
   21ee0:	10c21626 	beq	r2,r3,2273c <___svfprintf_internal_r+0x15c8>
   21ee4:	00c00084 	movi	r3,2
   21ee8:	10fe301e 	bne	r2,r3,217ac <___svfprintf_internal_r+0x638>
   21eec:	003d7606 	br	214c8 <___svfprintf_internal_r+0x354>
   21ef0:	d8c02017 	ldw	r3,128(sp)
   21ef4:	003e9506 	br	2194c <___svfprintf_internal_r+0x7d8>
   21ef8:	00801944 	movi	r2,101
   21efc:	14407c0e 	bge	r2,r17,220f0 <___svfprintf_internal_r+0xf7c>
   21f00:	d9003617 	ldw	r4,216(sp)
   21f04:	d9403717 	ldw	r5,220(sp)
   21f08:	000d883a 	mov	r6,zero
   21f0c:	000f883a 	mov	r7,zero
   21f10:	d8c03d15 	stw	r3,244(sp)
   21f14:	da003e15 	stw	r8,248(sp)
   21f18:	002f9cc0 	call	2f9cc <__eqdf2>
   21f1c:	d8c03d17 	ldw	r3,244(sp)
   21f20:	da003e17 	ldw	r8,248(sp)
   21f24:	1000f51e 	bne	r2,zero,222fc <___svfprintf_internal_r+0x1188>
   21f28:	d8801f17 	ldw	r2,124(sp)
   21f2c:	010000f4 	movhi	r4,3
   21f30:	210e3304 	addi	r4,r4,14540
   21f34:	18c00044 	addi	r3,r3,1
   21f38:	10800044 	addi	r2,r2,1
   21f3c:	41000015 	stw	r4,0(r8)
   21f40:	01000044 	movi	r4,1
   21f44:	41000115 	stw	r4,4(r8)
   21f48:	d8c02015 	stw	r3,128(sp)
   21f4c:	d8801f15 	stw	r2,124(sp)
   21f50:	010001c4 	movi	r4,7
   21f54:	20826616 	blt	r4,r2,228f0 <___svfprintf_internal_r+0x177c>
   21f58:	42000204 	addi	r8,r8,8
   21f5c:	d8802617 	ldw	r2,152(sp)
   21f60:	d9403317 	ldw	r5,204(sp)
   21f64:	11400216 	blt	r2,r5,21f70 <___svfprintf_internal_r+0xdfc>
   21f68:	9080004c 	andi	r2,r18,1
   21f6c:	103ed526 	beq	r2,zero,21ac4 <___svfprintf_internal_r+0x950>
   21f70:	d8803817 	ldw	r2,224(sp)
   21f74:	d9003417 	ldw	r4,208(sp)
   21f78:	d9403817 	ldw	r5,224(sp)
   21f7c:	1887883a 	add	r3,r3,r2
   21f80:	d8801f17 	ldw	r2,124(sp)
   21f84:	41000015 	stw	r4,0(r8)
   21f88:	41400115 	stw	r5,4(r8)
   21f8c:	10800044 	addi	r2,r2,1
   21f90:	d8c02015 	stw	r3,128(sp)
   21f94:	d8801f15 	stw	r2,124(sp)
   21f98:	010001c4 	movi	r4,7
   21f9c:	2082af16 	blt	r4,r2,22a5c <___svfprintf_internal_r+0x18e8>
   21fa0:	42000204 	addi	r8,r8,8
   21fa4:	d8803317 	ldw	r2,204(sp)
   21fa8:	143fffc4 	addi	r16,r2,-1
   21fac:	043ec50e 	bge	zero,r16,21ac4 <___svfprintf_internal_r+0x950>
   21fb0:	04400404 	movi	r17,16
   21fb4:	d8801f17 	ldw	r2,124(sp)
   21fb8:	8c00860e 	bge	r17,r16,221d4 <___svfprintf_internal_r+0x1060>
   21fbc:	014000f4 	movhi	r5,3
   21fc0:	294e3384 	addi	r5,r5,14542
   21fc4:	d9402b15 	stw	r5,172(sp)
   21fc8:	058001c4 	movi	r22,7
   21fcc:	dd002c17 	ldw	r20,176(sp)
   21fd0:	00000306 	br	21fe0 <___svfprintf_internal_r+0xe6c>
   21fd4:	42000204 	addi	r8,r8,8
   21fd8:	843ffc04 	addi	r16,r16,-16
   21fdc:	8c00800e 	bge	r17,r16,221e0 <___svfprintf_internal_r+0x106c>
   21fe0:	18c00404 	addi	r3,r3,16
   21fe4:	10800044 	addi	r2,r2,1
   21fe8:	45400015 	stw	r21,0(r8)
   21fec:	44400115 	stw	r17,4(r8)
   21ff0:	d8c02015 	stw	r3,128(sp)
   21ff4:	d8801f15 	stw	r2,124(sp)
   21ff8:	b0bff60e 	bge	r22,r2,21fd4 <___svfprintf_internal_r+0xe60>
   21ffc:	d9801e04 	addi	r6,sp,120
   22000:	a00b883a 	mov	r5,r20
   22004:	9809883a 	mov	r4,r19
   22008:	002a84c0 	call	2a84c <__ssprint_r>
   2200c:	103d3e1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22010:	d8c02017 	ldw	r3,128(sp)
   22014:	d8801f17 	ldw	r2,124(sp)
   22018:	da000404 	addi	r8,sp,16
   2201c:	003fee06 	br	21fd8 <___svfprintf_internal_r+0xe64>
   22020:	d9403117 	ldw	r5,196(sp)
   22024:	d8802a17 	ldw	r2,168(sp)
   22028:	28adc83a 	sub	r22,r5,r2
   2202c:	05be650e 	bge	zero,r22,219c4 <___svfprintf_internal_r+0x850>
   22030:	07000404 	movi	fp,16
   22034:	d8801f17 	ldw	r2,124(sp)
   22038:	e583a20e 	bge	fp,r22,22ec4 <___svfprintf_internal_r+0x1d50>
   2203c:	014000f4 	movhi	r5,3
   22040:	294e3384 	addi	r5,r5,14542
   22044:	dc403015 	stw	r17,192(sp)
   22048:	d9402b15 	stw	r5,172(sp)
   2204c:	b023883a 	mov	r17,r22
   22050:	050001c4 	movi	r20,7
   22054:	902d883a 	mov	r22,r18
   22058:	8025883a 	mov	r18,r16
   2205c:	dc002c17 	ldw	r16,176(sp)
   22060:	00000306 	br	22070 <___svfprintf_internal_r+0xefc>
   22064:	8c7ffc04 	addi	r17,r17,-16
   22068:	42000204 	addi	r8,r8,8
   2206c:	e440110e 	bge	fp,r17,220b4 <___svfprintf_internal_r+0xf40>
   22070:	18c00404 	addi	r3,r3,16
   22074:	10800044 	addi	r2,r2,1
   22078:	45400015 	stw	r21,0(r8)
   2207c:	47000115 	stw	fp,4(r8)
   22080:	d8c02015 	stw	r3,128(sp)
   22084:	d8801f15 	stw	r2,124(sp)
   22088:	a0bff60e 	bge	r20,r2,22064 <___svfprintf_internal_r+0xef0>
   2208c:	d9801e04 	addi	r6,sp,120
   22090:	800b883a 	mov	r5,r16
   22094:	9809883a 	mov	r4,r19
   22098:	002a84c0 	call	2a84c <__ssprint_r>
   2209c:	103d1a1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   220a0:	8c7ffc04 	addi	r17,r17,-16
   220a4:	d8c02017 	ldw	r3,128(sp)
   220a8:	d8801f17 	ldw	r2,124(sp)
   220ac:	da000404 	addi	r8,sp,16
   220b0:	e47fef16 	blt	fp,r17,22070 <___svfprintf_internal_r+0xefc>
   220b4:	9021883a 	mov	r16,r18
   220b8:	b025883a 	mov	r18,r22
   220bc:	882d883a 	mov	r22,r17
   220c0:	dc403017 	ldw	r17,192(sp)
   220c4:	d9002b17 	ldw	r4,172(sp)
   220c8:	1d87883a 	add	r3,r3,r22
   220cc:	10800044 	addi	r2,r2,1
   220d0:	41000015 	stw	r4,0(r8)
   220d4:	45800115 	stw	r22,4(r8)
   220d8:	d8c02015 	stw	r3,128(sp)
   220dc:	d8801f15 	stw	r2,124(sp)
   220e0:	010001c4 	movi	r4,7
   220e4:	20819a16 	blt	r4,r2,22750 <___svfprintf_internal_r+0x15dc>
   220e8:	42000204 	addi	r8,r8,8
   220ec:	003e3506 	br	219c4 <___svfprintf_internal_r+0x850>
   220f0:	d9403317 	ldw	r5,204(sp)
   220f4:	00800044 	movi	r2,1
   220f8:	18c00044 	addi	r3,r3,1
   220fc:	1141710e 	bge	r2,r5,226c4 <___svfprintf_internal_r+0x1550>
   22100:	dc401f17 	ldw	r17,124(sp)
   22104:	00800044 	movi	r2,1
   22108:	40800115 	stw	r2,4(r8)
   2210c:	8c400044 	addi	r17,r17,1
   22110:	44000015 	stw	r16,0(r8)
   22114:	d8c02015 	stw	r3,128(sp)
   22118:	dc401f15 	stw	r17,124(sp)
   2211c:	008001c4 	movi	r2,7
   22120:	14417416 	blt	r2,r17,226f4 <___svfprintf_internal_r+0x1580>
   22124:	42000204 	addi	r8,r8,8
   22128:	d8803817 	ldw	r2,224(sp)
   2212c:	d9003417 	ldw	r4,208(sp)
   22130:	8c400044 	addi	r17,r17,1
   22134:	10c7883a 	add	r3,r2,r3
   22138:	40800115 	stw	r2,4(r8)
   2213c:	41000015 	stw	r4,0(r8)
   22140:	d8c02015 	stw	r3,128(sp)
   22144:	dc401f15 	stw	r17,124(sp)
   22148:	008001c4 	movi	r2,7
   2214c:	14417216 	blt	r2,r17,22718 <___svfprintf_internal_r+0x15a4>
   22150:	45800204 	addi	r22,r8,8
   22154:	d9003617 	ldw	r4,216(sp)
   22158:	d9403717 	ldw	r5,220(sp)
   2215c:	000d883a 	mov	r6,zero
   22160:	000f883a 	mov	r7,zero
   22164:	d8c03d15 	stw	r3,244(sp)
   22168:	002f9cc0 	call	2f9cc <__eqdf2>
   2216c:	d8c03d17 	ldw	r3,244(sp)
   22170:	1000b326 	beq	r2,zero,22440 <___svfprintf_internal_r+0x12cc>
   22174:	d9403317 	ldw	r5,204(sp)
   22178:	84000044 	addi	r16,r16,1
   2217c:	8c400044 	addi	r17,r17,1
   22180:	28bfffc4 	addi	r2,r5,-1
   22184:	1887883a 	add	r3,r3,r2
   22188:	b0800115 	stw	r2,4(r22)
   2218c:	b4000015 	stw	r16,0(r22)
   22190:	d8c02015 	stw	r3,128(sp)
   22194:	dc401f15 	stw	r17,124(sp)
   22198:	008001c4 	movi	r2,7
   2219c:	1440d216 	blt	r2,r17,224e8 <___svfprintf_internal_r+0x1374>
   221a0:	b5800204 	addi	r22,r22,8
   221a4:	d9003b17 	ldw	r4,236(sp)
   221a8:	df0022c4 	addi	fp,sp,139
   221ac:	8c400044 	addi	r17,r17,1
   221b0:	20c7883a 	add	r3,r4,r3
   221b4:	b7000015 	stw	fp,0(r22)
   221b8:	b1000115 	stw	r4,4(r22)
   221bc:	d8c02015 	stw	r3,128(sp)
   221c0:	dc401f15 	stw	r17,124(sp)
   221c4:	008001c4 	movi	r2,7
   221c8:	14400e16 	blt	r2,r17,22204 <___svfprintf_internal_r+0x1090>
   221cc:	b2000204 	addi	r8,r22,8
   221d0:	003e3c06 	br	21ac4 <___svfprintf_internal_r+0x950>
   221d4:	010000f4 	movhi	r4,3
   221d8:	210e3384 	addi	r4,r4,14542
   221dc:	d9002b15 	stw	r4,172(sp)
   221e0:	d9002b17 	ldw	r4,172(sp)
   221e4:	1c07883a 	add	r3,r3,r16
   221e8:	44000115 	stw	r16,4(r8)
   221ec:	41000015 	stw	r4,0(r8)
   221f0:	10800044 	addi	r2,r2,1
   221f4:	d8c02015 	stw	r3,128(sp)
   221f8:	d8801f15 	stw	r2,124(sp)
   221fc:	010001c4 	movi	r4,7
   22200:	20be2f0e 	bge	r4,r2,21ac0 <___svfprintf_internal_r+0x94c>
   22204:	d9402c17 	ldw	r5,176(sp)
   22208:	d9801e04 	addi	r6,sp,120
   2220c:	9809883a 	mov	r4,r19
   22210:	002a84c0 	call	2a84c <__ssprint_r>
   22214:	103cbc1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22218:	d8c02017 	ldw	r3,128(sp)
   2221c:	da000404 	addi	r8,sp,16
   22220:	003e2806 	br	21ac4 <___svfprintf_internal_r+0x950>
   22224:	d9402c17 	ldw	r5,176(sp)
   22228:	d9801e04 	addi	r6,sp,120
   2222c:	9809883a 	mov	r4,r19
   22230:	002a84c0 	call	2a84c <__ssprint_r>
   22234:	103e5f26 	beq	r2,zero,21bb4 <___svfprintf_internal_r+0xa40>
   22238:	003cb306 	br	21508 <___svfprintf_internal_r+0x394>
   2223c:	d9402c17 	ldw	r5,176(sp)
   22240:	d9801e04 	addi	r6,sp,120
   22244:	9809883a 	mov	r4,r19
   22248:	002a84c0 	call	2a84c <__ssprint_r>
   2224c:	103cae1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22250:	d8c02017 	ldw	r3,128(sp)
   22254:	da000404 	addi	r8,sp,16
   22258:	003e0d06 	br	21a90 <___svfprintf_internal_r+0x91c>
   2225c:	d9402c17 	ldw	r5,176(sp)
   22260:	d9801e04 	addi	r6,sp,120
   22264:	9809883a 	mov	r4,r19
   22268:	002a84c0 	call	2a84c <__ssprint_r>
   2226c:	103ca61e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22270:	d8c02017 	ldw	r3,128(sp)
   22274:	da000404 	addi	r8,sp,16
   22278:	003dc106 	br	21980 <___svfprintf_internal_r+0x80c>
   2227c:	d9402c17 	ldw	r5,176(sp)
   22280:	d9801e04 	addi	r6,sp,120
   22284:	9809883a 	mov	r4,r19
   22288:	002a84c0 	call	2a84c <__ssprint_r>
   2228c:	103c9e1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22290:	d8c02017 	ldw	r3,128(sp)
   22294:	da000404 	addi	r8,sp,16
   22298:	003dc706 	br	219b8 <___svfprintf_internal_r+0x844>
   2229c:	d8802917 	ldw	r2,164(sp)
   222a0:	d8002785 	stb	zero,158(sp)
   222a4:	103f0816 	blt	r2,zero,21ec8 <___svfprintf_internal_r+0xd54>
   222a8:	00ffdfc4 	movi	r3,-129
   222ac:	a584b03a 	or	r2,r20,r22
   222b0:	90e4703a 	and	r18,r18,r3
   222b4:	103c8126 	beq	r2,zero,214bc <___svfprintf_internal_r+0x348>
   222b8:	0039883a 	mov	fp,zero
   222bc:	003e7606 	br	21c98 <___svfprintf_internal_r+0xb24>
   222c0:	9080040c 	andi	r2,r18,16
   222c4:	10013d26 	beq	r2,zero,227bc <___svfprintf_internal_r+0x1648>
   222c8:	d9002d17 	ldw	r4,180(sp)
   222cc:	d9402917 	ldw	r5,164(sp)
   222d0:	d8002785 	stb	zero,158(sp)
   222d4:	20800104 	addi	r2,r4,4
   222d8:	25000017 	ldw	r20,0(r4)
   222dc:	002d883a 	mov	r22,zero
   222e0:	28013f16 	blt	r5,zero,227e0 <___svfprintf_internal_r+0x166c>
   222e4:	00ffdfc4 	movi	r3,-129
   222e8:	d8802d15 	stw	r2,180(sp)
   222ec:	90e4703a 	and	r18,r18,r3
   222f0:	a03d2b26 	beq	r20,zero,217a0 <___svfprintf_internal_r+0x62c>
   222f4:	0039883a 	mov	fp,zero
   222f8:	003d2e06 	br	217b4 <___svfprintf_internal_r+0x640>
   222fc:	dc402617 	ldw	r17,152(sp)
   22300:	0441830e 	bge	zero,r17,22910 <___svfprintf_internal_r+0x179c>
   22304:	dc403217 	ldw	r17,200(sp)
   22308:	d8803317 	ldw	r2,204(sp)
   2230c:	1440010e 	bge	r2,r17,22314 <___svfprintf_internal_r+0x11a0>
   22310:	1023883a 	mov	r17,r2
   22314:	04400a0e 	bge	zero,r17,22340 <___svfprintf_internal_r+0x11cc>
   22318:	d8801f17 	ldw	r2,124(sp)
   2231c:	1c47883a 	add	r3,r3,r17
   22320:	44000015 	stw	r16,0(r8)
   22324:	10800044 	addi	r2,r2,1
   22328:	44400115 	stw	r17,4(r8)
   2232c:	d8c02015 	stw	r3,128(sp)
   22330:	d8801f15 	stw	r2,124(sp)
   22334:	010001c4 	movi	r4,7
   22338:	20827516 	blt	r4,r2,22d10 <___svfprintf_internal_r+0x1b9c>
   2233c:	42000204 	addi	r8,r8,8
   22340:	88027b16 	blt	r17,zero,22d30 <___svfprintf_internal_r+0x1bbc>
   22344:	d9003217 	ldw	r4,200(sp)
   22348:	2463c83a 	sub	r17,r4,r17
   2234c:	0440990e 	bge	zero,r17,225b4 <___svfprintf_internal_r+0x1440>
   22350:	05800404 	movi	r22,16
   22354:	d8801f17 	ldw	r2,124(sp)
   22358:	b441530e 	bge	r22,r17,228a8 <___svfprintf_internal_r+0x1734>
   2235c:	010000f4 	movhi	r4,3
   22360:	210e3384 	addi	r4,r4,14542
   22364:	d9002b15 	stw	r4,172(sp)
   22368:	070001c4 	movi	fp,7
   2236c:	dd002c17 	ldw	r20,176(sp)
   22370:	00000306 	br	22380 <___svfprintf_internal_r+0x120c>
   22374:	42000204 	addi	r8,r8,8
   22378:	8c7ffc04 	addi	r17,r17,-16
   2237c:	b4414d0e 	bge	r22,r17,228b4 <___svfprintf_internal_r+0x1740>
   22380:	18c00404 	addi	r3,r3,16
   22384:	10800044 	addi	r2,r2,1
   22388:	45400015 	stw	r21,0(r8)
   2238c:	45800115 	stw	r22,4(r8)
   22390:	d8c02015 	stw	r3,128(sp)
   22394:	d8801f15 	stw	r2,124(sp)
   22398:	e0bff60e 	bge	fp,r2,22374 <___svfprintf_internal_r+0x1200>
   2239c:	d9801e04 	addi	r6,sp,120
   223a0:	a00b883a 	mov	r5,r20
   223a4:	9809883a 	mov	r4,r19
   223a8:	002a84c0 	call	2a84c <__ssprint_r>
   223ac:	103c561e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   223b0:	d8c02017 	ldw	r3,128(sp)
   223b4:	d8801f17 	ldw	r2,124(sp)
   223b8:	da000404 	addi	r8,sp,16
   223bc:	003fee06 	br	22378 <___svfprintf_internal_r+0x1204>
   223c0:	d9402c17 	ldw	r5,176(sp)
   223c4:	d9801e04 	addi	r6,sp,120
   223c8:	9809883a 	mov	r4,r19
   223cc:	002a84c0 	call	2a84c <__ssprint_r>
   223d0:	103c4d1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   223d4:	d8c02017 	ldw	r3,128(sp)
   223d8:	df002787 	ldb	fp,158(sp)
   223dc:	da000404 	addi	r8,sp,16
   223e0:	003d5a06 	br	2194c <___svfprintf_internal_r+0x7d8>
   223e4:	9080040c 	andi	r2,r18,16
   223e8:	10005c26 	beq	r2,zero,2255c <___svfprintf_internal_r+0x13e8>
   223ec:	d9402d17 	ldw	r5,180(sp)
   223f0:	d8c02917 	ldw	r3,164(sp)
   223f4:	d8002785 	stb	zero,158(sp)
   223f8:	28800104 	addi	r2,r5,4
   223fc:	2d000017 	ldw	r20,0(r5)
   22400:	002d883a 	mov	r22,zero
   22404:	18005e16 	blt	r3,zero,22580 <___svfprintf_internal_r+0x140c>
   22408:	00ffdfc4 	movi	r3,-129
   2240c:	d8802d15 	stw	r2,180(sp)
   22410:	90e4703a 	and	r18,r18,r3
   22414:	0039883a 	mov	fp,zero
   22418:	a03dfe26 	beq	r20,zero,21c14 <___svfprintf_internal_r+0xaa0>
   2241c:	00800244 	movi	r2,9
   22420:	153cb336 	bltu	r2,r20,216f0 <___svfprintf_internal_r+0x57c>
   22424:	a5000c04 	addi	r20,r20,48
   22428:	dc001dc4 	addi	r16,sp,119
   2242c:	dd001dc5 	stb	r20,119(sp)
   22430:	d8c02817 	ldw	r3,160(sp)
   22434:	1c07c83a 	sub	r3,r3,r16
   22438:	d8c02e15 	stw	r3,184(sp)
   2243c:	003cf506 	br	21814 <___svfprintf_internal_r+0x6a0>
   22440:	d8803317 	ldw	r2,204(sp)
   22444:	143fffc4 	addi	r16,r2,-1
   22448:	043f560e 	bge	zero,r16,221a4 <___svfprintf_internal_r+0x1030>
   2244c:	07000404 	movi	fp,16
   22450:	e403530e 	bge	fp,r16,231a0 <___svfprintf_internal_r+0x202c>
   22454:	014000f4 	movhi	r5,3
   22458:	294e3384 	addi	r5,r5,14542
   2245c:	d9402b15 	stw	r5,172(sp)
   22460:	01c001c4 	movi	r7,7
   22464:	dd002c17 	ldw	r20,176(sp)
   22468:	00000306 	br	22478 <___svfprintf_internal_r+0x1304>
   2246c:	843ffc04 	addi	r16,r16,-16
   22470:	b5800204 	addi	r22,r22,8
   22474:	e400130e 	bge	fp,r16,224c4 <___svfprintf_internal_r+0x1350>
   22478:	18c00404 	addi	r3,r3,16
   2247c:	8c400044 	addi	r17,r17,1
   22480:	b5400015 	stw	r21,0(r22)
   22484:	b7000115 	stw	fp,4(r22)
   22488:	d8c02015 	stw	r3,128(sp)
   2248c:	dc401f15 	stw	r17,124(sp)
   22490:	3c7ff60e 	bge	r7,r17,2246c <___svfprintf_internal_r+0x12f8>
   22494:	d9801e04 	addi	r6,sp,120
   22498:	a00b883a 	mov	r5,r20
   2249c:	9809883a 	mov	r4,r19
   224a0:	d9c03d15 	stw	r7,244(sp)
   224a4:	002a84c0 	call	2a84c <__ssprint_r>
   224a8:	d9c03d17 	ldw	r7,244(sp)
   224ac:	103c161e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   224b0:	843ffc04 	addi	r16,r16,-16
   224b4:	d8c02017 	ldw	r3,128(sp)
   224b8:	dc401f17 	ldw	r17,124(sp)
   224bc:	dd800404 	addi	r22,sp,16
   224c0:	e43fed16 	blt	fp,r16,22478 <___svfprintf_internal_r+0x1304>
   224c4:	d8802b17 	ldw	r2,172(sp)
   224c8:	1c07883a 	add	r3,r3,r16
   224cc:	8c400044 	addi	r17,r17,1
   224d0:	b0800015 	stw	r2,0(r22)
   224d4:	b4000115 	stw	r16,4(r22)
   224d8:	d8c02015 	stw	r3,128(sp)
   224dc:	dc401f15 	stw	r17,124(sp)
   224e0:	008001c4 	movi	r2,7
   224e4:	147f2e0e 	bge	r2,r17,221a0 <___svfprintf_internal_r+0x102c>
   224e8:	d9402c17 	ldw	r5,176(sp)
   224ec:	d9801e04 	addi	r6,sp,120
   224f0:	9809883a 	mov	r4,r19
   224f4:	002a84c0 	call	2a84c <__ssprint_r>
   224f8:	103c031e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   224fc:	d8c02017 	ldw	r3,128(sp)
   22500:	dc401f17 	ldw	r17,124(sp)
   22504:	dd800404 	addi	r22,sp,16
   22508:	003f2606 	br	221a4 <___svfprintf_internal_r+0x1030>
   2250c:	9080040c 	andi	r2,r18,16
   22510:	1000c326 	beq	r2,zero,22820 <___svfprintf_internal_r+0x16ac>
   22514:	d8802d17 	ldw	r2,180(sp)
   22518:	15000017 	ldw	r20,0(r2)
   2251c:	10800104 	addi	r2,r2,4
   22520:	d8802d15 	stw	r2,180(sp)
   22524:	a02dd7fa 	srai	r22,r20,31
   22528:	b005883a 	mov	r2,r22
   2252c:	103c680e 	bge	r2,zero,216d0 <___svfprintf_internal_r+0x55c>
   22530:	0529c83a 	sub	r20,zero,r20
   22534:	a004c03a 	cmpne	r2,r20,zero
   22538:	05adc83a 	sub	r22,zero,r22
   2253c:	b0adc83a 	sub	r22,r22,r2
   22540:	d8802917 	ldw	r2,164(sp)
   22544:	07000b44 	movi	fp,45
   22548:	df002785 	stb	fp,158(sp)
   2254c:	10022e16 	blt	r2,zero,22e08 <___svfprintf_internal_r+0x1c94>
   22550:	00bfdfc4 	movi	r2,-129
   22554:	90a4703a 	and	r18,r18,r2
   22558:	003c6406 	br	216ec <___svfprintf_internal_r+0x578>
   2255c:	9080100c 	andi	r2,r18,64
   22560:	d8002785 	stb	zero,158(sp)
   22564:	10012526 	beq	r2,zero,229fc <___svfprintf_internal_r+0x1888>
   22568:	d9002d17 	ldw	r4,180(sp)
   2256c:	d9402917 	ldw	r5,164(sp)
   22570:	002d883a 	mov	r22,zero
   22574:	20800104 	addi	r2,r4,4
   22578:	2500000b 	ldhu	r20,0(r4)
   2257c:	283fa20e 	bge	r5,zero,22408 <___svfprintf_internal_r+0x1294>
   22580:	d8802d15 	stw	r2,180(sp)
   22584:	0039883a 	mov	fp,zero
   22588:	a584b03a 	or	r2,r20,r22
   2258c:	103c571e 	bne	r2,zero,216ec <___svfprintf_internal_r+0x578>
   22590:	00800044 	movi	r2,1
   22594:	003e5006 	br	21ed8 <___svfprintf_internal_r+0xd64>
   22598:	d9402c17 	ldw	r5,176(sp)
   2259c:	d9801e04 	addi	r6,sp,120
   225a0:	9809883a 	mov	r4,r19
   225a4:	002a84c0 	call	2a84c <__ssprint_r>
   225a8:	103bd71e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   225ac:	d8c02017 	ldw	r3,128(sp)
   225b0:	da000404 	addi	r8,sp,16
   225b4:	d9003217 	ldw	r4,200(sp)
   225b8:	d8802617 	ldw	r2,152(sp)
   225bc:	d9403317 	ldw	r5,204(sp)
   225c0:	8123883a 	add	r17,r16,r4
   225c4:	11400216 	blt	r2,r5,225d0 <___svfprintf_internal_r+0x145c>
   225c8:	9100004c 	andi	r4,r18,1
   225cc:	20000d26 	beq	r4,zero,22604 <___svfprintf_internal_r+0x1490>
   225d0:	d9003817 	ldw	r4,224(sp)
   225d4:	d9403417 	ldw	r5,208(sp)
   225d8:	1907883a 	add	r3,r3,r4
   225dc:	d9001f17 	ldw	r4,124(sp)
   225e0:	41400015 	stw	r5,0(r8)
   225e4:	d9403817 	ldw	r5,224(sp)
   225e8:	21000044 	addi	r4,r4,1
   225ec:	d8c02015 	stw	r3,128(sp)
   225f0:	41400115 	stw	r5,4(r8)
   225f4:	d9001f15 	stw	r4,124(sp)
   225f8:	014001c4 	movi	r5,7
   225fc:	2901dc16 	blt	r5,r4,22d70 <___svfprintf_internal_r+0x1bfc>
   22600:	42000204 	addi	r8,r8,8
   22604:	d9003317 	ldw	r4,204(sp)
   22608:	8121883a 	add	r16,r16,r4
   2260c:	2085c83a 	sub	r2,r4,r2
   22610:	8461c83a 	sub	r16,r16,r17
   22614:	1400010e 	bge	r2,r16,2261c <___svfprintf_internal_r+0x14a8>
   22618:	1021883a 	mov	r16,r2
   2261c:	04000a0e 	bge	zero,r16,22648 <___svfprintf_internal_r+0x14d4>
   22620:	d9001f17 	ldw	r4,124(sp)
   22624:	1c07883a 	add	r3,r3,r16
   22628:	44400015 	stw	r17,0(r8)
   2262c:	21000044 	addi	r4,r4,1
   22630:	44000115 	stw	r16,4(r8)
   22634:	d8c02015 	stw	r3,128(sp)
   22638:	d9001f15 	stw	r4,124(sp)
   2263c:	014001c4 	movi	r5,7
   22640:	2901e616 	blt	r5,r4,22ddc <___svfprintf_internal_r+0x1c68>
   22644:	42000204 	addi	r8,r8,8
   22648:	8001f616 	blt	r16,zero,22e24 <___svfprintf_internal_r+0x1cb0>
   2264c:	1421c83a 	sub	r16,r2,r16
   22650:	043d1c0e 	bge	zero,r16,21ac4 <___svfprintf_internal_r+0x950>
   22654:	04400404 	movi	r17,16
   22658:	d8801f17 	ldw	r2,124(sp)
   2265c:	8c3edd0e 	bge	r17,r16,221d4 <___svfprintf_internal_r+0x1060>
   22660:	014000f4 	movhi	r5,3
   22664:	294e3384 	addi	r5,r5,14542
   22668:	d9402b15 	stw	r5,172(sp)
   2266c:	058001c4 	movi	r22,7
   22670:	dd002c17 	ldw	r20,176(sp)
   22674:	00000306 	br	22684 <___svfprintf_internal_r+0x1510>
   22678:	42000204 	addi	r8,r8,8
   2267c:	843ffc04 	addi	r16,r16,-16
   22680:	8c3ed70e 	bge	r17,r16,221e0 <___svfprintf_internal_r+0x106c>
   22684:	18c00404 	addi	r3,r3,16
   22688:	10800044 	addi	r2,r2,1
   2268c:	45400015 	stw	r21,0(r8)
   22690:	44400115 	stw	r17,4(r8)
   22694:	d8c02015 	stw	r3,128(sp)
   22698:	d8801f15 	stw	r2,124(sp)
   2269c:	b0bff60e 	bge	r22,r2,22678 <___svfprintf_internal_r+0x1504>
   226a0:	d9801e04 	addi	r6,sp,120
   226a4:	a00b883a 	mov	r5,r20
   226a8:	9809883a 	mov	r4,r19
   226ac:	002a84c0 	call	2a84c <__ssprint_r>
   226b0:	103b951e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   226b4:	d8c02017 	ldw	r3,128(sp)
   226b8:	d8801f17 	ldw	r2,124(sp)
   226bc:	da000404 	addi	r8,sp,16
   226c0:	003fee06 	br	2267c <___svfprintf_internal_r+0x1508>
   226c4:	9088703a 	and	r4,r18,r2
   226c8:	203e8d1e 	bne	r4,zero,22100 <___svfprintf_internal_r+0xf8c>
   226cc:	dc401f17 	ldw	r17,124(sp)
   226d0:	40800115 	stw	r2,4(r8)
   226d4:	44000015 	stw	r16,0(r8)
   226d8:	8c400044 	addi	r17,r17,1
   226dc:	d8c02015 	stw	r3,128(sp)
   226e0:	dc401f15 	stw	r17,124(sp)
   226e4:	008001c4 	movi	r2,7
   226e8:	147f7f16 	blt	r2,r17,224e8 <___svfprintf_internal_r+0x1374>
   226ec:	45800204 	addi	r22,r8,8
   226f0:	003eac06 	br	221a4 <___svfprintf_internal_r+0x1030>
   226f4:	d9402c17 	ldw	r5,176(sp)
   226f8:	d9801e04 	addi	r6,sp,120
   226fc:	9809883a 	mov	r4,r19
   22700:	002a84c0 	call	2a84c <__ssprint_r>
   22704:	103b801e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22708:	d8c02017 	ldw	r3,128(sp)
   2270c:	dc401f17 	ldw	r17,124(sp)
   22710:	da000404 	addi	r8,sp,16
   22714:	003e8406 	br	22128 <___svfprintf_internal_r+0xfb4>
   22718:	d9402c17 	ldw	r5,176(sp)
   2271c:	d9801e04 	addi	r6,sp,120
   22720:	9809883a 	mov	r4,r19
   22724:	002a84c0 	call	2a84c <__ssprint_r>
   22728:	103b771e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   2272c:	d8c02017 	ldw	r3,128(sp)
   22730:	dc401f17 	ldw	r17,124(sp)
   22734:	dd800404 	addi	r22,sp,16
   22738:	003e8606 	br	22154 <___svfprintf_internal_r+0xfe0>
   2273c:	0029883a 	mov	r20,zero
   22740:	a5000c04 	addi	r20,r20,48
   22744:	dc001dc4 	addi	r16,sp,119
   22748:	dd001dc5 	stb	r20,119(sp)
   2274c:	003f3806 	br	22430 <___svfprintf_internal_r+0x12bc>
   22750:	d9402c17 	ldw	r5,176(sp)
   22754:	d9801e04 	addi	r6,sp,120
   22758:	9809883a 	mov	r4,r19
   2275c:	002a84c0 	call	2a84c <__ssprint_r>
   22760:	103b691e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22764:	d8c02017 	ldw	r3,128(sp)
   22768:	da000404 	addi	r8,sp,16
   2276c:	003c9506 	br	219c4 <___svfprintf_internal_r+0x850>
   22770:	d9003617 	ldw	r4,216(sp)
   22774:	d9403717 	ldw	r5,220(sp)
   22778:	da003e15 	stw	r8,248(sp)
   2277c:	002a56c0 	call	2a56c <__fpclassifyd>
   22780:	da003e17 	ldw	r8,248(sp)
   22784:	1000bd1e 	bne	r2,zero,22a7c <___svfprintf_internal_r+0x1908>
   22788:	008011c4 	movi	r2,71
   2278c:	14411e0e 	bge	r2,r17,22c08 <___svfprintf_internal_r+0x1a94>
   22790:	040000f4 	movhi	r16,3
   22794:	840e2604 	addi	r16,r16,14488
   22798:	00c000c4 	movi	r3,3
   2279c:	00bfdfc4 	movi	r2,-129
   227a0:	d8c02a15 	stw	r3,168(sp)
   227a4:	90a4703a 	and	r18,r18,r2
   227a8:	df002783 	ldbu	fp,158(sp)
   227ac:	d8c02e15 	stw	r3,184(sp)
   227b0:	d8002915 	stw	zero,164(sp)
   227b4:	d8003215 	stw	zero,200(sp)
   227b8:	003c1c06 	br	2182c <___svfprintf_internal_r+0x6b8>
   227bc:	9080100c 	andi	r2,r18,64
   227c0:	d8002785 	stb	zero,158(sp)
   227c4:	10009426 	beq	r2,zero,22a18 <___svfprintf_internal_r+0x18a4>
   227c8:	d8c02d17 	ldw	r3,180(sp)
   227cc:	d9002917 	ldw	r4,164(sp)
   227d0:	002d883a 	mov	r22,zero
   227d4:	18800104 	addi	r2,r3,4
   227d8:	1d00000b 	ldhu	r20,0(r3)
   227dc:	203ec10e 	bge	r4,zero,222e4 <___svfprintf_internal_r+0x1170>
   227e0:	a586b03a 	or	r3,r20,r22
   227e4:	d8802d15 	stw	r2,180(sp)
   227e8:	183ec21e 	bne	r3,zero,222f4 <___svfprintf_internal_r+0x1180>
   227ec:	0039883a 	mov	fp,zero
   227f0:	0005883a 	mov	r2,zero
   227f4:	003db806 	br	21ed8 <___svfprintf_internal_r+0xd64>
   227f8:	d8802d17 	ldw	r2,180(sp)
   227fc:	d8c02d17 	ldw	r3,180(sp)
   22800:	d9002d17 	ldw	r4,180(sp)
   22804:	10800017 	ldw	r2,0(r2)
   22808:	18c00117 	ldw	r3,4(r3)
   2280c:	21000204 	addi	r4,r4,8
   22810:	d8803615 	stw	r2,216(sp)
   22814:	d8c03715 	stw	r3,220(sp)
   22818:	d9002d15 	stw	r4,180(sp)
   2281c:	003b8206 	br	21628 <___svfprintf_internal_r+0x4b4>
   22820:	9080100c 	andi	r2,r18,64
   22824:	10010726 	beq	r2,zero,22c44 <___svfprintf_internal_r+0x1ad0>
   22828:	d8c02d17 	ldw	r3,180(sp)
   2282c:	1d00000f 	ldh	r20,0(r3)
   22830:	18c00104 	addi	r3,r3,4
   22834:	d8c02d15 	stw	r3,180(sp)
   22838:	a02dd7fa 	srai	r22,r20,31
   2283c:	b005883a 	mov	r2,r22
   22840:	003ba206 	br	216cc <___svfprintf_internal_r+0x558>
   22844:	9080100c 	andi	r2,r18,64
   22848:	10010526 	beq	r2,zero,22c60 <___svfprintf_internal_r+0x1aec>
   2284c:	d9002d17 	ldw	r4,180(sp)
   22850:	002d883a 	mov	r22,zero
   22854:	2500000b 	ldhu	r20,0(r4)
   22858:	21000104 	addi	r4,r4,4
   2285c:	d9002d15 	stw	r4,180(sp)
   22860:	003cfe06 	br	21c5c <___svfprintf_internal_r+0xae8>
   22864:	bc400007 	ldb	r17,0(r23)
   22868:	003a9606 	br	212c4 <___svfprintf_internal_r+0x150>
   2286c:	9080040c 	andi	r2,r18,16
   22870:	10010126 	beq	r2,zero,22c78 <___svfprintf_internal_r+0x1b04>
   22874:	d9402d17 	ldw	r5,180(sp)
   22878:	d8c02f17 	ldw	r3,188(sp)
   2287c:	28800017 	ldw	r2,0(r5)
   22880:	29400104 	addi	r5,r5,4
   22884:	d9402d15 	stw	r5,180(sp)
   22888:	10c00015 	stw	r3,0(r2)
   2288c:	003a6406 	br	21220 <___svfprintf_internal_r+0xac>
   22890:	d9002917 	ldw	r4,164(sp)
   22894:	d8002785 	stb	zero,158(sp)
   22898:	203d8d16 	blt	r4,zero,21ed0 <___svfprintf_internal_r+0xd5c>
   2289c:	00bfdfc4 	movi	r2,-129
   228a0:	90a4703a 	and	r18,r18,r2
   228a4:	003b0506 	br	214bc <___svfprintf_internal_r+0x348>
   228a8:	014000f4 	movhi	r5,3
   228ac:	294e3384 	addi	r5,r5,14542
   228b0:	d9402b15 	stw	r5,172(sp)
   228b4:	d9402b17 	ldw	r5,172(sp)
   228b8:	1c47883a 	add	r3,r3,r17
   228bc:	10800044 	addi	r2,r2,1
   228c0:	41400015 	stw	r5,0(r8)
   228c4:	44400115 	stw	r17,4(r8)
   228c8:	d8c02015 	stw	r3,128(sp)
   228cc:	d8801f15 	stw	r2,124(sp)
   228d0:	010001c4 	movi	r4,7
   228d4:	20bf3016 	blt	r4,r2,22598 <___svfprintf_internal_r+0x1424>
   228d8:	42000204 	addi	r8,r8,8
   228dc:	003f3506 	br	225b4 <___svfprintf_internal_r+0x1440>
   228e0:	010000f4 	movhi	r4,3
   228e4:	210e3384 	addi	r4,r4,14542
   228e8:	d9002b15 	stw	r4,172(sp)
   228ec:	003c5e06 	br	21a68 <___svfprintf_internal_r+0x8f4>
   228f0:	d9402c17 	ldw	r5,176(sp)
   228f4:	d9801e04 	addi	r6,sp,120
   228f8:	9809883a 	mov	r4,r19
   228fc:	002a84c0 	call	2a84c <__ssprint_r>
   22900:	103b011e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22904:	d8c02017 	ldw	r3,128(sp)
   22908:	da000404 	addi	r8,sp,16
   2290c:	003d9306 	br	21f5c <___svfprintf_internal_r+0xde8>
   22910:	d8801f17 	ldw	r2,124(sp)
   22914:	014000f4 	movhi	r5,3
   22918:	01000044 	movi	r4,1
   2291c:	18c00044 	addi	r3,r3,1
   22920:	10800044 	addi	r2,r2,1
   22924:	294e3304 	addi	r5,r5,14540
   22928:	41000115 	stw	r4,4(r8)
   2292c:	41400015 	stw	r5,0(r8)
   22930:	d8c02015 	stw	r3,128(sp)
   22934:	d8801f15 	stw	r2,124(sp)
   22938:	010001c4 	movi	r4,7
   2293c:	2080b516 	blt	r4,r2,22c14 <___svfprintf_internal_r+0x1aa0>
   22940:	42000204 	addi	r8,r8,8
   22944:	8800041e 	bne	r17,zero,22958 <___svfprintf_internal_r+0x17e4>
   22948:	d8803317 	ldw	r2,204(sp)
   2294c:	1000021e 	bne	r2,zero,22958 <___svfprintf_internal_r+0x17e4>
   22950:	9080004c 	andi	r2,r18,1
   22954:	103c5b26 	beq	r2,zero,21ac4 <___svfprintf_internal_r+0x950>
   22958:	d9003817 	ldw	r4,224(sp)
   2295c:	d8801f17 	ldw	r2,124(sp)
   22960:	d9403417 	ldw	r5,208(sp)
   22964:	20c7883a 	add	r3,r4,r3
   22968:	10800044 	addi	r2,r2,1
   2296c:	41000115 	stw	r4,4(r8)
   22970:	41400015 	stw	r5,0(r8)
   22974:	d8c02015 	stw	r3,128(sp)
   22978:	d8801f15 	stw	r2,124(sp)
   2297c:	010001c4 	movi	r4,7
   22980:	20818016 	blt	r4,r2,22f84 <___svfprintf_internal_r+0x1e10>
   22984:	42000204 	addi	r8,r8,8
   22988:	0463c83a 	sub	r17,zero,r17
   2298c:	0440cb0e 	bge	zero,r17,22cbc <___svfprintf_internal_r+0x1b48>
   22990:	05800404 	movi	r22,16
   22994:	b440e80e 	bge	r22,r17,22d38 <___svfprintf_internal_r+0x1bc4>
   22998:	014000f4 	movhi	r5,3
   2299c:	294e3384 	addi	r5,r5,14542
   229a0:	d9402b15 	stw	r5,172(sp)
   229a4:	070001c4 	movi	fp,7
   229a8:	dd002c17 	ldw	r20,176(sp)
   229ac:	00000306 	br	229bc <___svfprintf_internal_r+0x1848>
   229b0:	42000204 	addi	r8,r8,8
   229b4:	8c7ffc04 	addi	r17,r17,-16
   229b8:	b440e20e 	bge	r22,r17,22d44 <___svfprintf_internal_r+0x1bd0>
   229bc:	18c00404 	addi	r3,r3,16
   229c0:	10800044 	addi	r2,r2,1
   229c4:	45400015 	stw	r21,0(r8)
   229c8:	45800115 	stw	r22,4(r8)
   229cc:	d8c02015 	stw	r3,128(sp)
   229d0:	d8801f15 	stw	r2,124(sp)
   229d4:	e0bff60e 	bge	fp,r2,229b0 <___svfprintf_internal_r+0x183c>
   229d8:	d9801e04 	addi	r6,sp,120
   229dc:	a00b883a 	mov	r5,r20
   229e0:	9809883a 	mov	r4,r19
   229e4:	002a84c0 	call	2a84c <__ssprint_r>
   229e8:	103ac71e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   229ec:	d8c02017 	ldw	r3,128(sp)
   229f0:	d8801f17 	ldw	r2,124(sp)
   229f4:	da000404 	addi	r8,sp,16
   229f8:	003fee06 	br	229b4 <___svfprintf_internal_r+0x1840>
   229fc:	d8c02d17 	ldw	r3,180(sp)
   22a00:	d9002917 	ldw	r4,164(sp)
   22a04:	002d883a 	mov	r22,zero
   22a08:	18800104 	addi	r2,r3,4
   22a0c:	1d000017 	ldw	r20,0(r3)
   22a10:	203e7d0e 	bge	r4,zero,22408 <___svfprintf_internal_r+0x1294>
   22a14:	003eda06 	br	22580 <___svfprintf_internal_r+0x140c>
   22a18:	d9402d17 	ldw	r5,180(sp)
   22a1c:	d8c02917 	ldw	r3,164(sp)
   22a20:	002d883a 	mov	r22,zero
   22a24:	28800104 	addi	r2,r5,4
   22a28:	2d000017 	ldw	r20,0(r5)
   22a2c:	183e2d0e 	bge	r3,zero,222e4 <___svfprintf_internal_r+0x1170>
   22a30:	003f6b06 	br	227e0 <___svfprintf_internal_r+0x166c>
   22a34:	d8c02d15 	stw	r3,180(sp)
   22a38:	0039883a 	mov	fp,zero
   22a3c:	003ed206 	br	22588 <___svfprintf_internal_r+0x1414>
   22a40:	bc400043 	ldbu	r17,1(r23)
   22a44:	94800814 	ori	r18,r18,32
   22a48:	bdc00044 	addi	r23,r23,1
   22a4c:	8c403fcc 	andi	r17,r17,255
   22a50:	8c40201c 	xori	r17,r17,128
   22a54:	8c7fe004 	addi	r17,r17,-128
   22a58:	003a1a06 	br	212c4 <___svfprintf_internal_r+0x150>
   22a5c:	d9402c17 	ldw	r5,176(sp)
   22a60:	d9801e04 	addi	r6,sp,120
   22a64:	9809883a 	mov	r4,r19
   22a68:	002a84c0 	call	2a84c <__ssprint_r>
   22a6c:	103aa61e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22a70:	d8c02017 	ldw	r3,128(sp)
   22a74:	da000404 	addi	r8,sp,16
   22a78:	003d4a06 	br	21fa4 <___svfprintf_internal_r+0xe30>
   22a7c:	d9002917 	ldw	r4,164(sp)
   22a80:	05bff7c4 	movi	r22,-33
   22a84:	00bfffc4 	movi	r2,-1
   22a88:	8dac703a 	and	r22,r17,r22
   22a8c:	20806a26 	beq	r4,r2,22c38 <___svfprintf_internal_r+0x1ac4>
   22a90:	008011c4 	movi	r2,71
   22a94:	b0813726 	beq	r22,r2,22f74 <___svfprintf_internal_r+0x1e00>
   22a98:	d9003717 	ldw	r4,220(sp)
   22a9c:	90c04014 	ori	r3,r18,256
   22aa0:	d8c02b15 	stw	r3,172(sp)
   22aa4:	20015d16 	blt	r4,zero,2301c <___svfprintf_internal_r+0x1ea8>
   22aa8:	dd003717 	ldw	r20,220(sp)
   22aac:	d8002a05 	stb	zero,168(sp)
   22ab0:	00801984 	movi	r2,102
   22ab4:	88814026 	beq	r17,r2,22fb8 <___svfprintf_internal_r+0x1e44>
   22ab8:	00801184 	movi	r2,70
   22abc:	88817126 	beq	r17,r2,23084 <___svfprintf_internal_r+0x1f10>
   22ac0:	00801144 	movi	r2,69
   22ac4:	b0816226 	beq	r22,r2,23050 <___svfprintf_internal_r+0x1edc>
   22ac8:	d8c02917 	ldw	r3,164(sp)
   22acc:	d8802104 	addi	r2,sp,132
   22ad0:	d8800315 	stw	r2,12(sp)
   22ad4:	d9403617 	ldw	r5,216(sp)
   22ad8:	d8802504 	addi	r2,sp,148
   22adc:	d8800215 	stw	r2,8(sp)
   22ae0:	d8802604 	addi	r2,sp,152
   22ae4:	d8c00015 	stw	r3,0(sp)
   22ae8:	d8800115 	stw	r2,4(sp)
   22aec:	01c00084 	movi	r7,2
   22af0:	a00d883a 	mov	r6,r20
   22af4:	9809883a 	mov	r4,r19
   22af8:	d8c03d15 	stw	r3,244(sp)
   22afc:	da003e15 	stw	r8,248(sp)
   22b00:	00259700 	call	25970 <_dtoa_r>
   22b04:	1021883a 	mov	r16,r2
   22b08:	008019c4 	movi	r2,103
   22b0c:	d8c03d17 	ldw	r3,244(sp)
   22b10:	da003e17 	ldw	r8,248(sp)
   22b14:	8880e726 	beq	r17,r2,22eb4 <___svfprintf_internal_r+0x1d40>
   22b18:	008011c4 	movi	r2,71
   22b1c:	8880d426 	beq	r17,r2,22e70 <___svfprintf_internal_r+0x1cfc>
   22b20:	80f9883a 	add	fp,r16,r3
   22b24:	d9003617 	ldw	r4,216(sp)
   22b28:	000d883a 	mov	r6,zero
   22b2c:	000f883a 	mov	r7,zero
   22b30:	a00b883a 	mov	r5,r20
   22b34:	da003e15 	stw	r8,248(sp)
   22b38:	002f9cc0 	call	2f9cc <__eqdf2>
   22b3c:	da003e17 	ldw	r8,248(sp)
   22b40:	1000e426 	beq	r2,zero,22ed4 <___svfprintf_internal_r+0x1d60>
   22b44:	d8802117 	ldw	r2,132(sp)
   22b48:	1700062e 	bgeu	r2,fp,22b64 <___svfprintf_internal_r+0x19f0>
   22b4c:	01000c04 	movi	r4,48
   22b50:	10c00044 	addi	r3,r2,1
   22b54:	d8c02115 	stw	r3,132(sp)
   22b58:	11000005 	stb	r4,0(r2)
   22b5c:	d8802117 	ldw	r2,132(sp)
   22b60:	173ffb36 	bltu	r2,fp,22b50 <___svfprintf_internal_r+0x19dc>
   22b64:	1405c83a 	sub	r2,r2,r16
   22b68:	d8803315 	stw	r2,204(sp)
   22b6c:	008011c4 	movi	r2,71
   22b70:	b080c526 	beq	r22,r2,22e88 <___svfprintf_internal_r+0x1d14>
   22b74:	00801944 	movi	r2,101
   22b78:	1441d90e 	bge	r2,r17,232e0 <___svfprintf_internal_r+0x216c>
   22b7c:	d8c02617 	ldw	r3,152(sp)
   22b80:	00801984 	movi	r2,102
   22b84:	d8c03215 	stw	r3,200(sp)
   22b88:	88813426 	beq	r17,r2,2305c <___svfprintf_internal_r+0x1ee8>
   22b8c:	d8c03217 	ldw	r3,200(sp)
   22b90:	d9003317 	ldw	r4,204(sp)
   22b94:	19012516 	blt	r3,r4,2302c <___svfprintf_internal_r+0x1eb8>
   22b98:	9480004c 	andi	r18,r18,1
   22b9c:	9001841e 	bne	r18,zero,231b0 <___svfprintf_internal_r+0x203c>
   22ba0:	1805883a 	mov	r2,r3
   22ba4:	1801cc16 	blt	r3,zero,232d8 <___svfprintf_internal_r+0x2164>
   22ba8:	d8c03217 	ldw	r3,200(sp)
   22bac:	044019c4 	movi	r17,103
   22bb0:	d8c02e15 	stw	r3,184(sp)
   22bb4:	df002a07 	ldb	fp,168(sp)
   22bb8:	e000a61e 	bne	fp,zero,22e54 <___svfprintf_internal_r+0x1ce0>
   22bbc:	df002783 	ldbu	fp,158(sp)
   22bc0:	d8802a15 	stw	r2,168(sp)
   22bc4:	dc802b17 	ldw	r18,172(sp)
   22bc8:	d8002915 	stw	zero,164(sp)
   22bcc:	003b1706 	br	2182c <___svfprintf_internal_r+0x6b8>
   22bd0:	040000f4 	movhi	r16,3
   22bd4:	840e2304 	addi	r16,r16,14476
   22bd8:	003aa606 	br	21674 <___svfprintf_internal_r+0x500>
   22bdc:	d9003917 	ldw	r4,228(sp)
   22be0:	04001004 	movi	r16,64
   22be4:	800b883a 	mov	r5,r16
   22be8:	00283500 	call	28350 <_malloc_r>
   22bec:	d9002c17 	ldw	r4,176(sp)
   22bf0:	20800015 	stw	r2,0(r4)
   22bf4:	20800415 	stw	r2,16(r4)
   22bf8:	1001cb26 	beq	r2,zero,23328 <___svfprintf_internal_r+0x21b4>
   22bfc:	d8802c17 	ldw	r2,176(sp)
   22c00:	14000515 	stw	r16,20(r2)
   22c04:	00397606 	br	211e0 <___svfprintf_internal_r+0x6c>
   22c08:	040000f4 	movhi	r16,3
   22c0c:	840e2504 	addi	r16,r16,14484
   22c10:	003ee106 	br	22798 <___svfprintf_internal_r+0x1624>
   22c14:	d9402c17 	ldw	r5,176(sp)
   22c18:	d9801e04 	addi	r6,sp,120
   22c1c:	9809883a 	mov	r4,r19
   22c20:	002a84c0 	call	2a84c <__ssprint_r>
   22c24:	103a381e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22c28:	dc402617 	ldw	r17,152(sp)
   22c2c:	d8c02017 	ldw	r3,128(sp)
   22c30:	da000404 	addi	r8,sp,16
   22c34:	003f4306 	br	22944 <___svfprintf_internal_r+0x17d0>
   22c38:	01400184 	movi	r5,6
   22c3c:	d9402915 	stw	r5,164(sp)
   22c40:	003f9506 	br	22a98 <___svfprintf_internal_r+0x1924>
   22c44:	d9002d17 	ldw	r4,180(sp)
   22c48:	25000017 	ldw	r20,0(r4)
   22c4c:	21000104 	addi	r4,r4,4
   22c50:	d9002d15 	stw	r4,180(sp)
   22c54:	a02dd7fa 	srai	r22,r20,31
   22c58:	b005883a 	mov	r2,r22
   22c5c:	003a9b06 	br	216cc <___svfprintf_internal_r+0x558>
   22c60:	d9402d17 	ldw	r5,180(sp)
   22c64:	002d883a 	mov	r22,zero
   22c68:	2d000017 	ldw	r20,0(r5)
   22c6c:	29400104 	addi	r5,r5,4
   22c70:	d9402d15 	stw	r5,180(sp)
   22c74:	003bf906 	br	21c5c <___svfprintf_internal_r+0xae8>
   22c78:	9480100c 	andi	r18,r18,64
   22c7c:	90006e26 	beq	r18,zero,22e38 <___svfprintf_internal_r+0x1cc4>
   22c80:	d9002d17 	ldw	r4,180(sp)
   22c84:	d9402f17 	ldw	r5,188(sp)
   22c88:	20800017 	ldw	r2,0(r4)
   22c8c:	21000104 	addi	r4,r4,4
   22c90:	d9002d15 	stw	r4,180(sp)
   22c94:	1140000d 	sth	r5,0(r2)
   22c98:	00396106 	br	21220 <___svfprintf_internal_r+0xac>
   22c9c:	d9402c17 	ldw	r5,176(sp)
   22ca0:	d9801e04 	addi	r6,sp,120
   22ca4:	9809883a 	mov	r4,r19
   22ca8:	002a84c0 	call	2a84c <__ssprint_r>
   22cac:	103a161e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22cb0:	d8c02017 	ldw	r3,128(sp)
   22cb4:	d8801f17 	ldw	r2,124(sp)
   22cb8:	da000404 	addi	r8,sp,16
   22cbc:	d9403317 	ldw	r5,204(sp)
   22cc0:	10800044 	addi	r2,r2,1
   22cc4:	44000015 	stw	r16,0(r8)
   22cc8:	28c7883a 	add	r3,r5,r3
   22ccc:	003b7706 	br	21aac <___svfprintf_internal_r+0x938>
   22cd0:	8009883a 	mov	r4,r16
   22cd4:	da003e15 	stw	r8,248(sp)
   22cd8:	00210dc0 	call	210dc <strlen>
   22cdc:	d8802e15 	stw	r2,184(sp)
   22ce0:	da003e17 	ldw	r8,248(sp)
   22ce4:	103c280e 	bge	r2,zero,21d88 <___svfprintf_internal_r+0xc14>
   22ce8:	0005883a 	mov	r2,zero
   22cec:	003c2606 	br	21d88 <___svfprintf_internal_r+0xc14>
   22cf0:	00bfffc4 	movi	r2,-1
   22cf4:	003a0906 	br	2151c <___svfprintf_internal_r+0x3a8>
   22cf8:	010000f4 	movhi	r4,3
   22cfc:	210e3784 	addi	r4,r4,14558
   22d00:	d9003515 	stw	r4,212(sp)
   22d04:	003b0606 	br	21920 <___svfprintf_internal_r+0x7ac>
   22d08:	013fffc4 	movi	r4,-1
   22d0c:	003a2706 	br	215ac <___svfprintf_internal_r+0x438>
   22d10:	d9402c17 	ldw	r5,176(sp)
   22d14:	d9801e04 	addi	r6,sp,120
   22d18:	9809883a 	mov	r4,r19
   22d1c:	002a84c0 	call	2a84c <__ssprint_r>
   22d20:	1039f91e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22d24:	d8c02017 	ldw	r3,128(sp)
   22d28:	da000404 	addi	r8,sp,16
   22d2c:	003d8406 	br	22340 <___svfprintf_internal_r+0x11cc>
   22d30:	0023883a 	mov	r17,zero
   22d34:	003d8306 	br	22344 <___svfprintf_internal_r+0x11d0>
   22d38:	010000f4 	movhi	r4,3
   22d3c:	210e3384 	addi	r4,r4,14542
   22d40:	d9002b15 	stw	r4,172(sp)
   22d44:	d9002b17 	ldw	r4,172(sp)
   22d48:	1c47883a 	add	r3,r3,r17
   22d4c:	10800044 	addi	r2,r2,1
   22d50:	41000015 	stw	r4,0(r8)
   22d54:	44400115 	stw	r17,4(r8)
   22d58:	d8c02015 	stw	r3,128(sp)
   22d5c:	d8801f15 	stw	r2,124(sp)
   22d60:	010001c4 	movi	r4,7
   22d64:	20bfcd16 	blt	r4,r2,22c9c <___svfprintf_internal_r+0x1b28>
   22d68:	42000204 	addi	r8,r8,8
   22d6c:	003fd306 	br	22cbc <___svfprintf_internal_r+0x1b48>
   22d70:	d9402c17 	ldw	r5,176(sp)
   22d74:	d9801e04 	addi	r6,sp,120
   22d78:	9809883a 	mov	r4,r19
   22d7c:	002a84c0 	call	2a84c <__ssprint_r>
   22d80:	1039e11e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22d84:	d8802617 	ldw	r2,152(sp)
   22d88:	d8c02017 	ldw	r3,128(sp)
   22d8c:	da000404 	addi	r8,sp,16
   22d90:	003e1c06 	br	22604 <___svfprintf_internal_r+0x1490>
   22d94:	d8802917 	ldw	r2,164(sp)
   22d98:	00c00184 	movi	r3,6
   22d9c:	1880012e 	bgeu	r3,r2,22da4 <___svfprintf_internal_r+0x1c30>
   22da0:	1805883a 	mov	r2,r3
   22da4:	d8802e15 	stw	r2,184(sp)
   22da8:	1000f316 	blt	r2,zero,23178 <___svfprintf_internal_r+0x2004>
   22dac:	040000f4 	movhi	r16,3
   22db0:	d8802a15 	stw	r2,168(sp)
   22db4:	dd002d15 	stw	r20,180(sp)
   22db8:	d8002915 	stw	zero,164(sp)
   22dbc:	d8003215 	stw	zero,200(sp)
   22dc0:	840e3104 	addi	r16,r16,14532
   22dc4:	0039883a 	mov	fp,zero
   22dc8:	003a9f06 	br	21848 <___svfprintf_internal_r+0x6d4>
   22dcc:	010000f4 	movhi	r4,3
   22dd0:	210e3784 	addi	r4,r4,14558
   22dd4:	d9003515 	stw	r4,212(sp)
   22dd8:	003b5f06 	br	21b58 <___svfprintf_internal_r+0x9e4>
   22ddc:	d9402c17 	ldw	r5,176(sp)
   22de0:	d9801e04 	addi	r6,sp,120
   22de4:	9809883a 	mov	r4,r19
   22de8:	002a84c0 	call	2a84c <__ssprint_r>
   22dec:	1039c61e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22df0:	d8802617 	ldw	r2,152(sp)
   22df4:	d9403317 	ldw	r5,204(sp)
   22df8:	d8c02017 	ldw	r3,128(sp)
   22dfc:	da000404 	addi	r8,sp,16
   22e00:	2885c83a 	sub	r2,r5,r2
   22e04:	003e1006 	br	22648 <___svfprintf_internal_r+0x14d4>
   22e08:	00800044 	movi	r2,1
   22e0c:	10803fcc 	andi	r2,r2,255
   22e10:	00c00044 	movi	r3,1
   22e14:	10fa3526 	beq	r2,r3,216ec <___svfprintf_internal_r+0x578>
   22e18:	00c00084 	movi	r3,2
   22e1c:	10fb9e26 	beq	r2,r3,21c98 <___svfprintf_internal_r+0xb24>
   22e20:	003a6406 	br	217b4 <___svfprintf_internal_r+0x640>
   22e24:	0021883a 	mov	r16,zero
   22e28:	003e0806 	br	2264c <___svfprintf_internal_r+0x14d8>
   22e2c:	07000b44 	movi	fp,45
   22e30:	df002785 	stb	fp,158(sp)
   22e34:	003a0b06 	br	21664 <___svfprintf_internal_r+0x4f0>
   22e38:	d8c02d17 	ldw	r3,180(sp)
   22e3c:	d9002f17 	ldw	r4,188(sp)
   22e40:	18800017 	ldw	r2,0(r3)
   22e44:	18c00104 	addi	r3,r3,4
   22e48:	d8c02d15 	stw	r3,180(sp)
   22e4c:	11000015 	stw	r4,0(r2)
   22e50:	0038f306 	br	21220 <___svfprintf_internal_r+0xac>
   22e54:	00c00b44 	movi	r3,45
   22e58:	d8c02785 	stb	r3,158(sp)
   22e5c:	d8802a15 	stw	r2,168(sp)
   22e60:	dc802b17 	ldw	r18,172(sp)
   22e64:	d8002915 	stw	zero,164(sp)
   22e68:	07000b44 	movi	fp,45
   22e6c:	003a7306 	br	2183c <___svfprintf_internal_r+0x6c8>
   22e70:	9080004c 	andi	r2,r18,1
   22e74:	1000941e 	bne	r2,zero,230c8 <___svfprintf_internal_r+0x1f54>
   22e78:	d8802117 	ldw	r2,132(sp)
   22e7c:	1405c83a 	sub	r2,r2,r16
   22e80:	d8803315 	stw	r2,204(sp)
   22e84:	b441161e 	bne	r22,r17,232e0 <___svfprintf_internal_r+0x216c>
   22e88:	dd802617 	ldw	r22,152(sp)
   22e8c:	00bfff44 	movi	r2,-3
   22e90:	b0801a16 	blt	r22,r2,22efc <___svfprintf_internal_r+0x1d88>
   22e94:	d9402917 	ldw	r5,164(sp)
   22e98:	2d801816 	blt	r5,r22,22efc <___svfprintf_internal_r+0x1d88>
   22e9c:	dd803215 	stw	r22,200(sp)
   22ea0:	003f3a06 	br	22b8c <___svfprintf_internal_r+0x1a18>
   22ea4:	1025883a 	mov	r18,r2
   22ea8:	0039883a 	mov	fp,zero
   22eac:	00800084 	movi	r2,2
   22eb0:	003fd606 	br	22e0c <___svfprintf_internal_r+0x1c98>
   22eb4:	9080004c 	andi	r2,r18,1
   22eb8:	103f191e 	bne	r2,zero,22b20 <___svfprintf_internal_r+0x19ac>
   22ebc:	d8802117 	ldw	r2,132(sp)
   22ec0:	003f2806 	br	22b64 <___svfprintf_internal_r+0x19f0>
   22ec4:	010000f4 	movhi	r4,3
   22ec8:	210e3384 	addi	r4,r4,14542
   22ecc:	d9002b15 	stw	r4,172(sp)
   22ed0:	003c7c06 	br	220c4 <___svfprintf_internal_r+0xf50>
   22ed4:	e005883a 	mov	r2,fp
   22ed8:	003f2206 	br	22b64 <___svfprintf_internal_r+0x19f0>
   22edc:	d9402917 	ldw	r5,164(sp)
   22ee0:	df002783 	ldbu	fp,158(sp)
   22ee4:	dd002d15 	stw	r20,180(sp)
   22ee8:	d9402a15 	stw	r5,168(sp)
   22eec:	d9402e15 	stw	r5,184(sp)
   22ef0:	d8002915 	stw	zero,164(sp)
   22ef4:	d8003215 	stw	zero,200(sp)
   22ef8:	003a4c06 	br	2182c <___svfprintf_internal_r+0x6b8>
   22efc:	8c7fff84 	addi	r17,r17,-2
   22f00:	b5bfffc4 	addi	r22,r22,-1
   22f04:	dd802615 	stw	r22,152(sp)
   22f08:	dc4022c5 	stb	r17,139(sp)
   22f0c:	b000c316 	blt	r22,zero,2321c <___svfprintf_internal_r+0x20a8>
   22f10:	00800ac4 	movi	r2,43
   22f14:	d8802305 	stb	r2,140(sp)
   22f18:	00800244 	movi	r2,9
   22f1c:	15806e16 	blt	r2,r22,230d8 <___svfprintf_internal_r+0x1f64>
   22f20:	00800c04 	movi	r2,48
   22f24:	b5800c04 	addi	r22,r22,48
   22f28:	d8802345 	stb	r2,141(sp)
   22f2c:	dd802385 	stb	r22,142(sp)
   22f30:	d88023c4 	addi	r2,sp,143
   22f34:	df0022c4 	addi	fp,sp,139
   22f38:	d8c03317 	ldw	r3,204(sp)
   22f3c:	1739c83a 	sub	fp,r2,fp
   22f40:	d9003317 	ldw	r4,204(sp)
   22f44:	e0c7883a 	add	r3,fp,r3
   22f48:	df003b15 	stw	fp,236(sp)
   22f4c:	d8c02e15 	stw	r3,184(sp)
   22f50:	00800044 	movi	r2,1
   22f54:	1100b70e 	bge	r2,r4,23234 <___svfprintf_internal_r+0x20c0>
   22f58:	d8c02e17 	ldw	r3,184(sp)
   22f5c:	18c00044 	addi	r3,r3,1
   22f60:	d8c02e15 	stw	r3,184(sp)
   22f64:	1805883a 	mov	r2,r3
   22f68:	1800b016 	blt	r3,zero,2322c <___svfprintf_internal_r+0x20b8>
   22f6c:	d8003215 	stw	zero,200(sp)
   22f70:	003f1006 	br	22bb4 <___svfprintf_internal_r+0x1a40>
   22f74:	d8802917 	ldw	r2,164(sp)
   22f78:	103ec71e 	bne	r2,zero,22a98 <___svfprintf_internal_r+0x1924>
   22f7c:	dc002915 	stw	r16,164(sp)
   22f80:	003ec506 	br	22a98 <___svfprintf_internal_r+0x1924>
   22f84:	d9402c17 	ldw	r5,176(sp)
   22f88:	d9801e04 	addi	r6,sp,120
   22f8c:	9809883a 	mov	r4,r19
   22f90:	002a84c0 	call	2a84c <__ssprint_r>
   22f94:	10395c1e 	bne	r2,zero,21508 <___svfprintf_internal_r+0x394>
   22f98:	dc402617 	ldw	r17,152(sp)
   22f9c:	d8c02017 	ldw	r3,128(sp)
   22fa0:	d8801f17 	ldw	r2,124(sp)
   22fa4:	da000404 	addi	r8,sp,16
   22fa8:	003e7706 	br	22988 <___svfprintf_internal_r+0x1814>
   22fac:	582f883a 	mov	r23,r11
   22fb0:	d8002915 	stw	zero,164(sp)
   22fb4:	0038c406 	br	212c8 <___svfprintf_internal_r+0x154>
   22fb8:	d8c02917 	ldw	r3,164(sp)
   22fbc:	d8802104 	addi	r2,sp,132
   22fc0:	d8800315 	stw	r2,12(sp)
   22fc4:	d9403617 	ldw	r5,216(sp)
   22fc8:	d8802504 	addi	r2,sp,148
   22fcc:	d8800215 	stw	r2,8(sp)
   22fd0:	d8802604 	addi	r2,sp,152
   22fd4:	d8c00015 	stw	r3,0(sp)
   22fd8:	9809883a 	mov	r4,r19
   22fdc:	d8800115 	stw	r2,4(sp)
   22fe0:	01c000c4 	movi	r7,3
   22fe4:	a00d883a 	mov	r6,r20
   22fe8:	da003e15 	stw	r8,248(sp)
   22fec:	00259700 	call	25970 <_dtoa_r>
   22ff0:	d9002917 	ldw	r4,164(sp)
   22ff4:	da003e17 	ldw	r8,248(sp)
   22ff8:	1021883a 	mov	r16,r2
   22ffc:	1139883a 	add	fp,r2,r4
   23000:	2007883a 	mov	r3,r4
   23004:	81000007 	ldb	r4,0(r16)
   23008:	00800c04 	movi	r2,48
   2300c:	20806f26 	beq	r4,r2,231cc <___svfprintf_internal_r+0x2058>
   23010:	d8c02617 	ldw	r3,152(sp)
   23014:	e0f9883a 	add	fp,fp,r3
   23018:	003ec206 	br	22b24 <___svfprintf_internal_r+0x19b0>
   2301c:	00c00b44 	movi	r3,45
   23020:	2520003c 	xorhi	r20,r4,32768
   23024:	d8c02a05 	stb	r3,168(sp)
   23028:	003ea106 	br	22ab0 <___svfprintf_internal_r+0x193c>
   2302c:	d8c03217 	ldw	r3,200(sp)
   23030:	00c0890e 	bge	zero,r3,23258 <___svfprintf_internal_r+0x20e4>
   23034:	00800044 	movi	r2,1
   23038:	d9003317 	ldw	r4,204(sp)
   2303c:	1105883a 	add	r2,r2,r4
   23040:	d8802e15 	stw	r2,184(sp)
   23044:	10005f16 	blt	r2,zero,231c4 <___svfprintf_internal_r+0x2050>
   23048:	044019c4 	movi	r17,103
   2304c:	003ed906 	br	22bb4 <___svfprintf_internal_r+0x1a40>
   23050:	d9002917 	ldw	r4,164(sp)
   23054:	20c00044 	addi	r3,r4,1
   23058:	003e9c06 	br	22acc <___svfprintf_internal_r+0x1958>
   2305c:	d9002917 	ldw	r4,164(sp)
   23060:	00c0680e 	bge	zero,r3,23204 <___svfprintf_internal_r+0x2090>
   23064:	2000461e 	bne	r4,zero,23180 <___svfprintf_internal_r+0x200c>
   23068:	9480004c 	andi	r18,r18,1
   2306c:	9000441e 	bne	r18,zero,23180 <___svfprintf_internal_r+0x200c>
   23070:	1805883a 	mov	r2,r3
   23074:	1800a016 	blt	r3,zero,232f8 <___svfprintf_internal_r+0x2184>
   23078:	d8c03217 	ldw	r3,200(sp)
   2307c:	d8c02e15 	stw	r3,184(sp)
   23080:	003ecc06 	br	22bb4 <___svfprintf_internal_r+0x1a40>
   23084:	d9402917 	ldw	r5,164(sp)
   23088:	d8802104 	addi	r2,sp,132
   2308c:	d8800315 	stw	r2,12(sp)
   23090:	d9400015 	stw	r5,0(sp)
   23094:	d8802504 	addi	r2,sp,148
   23098:	d9403617 	ldw	r5,216(sp)
   2309c:	d8800215 	stw	r2,8(sp)
   230a0:	d8802604 	addi	r2,sp,152
   230a4:	d8800115 	stw	r2,4(sp)
   230a8:	01c000c4 	movi	r7,3
   230ac:	a00d883a 	mov	r6,r20
   230b0:	9809883a 	mov	r4,r19
   230b4:	da003e15 	stw	r8,248(sp)
   230b8:	00259700 	call	25970 <_dtoa_r>
   230bc:	d8c02917 	ldw	r3,164(sp)
   230c0:	da003e17 	ldw	r8,248(sp)
   230c4:	1021883a 	mov	r16,r2
   230c8:	00801184 	movi	r2,70
   230cc:	80f9883a 	add	fp,r16,r3
   230d0:	88bfcc26 	beq	r17,r2,23004 <___svfprintf_internal_r+0x1e90>
   230d4:	003e9306 	br	22b24 <___svfprintf_internal_r+0x19b0>
   230d8:	df0022c4 	addi	fp,sp,139
   230dc:	dc002915 	stw	r16,164(sp)
   230e0:	9829883a 	mov	r20,r19
   230e4:	e021883a 	mov	r16,fp
   230e8:	4027883a 	mov	r19,r8
   230ec:	b009883a 	mov	r4,r22
   230f0:	01400284 	movi	r5,10
   230f4:	002e7080 	call	2e708 <__modsi3>
   230f8:	10800c04 	addi	r2,r2,48
   230fc:	843fffc4 	addi	r16,r16,-1
   23100:	b009883a 	mov	r4,r22
   23104:	01400284 	movi	r5,10
   23108:	80800005 	stb	r2,0(r16)
   2310c:	002e6840 	call	2e684 <__divsi3>
   23110:	102d883a 	mov	r22,r2
   23114:	00800244 	movi	r2,9
   23118:	15bff416 	blt	r2,r22,230ec <___svfprintf_internal_r+0x1f78>
   2311c:	9811883a 	mov	r8,r19
   23120:	b0800c04 	addi	r2,r22,48
   23124:	a027883a 	mov	r19,r20
   23128:	8029883a 	mov	r20,r16
   2312c:	a17fffc4 	addi	r5,r20,-1
   23130:	a0bfffc5 	stb	r2,-1(r20)
   23134:	dc002917 	ldw	r16,164(sp)
   23138:	2f00752e 	bgeu	r5,fp,23310 <___svfprintf_internal_r+0x219c>
   2313c:	d9c02384 	addi	r7,sp,142
   23140:	3d0fc83a 	sub	r7,r7,r20
   23144:	d9002344 	addi	r4,sp,141
   23148:	e1cf883a 	add	r7,fp,r7
   2314c:	00000106 	br	23154 <___svfprintf_internal_r+0x1fe0>
   23150:	28800003 	ldbu	r2,0(r5)
   23154:	20800005 	stb	r2,0(r4)
   23158:	21000044 	addi	r4,r4,1
   2315c:	29400044 	addi	r5,r5,1
   23160:	21fffb1e 	bne	r4,r7,23150 <___svfprintf_internal_r+0x1fdc>
   23164:	d8802304 	addi	r2,sp,140
   23168:	1505c83a 	sub	r2,r2,r20
   2316c:	d8c02344 	addi	r3,sp,141
   23170:	1885883a 	add	r2,r3,r2
   23174:	003f7006 	br	22f38 <___svfprintf_internal_r+0x1dc4>
   23178:	0005883a 	mov	r2,zero
   2317c:	003f0b06 	br	22dac <___svfprintf_internal_r+0x1c38>
   23180:	d9002917 	ldw	r4,164(sp)
   23184:	d8c03217 	ldw	r3,200(sp)
   23188:	20800044 	addi	r2,r4,1
   2318c:	1885883a 	add	r2,r3,r2
   23190:	d8802e15 	stw	r2,184(sp)
   23194:	103e870e 	bge	r2,zero,22bb4 <___svfprintf_internal_r+0x1a40>
   23198:	0005883a 	mov	r2,zero
   2319c:	003e8506 	br	22bb4 <___svfprintf_internal_r+0x1a40>
   231a0:	010000f4 	movhi	r4,3
   231a4:	210e3384 	addi	r4,r4,14542
   231a8:	d9002b15 	stw	r4,172(sp)
   231ac:	003cc506 	br	224c4 <___svfprintf_internal_r+0x1350>
   231b0:	d8c03217 	ldw	r3,200(sp)
   231b4:	18c00044 	addi	r3,r3,1
   231b8:	d8c02e15 	stw	r3,184(sp)
   231bc:	1805883a 	mov	r2,r3
   231c0:	183fa10e 	bge	r3,zero,23048 <___svfprintf_internal_r+0x1ed4>
   231c4:	0005883a 	mov	r2,zero
   231c8:	003f9f06 	br	23048 <___svfprintf_internal_r+0x1ed4>
   231cc:	d9003617 	ldw	r4,216(sp)
   231d0:	000d883a 	mov	r6,zero
   231d4:	000f883a 	mov	r7,zero
   231d8:	a00b883a 	mov	r5,r20
   231dc:	d8c03d15 	stw	r3,244(sp)
   231e0:	da003e15 	stw	r8,248(sp)
   231e4:	002f9cc0 	call	2f9cc <__eqdf2>
   231e8:	d8c03d17 	ldw	r3,244(sp)
   231ec:	da003e17 	ldw	r8,248(sp)
   231f0:	103f8726 	beq	r2,zero,23010 <___svfprintf_internal_r+0x1e9c>
   231f4:	00800044 	movi	r2,1
   231f8:	10c7c83a 	sub	r3,r2,r3
   231fc:	d8c02615 	stw	r3,152(sp)
   23200:	003f8406 	br	23014 <___svfprintf_internal_r+0x1ea0>
   23204:	20000e1e 	bne	r4,zero,23240 <___svfprintf_internal_r+0x20cc>
   23208:	9480004c 	andi	r18,r18,1
   2320c:	90000c1e 	bne	r18,zero,23240 <___svfprintf_internal_r+0x20cc>
   23210:	00800044 	movi	r2,1
   23214:	d8802e15 	stw	r2,184(sp)
   23218:	003e6606 	br	22bb4 <___svfprintf_internal_r+0x1a40>
   2321c:	00800b44 	movi	r2,45
   23220:	05adc83a 	sub	r22,zero,r22
   23224:	d8802305 	stb	r2,140(sp)
   23228:	003f3b06 	br	22f18 <___svfprintf_internal_r+0x1da4>
   2322c:	0005883a 	mov	r2,zero
   23230:	003f4e06 	br	22f6c <___svfprintf_internal_r+0x1df8>
   23234:	90a4703a 	and	r18,r18,r2
   23238:	903f4a26 	beq	r18,zero,22f64 <___svfprintf_internal_r+0x1df0>
   2323c:	003f4606 	br	22f58 <___svfprintf_internal_r+0x1de4>
   23240:	d8c02917 	ldw	r3,164(sp)
   23244:	18c00084 	addi	r3,r3,2
   23248:	d8c02e15 	stw	r3,184(sp)
   2324c:	1805883a 	mov	r2,r3
   23250:	183e580e 	bge	r3,zero,22bb4 <___svfprintf_internal_r+0x1a40>
   23254:	003fd006 	br	23198 <___svfprintf_internal_r+0x2024>
   23258:	00800084 	movi	r2,2
   2325c:	10c5c83a 	sub	r2,r2,r3
   23260:	003f7506 	br	23038 <___svfprintf_internal_r+0x1ec4>
   23264:	d8802d17 	ldw	r2,180(sp)
   23268:	d9002d17 	ldw	r4,180(sp)
   2326c:	bc400043 	ldbu	r17,1(r23)
   23270:	10800017 	ldw	r2,0(r2)
   23274:	582f883a 	mov	r23,r11
   23278:	d8802915 	stw	r2,164(sp)
   2327c:	20800104 	addi	r2,r4,4
   23280:	d9002917 	ldw	r4,164(sp)
   23284:	d8802d15 	stw	r2,180(sp)
   23288:	203df00e 	bge	r4,zero,22a4c <___svfprintf_internal_r+0x18d8>
   2328c:	8c403fcc 	andi	r17,r17,255
   23290:	00bfffc4 	movi	r2,-1
   23294:	8c40201c 	xori	r17,r17,128
   23298:	d8802915 	stw	r2,164(sp)
   2329c:	8c7fe004 	addi	r17,r17,-128
   232a0:	00380806 	br	212c4 <___svfprintf_internal_r+0x150>
   232a4:	9080004c 	andi	r2,r18,1
   232a8:	0039883a 	mov	fp,zero
   232ac:	10000726 	beq	r2,zero,232cc <___svfprintf_internal_r+0x2158>
   232b0:	d8c02817 	ldw	r3,160(sp)
   232b4:	dc001dc4 	addi	r16,sp,119
   232b8:	00800c04 	movi	r2,48
   232bc:	1c07c83a 	sub	r3,r3,r16
   232c0:	d8801dc5 	stb	r2,119(sp)
   232c4:	d8c02e15 	stw	r3,184(sp)
   232c8:	00395206 	br	21814 <___svfprintf_internal_r+0x6a0>
   232cc:	d8002e15 	stw	zero,184(sp)
   232d0:	dc001e04 	addi	r16,sp,120
   232d4:	00394f06 	br	21814 <___svfprintf_internal_r+0x6a0>
   232d8:	0005883a 	mov	r2,zero
   232dc:	003e3206 	br	22ba8 <___svfprintf_internal_r+0x1a34>
   232e0:	dd802617 	ldw	r22,152(sp)
   232e4:	003f0606 	br	22f00 <___svfprintf_internal_r+0x1d8c>
   232e8:	d9c02785 	stb	r7,158(sp)
   232ec:	003a5106 	br	21c34 <___svfprintf_internal_r+0xac0>
   232f0:	d9c02785 	stb	r7,158(sp)
   232f4:	003a3706 	br	21bd4 <___svfprintf_internal_r+0xa60>
   232f8:	0005883a 	mov	r2,zero
   232fc:	003f5e06 	br	23078 <___svfprintf_internal_r+0x1f04>
   23300:	d9c02785 	stb	r7,158(sp)
   23304:	00391706 	br	21764 <___svfprintf_internal_r+0x5f0>
   23308:	d9c02785 	stb	r7,158(sp)
   2330c:	0038e606 	br	216a8 <___svfprintf_internal_r+0x534>
   23310:	d8802344 	addi	r2,sp,141
   23314:	003f0806 	br	22f38 <___svfprintf_internal_r+0x1dc4>
   23318:	d9c02785 	stb	r7,158(sp)
   2331c:	0038b706 	br	215fc <___svfprintf_internal_r+0x488>
   23320:	d9c02785 	stb	r7,158(sp)
   23324:	003adc06 	br	21e98 <___svfprintf_internal_r+0xd24>
   23328:	d9403917 	ldw	r5,228(sp)
   2332c:	00800304 	movi	r2,12
   23330:	28800015 	stw	r2,0(r5)
   23334:	00bfffc4 	movi	r2,-1
   23338:	00387806 	br	2151c <___svfprintf_internal_r+0x3a8>
   2333c:	d9c02785 	stb	r7,158(sp)
   23340:	003abf06 	br	21e40 <___svfprintf_internal_r+0xccc>
   23344:	d9c02785 	stb	r7,158(sp)
   23348:	003a9b06 	br	21db8 <___svfprintf_internal_r+0xc44>

0002334c <___vfprintf_internal_r>:
   2334c:	deffb804 	addi	sp,sp,-288
   23350:	dfc04715 	stw	ra,284(sp)
   23354:	ddc04515 	stw	r23,276(sp)
   23358:	dd404315 	stw	r21,268(sp)
   2335c:	d9002c15 	stw	r4,176(sp)
   23360:	282f883a 	mov	r23,r5
   23364:	302b883a 	mov	r21,r6
   23368:	d9c02d15 	stw	r7,180(sp)
   2336c:	df004615 	stw	fp,280(sp)
   23370:	dd804415 	stw	r22,272(sp)
   23374:	dd004215 	stw	r20,264(sp)
   23378:	dcc04115 	stw	r19,260(sp)
   2337c:	dc804015 	stw	r18,256(sp)
   23380:	dc403f15 	stw	r17,252(sp)
   23384:	dc003e15 	stw	r16,248(sp)
   23388:	00281640 	call	28164 <_localeconv_r>
   2338c:	10800017 	ldw	r2,0(r2)
   23390:	1009883a 	mov	r4,r2
   23394:	d8803415 	stw	r2,208(sp)
   23398:	00210dc0 	call	210dc <strlen>
   2339c:	d8803715 	stw	r2,220(sp)
   233a0:	d8802c17 	ldw	r2,176(sp)
   233a4:	10000226 	beq	r2,zero,233b0 <___vfprintf_internal_r+0x64>
   233a8:	10800e17 	ldw	r2,56(r2)
   233ac:	1000f926 	beq	r2,zero,23794 <___vfprintf_internal_r+0x448>
   233b0:	b880030b 	ldhu	r2,12(r23)
   233b4:	10c8000c 	andi	r3,r2,8192
   233b8:	1800061e 	bne	r3,zero,233d4 <___vfprintf_internal_r+0x88>
   233bc:	b9001917 	ldw	r4,100(r23)
   233c0:	00f7ffc4 	movi	r3,-8193
   233c4:	10880014 	ori	r2,r2,8192
   233c8:	20c6703a 	and	r3,r4,r3
   233cc:	b880030d 	sth	r2,12(r23)
   233d0:	b8c01915 	stw	r3,100(r23)
   233d4:	10c0020c 	andi	r3,r2,8
   233d8:	1800c126 	beq	r3,zero,236e0 <___vfprintf_internal_r+0x394>
   233dc:	b8c00417 	ldw	r3,16(r23)
   233e0:	1800bf26 	beq	r3,zero,236e0 <___vfprintf_internal_r+0x394>
   233e4:	1080068c 	andi	r2,r2,26
   233e8:	00c00284 	movi	r3,10
   233ec:	10c0c426 	beq	r2,r3,23700 <___vfprintf_internal_r+0x3b4>
   233f0:	d8c00404 	addi	r3,sp,16
   233f4:	050000f4 	movhi	r20,3
   233f8:	d9001e04 	addi	r4,sp,120
   233fc:	a50e3b84 	addi	r20,r20,14574
   23400:	d8c01e15 	stw	r3,120(sp)
   23404:	d8002015 	stw	zero,128(sp)
   23408:	d8001f15 	stw	zero,124(sp)
   2340c:	d8003315 	stw	zero,204(sp)
   23410:	d8003615 	stw	zero,216(sp)
   23414:	d8003815 	stw	zero,224(sp)
   23418:	1811883a 	mov	r8,r3
   2341c:	d8003915 	stw	zero,228(sp)
   23420:	d8003a15 	stw	zero,232(sp)
   23424:	d8002f15 	stw	zero,188(sp)
   23428:	d9002815 	stw	r4,160(sp)
   2342c:	a8800007 	ldb	r2,0(r21)
   23430:	10027b26 	beq	r2,zero,23e20 <___vfprintf_internal_r+0xad4>
   23434:	00c00944 	movi	r3,37
   23438:	a821883a 	mov	r16,r21
   2343c:	10c0021e 	bne	r2,r3,23448 <___vfprintf_internal_r+0xfc>
   23440:	00001406 	br	23494 <___vfprintf_internal_r+0x148>
   23444:	10c00326 	beq	r2,r3,23454 <___vfprintf_internal_r+0x108>
   23448:	84000044 	addi	r16,r16,1
   2344c:	80800007 	ldb	r2,0(r16)
   23450:	103ffc1e 	bne	r2,zero,23444 <___vfprintf_internal_r+0xf8>
   23454:	8563c83a 	sub	r17,r16,r21
   23458:	88000e26 	beq	r17,zero,23494 <___vfprintf_internal_r+0x148>
   2345c:	d8c02017 	ldw	r3,128(sp)
   23460:	d8801f17 	ldw	r2,124(sp)
   23464:	45400015 	stw	r21,0(r8)
   23468:	1c47883a 	add	r3,r3,r17
   2346c:	10800044 	addi	r2,r2,1
   23470:	d8c02015 	stw	r3,128(sp)
   23474:	44400115 	stw	r17,4(r8)
   23478:	d8801f15 	stw	r2,124(sp)
   2347c:	00c001c4 	movi	r3,7
   23480:	1880a716 	blt	r3,r2,23720 <___vfprintf_internal_r+0x3d4>
   23484:	42000204 	addi	r8,r8,8
   23488:	d9402f17 	ldw	r5,188(sp)
   2348c:	2c4b883a 	add	r5,r5,r17
   23490:	d9402f15 	stw	r5,188(sp)
   23494:	80800007 	ldb	r2,0(r16)
   23498:	1000a826 	beq	r2,zero,2373c <___vfprintf_internal_r+0x3f0>
   2349c:	84400047 	ldb	r17,1(r16)
   234a0:	00bfffc4 	movi	r2,-1
   234a4:	85400044 	addi	r21,r16,1
   234a8:	d8002785 	stb	zero,158(sp)
   234ac:	0007883a 	mov	r3,zero
   234b0:	000f883a 	mov	r7,zero
   234b4:	d8802915 	stw	r2,164(sp)
   234b8:	d8003115 	stw	zero,196(sp)
   234bc:	0025883a 	mov	r18,zero
   234c0:	01401604 	movi	r5,88
   234c4:	01800244 	movi	r6,9
   234c8:	02800a84 	movi	r10,42
   234cc:	02401b04 	movi	r9,108
   234d0:	ad400044 	addi	r21,r21,1
   234d4:	88bff804 	addi	r2,r17,-32
   234d8:	28830436 	bltu	r5,r2,240ec <___vfprintf_internal_r+0xda0>
   234dc:	100490ba 	slli	r2,r2,2
   234e0:	010000b4 	movhi	r4,2
   234e4:	210d3d04 	addi	r4,r4,13556
   234e8:	1105883a 	add	r2,r2,r4
   234ec:	10800017 	ldw	r2,0(r2)
   234f0:	1000683a 	jmp	r2
   234f4:	0002400c 	andi	zero,zero,2304
   234f8:	000240ec 	andhi	zero,zero,2307
   234fc:	000240ec 	andhi	zero,zero,2307
   23500:	0002402c 	andhi	zero,zero,2304
   23504:	000240ec 	andhi	zero,zero,2307
   23508:	000240ec 	andhi	zero,zero,2307
   2350c:	000240ec 	andhi	zero,zero,2307
   23510:	000240ec 	andhi	zero,zero,2307
   23514:	000240ec 	andhi	zero,zero,2307
   23518:	000240ec 	andhi	zero,zero,2307
   2351c:	000237a0 	cmpeqi	zero,zero,2270
   23520:	00023f48 	cmpgei	zero,zero,2301
   23524:	000240ec 	andhi	zero,zero,2307
   23528:	00023668 	cmpgeui	zero,zero,2265
   2352c:	000237c8 	cmpgei	zero,zero,2271
   23530:	000240ec 	andhi	zero,zero,2307
   23534:	00023808 	cmpgei	zero,zero,2272
   23538:	00023814 	movui	zero,2272
   2353c:	00023814 	movui	zero,2272
   23540:	00023814 	movui	zero,2272
   23544:	00023814 	movui	zero,2272
   23548:	00023814 	movui	zero,2272
   2354c:	00023814 	movui	zero,2272
   23550:	00023814 	movui	zero,2272
   23554:	00023814 	movui	zero,2272
   23558:	00023814 	movui	zero,2272
   2355c:	000240ec 	andhi	zero,zero,2307
   23560:	000240ec 	andhi	zero,zero,2307
   23564:	000240ec 	andhi	zero,zero,2307
   23568:	000240ec 	andhi	zero,zero,2307
   2356c:	000240ec 	andhi	zero,zero,2307
   23570:	000240ec 	andhi	zero,zero,2307
   23574:	000240ec 	andhi	zero,zero,2307
   23578:	000240ec 	andhi	zero,zero,2307
   2357c:	000240ec 	andhi	zero,zero,2307
   23580:	000240ec 	andhi	zero,zero,2307
   23584:	00023848 	cmpgei	zero,zero,2273
   23588:	00023904 	movi	zero,2276
   2358c:	000240ec 	andhi	zero,zero,2307
   23590:	00023904 	movi	zero,2276
   23594:	000240ec 	andhi	zero,zero,2307
   23598:	000240ec 	andhi	zero,zero,2307
   2359c:	000240ec 	andhi	zero,zero,2307
   235a0:	000240ec 	andhi	zero,zero,2307
   235a4:	000239a4 	muli	zero,zero,2278
   235a8:	000240ec 	andhi	zero,zero,2307
   235ac:	000240ec 	andhi	zero,zero,2307
   235b0:	000239b0 	cmpltui	zero,zero,2278
   235b4:	000240ec 	andhi	zero,zero,2307
   235b8:	000240ec 	andhi	zero,zero,2307
   235bc:	000240ec 	andhi	zero,zero,2307
   235c0:	000240ec 	andhi	zero,zero,2307
   235c4:	000240ec 	andhi	zero,zero,2307
   235c8:	00023e28 	cmpgeui	zero,zero,2296
   235cc:	000240ec 	andhi	zero,zero,2307
   235d0:	000240ec 	andhi	zero,zero,2307
   235d4:	00023e88 	cmpgei	zero,zero,2298
   235d8:	000240ec 	andhi	zero,zero,2307
   235dc:	000240ec 	andhi	zero,zero,2307
   235e0:	000240ec 	andhi	zero,zero,2307
   235e4:	000240ec 	andhi	zero,zero,2307
   235e8:	000240ec 	andhi	zero,zero,2307
   235ec:	000240ec 	andhi	zero,zero,2307
   235f0:	000240ec 	andhi	zero,zero,2307
   235f4:	000240ec 	andhi	zero,zero,2307
   235f8:	000240ec 	andhi	zero,zero,2307
   235fc:	000240ec 	andhi	zero,zero,2307
   23600:	00024098 	cmpnei	zero,zero,2306
   23604:	00024038 	rdprs	zero,zero,2304
   23608:	00023904 	movi	zero,2276
   2360c:	00023904 	movi	zero,2276
   23610:	00023904 	movi	zero,2276
   23614:	00024048 	cmpgei	zero,zero,2305
   23618:	00024038 	rdprs	zero,zero,2304
   2361c:	000240ec 	andhi	zero,zero,2307
   23620:	000240ec 	andhi	zero,zero,2307
   23624:	00024054 	movui	zero,2305
   23628:	000240ec 	andhi	zero,zero,2307
   2362c:	00024064 	muli	zero,zero,2305
   23630:	00023f38 	rdprs	zero,zero,2300
   23634:	00023674 	movhi	zero,2265
   23638:	00023f58 	cmpnei	zero,zero,2301
   2363c:	000240ec 	andhi	zero,zero,2307
   23640:	00023f64 	muli	zero,zero,2301
   23644:	000240ec 	andhi	zero,zero,2307
   23648:	00023fc0 	call	23fc <__alt_mem_MEMOIRE_ONCHIP-0x1dc04>
   2364c:	000240ec 	andhi	zero,zero,2307
   23650:	000240ec 	andhi	zero,zero,2307
   23654:	00023fd0 	cmplti	zero,zero,2303
   23658:	d9003117 	ldw	r4,196(sp)
   2365c:	d8802d15 	stw	r2,180(sp)
   23660:	0109c83a 	sub	r4,zero,r4
   23664:	d9003115 	stw	r4,196(sp)
   23668:	94800114 	ori	r18,r18,4
   2366c:	ac400007 	ldb	r17,0(r21)
   23670:	003f9706 	br	234d0 <___vfprintf_internal_r+0x184>
   23674:	00800c04 	movi	r2,48
   23678:	d9002d17 	ldw	r4,180(sp)
   2367c:	d9402917 	ldw	r5,164(sp)
   23680:	d8802705 	stb	r2,156(sp)
   23684:	00801e04 	movi	r2,120
   23688:	d8802745 	stb	r2,157(sp)
   2368c:	d8002785 	stb	zero,158(sp)
   23690:	20c00104 	addi	r3,r4,4
   23694:	24c00017 	ldw	r19,0(r4)
   23698:	002d883a 	mov	r22,zero
   2369c:	90800094 	ori	r2,r18,2
   236a0:	28029a16 	blt	r5,zero,2410c <___vfprintf_internal_r+0xdc0>
   236a4:	00bfdfc4 	movi	r2,-129
   236a8:	90a4703a 	and	r18,r18,r2
   236ac:	d8c02d15 	stw	r3,180(sp)
   236b0:	94800094 	ori	r18,r18,2
   236b4:	9802871e 	bne	r19,zero,240d4 <___vfprintf_internal_r+0xd88>
   236b8:	008000f4 	movhi	r2,3
   236bc:	108e2c04 	addi	r2,r2,14512
   236c0:	d8803915 	stw	r2,228(sp)
   236c4:	04401e04 	movi	r17,120
   236c8:	d8802917 	ldw	r2,164(sp)
   236cc:	0039883a 	mov	fp,zero
   236d0:	1001e926 	beq	r2,zero,23e78 <___vfprintf_internal_r+0xb2c>
   236d4:	0027883a 	mov	r19,zero
   236d8:	002d883a 	mov	r22,zero
   236dc:	00020506 	br	23ef4 <___vfprintf_internal_r+0xba8>
   236e0:	d9002c17 	ldw	r4,176(sp)
   236e4:	b80b883a 	mov	r5,r23
   236e8:	002561c0 	call	2561c <__swsetup_r>
   236ec:	1005ac1e 	bne	r2,zero,24da0 <___vfprintf_internal_r+0x1a54>
   236f0:	b880030b 	ldhu	r2,12(r23)
   236f4:	00c00284 	movi	r3,10
   236f8:	1080068c 	andi	r2,r2,26
   236fc:	10ff3c1e 	bne	r2,r3,233f0 <___vfprintf_internal_r+0xa4>
   23700:	b880038f 	ldh	r2,14(r23)
   23704:	103f3a16 	blt	r2,zero,233f0 <___vfprintf_internal_r+0xa4>
   23708:	d9c02d17 	ldw	r7,180(sp)
   2370c:	d9002c17 	ldw	r4,176(sp)
   23710:	a80d883a 	mov	r6,r21
   23714:	b80b883a 	mov	r5,r23
   23718:	00255600 	call	25560 <__sbprintf>
   2371c:	00001106 	br	23764 <___vfprintf_internal_r+0x418>
   23720:	d9002c17 	ldw	r4,176(sp)
   23724:	d9801e04 	addi	r6,sp,120
   23728:	b80b883a 	mov	r5,r23
   2372c:	002bd540 	call	2bd54 <__sprint_r>
   23730:	1000081e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   23734:	da000404 	addi	r8,sp,16
   23738:	003f5306 	br	23488 <___vfprintf_internal_r+0x13c>
   2373c:	d8802017 	ldw	r2,128(sp)
   23740:	10000426 	beq	r2,zero,23754 <___vfprintf_internal_r+0x408>
   23744:	d9002c17 	ldw	r4,176(sp)
   23748:	d9801e04 	addi	r6,sp,120
   2374c:	b80b883a 	mov	r5,r23
   23750:	002bd540 	call	2bd54 <__sprint_r>
   23754:	b880030b 	ldhu	r2,12(r23)
   23758:	1080100c 	andi	r2,r2,64
   2375c:	1005901e 	bne	r2,zero,24da0 <___vfprintf_internal_r+0x1a54>
   23760:	d8802f17 	ldw	r2,188(sp)
   23764:	dfc04717 	ldw	ra,284(sp)
   23768:	df004617 	ldw	fp,280(sp)
   2376c:	ddc04517 	ldw	r23,276(sp)
   23770:	dd804417 	ldw	r22,272(sp)
   23774:	dd404317 	ldw	r21,268(sp)
   23778:	dd004217 	ldw	r20,264(sp)
   2377c:	dcc04117 	ldw	r19,260(sp)
   23780:	dc804017 	ldw	r18,256(sp)
   23784:	dc403f17 	ldw	r17,252(sp)
   23788:	dc003e17 	ldw	r16,248(sp)
   2378c:	dec04804 	addi	sp,sp,288
   23790:	f800283a 	ret
   23794:	d9002c17 	ldw	r4,176(sp)
   23798:	00275f00 	call	275f0 <__sinit>
   2379c:	003f0406 	br	233b0 <___vfprintf_internal_r+0x64>
   237a0:	d8802d17 	ldw	r2,180(sp)
   237a4:	d9002d17 	ldw	r4,180(sp)
   237a8:	10800017 	ldw	r2,0(r2)
   237ac:	d8803115 	stw	r2,196(sp)
   237b0:	20800104 	addi	r2,r4,4
   237b4:	d9003117 	ldw	r4,196(sp)
   237b8:	203fa716 	blt	r4,zero,23658 <___vfprintf_internal_r+0x30c>
   237bc:	d8802d15 	stw	r2,180(sp)
   237c0:	ac400007 	ldb	r17,0(r21)
   237c4:	003f4206 	br	234d0 <___vfprintf_internal_r+0x184>
   237c8:	ac400007 	ldb	r17,0(r21)
   237cc:	aac00044 	addi	r11,r21,1
   237d0:	8a872826 	beq	r17,r10,25474 <___vfprintf_internal_r+0x2128>
   237d4:	88bff404 	addi	r2,r17,-48
   237d8:	0009883a 	mov	r4,zero
   237dc:	30867d36 	bltu	r6,r2,251d4 <___vfprintf_internal_r+0x1e88>
   237e0:	5c400007 	ldb	r17,0(r11)
   237e4:	210002a4 	muli	r4,r4,10
   237e8:	5d400044 	addi	r21,r11,1
   237ec:	a817883a 	mov	r11,r21
   237f0:	2089883a 	add	r4,r4,r2
   237f4:	88bff404 	addi	r2,r17,-48
   237f8:	30bff92e 	bgeu	r6,r2,237e0 <___vfprintf_internal_r+0x494>
   237fc:	2005c916 	blt	r4,zero,24f24 <___vfprintf_internal_r+0x1bd8>
   23800:	d9002915 	stw	r4,164(sp)
   23804:	003f3306 	br	234d4 <___vfprintf_internal_r+0x188>
   23808:	94802014 	ori	r18,r18,128
   2380c:	ac400007 	ldb	r17,0(r21)
   23810:	003f2f06 	br	234d0 <___vfprintf_internal_r+0x184>
   23814:	a809883a 	mov	r4,r21
   23818:	d8003115 	stw	zero,196(sp)
   2381c:	88bff404 	addi	r2,r17,-48
   23820:	0017883a 	mov	r11,zero
   23824:	24400007 	ldb	r17,0(r4)
   23828:	5ac002a4 	muli	r11,r11,10
   2382c:	ad400044 	addi	r21,r21,1
   23830:	a809883a 	mov	r4,r21
   23834:	12d7883a 	add	r11,r2,r11
   23838:	88bff404 	addi	r2,r17,-48
   2383c:	30bff92e 	bgeu	r6,r2,23824 <___vfprintf_internal_r+0x4d8>
   23840:	dac03115 	stw	r11,196(sp)
   23844:	003f2306 	br	234d4 <___vfprintf_internal_r+0x188>
   23848:	18c03fcc 	andi	r3,r3,255
   2384c:	18072b1e 	bne	r3,zero,254fc <___vfprintf_internal_r+0x21b0>
   23850:	94800414 	ori	r18,r18,16
   23854:	9080080c 	andi	r2,r18,32
   23858:	10037b26 	beq	r2,zero,24648 <___vfprintf_internal_r+0x12fc>
   2385c:	d9402d17 	ldw	r5,180(sp)
   23860:	28800117 	ldw	r2,4(r5)
   23864:	2cc00017 	ldw	r19,0(r5)
   23868:	29400204 	addi	r5,r5,8
   2386c:	d9402d15 	stw	r5,180(sp)
   23870:	102d883a 	mov	r22,r2
   23874:	10044b16 	blt	r2,zero,249a4 <___vfprintf_internal_r+0x1658>
   23878:	d9402917 	ldw	r5,164(sp)
   2387c:	df002783 	ldbu	fp,158(sp)
   23880:	2803bc16 	blt	r5,zero,24774 <___vfprintf_internal_r+0x1428>
   23884:	00ffdfc4 	movi	r3,-129
   23888:	9d84b03a 	or	r2,r19,r22
   2388c:	90e4703a 	and	r18,r18,r3
   23890:	10017726 	beq	r2,zero,23e70 <___vfprintf_internal_r+0xb24>
   23894:	b0038326 	beq	r22,zero,246a4 <___vfprintf_internal_r+0x1358>
   23898:	dc402a15 	stw	r17,168(sp)
   2389c:	dc001e04 	addi	r16,sp,120
   238a0:	b023883a 	mov	r17,r22
   238a4:	402d883a 	mov	r22,r8
   238a8:	9809883a 	mov	r4,r19
   238ac:	880b883a 	mov	r5,r17
   238b0:	01800284 	movi	r6,10
   238b4:	000f883a 	mov	r7,zero
   238b8:	002e14c0 	call	2e14c <__umoddi3>
   238bc:	10800c04 	addi	r2,r2,48
   238c0:	843fffc4 	addi	r16,r16,-1
   238c4:	9809883a 	mov	r4,r19
   238c8:	880b883a 	mov	r5,r17
   238cc:	80800005 	stb	r2,0(r16)
   238d0:	01800284 	movi	r6,10
   238d4:	000f883a 	mov	r7,zero
   238d8:	002dbd40 	call	2dbd4 <__udivdi3>
   238dc:	1027883a 	mov	r19,r2
   238e0:	10c4b03a 	or	r2,r2,r3
   238e4:	1823883a 	mov	r17,r3
   238e8:	103fef1e 	bne	r2,zero,238a8 <___vfprintf_internal_r+0x55c>
   238ec:	d8c02817 	ldw	r3,160(sp)
   238f0:	dc402a17 	ldw	r17,168(sp)
   238f4:	b011883a 	mov	r8,r22
   238f8:	1c07c83a 	sub	r3,r3,r16
   238fc:	d8c02e15 	stw	r3,184(sp)
   23900:	00005906 	br	23a68 <___vfprintf_internal_r+0x71c>
   23904:	18c03fcc 	andi	r3,r3,255
   23908:	1806fa1e 	bne	r3,zero,254f4 <___vfprintf_internal_r+0x21a8>
   2390c:	9080020c 	andi	r2,r18,8
   23910:	10048a26 	beq	r2,zero,24b3c <___vfprintf_internal_r+0x17f0>
   23914:	d8c02d17 	ldw	r3,180(sp)
   23918:	d9002d17 	ldw	r4,180(sp)
   2391c:	d9402d17 	ldw	r5,180(sp)
   23920:	18c00017 	ldw	r3,0(r3)
   23924:	21000117 	ldw	r4,4(r4)
   23928:	29400204 	addi	r5,r5,8
   2392c:	d8c03615 	stw	r3,216(sp)
   23930:	d9003815 	stw	r4,224(sp)
   23934:	d9402d15 	stw	r5,180(sp)
   23938:	d9003617 	ldw	r4,216(sp)
   2393c:	d9403817 	ldw	r5,224(sp)
   23940:	da003d15 	stw	r8,244(sp)
   23944:	04000044 	movi	r16,1
   23948:	002a56c0 	call	2a56c <__fpclassifyd>
   2394c:	da003d17 	ldw	r8,244(sp)
   23950:	14041f1e 	bne	r2,r16,249d0 <___vfprintf_internal_r+0x1684>
   23954:	d9003617 	ldw	r4,216(sp)
   23958:	d9403817 	ldw	r5,224(sp)
   2395c:	000d883a 	mov	r6,zero
   23960:	000f883a 	mov	r7,zero
   23964:	002fb300 	call	2fb30 <__ledf2>
   23968:	da003d17 	ldw	r8,244(sp)
   2396c:	1005be16 	blt	r2,zero,25068 <___vfprintf_internal_r+0x1d1c>
   23970:	df002783 	ldbu	fp,158(sp)
   23974:	008011c4 	movi	r2,71
   23978:	1445330e 	bge	r2,r17,24e48 <___vfprintf_internal_r+0x1afc>
   2397c:	040000f4 	movhi	r16,3
   23980:	840e2404 	addi	r16,r16,14480
   23984:	00c000c4 	movi	r3,3
   23988:	00bfdfc4 	movi	r2,-129
   2398c:	d8c02a15 	stw	r3,168(sp)
   23990:	90a4703a 	and	r18,r18,r2
   23994:	d8c02e15 	stw	r3,184(sp)
   23998:	d8002915 	stw	zero,164(sp)
   2399c:	d8003215 	stw	zero,200(sp)
   239a0:	00003706 	br	23a80 <___vfprintf_internal_r+0x734>
   239a4:	94800214 	ori	r18,r18,8
   239a8:	ac400007 	ldb	r17,0(r21)
   239ac:	003ec806 	br	234d0 <___vfprintf_internal_r+0x184>
   239b0:	18c03fcc 	andi	r3,r3,255
   239b4:	1806db1e 	bne	r3,zero,25524 <___vfprintf_internal_r+0x21d8>
   239b8:	94800414 	ori	r18,r18,16
   239bc:	9080080c 	andi	r2,r18,32
   239c0:	1002d826 	beq	r2,zero,24524 <___vfprintf_internal_r+0x11d8>
   239c4:	d9402d17 	ldw	r5,180(sp)
   239c8:	d8c02917 	ldw	r3,164(sp)
   239cc:	d8002785 	stb	zero,158(sp)
   239d0:	28800204 	addi	r2,r5,8
   239d4:	2cc00017 	ldw	r19,0(r5)
   239d8:	2d800117 	ldw	r22,4(r5)
   239dc:	18048f16 	blt	r3,zero,24c1c <___vfprintf_internal_r+0x18d0>
   239e0:	013fdfc4 	movi	r4,-129
   239e4:	9d86b03a 	or	r3,r19,r22
   239e8:	d8802d15 	stw	r2,180(sp)
   239ec:	9124703a 	and	r18,r18,r4
   239f0:	1802d91e 	bne	r3,zero,24558 <___vfprintf_internal_r+0x120c>
   239f4:	d8c02917 	ldw	r3,164(sp)
   239f8:	0039883a 	mov	fp,zero
   239fc:	1805c326 	beq	r3,zero,2510c <___vfprintf_internal_r+0x1dc0>
   23a00:	0027883a 	mov	r19,zero
   23a04:	002d883a 	mov	r22,zero
   23a08:	dc001e04 	addi	r16,sp,120
   23a0c:	9806d0fa 	srli	r3,r19,3
   23a10:	b008977a 	slli	r4,r22,29
   23a14:	b02cd0fa 	srli	r22,r22,3
   23a18:	9cc001cc 	andi	r19,r19,7
   23a1c:	98800c04 	addi	r2,r19,48
   23a20:	843fffc4 	addi	r16,r16,-1
   23a24:	20e6b03a 	or	r19,r4,r3
   23a28:	80800005 	stb	r2,0(r16)
   23a2c:	9d86b03a 	or	r3,r19,r22
   23a30:	183ff61e 	bne	r3,zero,23a0c <___vfprintf_internal_r+0x6c0>
   23a34:	90c0004c 	andi	r3,r18,1
   23a38:	18013b26 	beq	r3,zero,23f28 <___vfprintf_internal_r+0xbdc>
   23a3c:	10803fcc 	andi	r2,r2,255
   23a40:	1080201c 	xori	r2,r2,128
   23a44:	10bfe004 	addi	r2,r2,-128
   23a48:	00c00c04 	movi	r3,48
   23a4c:	10c13626 	beq	r2,r3,23f28 <___vfprintf_internal_r+0xbdc>
   23a50:	80ffffc5 	stb	r3,-1(r16)
   23a54:	d8c02817 	ldw	r3,160(sp)
   23a58:	80bfffc4 	addi	r2,r16,-1
   23a5c:	1021883a 	mov	r16,r2
   23a60:	1887c83a 	sub	r3,r3,r2
   23a64:	d8c02e15 	stw	r3,184(sp)
   23a68:	d8802e17 	ldw	r2,184(sp)
   23a6c:	d9002917 	ldw	r4,164(sp)
   23a70:	1100010e 	bge	r2,r4,23a78 <___vfprintf_internal_r+0x72c>
   23a74:	2005883a 	mov	r2,r4
   23a78:	d8802a15 	stw	r2,168(sp)
   23a7c:	d8003215 	stw	zero,200(sp)
   23a80:	e7003fcc 	andi	fp,fp,255
   23a84:	e700201c 	xori	fp,fp,128
   23a88:	e73fe004 	addi	fp,fp,-128
   23a8c:	e0000326 	beq	fp,zero,23a9c <___vfprintf_internal_r+0x750>
   23a90:	d8c02a17 	ldw	r3,168(sp)
   23a94:	18c00044 	addi	r3,r3,1
   23a98:	d8c02a15 	stw	r3,168(sp)
   23a9c:	90c0008c 	andi	r3,r18,2
   23aa0:	d8c02b15 	stw	r3,172(sp)
   23aa4:	18000326 	beq	r3,zero,23ab4 <___vfprintf_internal_r+0x768>
   23aa8:	d8c02a17 	ldw	r3,168(sp)
   23aac:	18c00084 	addi	r3,r3,2
   23ab0:	d8c02a15 	stw	r3,168(sp)
   23ab4:	90c0210c 	andi	r3,r18,132
   23ab8:	d8c03015 	stw	r3,192(sp)
   23abc:	1801a31e 	bne	r3,zero,2414c <___vfprintf_internal_r+0xe00>
   23ac0:	d9003117 	ldw	r4,196(sp)
   23ac4:	d8c02a17 	ldw	r3,168(sp)
   23ac8:	20e7c83a 	sub	r19,r4,r3
   23acc:	04c19f0e 	bge	zero,r19,2414c <___vfprintf_internal_r+0xe00>
   23ad0:	02400404 	movi	r9,16
   23ad4:	d8c02017 	ldw	r3,128(sp)
   23ad8:	d8801f17 	ldw	r2,124(sp)
   23adc:	4cc50d0e 	bge	r9,r19,24f14 <___vfprintf_internal_r+0x1bc8>
   23ae0:	014000f4 	movhi	r5,3
   23ae4:	294e3f84 	addi	r5,r5,14590
   23ae8:	dc403b15 	stw	r17,236(sp)
   23aec:	d9403515 	stw	r5,212(sp)
   23af0:	9823883a 	mov	r17,r19
   23af4:	482d883a 	mov	r22,r9
   23af8:	9027883a 	mov	r19,r18
   23afc:	070001c4 	movi	fp,7
   23b00:	8025883a 	mov	r18,r16
   23b04:	dc002c17 	ldw	r16,176(sp)
   23b08:	00000306 	br	23b18 <___vfprintf_internal_r+0x7cc>
   23b0c:	8c7ffc04 	addi	r17,r17,-16
   23b10:	42000204 	addi	r8,r8,8
   23b14:	b440130e 	bge	r22,r17,23b64 <___vfprintf_internal_r+0x818>
   23b18:	010000f4 	movhi	r4,3
   23b1c:	18c00404 	addi	r3,r3,16
   23b20:	10800044 	addi	r2,r2,1
   23b24:	210e3f84 	addi	r4,r4,14590
   23b28:	41000015 	stw	r4,0(r8)
   23b2c:	45800115 	stw	r22,4(r8)
   23b30:	d8c02015 	stw	r3,128(sp)
   23b34:	d8801f15 	stw	r2,124(sp)
   23b38:	e0bff40e 	bge	fp,r2,23b0c <___vfprintf_internal_r+0x7c0>
   23b3c:	d9801e04 	addi	r6,sp,120
   23b40:	b80b883a 	mov	r5,r23
   23b44:	8009883a 	mov	r4,r16
   23b48:	002bd540 	call	2bd54 <__sprint_r>
   23b4c:	103f011e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   23b50:	8c7ffc04 	addi	r17,r17,-16
   23b54:	d8c02017 	ldw	r3,128(sp)
   23b58:	d8801f17 	ldw	r2,124(sp)
   23b5c:	da000404 	addi	r8,sp,16
   23b60:	b47fed16 	blt	r22,r17,23b18 <___vfprintf_internal_r+0x7cc>
   23b64:	9021883a 	mov	r16,r18
   23b68:	9825883a 	mov	r18,r19
   23b6c:	8827883a 	mov	r19,r17
   23b70:	dc403b17 	ldw	r17,236(sp)
   23b74:	d9403517 	ldw	r5,212(sp)
   23b78:	98c7883a 	add	r3,r19,r3
   23b7c:	10800044 	addi	r2,r2,1
   23b80:	41400015 	stw	r5,0(r8)
   23b84:	44c00115 	stw	r19,4(r8)
   23b88:	d8c02015 	stw	r3,128(sp)
   23b8c:	d8801f15 	stw	r2,124(sp)
   23b90:	010001c4 	movi	r4,7
   23b94:	2082a316 	blt	r4,r2,24624 <___vfprintf_internal_r+0x12d8>
   23b98:	df002787 	ldb	fp,158(sp)
   23b9c:	42000204 	addi	r8,r8,8
   23ba0:	e0000c26 	beq	fp,zero,23bd4 <___vfprintf_internal_r+0x888>
   23ba4:	d8801f17 	ldw	r2,124(sp)
   23ba8:	d9002784 	addi	r4,sp,158
   23bac:	18c00044 	addi	r3,r3,1
   23bb0:	10800044 	addi	r2,r2,1
   23bb4:	41000015 	stw	r4,0(r8)
   23bb8:	01000044 	movi	r4,1
   23bbc:	41000115 	stw	r4,4(r8)
   23bc0:	d8c02015 	stw	r3,128(sp)
   23bc4:	d8801f15 	stw	r2,124(sp)
   23bc8:	010001c4 	movi	r4,7
   23bcc:	20823c16 	blt	r4,r2,244c0 <___vfprintf_internal_r+0x1174>
   23bd0:	42000204 	addi	r8,r8,8
   23bd4:	d8802b17 	ldw	r2,172(sp)
   23bd8:	10000c26 	beq	r2,zero,23c0c <___vfprintf_internal_r+0x8c0>
   23bdc:	d8801f17 	ldw	r2,124(sp)
   23be0:	d9002704 	addi	r4,sp,156
   23be4:	18c00084 	addi	r3,r3,2
   23be8:	10800044 	addi	r2,r2,1
   23bec:	41000015 	stw	r4,0(r8)
   23bf0:	01000084 	movi	r4,2
   23bf4:	41000115 	stw	r4,4(r8)
   23bf8:	d8c02015 	stw	r3,128(sp)
   23bfc:	d8801f15 	stw	r2,124(sp)
   23c00:	010001c4 	movi	r4,7
   23c04:	20823616 	blt	r4,r2,244e0 <___vfprintf_internal_r+0x1194>
   23c08:	42000204 	addi	r8,r8,8
   23c0c:	d9003017 	ldw	r4,192(sp)
   23c10:	00802004 	movi	r2,128
   23c14:	20819926 	beq	r4,r2,2427c <___vfprintf_internal_r+0xf30>
   23c18:	d9402917 	ldw	r5,164(sp)
   23c1c:	d8802e17 	ldw	r2,184(sp)
   23c20:	28adc83a 	sub	r22,r5,r2
   23c24:	0580310e 	bge	zero,r22,23cec <___vfprintf_internal_r+0x9a0>
   23c28:	07000404 	movi	fp,16
   23c2c:	d8801f17 	ldw	r2,124(sp)
   23c30:	e584140e 	bge	fp,r22,24c84 <___vfprintf_internal_r+0x1938>
   23c34:	014000f4 	movhi	r5,3
   23c38:	294e3b84 	addi	r5,r5,14574
   23c3c:	dc402915 	stw	r17,164(sp)
   23c40:	d9402b15 	stw	r5,172(sp)
   23c44:	b023883a 	mov	r17,r22
   23c48:	04c001c4 	movi	r19,7
   23c4c:	a82d883a 	mov	r22,r21
   23c50:	902b883a 	mov	r21,r18
   23c54:	8025883a 	mov	r18,r16
   23c58:	dc002c17 	ldw	r16,176(sp)
   23c5c:	00000306 	br	23c6c <___vfprintf_internal_r+0x920>
   23c60:	8c7ffc04 	addi	r17,r17,-16
   23c64:	42000204 	addi	r8,r8,8
   23c68:	e440110e 	bge	fp,r17,23cb0 <___vfprintf_internal_r+0x964>
   23c6c:	18c00404 	addi	r3,r3,16
   23c70:	10800044 	addi	r2,r2,1
   23c74:	45000015 	stw	r20,0(r8)
   23c78:	47000115 	stw	fp,4(r8)
   23c7c:	d8c02015 	stw	r3,128(sp)
   23c80:	d8801f15 	stw	r2,124(sp)
   23c84:	98bff60e 	bge	r19,r2,23c60 <___vfprintf_internal_r+0x914>
   23c88:	d9801e04 	addi	r6,sp,120
   23c8c:	b80b883a 	mov	r5,r23
   23c90:	8009883a 	mov	r4,r16
   23c94:	002bd540 	call	2bd54 <__sprint_r>
   23c98:	103eae1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   23c9c:	8c7ffc04 	addi	r17,r17,-16
   23ca0:	d8c02017 	ldw	r3,128(sp)
   23ca4:	d8801f17 	ldw	r2,124(sp)
   23ca8:	da000404 	addi	r8,sp,16
   23cac:	e47fef16 	blt	fp,r17,23c6c <___vfprintf_internal_r+0x920>
   23cb0:	9021883a 	mov	r16,r18
   23cb4:	a825883a 	mov	r18,r21
   23cb8:	b02b883a 	mov	r21,r22
   23cbc:	882d883a 	mov	r22,r17
   23cc0:	dc402917 	ldw	r17,164(sp)
   23cc4:	d9002b17 	ldw	r4,172(sp)
   23cc8:	1d87883a 	add	r3,r3,r22
   23ccc:	10800044 	addi	r2,r2,1
   23cd0:	41000015 	stw	r4,0(r8)
   23cd4:	45800115 	stw	r22,4(r8)
   23cd8:	d8c02015 	stw	r3,128(sp)
   23cdc:	d8801f15 	stw	r2,124(sp)
   23ce0:	010001c4 	movi	r4,7
   23ce4:	2081ee16 	blt	r4,r2,244a0 <___vfprintf_internal_r+0x1154>
   23ce8:	42000204 	addi	r8,r8,8
   23cec:	9080400c 	andi	r2,r18,256
   23cf0:	1001181e 	bne	r2,zero,24154 <___vfprintf_internal_r+0xe08>
   23cf4:	d9402e17 	ldw	r5,184(sp)
   23cf8:	d8801f17 	ldw	r2,124(sp)
   23cfc:	44000015 	stw	r16,0(r8)
   23d00:	1947883a 	add	r3,r3,r5
   23d04:	10800044 	addi	r2,r2,1
   23d08:	41400115 	stw	r5,4(r8)
   23d0c:	d8c02015 	stw	r3,128(sp)
   23d10:	d8801f15 	stw	r2,124(sp)
   23d14:	010001c4 	movi	r4,7
   23d18:	2081d316 	blt	r4,r2,24468 <___vfprintf_internal_r+0x111c>
   23d1c:	42000204 	addi	r8,r8,8
   23d20:	9480010c 	andi	r18,r18,4
   23d24:	90003226 	beq	r18,zero,23df0 <___vfprintf_internal_r+0xaa4>
   23d28:	d9403117 	ldw	r5,196(sp)
   23d2c:	d8802a17 	ldw	r2,168(sp)
   23d30:	28a1c83a 	sub	r16,r5,r2
   23d34:	04002e0e 	bge	zero,r16,23df0 <___vfprintf_internal_r+0xaa4>
   23d38:	04400404 	movi	r17,16
   23d3c:	d8801f17 	ldw	r2,124(sp)
   23d40:	8c04a20e 	bge	r17,r16,24fcc <___vfprintf_internal_r+0x1c80>
   23d44:	014000f4 	movhi	r5,3
   23d48:	294e3f84 	addi	r5,r5,14590
   23d4c:	d9403515 	stw	r5,212(sp)
   23d50:	048001c4 	movi	r18,7
   23d54:	dcc02c17 	ldw	r19,176(sp)
   23d58:	00000306 	br	23d68 <___vfprintf_internal_r+0xa1c>
   23d5c:	843ffc04 	addi	r16,r16,-16
   23d60:	42000204 	addi	r8,r8,8
   23d64:	8c00130e 	bge	r17,r16,23db4 <___vfprintf_internal_r+0xa68>
   23d68:	010000f4 	movhi	r4,3
   23d6c:	18c00404 	addi	r3,r3,16
   23d70:	10800044 	addi	r2,r2,1
   23d74:	210e3f84 	addi	r4,r4,14590
   23d78:	41000015 	stw	r4,0(r8)
   23d7c:	44400115 	stw	r17,4(r8)
   23d80:	d8c02015 	stw	r3,128(sp)
   23d84:	d8801f15 	stw	r2,124(sp)
   23d88:	90bff40e 	bge	r18,r2,23d5c <___vfprintf_internal_r+0xa10>
   23d8c:	d9801e04 	addi	r6,sp,120
   23d90:	b80b883a 	mov	r5,r23
   23d94:	9809883a 	mov	r4,r19
   23d98:	002bd540 	call	2bd54 <__sprint_r>
   23d9c:	103e6d1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   23da0:	843ffc04 	addi	r16,r16,-16
   23da4:	d8c02017 	ldw	r3,128(sp)
   23da8:	d8801f17 	ldw	r2,124(sp)
   23dac:	da000404 	addi	r8,sp,16
   23db0:	8c3fed16 	blt	r17,r16,23d68 <___vfprintf_internal_r+0xa1c>
   23db4:	d9403517 	ldw	r5,212(sp)
   23db8:	1c07883a 	add	r3,r3,r16
   23dbc:	10800044 	addi	r2,r2,1
   23dc0:	41400015 	stw	r5,0(r8)
   23dc4:	44000115 	stw	r16,4(r8)
   23dc8:	d8c02015 	stw	r3,128(sp)
   23dcc:	d8801f15 	stw	r2,124(sp)
   23dd0:	010001c4 	movi	r4,7
   23dd4:	2080060e 	bge	r4,r2,23df0 <___vfprintf_internal_r+0xaa4>
   23dd8:	d9002c17 	ldw	r4,176(sp)
   23ddc:	d9801e04 	addi	r6,sp,120
   23de0:	b80b883a 	mov	r5,r23
   23de4:	002bd540 	call	2bd54 <__sprint_r>
   23de8:	103e5a1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   23dec:	d8c02017 	ldw	r3,128(sp)
   23df0:	d8803117 	ldw	r2,196(sp)
   23df4:	d9002a17 	ldw	r4,168(sp)
   23df8:	1100010e 	bge	r2,r4,23e00 <___vfprintf_internal_r+0xab4>
   23dfc:	2005883a 	mov	r2,r4
   23e00:	d9402f17 	ldw	r5,188(sp)
   23e04:	288b883a 	add	r5,r5,r2
   23e08:	d9402f15 	stw	r5,188(sp)
   23e0c:	18019e1e 	bne	r3,zero,24488 <___vfprintf_internal_r+0x113c>
   23e10:	a8800007 	ldb	r2,0(r21)
   23e14:	d8001f15 	stw	zero,124(sp)
   23e18:	da000404 	addi	r8,sp,16
   23e1c:	103d851e 	bne	r2,zero,23434 <___vfprintf_internal_r+0xe8>
   23e20:	a821883a 	mov	r16,r21
   23e24:	003d9b06 	br	23494 <___vfprintf_internal_r+0x148>
   23e28:	18c03fcc 	andi	r3,r3,255
   23e2c:	1805c11e 	bne	r3,zero,25534 <___vfprintf_internal_r+0x21e8>
   23e30:	94800414 	ori	r18,r18,16
   23e34:	9080080c 	andi	r2,r18,32
   23e38:	10020c26 	beq	r2,zero,2466c <___vfprintf_internal_r+0x1320>
   23e3c:	d8802d17 	ldw	r2,180(sp)
   23e40:	d9002917 	ldw	r4,164(sp)
   23e44:	d8002785 	stb	zero,158(sp)
   23e48:	10c00204 	addi	r3,r2,8
   23e4c:	14c00017 	ldw	r19,0(r2)
   23e50:	15800117 	ldw	r22,4(r2)
   23e54:	20040f16 	blt	r4,zero,24e94 <___vfprintf_internal_r+0x1b48>
   23e58:	013fdfc4 	movi	r4,-129
   23e5c:	9d84b03a 	or	r2,r19,r22
   23e60:	d8c02d15 	stw	r3,180(sp)
   23e64:	9124703a 	and	r18,r18,r4
   23e68:	0039883a 	mov	fp,zero
   23e6c:	103e891e 	bne	r2,zero,23894 <___vfprintf_internal_r+0x548>
   23e70:	d9002917 	ldw	r4,164(sp)
   23e74:	2002c11e 	bne	r4,zero,2497c <___vfprintf_internal_r+0x1630>
   23e78:	d8002915 	stw	zero,164(sp)
   23e7c:	d8002e15 	stw	zero,184(sp)
   23e80:	dc001e04 	addi	r16,sp,120
   23e84:	003ef806 	br	23a68 <___vfprintf_internal_r+0x71c>
   23e88:	18c03fcc 	andi	r3,r3,255
   23e8c:	18059d1e 	bne	r3,zero,25504 <___vfprintf_internal_r+0x21b8>
   23e90:	014000f4 	movhi	r5,3
   23e94:	294e2704 	addi	r5,r5,14492
   23e98:	d9403915 	stw	r5,228(sp)
   23e9c:	9080080c 	andi	r2,r18,32
   23ea0:	10005226 	beq	r2,zero,23fec <___vfprintf_internal_r+0xca0>
   23ea4:	d8802d17 	ldw	r2,180(sp)
   23ea8:	14c00017 	ldw	r19,0(r2)
   23eac:	15800117 	ldw	r22,4(r2)
   23eb0:	10800204 	addi	r2,r2,8
   23eb4:	d8802d15 	stw	r2,180(sp)
   23eb8:	9080004c 	andi	r2,r18,1
   23ebc:	10019026 	beq	r2,zero,24500 <___vfprintf_internal_r+0x11b4>
   23ec0:	9d84b03a 	or	r2,r19,r22
   23ec4:	10036926 	beq	r2,zero,24c6c <___vfprintf_internal_r+0x1920>
   23ec8:	d8c02917 	ldw	r3,164(sp)
   23ecc:	00800c04 	movi	r2,48
   23ed0:	d8802705 	stb	r2,156(sp)
   23ed4:	dc402745 	stb	r17,157(sp)
   23ed8:	d8002785 	stb	zero,158(sp)
   23edc:	90800094 	ori	r2,r18,2
   23ee0:	18045d16 	blt	r3,zero,25058 <___vfprintf_internal_r+0x1d0c>
   23ee4:	00bfdfc4 	movi	r2,-129
   23ee8:	90a4703a 	and	r18,r18,r2
   23eec:	94800094 	ori	r18,r18,2
   23ef0:	0039883a 	mov	fp,zero
   23ef4:	d9003917 	ldw	r4,228(sp)
   23ef8:	dc001e04 	addi	r16,sp,120
   23efc:	988003cc 	andi	r2,r19,15
   23f00:	b006973a 	slli	r3,r22,28
   23f04:	2085883a 	add	r2,r4,r2
   23f08:	9826d13a 	srli	r19,r19,4
   23f0c:	10800003 	ldbu	r2,0(r2)
   23f10:	b02cd13a 	srli	r22,r22,4
   23f14:	843fffc4 	addi	r16,r16,-1
   23f18:	1ce6b03a 	or	r19,r3,r19
   23f1c:	80800005 	stb	r2,0(r16)
   23f20:	9d84b03a 	or	r2,r19,r22
   23f24:	103ff51e 	bne	r2,zero,23efc <___vfprintf_internal_r+0xbb0>
   23f28:	d8c02817 	ldw	r3,160(sp)
   23f2c:	1c07c83a 	sub	r3,r3,r16
   23f30:	d8c02e15 	stw	r3,184(sp)
   23f34:	003ecc06 	br	23a68 <___vfprintf_internal_r+0x71c>
   23f38:	18c03fcc 	andi	r3,r3,255
   23f3c:	183e9f26 	beq	r3,zero,239bc <___vfprintf_internal_r+0x670>
   23f40:	d9c02785 	stb	r7,158(sp)
   23f44:	003e9d06 	br	239bc <___vfprintf_internal_r+0x670>
   23f48:	00c00044 	movi	r3,1
   23f4c:	01c00ac4 	movi	r7,43
   23f50:	ac400007 	ldb	r17,0(r21)
   23f54:	003d5e06 	br	234d0 <___vfprintf_internal_r+0x184>
   23f58:	94800814 	ori	r18,r18,32
   23f5c:	ac400007 	ldb	r17,0(r21)
   23f60:	003d5b06 	br	234d0 <___vfprintf_internal_r+0x184>
   23f64:	d8c02d17 	ldw	r3,180(sp)
   23f68:	d8002785 	stb	zero,158(sp)
   23f6c:	1c000017 	ldw	r16,0(r3)
   23f70:	1cc00104 	addi	r19,r3,4
   23f74:	80041926 	beq	r16,zero,24fdc <___vfprintf_internal_r+0x1c90>
   23f78:	d9002917 	ldw	r4,164(sp)
   23f7c:	2003d016 	blt	r4,zero,24ec0 <___vfprintf_internal_r+0x1b74>
   23f80:	200d883a 	mov	r6,r4
   23f84:	000b883a 	mov	r5,zero
   23f88:	8009883a 	mov	r4,r16
   23f8c:	da003d15 	stw	r8,244(sp)
   23f90:	0028b5c0 	call	28b5c <memchr>
   23f94:	da003d17 	ldw	r8,244(sp)
   23f98:	10045426 	beq	r2,zero,250ec <___vfprintf_internal_r+0x1da0>
   23f9c:	1405c83a 	sub	r2,r2,r16
   23fa0:	d8802e15 	stw	r2,184(sp)
   23fa4:	1003cc16 	blt	r2,zero,24ed8 <___vfprintf_internal_r+0x1b8c>
   23fa8:	df002783 	ldbu	fp,158(sp)
   23fac:	d8802a15 	stw	r2,168(sp)
   23fb0:	dcc02d15 	stw	r19,180(sp)
   23fb4:	d8002915 	stw	zero,164(sp)
   23fb8:	d8003215 	stw	zero,200(sp)
   23fbc:	003eb006 	br	23a80 <___vfprintf_internal_r+0x734>
   23fc0:	18c03fcc 	andi	r3,r3,255
   23fc4:	183f9b26 	beq	r3,zero,23e34 <___vfprintf_internal_r+0xae8>
   23fc8:	d9c02785 	stb	r7,158(sp)
   23fcc:	003f9906 	br	23e34 <___vfprintf_internal_r+0xae8>
   23fd0:	18c03fcc 	andi	r3,r3,255
   23fd4:	1805551e 	bne	r3,zero,2552c <___vfprintf_internal_r+0x21e0>
   23fd8:	014000f4 	movhi	r5,3
   23fdc:	294e2c04 	addi	r5,r5,14512
   23fe0:	d9403915 	stw	r5,228(sp)
   23fe4:	9080080c 	andi	r2,r18,32
   23fe8:	103fae1e 	bne	r2,zero,23ea4 <___vfprintf_internal_r+0xb58>
   23fec:	9080040c 	andi	r2,r18,16
   23ff0:	1002de26 	beq	r2,zero,24b6c <___vfprintf_internal_r+0x1820>
   23ff4:	d8c02d17 	ldw	r3,180(sp)
   23ff8:	002d883a 	mov	r22,zero
   23ffc:	1cc00017 	ldw	r19,0(r3)
   24000:	18c00104 	addi	r3,r3,4
   24004:	d8c02d15 	stw	r3,180(sp)
   24008:	003fab06 	br	23eb8 <___vfprintf_internal_r+0xb6c>
   2400c:	38803fcc 	andi	r2,r7,255
   24010:	1080201c 	xori	r2,r2,128
   24014:	10bfe004 	addi	r2,r2,-128
   24018:	1002d21e 	bne	r2,zero,24b64 <___vfprintf_internal_r+0x1818>
   2401c:	00c00044 	movi	r3,1
   24020:	01c00804 	movi	r7,32
   24024:	ac400007 	ldb	r17,0(r21)
   24028:	003d2906 	br	234d0 <___vfprintf_internal_r+0x184>
   2402c:	94800054 	ori	r18,r18,1
   24030:	ac400007 	ldb	r17,0(r21)
   24034:	003d2606 	br	234d0 <___vfprintf_internal_r+0x184>
   24038:	18c03fcc 	andi	r3,r3,255
   2403c:	183e0526 	beq	r3,zero,23854 <___vfprintf_internal_r+0x508>
   24040:	d9c02785 	stb	r7,158(sp)
   24044:	003e0306 	br	23854 <___vfprintf_internal_r+0x508>
   24048:	94801014 	ori	r18,r18,64
   2404c:	ac400007 	ldb	r17,0(r21)
   24050:	003d1f06 	br	234d0 <___vfprintf_internal_r+0x184>
   24054:	ac400007 	ldb	r17,0(r21)
   24058:	8a438726 	beq	r17,r9,24e78 <___vfprintf_internal_r+0x1b2c>
   2405c:	94800414 	ori	r18,r18,16
   24060:	003d1b06 	br	234d0 <___vfprintf_internal_r+0x184>
   24064:	18c03fcc 	andi	r3,r3,255
   24068:	1805341e 	bne	r3,zero,2553c <___vfprintf_internal_r+0x21f0>
   2406c:	9080080c 	andi	r2,r18,32
   24070:	1002cd26 	beq	r2,zero,24ba8 <___vfprintf_internal_r+0x185c>
   24074:	d9402d17 	ldw	r5,180(sp)
   24078:	d9002f17 	ldw	r4,188(sp)
   2407c:	28800017 	ldw	r2,0(r5)
   24080:	2007d7fa 	srai	r3,r4,31
   24084:	29400104 	addi	r5,r5,4
   24088:	d9402d15 	stw	r5,180(sp)
   2408c:	11000015 	stw	r4,0(r2)
   24090:	10c00115 	stw	r3,4(r2)
   24094:	003ce506 	br	2342c <___vfprintf_internal_r+0xe0>
   24098:	d8c02d17 	ldw	r3,180(sp)
   2409c:	d9002d17 	ldw	r4,180(sp)
   240a0:	d8002785 	stb	zero,158(sp)
   240a4:	18800017 	ldw	r2,0(r3)
   240a8:	21000104 	addi	r4,r4,4
   240ac:	00c00044 	movi	r3,1
   240b0:	d8c02a15 	stw	r3,168(sp)
   240b4:	d8801405 	stb	r2,80(sp)
   240b8:	d9002d15 	stw	r4,180(sp)
   240bc:	d8c02e15 	stw	r3,184(sp)
   240c0:	d8002915 	stw	zero,164(sp)
   240c4:	d8003215 	stw	zero,200(sp)
   240c8:	dc001404 	addi	r16,sp,80
   240cc:	0039883a 	mov	fp,zero
   240d0:	003e7206 	br	23a9c <___vfprintf_internal_r+0x750>
   240d4:	010000f4 	movhi	r4,3
   240d8:	210e2c04 	addi	r4,r4,14512
   240dc:	0039883a 	mov	fp,zero
   240e0:	d9003915 	stw	r4,228(sp)
   240e4:	04401e04 	movi	r17,120
   240e8:	003f8206 	br	23ef4 <___vfprintf_internal_r+0xba8>
   240ec:	18c03fcc 	andi	r3,r3,255
   240f0:	1805061e 	bne	r3,zero,2550c <___vfprintf_internal_r+0x21c0>
   240f4:	883d9126 	beq	r17,zero,2373c <___vfprintf_internal_r+0x3f0>
   240f8:	00c00044 	movi	r3,1
   240fc:	d8c02a15 	stw	r3,168(sp)
   24100:	dc401405 	stb	r17,80(sp)
   24104:	d8002785 	stb	zero,158(sp)
   24108:	003fec06 	br	240bc <___vfprintf_internal_r+0xd70>
   2410c:	014000f4 	movhi	r5,3
   24110:	294e2c04 	addi	r5,r5,14512
   24114:	d9403915 	stw	r5,228(sp)
   24118:	d8c02d15 	stw	r3,180(sp)
   2411c:	1025883a 	mov	r18,r2
   24120:	04401e04 	movi	r17,120
   24124:	9d84b03a 	or	r2,r19,r22
   24128:	1000fc1e 	bne	r2,zero,2451c <___vfprintf_internal_r+0x11d0>
   2412c:	0039883a 	mov	fp,zero
   24130:	00800084 	movi	r2,2
   24134:	10803fcc 	andi	r2,r2,255
   24138:	00c00044 	movi	r3,1
   2413c:	10c20f26 	beq	r2,r3,2497c <___vfprintf_internal_r+0x1630>
   24140:	00c00084 	movi	r3,2
   24144:	10fd6326 	beq	r2,r3,236d4 <___vfprintf_internal_r+0x388>
   24148:	003e2d06 	br	23a00 <___vfprintf_internal_r+0x6b4>
   2414c:	d8c02017 	ldw	r3,128(sp)
   24150:	003e9306 	br	23ba0 <___vfprintf_internal_r+0x854>
   24154:	00801944 	movi	r2,101
   24158:	14407e0e 	bge	r2,r17,24354 <___vfprintf_internal_r+0x1008>
   2415c:	d9003617 	ldw	r4,216(sp)
   24160:	d9403817 	ldw	r5,224(sp)
   24164:	000d883a 	mov	r6,zero
   24168:	000f883a 	mov	r7,zero
   2416c:	d8c03c15 	stw	r3,240(sp)
   24170:	da003d15 	stw	r8,244(sp)
   24174:	002f9cc0 	call	2f9cc <__eqdf2>
   24178:	d8c03c17 	ldw	r3,240(sp)
   2417c:	da003d17 	ldw	r8,244(sp)
   24180:	1000f71e 	bne	r2,zero,24560 <___vfprintf_internal_r+0x1214>
   24184:	d8801f17 	ldw	r2,124(sp)
   24188:	010000f4 	movhi	r4,3
   2418c:	210e3304 	addi	r4,r4,14540
   24190:	18c00044 	addi	r3,r3,1
   24194:	10800044 	addi	r2,r2,1
   24198:	41000015 	stw	r4,0(r8)
   2419c:	01000044 	movi	r4,1
   241a0:	41000115 	stw	r4,4(r8)
   241a4:	d8c02015 	stw	r3,128(sp)
   241a8:	d8801f15 	stw	r2,124(sp)
   241ac:	010001c4 	movi	r4,7
   241b0:	2082b816 	blt	r4,r2,24c94 <___vfprintf_internal_r+0x1948>
   241b4:	42000204 	addi	r8,r8,8
   241b8:	d8802617 	ldw	r2,152(sp)
   241bc:	d9403317 	ldw	r5,204(sp)
   241c0:	11400216 	blt	r2,r5,241cc <___vfprintf_internal_r+0xe80>
   241c4:	9080004c 	andi	r2,r18,1
   241c8:	103ed526 	beq	r2,zero,23d20 <___vfprintf_internal_r+0x9d4>
   241cc:	d8803717 	ldw	r2,220(sp)
   241d0:	d9003417 	ldw	r4,208(sp)
   241d4:	d9403717 	ldw	r5,220(sp)
   241d8:	1887883a 	add	r3,r3,r2
   241dc:	d8801f17 	ldw	r2,124(sp)
   241e0:	41000015 	stw	r4,0(r8)
   241e4:	41400115 	stw	r5,4(r8)
   241e8:	10800044 	addi	r2,r2,1
   241ec:	d8c02015 	stw	r3,128(sp)
   241f0:	d8801f15 	stw	r2,124(sp)
   241f4:	010001c4 	movi	r4,7
   241f8:	20832916 	blt	r4,r2,24ea0 <___vfprintf_internal_r+0x1b54>
   241fc:	42000204 	addi	r8,r8,8
   24200:	d8803317 	ldw	r2,204(sp)
   24204:	143fffc4 	addi	r16,r2,-1
   24208:	043ec50e 	bge	zero,r16,23d20 <___vfprintf_internal_r+0x9d4>
   2420c:	04400404 	movi	r17,16
   24210:	d8801f17 	ldw	r2,124(sp)
   24214:	8c00880e 	bge	r17,r16,24438 <___vfprintf_internal_r+0x10ec>
   24218:	014000f4 	movhi	r5,3
   2421c:	294e3b84 	addi	r5,r5,14574
   24220:	d9402b15 	stw	r5,172(sp)
   24224:	058001c4 	movi	r22,7
   24228:	dcc02c17 	ldw	r19,176(sp)
   2422c:	00000306 	br	2423c <___vfprintf_internal_r+0xef0>
   24230:	42000204 	addi	r8,r8,8
   24234:	843ffc04 	addi	r16,r16,-16
   24238:	8c00820e 	bge	r17,r16,24444 <___vfprintf_internal_r+0x10f8>
   2423c:	18c00404 	addi	r3,r3,16
   24240:	10800044 	addi	r2,r2,1
   24244:	45000015 	stw	r20,0(r8)
   24248:	44400115 	stw	r17,4(r8)
   2424c:	d8c02015 	stw	r3,128(sp)
   24250:	d8801f15 	stw	r2,124(sp)
   24254:	b0bff60e 	bge	r22,r2,24230 <___vfprintf_internal_r+0xee4>
   24258:	d9801e04 	addi	r6,sp,120
   2425c:	b80b883a 	mov	r5,r23
   24260:	9809883a 	mov	r4,r19
   24264:	002bd540 	call	2bd54 <__sprint_r>
   24268:	103d3a1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   2426c:	d8c02017 	ldw	r3,128(sp)
   24270:	d8801f17 	ldw	r2,124(sp)
   24274:	da000404 	addi	r8,sp,16
   24278:	003fee06 	br	24234 <___vfprintf_internal_r+0xee8>
   2427c:	d9403117 	ldw	r5,196(sp)
   24280:	d8802a17 	ldw	r2,168(sp)
   24284:	28adc83a 	sub	r22,r5,r2
   24288:	05be630e 	bge	zero,r22,23c18 <___vfprintf_internal_r+0x8cc>
   2428c:	07000404 	movi	fp,16
   24290:	d8801f17 	ldw	r2,124(sp)
   24294:	e5838f0e 	bge	fp,r22,250d4 <___vfprintf_internal_r+0x1d88>
   24298:	014000f4 	movhi	r5,3
   2429c:	294e3b84 	addi	r5,r5,14574
   242a0:	dc403015 	stw	r17,192(sp)
   242a4:	d9402b15 	stw	r5,172(sp)
   242a8:	b023883a 	mov	r17,r22
   242ac:	04c001c4 	movi	r19,7
   242b0:	a82d883a 	mov	r22,r21
   242b4:	902b883a 	mov	r21,r18
   242b8:	8025883a 	mov	r18,r16
   242bc:	dc002c17 	ldw	r16,176(sp)
   242c0:	00000306 	br	242d0 <___vfprintf_internal_r+0xf84>
   242c4:	8c7ffc04 	addi	r17,r17,-16
   242c8:	42000204 	addi	r8,r8,8
   242cc:	e440110e 	bge	fp,r17,24314 <___vfprintf_internal_r+0xfc8>
   242d0:	18c00404 	addi	r3,r3,16
   242d4:	10800044 	addi	r2,r2,1
   242d8:	45000015 	stw	r20,0(r8)
   242dc:	47000115 	stw	fp,4(r8)
   242e0:	d8c02015 	stw	r3,128(sp)
   242e4:	d8801f15 	stw	r2,124(sp)
   242e8:	98bff60e 	bge	r19,r2,242c4 <___vfprintf_internal_r+0xf78>
   242ec:	d9801e04 	addi	r6,sp,120
   242f0:	b80b883a 	mov	r5,r23
   242f4:	8009883a 	mov	r4,r16
   242f8:	002bd540 	call	2bd54 <__sprint_r>
   242fc:	103d151e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24300:	8c7ffc04 	addi	r17,r17,-16
   24304:	d8c02017 	ldw	r3,128(sp)
   24308:	d8801f17 	ldw	r2,124(sp)
   2430c:	da000404 	addi	r8,sp,16
   24310:	e47fef16 	blt	fp,r17,242d0 <___vfprintf_internal_r+0xf84>
   24314:	9021883a 	mov	r16,r18
   24318:	a825883a 	mov	r18,r21
   2431c:	b02b883a 	mov	r21,r22
   24320:	882d883a 	mov	r22,r17
   24324:	dc403017 	ldw	r17,192(sp)
   24328:	d9002b17 	ldw	r4,172(sp)
   2432c:	1d87883a 	add	r3,r3,r22
   24330:	10800044 	addi	r2,r2,1
   24334:	41000015 	stw	r4,0(r8)
   24338:	45800115 	stw	r22,4(r8)
   2433c:	d8c02015 	stw	r3,128(sp)
   24340:	d8801f15 	stw	r2,124(sp)
   24344:	010001c4 	movi	r4,7
   24348:	20818e16 	blt	r4,r2,24984 <___vfprintf_internal_r+0x1638>
   2434c:	42000204 	addi	r8,r8,8
   24350:	003e3106 	br	23c18 <___vfprintf_internal_r+0x8cc>
   24354:	d9403317 	ldw	r5,204(sp)
   24358:	00800044 	movi	r2,1
   2435c:	18c00044 	addi	r3,r3,1
   24360:	1141530e 	bge	r2,r5,248b0 <___vfprintf_internal_r+0x1564>
   24364:	dc401f17 	ldw	r17,124(sp)
   24368:	00800044 	movi	r2,1
   2436c:	40800115 	stw	r2,4(r8)
   24370:	8c400044 	addi	r17,r17,1
   24374:	44000015 	stw	r16,0(r8)
   24378:	d8c02015 	stw	r3,128(sp)
   2437c:	dc401f15 	stw	r17,124(sp)
   24380:	008001c4 	movi	r2,7
   24384:	14416b16 	blt	r2,r17,24934 <___vfprintf_internal_r+0x15e8>
   24388:	42000204 	addi	r8,r8,8
   2438c:	d8803717 	ldw	r2,220(sp)
   24390:	d9003417 	ldw	r4,208(sp)
   24394:	8c400044 	addi	r17,r17,1
   24398:	10c7883a 	add	r3,r2,r3
   2439c:	40800115 	stw	r2,4(r8)
   243a0:	41000015 	stw	r4,0(r8)
   243a4:	d8c02015 	stw	r3,128(sp)
   243a8:	dc401f15 	stw	r17,124(sp)
   243ac:	008001c4 	movi	r2,7
   243b0:	14416916 	blt	r2,r17,24958 <___vfprintf_internal_r+0x160c>
   243b4:	45800204 	addi	r22,r8,8
   243b8:	d9003617 	ldw	r4,216(sp)
   243bc:	d9403817 	ldw	r5,224(sp)
   243c0:	000d883a 	mov	r6,zero
   243c4:	000f883a 	mov	r7,zero
   243c8:	d8c03c15 	stw	r3,240(sp)
   243cc:	002f9cc0 	call	2f9cc <__eqdf2>
   243d0:	d8c03c17 	ldw	r3,240(sp)
   243d4:	1000bc26 	beq	r2,zero,246c8 <___vfprintf_internal_r+0x137c>
   243d8:	d9403317 	ldw	r5,204(sp)
   243dc:	84000044 	addi	r16,r16,1
   243e0:	8c400044 	addi	r17,r17,1
   243e4:	28bfffc4 	addi	r2,r5,-1
   243e8:	1887883a 	add	r3,r3,r2
   243ec:	b0800115 	stw	r2,4(r22)
   243f0:	b4000015 	stw	r16,0(r22)
   243f4:	d8c02015 	stw	r3,128(sp)
   243f8:	dc401f15 	stw	r17,124(sp)
   243fc:	008001c4 	movi	r2,7
   24400:	14414316 	blt	r2,r17,24910 <___vfprintf_internal_r+0x15c4>
   24404:	b5800204 	addi	r22,r22,8
   24408:	d9003a17 	ldw	r4,232(sp)
   2440c:	df0022c4 	addi	fp,sp,139
   24410:	8c400044 	addi	r17,r17,1
   24414:	20c7883a 	add	r3,r4,r3
   24418:	b7000015 	stw	fp,0(r22)
   2441c:	b1000115 	stw	r4,4(r22)
   24420:	d8c02015 	stw	r3,128(sp)
   24424:	dc401f15 	stw	r17,124(sp)
   24428:	008001c4 	movi	r2,7
   2442c:	14400e16 	blt	r2,r17,24468 <___vfprintf_internal_r+0x111c>
   24430:	b2000204 	addi	r8,r22,8
   24434:	003e3a06 	br	23d20 <___vfprintf_internal_r+0x9d4>
   24438:	010000f4 	movhi	r4,3
   2443c:	210e3b84 	addi	r4,r4,14574
   24440:	d9002b15 	stw	r4,172(sp)
   24444:	d9002b17 	ldw	r4,172(sp)
   24448:	1c07883a 	add	r3,r3,r16
   2444c:	44000115 	stw	r16,4(r8)
   24450:	41000015 	stw	r4,0(r8)
   24454:	10800044 	addi	r2,r2,1
   24458:	d8c02015 	stw	r3,128(sp)
   2445c:	d8801f15 	stw	r2,124(sp)
   24460:	010001c4 	movi	r4,7
   24464:	20be2d0e 	bge	r4,r2,23d1c <___vfprintf_internal_r+0x9d0>
   24468:	d9002c17 	ldw	r4,176(sp)
   2446c:	d9801e04 	addi	r6,sp,120
   24470:	b80b883a 	mov	r5,r23
   24474:	002bd540 	call	2bd54 <__sprint_r>
   24478:	103cb61e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   2447c:	d8c02017 	ldw	r3,128(sp)
   24480:	da000404 	addi	r8,sp,16
   24484:	003e2606 	br	23d20 <___vfprintf_internal_r+0x9d4>
   24488:	d9002c17 	ldw	r4,176(sp)
   2448c:	d9801e04 	addi	r6,sp,120
   24490:	b80b883a 	mov	r5,r23
   24494:	002bd540 	call	2bd54 <__sprint_r>
   24498:	103e5d26 	beq	r2,zero,23e10 <___vfprintf_internal_r+0xac4>
   2449c:	003cad06 	br	23754 <___vfprintf_internal_r+0x408>
   244a0:	d9002c17 	ldw	r4,176(sp)
   244a4:	d9801e04 	addi	r6,sp,120
   244a8:	b80b883a 	mov	r5,r23
   244ac:	002bd540 	call	2bd54 <__sprint_r>
   244b0:	103ca81e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   244b4:	d8c02017 	ldw	r3,128(sp)
   244b8:	da000404 	addi	r8,sp,16
   244bc:	003e0b06 	br	23cec <___vfprintf_internal_r+0x9a0>
   244c0:	d9002c17 	ldw	r4,176(sp)
   244c4:	d9801e04 	addi	r6,sp,120
   244c8:	b80b883a 	mov	r5,r23
   244cc:	002bd540 	call	2bd54 <__sprint_r>
   244d0:	103ca01e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   244d4:	d8c02017 	ldw	r3,128(sp)
   244d8:	da000404 	addi	r8,sp,16
   244dc:	003dbd06 	br	23bd4 <___vfprintf_internal_r+0x888>
   244e0:	d9002c17 	ldw	r4,176(sp)
   244e4:	d9801e04 	addi	r6,sp,120
   244e8:	b80b883a 	mov	r5,r23
   244ec:	002bd540 	call	2bd54 <__sprint_r>
   244f0:	103c981e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   244f4:	d8c02017 	ldw	r3,128(sp)
   244f8:	da000404 	addi	r8,sp,16
   244fc:	003dc306 	br	23c0c <___vfprintf_internal_r+0x8c0>
   24500:	d8802917 	ldw	r2,164(sp)
   24504:	d8002785 	stb	zero,158(sp)
   24508:	103f0616 	blt	r2,zero,24124 <___vfprintf_internal_r+0xdd8>
   2450c:	00ffdfc4 	movi	r3,-129
   24510:	9d84b03a 	or	r2,r19,r22
   24514:	90e4703a 	and	r18,r18,r3
   24518:	103c6b26 	beq	r2,zero,236c8 <___vfprintf_internal_r+0x37c>
   2451c:	0039883a 	mov	fp,zero
   24520:	003e7406 	br	23ef4 <___vfprintf_internal_r+0xba8>
   24524:	9080040c 	andi	r2,r18,16
   24528:	1001b326 	beq	r2,zero,24bf8 <___vfprintf_internal_r+0x18ac>
   2452c:	d9002d17 	ldw	r4,180(sp)
   24530:	d9402917 	ldw	r5,164(sp)
   24534:	d8002785 	stb	zero,158(sp)
   24538:	20800104 	addi	r2,r4,4
   2453c:	24c00017 	ldw	r19,0(r4)
   24540:	002d883a 	mov	r22,zero
   24544:	2801b516 	blt	r5,zero,24c1c <___vfprintf_internal_r+0x18d0>
   24548:	00ffdfc4 	movi	r3,-129
   2454c:	d8802d15 	stw	r2,180(sp)
   24550:	90e4703a 	and	r18,r18,r3
   24554:	983d2726 	beq	r19,zero,239f4 <___vfprintf_internal_r+0x6a8>
   24558:	0039883a 	mov	fp,zero
   2455c:	003d2a06 	br	23a08 <___vfprintf_internal_r+0x6bc>
   24560:	dc402617 	ldw	r17,152(sp)
   24564:	0441d30e 	bge	zero,r17,24cb4 <___vfprintf_internal_r+0x1968>
   24568:	dc403217 	ldw	r17,200(sp)
   2456c:	d8803317 	ldw	r2,204(sp)
   24570:	1440010e 	bge	r2,r17,24578 <___vfprintf_internal_r+0x122c>
   24574:	1023883a 	mov	r17,r2
   24578:	04400a0e 	bge	zero,r17,245a4 <___vfprintf_internal_r+0x1258>
   2457c:	d8801f17 	ldw	r2,124(sp)
   24580:	1c47883a 	add	r3,r3,r17
   24584:	44000015 	stw	r16,0(r8)
   24588:	10800044 	addi	r2,r2,1
   2458c:	44400115 	stw	r17,4(r8)
   24590:	d8c02015 	stw	r3,128(sp)
   24594:	d8801f15 	stw	r2,124(sp)
   24598:	010001c4 	movi	r4,7
   2459c:	20826516 	blt	r4,r2,24f34 <___vfprintf_internal_r+0x1be8>
   245a0:	42000204 	addi	r8,r8,8
   245a4:	88026116 	blt	r17,zero,24f2c <___vfprintf_internal_r+0x1be0>
   245a8:	d9003217 	ldw	r4,200(sp)
   245ac:	2463c83a 	sub	r17,r4,r17
   245b0:	04407b0e 	bge	zero,r17,247a0 <___vfprintf_internal_r+0x1454>
   245b4:	05800404 	movi	r22,16
   245b8:	d8801f17 	ldw	r2,124(sp)
   245bc:	b4419d0e 	bge	r22,r17,24c34 <___vfprintf_internal_r+0x18e8>
   245c0:	010000f4 	movhi	r4,3
   245c4:	210e3b84 	addi	r4,r4,14574
   245c8:	d9002b15 	stw	r4,172(sp)
   245cc:	070001c4 	movi	fp,7
   245d0:	dcc02c17 	ldw	r19,176(sp)
   245d4:	00000306 	br	245e4 <___vfprintf_internal_r+0x1298>
   245d8:	42000204 	addi	r8,r8,8
   245dc:	8c7ffc04 	addi	r17,r17,-16
   245e0:	b441970e 	bge	r22,r17,24c40 <___vfprintf_internal_r+0x18f4>
   245e4:	18c00404 	addi	r3,r3,16
   245e8:	10800044 	addi	r2,r2,1
   245ec:	45000015 	stw	r20,0(r8)
   245f0:	45800115 	stw	r22,4(r8)
   245f4:	d8c02015 	stw	r3,128(sp)
   245f8:	d8801f15 	stw	r2,124(sp)
   245fc:	e0bff60e 	bge	fp,r2,245d8 <___vfprintf_internal_r+0x128c>
   24600:	d9801e04 	addi	r6,sp,120
   24604:	b80b883a 	mov	r5,r23
   24608:	9809883a 	mov	r4,r19
   2460c:	002bd540 	call	2bd54 <__sprint_r>
   24610:	103c501e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24614:	d8c02017 	ldw	r3,128(sp)
   24618:	d8801f17 	ldw	r2,124(sp)
   2461c:	da000404 	addi	r8,sp,16
   24620:	003fee06 	br	245dc <___vfprintf_internal_r+0x1290>
   24624:	d9002c17 	ldw	r4,176(sp)
   24628:	d9801e04 	addi	r6,sp,120
   2462c:	b80b883a 	mov	r5,r23
   24630:	002bd540 	call	2bd54 <__sprint_r>
   24634:	103c471e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24638:	d8c02017 	ldw	r3,128(sp)
   2463c:	df002787 	ldb	fp,158(sp)
   24640:	da000404 	addi	r8,sp,16
   24644:	003d5606 	br	23ba0 <___vfprintf_internal_r+0x854>
   24648:	9080040c 	andi	r2,r18,16
   2464c:	10016126 	beq	r2,zero,24bd4 <___vfprintf_internal_r+0x1888>
   24650:	d8802d17 	ldw	r2,180(sp)
   24654:	14c00017 	ldw	r19,0(r2)
   24658:	10800104 	addi	r2,r2,4
   2465c:	d8802d15 	stw	r2,180(sp)
   24660:	982dd7fa 	srai	r22,r19,31
   24664:	b005883a 	mov	r2,r22
   24668:	003c8206 	br	23874 <___vfprintf_internal_r+0x528>
   2466c:	9080040c 	andi	r2,r18,16
   24670:	10003526 	beq	r2,zero,24748 <___vfprintf_internal_r+0x13fc>
   24674:	d9402d17 	ldw	r5,180(sp)
   24678:	d8c02917 	ldw	r3,164(sp)
   2467c:	d8002785 	stb	zero,158(sp)
   24680:	28800104 	addi	r2,r5,4
   24684:	2cc00017 	ldw	r19,0(r5)
   24688:	002d883a 	mov	r22,zero
   2468c:	18003716 	blt	r3,zero,2476c <___vfprintf_internal_r+0x1420>
   24690:	00ffdfc4 	movi	r3,-129
   24694:	d8802d15 	stw	r2,180(sp)
   24698:	90e4703a 	and	r18,r18,r3
   2469c:	0039883a 	mov	fp,zero
   246a0:	983df326 	beq	r19,zero,23e70 <___vfprintf_internal_r+0xb24>
   246a4:	00800244 	movi	r2,9
   246a8:	14fc7b36 	bltu	r2,r19,23898 <___vfprintf_internal_r+0x54c>
   246ac:	d8c02817 	ldw	r3,160(sp)
   246b0:	dc001dc4 	addi	r16,sp,119
   246b4:	9cc00c04 	addi	r19,r19,48
   246b8:	1c07c83a 	sub	r3,r3,r16
   246bc:	dcc01dc5 	stb	r19,119(sp)
   246c0:	d8c02e15 	stw	r3,184(sp)
   246c4:	003ce806 	br	23a68 <___vfprintf_internal_r+0x71c>
   246c8:	d8803317 	ldw	r2,204(sp)
   246cc:	143fffc4 	addi	r16,r2,-1
   246d0:	043f4d0e 	bge	zero,r16,24408 <___vfprintf_internal_r+0x10bc>
   246d4:	07000404 	movi	fp,16
   246d8:	e400810e 	bge	fp,r16,248e0 <___vfprintf_internal_r+0x1594>
   246dc:	014000f4 	movhi	r5,3
   246e0:	294e3b84 	addi	r5,r5,14574
   246e4:	d9402b15 	stw	r5,172(sp)
   246e8:	01c001c4 	movi	r7,7
   246ec:	dcc02c17 	ldw	r19,176(sp)
   246f0:	00000306 	br	24700 <___vfprintf_internal_r+0x13b4>
   246f4:	b5800204 	addi	r22,r22,8
   246f8:	843ffc04 	addi	r16,r16,-16
   246fc:	e4007b0e 	bge	fp,r16,248ec <___vfprintf_internal_r+0x15a0>
   24700:	18c00404 	addi	r3,r3,16
   24704:	8c400044 	addi	r17,r17,1
   24708:	b5000015 	stw	r20,0(r22)
   2470c:	b7000115 	stw	fp,4(r22)
   24710:	d8c02015 	stw	r3,128(sp)
   24714:	dc401f15 	stw	r17,124(sp)
   24718:	3c7ff60e 	bge	r7,r17,246f4 <___vfprintf_internal_r+0x13a8>
   2471c:	d9801e04 	addi	r6,sp,120
   24720:	b80b883a 	mov	r5,r23
   24724:	9809883a 	mov	r4,r19
   24728:	d9c03c15 	stw	r7,240(sp)
   2472c:	002bd540 	call	2bd54 <__sprint_r>
   24730:	d9c03c17 	ldw	r7,240(sp)
   24734:	103c071e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24738:	d8c02017 	ldw	r3,128(sp)
   2473c:	dc401f17 	ldw	r17,124(sp)
   24740:	dd800404 	addi	r22,sp,16
   24744:	003fec06 	br	246f8 <___vfprintf_internal_r+0x13ac>
   24748:	9080100c 	andi	r2,r18,64
   2474c:	d8002785 	stb	zero,158(sp)
   24750:	10010e26 	beq	r2,zero,24b8c <___vfprintf_internal_r+0x1840>
   24754:	d9002d17 	ldw	r4,180(sp)
   24758:	d9402917 	ldw	r5,164(sp)
   2475c:	002d883a 	mov	r22,zero
   24760:	20800104 	addi	r2,r4,4
   24764:	24c0000b 	ldhu	r19,0(r4)
   24768:	283fc90e 	bge	r5,zero,24690 <___vfprintf_internal_r+0x1344>
   2476c:	d8802d15 	stw	r2,180(sp)
   24770:	0039883a 	mov	fp,zero
   24774:	9d84b03a 	or	r2,r19,r22
   24778:	103c461e 	bne	r2,zero,23894 <___vfprintf_internal_r+0x548>
   2477c:	00800044 	movi	r2,1
   24780:	003e6c06 	br	24134 <___vfprintf_internal_r+0xde8>
   24784:	d9002c17 	ldw	r4,176(sp)
   24788:	d9801e04 	addi	r6,sp,120
   2478c:	b80b883a 	mov	r5,r23
   24790:	002bd540 	call	2bd54 <__sprint_r>
   24794:	103bef1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24798:	d8c02017 	ldw	r3,128(sp)
   2479c:	da000404 	addi	r8,sp,16
   247a0:	d9003217 	ldw	r4,200(sp)
   247a4:	d8802617 	ldw	r2,152(sp)
   247a8:	d9403317 	ldw	r5,204(sp)
   247ac:	8123883a 	add	r17,r16,r4
   247b0:	11400216 	blt	r2,r5,247bc <___vfprintf_internal_r+0x1470>
   247b4:	9100004c 	andi	r4,r18,1
   247b8:	20000d26 	beq	r4,zero,247f0 <___vfprintf_internal_r+0x14a4>
   247bc:	d9003717 	ldw	r4,220(sp)
   247c0:	d9403417 	ldw	r5,208(sp)
   247c4:	1907883a 	add	r3,r3,r4
   247c8:	d9001f17 	ldw	r4,124(sp)
   247cc:	41400015 	stw	r5,0(r8)
   247d0:	d9403717 	ldw	r5,220(sp)
   247d4:	21000044 	addi	r4,r4,1
   247d8:	d8c02015 	stw	r3,128(sp)
   247dc:	41400115 	stw	r5,4(r8)
   247e0:	d9001f15 	stw	r4,124(sp)
   247e4:	014001c4 	movi	r5,7
   247e8:	2901e816 	blt	r5,r4,24f8c <___vfprintf_internal_r+0x1c40>
   247ec:	42000204 	addi	r8,r8,8
   247f0:	d9003317 	ldw	r4,204(sp)
   247f4:	8121883a 	add	r16,r16,r4
   247f8:	2085c83a 	sub	r2,r4,r2
   247fc:	8461c83a 	sub	r16,r16,r17
   24800:	1400010e 	bge	r2,r16,24808 <___vfprintf_internal_r+0x14bc>
   24804:	1021883a 	mov	r16,r2
   24808:	04000a0e 	bge	zero,r16,24834 <___vfprintf_internal_r+0x14e8>
   2480c:	d9001f17 	ldw	r4,124(sp)
   24810:	1c07883a 	add	r3,r3,r16
   24814:	44400015 	stw	r17,0(r8)
   24818:	21000044 	addi	r4,r4,1
   2481c:	44000115 	stw	r16,4(r8)
   24820:	d8c02015 	stw	r3,128(sp)
   24824:	d9001f15 	stw	r4,124(sp)
   24828:	014001c4 	movi	r5,7
   2482c:	2901fb16 	blt	r5,r4,2501c <___vfprintf_internal_r+0x1cd0>
   24830:	42000204 	addi	r8,r8,8
   24834:	8001f716 	blt	r16,zero,25014 <___vfprintf_internal_r+0x1cc8>
   24838:	1421c83a 	sub	r16,r2,r16
   2483c:	043d380e 	bge	zero,r16,23d20 <___vfprintf_internal_r+0x9d4>
   24840:	04400404 	movi	r17,16
   24844:	d8801f17 	ldw	r2,124(sp)
   24848:	8c3efb0e 	bge	r17,r16,24438 <___vfprintf_internal_r+0x10ec>
   2484c:	014000f4 	movhi	r5,3
   24850:	294e3b84 	addi	r5,r5,14574
   24854:	d9402b15 	stw	r5,172(sp)
   24858:	058001c4 	movi	r22,7
   2485c:	dcc02c17 	ldw	r19,176(sp)
   24860:	00000306 	br	24870 <___vfprintf_internal_r+0x1524>
   24864:	42000204 	addi	r8,r8,8
   24868:	843ffc04 	addi	r16,r16,-16
   2486c:	8c3ef50e 	bge	r17,r16,24444 <___vfprintf_internal_r+0x10f8>
   24870:	18c00404 	addi	r3,r3,16
   24874:	10800044 	addi	r2,r2,1
   24878:	45000015 	stw	r20,0(r8)
   2487c:	44400115 	stw	r17,4(r8)
   24880:	d8c02015 	stw	r3,128(sp)
   24884:	d8801f15 	stw	r2,124(sp)
   24888:	b0bff60e 	bge	r22,r2,24864 <___vfprintf_internal_r+0x1518>
   2488c:	d9801e04 	addi	r6,sp,120
   24890:	b80b883a 	mov	r5,r23
   24894:	9809883a 	mov	r4,r19
   24898:	002bd540 	call	2bd54 <__sprint_r>
   2489c:	103bad1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   248a0:	d8c02017 	ldw	r3,128(sp)
   248a4:	d8801f17 	ldw	r2,124(sp)
   248a8:	da000404 	addi	r8,sp,16
   248ac:	003fee06 	br	24868 <___vfprintf_internal_r+0x151c>
   248b0:	9088703a 	and	r4,r18,r2
   248b4:	203eab1e 	bne	r4,zero,24364 <___vfprintf_internal_r+0x1018>
   248b8:	dc401f17 	ldw	r17,124(sp)
   248bc:	40800115 	stw	r2,4(r8)
   248c0:	44000015 	stw	r16,0(r8)
   248c4:	8c400044 	addi	r17,r17,1
   248c8:	d8c02015 	stw	r3,128(sp)
   248cc:	dc401f15 	stw	r17,124(sp)
   248d0:	008001c4 	movi	r2,7
   248d4:	14400e16 	blt	r2,r17,24910 <___vfprintf_internal_r+0x15c4>
   248d8:	45800204 	addi	r22,r8,8
   248dc:	003eca06 	br	24408 <___vfprintf_internal_r+0x10bc>
   248e0:	010000f4 	movhi	r4,3
   248e4:	210e3b84 	addi	r4,r4,14574
   248e8:	d9002b15 	stw	r4,172(sp)
   248ec:	d8802b17 	ldw	r2,172(sp)
   248f0:	1c07883a 	add	r3,r3,r16
   248f4:	8c400044 	addi	r17,r17,1
   248f8:	b0800015 	stw	r2,0(r22)
   248fc:	b4000115 	stw	r16,4(r22)
   24900:	d8c02015 	stw	r3,128(sp)
   24904:	dc401f15 	stw	r17,124(sp)
   24908:	008001c4 	movi	r2,7
   2490c:	147ebd0e 	bge	r2,r17,24404 <___vfprintf_internal_r+0x10b8>
   24910:	d9002c17 	ldw	r4,176(sp)
   24914:	d9801e04 	addi	r6,sp,120
   24918:	b80b883a 	mov	r5,r23
   2491c:	002bd540 	call	2bd54 <__sprint_r>
   24920:	103b8c1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24924:	d8c02017 	ldw	r3,128(sp)
   24928:	dc401f17 	ldw	r17,124(sp)
   2492c:	dd800404 	addi	r22,sp,16
   24930:	003eb506 	br	24408 <___vfprintf_internal_r+0x10bc>
   24934:	d9002c17 	ldw	r4,176(sp)
   24938:	d9801e04 	addi	r6,sp,120
   2493c:	b80b883a 	mov	r5,r23
   24940:	002bd540 	call	2bd54 <__sprint_r>
   24944:	103b831e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24948:	d8c02017 	ldw	r3,128(sp)
   2494c:	dc401f17 	ldw	r17,124(sp)
   24950:	da000404 	addi	r8,sp,16
   24954:	003e8d06 	br	2438c <___vfprintf_internal_r+0x1040>
   24958:	d9002c17 	ldw	r4,176(sp)
   2495c:	d9801e04 	addi	r6,sp,120
   24960:	b80b883a 	mov	r5,r23
   24964:	002bd540 	call	2bd54 <__sprint_r>
   24968:	103b7a1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   2496c:	d8c02017 	ldw	r3,128(sp)
   24970:	dc401f17 	ldw	r17,124(sp)
   24974:	dd800404 	addi	r22,sp,16
   24978:	003e8f06 	br	243b8 <___vfprintf_internal_r+0x106c>
   2497c:	0027883a 	mov	r19,zero
   24980:	003f4a06 	br	246ac <___vfprintf_internal_r+0x1360>
   24984:	d9002c17 	ldw	r4,176(sp)
   24988:	d9801e04 	addi	r6,sp,120
   2498c:	b80b883a 	mov	r5,r23
   24990:	002bd540 	call	2bd54 <__sprint_r>
   24994:	103b6f1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24998:	d8c02017 	ldw	r3,128(sp)
   2499c:	da000404 	addi	r8,sp,16
   249a0:	003c9d06 	br	23c18 <___vfprintf_internal_r+0x8cc>
   249a4:	04e7c83a 	sub	r19,zero,r19
   249a8:	9804c03a 	cmpne	r2,r19,zero
   249ac:	05adc83a 	sub	r22,zero,r22
   249b0:	b0adc83a 	sub	r22,r22,r2
   249b4:	d8802917 	ldw	r2,164(sp)
   249b8:	07000b44 	movi	fp,45
   249bc:	df002785 	stb	fp,158(sp)
   249c0:	10017b16 	blt	r2,zero,24fb0 <___vfprintf_internal_r+0x1c64>
   249c4:	00bfdfc4 	movi	r2,-129
   249c8:	90a4703a 	and	r18,r18,r2
   249cc:	003bb106 	br	23894 <___vfprintf_internal_r+0x548>
   249d0:	d9003617 	ldw	r4,216(sp)
   249d4:	d9403817 	ldw	r5,224(sp)
   249d8:	da003d15 	stw	r8,244(sp)
   249dc:	002a56c0 	call	2a56c <__fpclassifyd>
   249e0:	da003d17 	ldw	r8,244(sp)
   249e4:	1000f026 	beq	r2,zero,24da8 <___vfprintf_internal_r+0x1a5c>
   249e8:	d9002917 	ldw	r4,164(sp)
   249ec:	05bff7c4 	movi	r22,-33
   249f0:	00bfffc4 	movi	r2,-1
   249f4:	8dac703a 	and	r22,r17,r22
   249f8:	20820026 	beq	r4,r2,251fc <___vfprintf_internal_r+0x1eb0>
   249fc:	008011c4 	movi	r2,71
   24a00:	b081f726 	beq	r22,r2,251e0 <___vfprintf_internal_r+0x1e94>
   24a04:	d9003817 	ldw	r4,224(sp)
   24a08:	90c04014 	ori	r3,r18,256
   24a0c:	d8c02b15 	stw	r3,172(sp)
   24a10:	20021516 	blt	r4,zero,25268 <___vfprintf_internal_r+0x1f1c>
   24a14:	dcc03817 	ldw	r19,224(sp)
   24a18:	d8002a05 	stb	zero,168(sp)
   24a1c:	00801984 	movi	r2,102
   24a20:	8881f926 	beq	r17,r2,25208 <___vfprintf_internal_r+0x1ebc>
   24a24:	00801184 	movi	r2,70
   24a28:	88821c26 	beq	r17,r2,2529c <___vfprintf_internal_r+0x1f50>
   24a2c:	00801144 	movi	r2,69
   24a30:	b081ef26 	beq	r22,r2,251f0 <___vfprintf_internal_r+0x1ea4>
   24a34:	d8c02917 	ldw	r3,164(sp)
   24a38:	d8802104 	addi	r2,sp,132
   24a3c:	d8800315 	stw	r2,12(sp)
   24a40:	d9403617 	ldw	r5,216(sp)
   24a44:	d8802504 	addi	r2,sp,148
   24a48:	d9002c17 	ldw	r4,176(sp)
   24a4c:	d8800215 	stw	r2,8(sp)
   24a50:	d8802604 	addi	r2,sp,152
   24a54:	d8c00015 	stw	r3,0(sp)
   24a58:	d8800115 	stw	r2,4(sp)
   24a5c:	01c00084 	movi	r7,2
   24a60:	980d883a 	mov	r6,r19
   24a64:	d8c03c15 	stw	r3,240(sp)
   24a68:	da003d15 	stw	r8,244(sp)
   24a6c:	00259700 	call	25970 <_dtoa_r>
   24a70:	1021883a 	mov	r16,r2
   24a74:	008019c4 	movi	r2,103
   24a78:	d8c03c17 	ldw	r3,240(sp)
   24a7c:	da003d17 	ldw	r8,244(sp)
   24a80:	88817126 	beq	r17,r2,25048 <___vfprintf_internal_r+0x1cfc>
   24a84:	008011c4 	movi	r2,71
   24a88:	88829226 	beq	r17,r2,254d4 <___vfprintf_internal_r+0x2188>
   24a8c:	80f9883a 	add	fp,r16,r3
   24a90:	d9003617 	ldw	r4,216(sp)
   24a94:	000d883a 	mov	r6,zero
   24a98:	000f883a 	mov	r7,zero
   24a9c:	980b883a 	mov	r5,r19
   24aa0:	da003d15 	stw	r8,244(sp)
   24aa4:	002f9cc0 	call	2f9cc <__eqdf2>
   24aa8:	da003d17 	ldw	r8,244(sp)
   24aac:	10018d26 	beq	r2,zero,250e4 <___vfprintf_internal_r+0x1d98>
   24ab0:	d8802117 	ldw	r2,132(sp)
   24ab4:	1700062e 	bgeu	r2,fp,24ad0 <___vfprintf_internal_r+0x1784>
   24ab8:	01000c04 	movi	r4,48
   24abc:	10c00044 	addi	r3,r2,1
   24ac0:	d8c02115 	stw	r3,132(sp)
   24ac4:	11000005 	stb	r4,0(r2)
   24ac8:	d8802117 	ldw	r2,132(sp)
   24acc:	173ffb36 	bltu	r2,fp,24abc <___vfprintf_internal_r+0x1770>
   24ad0:	1405c83a 	sub	r2,r2,r16
   24ad4:	d8803315 	stw	r2,204(sp)
   24ad8:	008011c4 	movi	r2,71
   24adc:	b0817626 	beq	r22,r2,250b8 <___vfprintf_internal_r+0x1d6c>
   24ae0:	00801944 	movi	r2,101
   24ae4:	1442810e 	bge	r2,r17,254ec <___vfprintf_internal_r+0x21a0>
   24ae8:	d8c02617 	ldw	r3,152(sp)
   24aec:	00801984 	movi	r2,102
   24af0:	d8c03215 	stw	r3,200(sp)
   24af4:	8881fe26 	beq	r17,r2,252f0 <___vfprintf_internal_r+0x1fa4>
   24af8:	d8c03217 	ldw	r3,200(sp)
   24afc:	d9003317 	ldw	r4,204(sp)
   24b00:	1901dd16 	blt	r3,r4,25278 <___vfprintf_internal_r+0x1f2c>
   24b04:	9480004c 	andi	r18,r18,1
   24b08:	90022b1e 	bne	r18,zero,253b8 <___vfprintf_internal_r+0x206c>
   24b0c:	1805883a 	mov	r2,r3
   24b10:	18028016 	blt	r3,zero,25514 <___vfprintf_internal_r+0x21c8>
   24b14:	d8c03217 	ldw	r3,200(sp)
   24b18:	044019c4 	movi	r17,103
   24b1c:	d8c02e15 	stw	r3,184(sp)
   24b20:	df002a07 	ldb	fp,168(sp)
   24b24:	e001531e 	bne	fp,zero,25074 <___vfprintf_internal_r+0x1d28>
   24b28:	df002783 	ldbu	fp,158(sp)
   24b2c:	d8802a15 	stw	r2,168(sp)
   24b30:	dc802b17 	ldw	r18,172(sp)
   24b34:	d8002915 	stw	zero,164(sp)
   24b38:	003bd106 	br	23a80 <___vfprintf_internal_r+0x734>
   24b3c:	d8802d17 	ldw	r2,180(sp)
   24b40:	d8c02d17 	ldw	r3,180(sp)
   24b44:	d9002d17 	ldw	r4,180(sp)
   24b48:	10800017 	ldw	r2,0(r2)
   24b4c:	18c00117 	ldw	r3,4(r3)
   24b50:	21000204 	addi	r4,r4,8
   24b54:	d8803615 	stw	r2,216(sp)
   24b58:	d8c03815 	stw	r3,224(sp)
   24b5c:	d9002d15 	stw	r4,180(sp)
   24b60:	003b7506 	br	23938 <___vfprintf_internal_r+0x5ec>
   24b64:	ac400007 	ldb	r17,0(r21)
   24b68:	003a5906 	br	234d0 <___vfprintf_internal_r+0x184>
   24b6c:	9080100c 	andi	r2,r18,64
   24b70:	1000a826 	beq	r2,zero,24e14 <___vfprintf_internal_r+0x1ac8>
   24b74:	d9002d17 	ldw	r4,180(sp)
   24b78:	002d883a 	mov	r22,zero
   24b7c:	24c0000b 	ldhu	r19,0(r4)
   24b80:	21000104 	addi	r4,r4,4
   24b84:	d9002d15 	stw	r4,180(sp)
   24b88:	003ccb06 	br	23eb8 <___vfprintf_internal_r+0xb6c>
   24b8c:	d8c02d17 	ldw	r3,180(sp)
   24b90:	d9002917 	ldw	r4,164(sp)
   24b94:	002d883a 	mov	r22,zero
   24b98:	18800104 	addi	r2,r3,4
   24b9c:	1cc00017 	ldw	r19,0(r3)
   24ba0:	203ebb0e 	bge	r4,zero,24690 <___vfprintf_internal_r+0x1344>
   24ba4:	003ef106 	br	2476c <___vfprintf_internal_r+0x1420>
   24ba8:	9080040c 	andi	r2,r18,16
   24bac:	1000921e 	bne	r2,zero,24df8 <___vfprintf_internal_r+0x1aac>
   24bb0:	9480100c 	andi	r18,r18,64
   24bb4:	90013926 	beq	r18,zero,2509c <___vfprintf_internal_r+0x1d50>
   24bb8:	d9002d17 	ldw	r4,180(sp)
   24bbc:	d9402f17 	ldw	r5,188(sp)
   24bc0:	20800017 	ldw	r2,0(r4)
   24bc4:	21000104 	addi	r4,r4,4
   24bc8:	d9002d15 	stw	r4,180(sp)
   24bcc:	1140000d 	sth	r5,0(r2)
   24bd0:	003a1606 	br	2342c <___vfprintf_internal_r+0xe0>
   24bd4:	9080100c 	andi	r2,r18,64
   24bd8:	10008026 	beq	r2,zero,24ddc <___vfprintf_internal_r+0x1a90>
   24bdc:	d8c02d17 	ldw	r3,180(sp)
   24be0:	1cc0000f 	ldh	r19,0(r3)
   24be4:	18c00104 	addi	r3,r3,4
   24be8:	d8c02d15 	stw	r3,180(sp)
   24bec:	982dd7fa 	srai	r22,r19,31
   24bf0:	b005883a 	mov	r2,r22
   24bf4:	003b1f06 	br	23874 <___vfprintf_internal_r+0x528>
   24bf8:	9080100c 	andi	r2,r18,64
   24bfc:	d8002785 	stb	zero,158(sp)
   24c00:	10008a1e 	bne	r2,zero,24e2c <___vfprintf_internal_r+0x1ae0>
   24c04:	d9402d17 	ldw	r5,180(sp)
   24c08:	d8c02917 	ldw	r3,164(sp)
   24c0c:	002d883a 	mov	r22,zero
   24c10:	28800104 	addi	r2,r5,4
   24c14:	2cc00017 	ldw	r19,0(r5)
   24c18:	183e4b0e 	bge	r3,zero,24548 <___vfprintf_internal_r+0x11fc>
   24c1c:	9d86b03a 	or	r3,r19,r22
   24c20:	d8802d15 	stw	r2,180(sp)
   24c24:	183e4c1e 	bne	r3,zero,24558 <___vfprintf_internal_r+0x120c>
   24c28:	0039883a 	mov	fp,zero
   24c2c:	0005883a 	mov	r2,zero
   24c30:	003d4006 	br	24134 <___vfprintf_internal_r+0xde8>
   24c34:	014000f4 	movhi	r5,3
   24c38:	294e3b84 	addi	r5,r5,14574
   24c3c:	d9402b15 	stw	r5,172(sp)
   24c40:	d9402b17 	ldw	r5,172(sp)
   24c44:	1c47883a 	add	r3,r3,r17
   24c48:	10800044 	addi	r2,r2,1
   24c4c:	41400015 	stw	r5,0(r8)
   24c50:	44400115 	stw	r17,4(r8)
   24c54:	d8c02015 	stw	r3,128(sp)
   24c58:	d8801f15 	stw	r2,124(sp)
   24c5c:	010001c4 	movi	r4,7
   24c60:	20bec816 	blt	r4,r2,24784 <___vfprintf_internal_r+0x1438>
   24c64:	42000204 	addi	r8,r8,8
   24c68:	003ecd06 	br	247a0 <___vfprintf_internal_r+0x1454>
   24c6c:	d9002917 	ldw	r4,164(sp)
   24c70:	d8002785 	stb	zero,158(sp)
   24c74:	203d2d16 	blt	r4,zero,2412c <___vfprintf_internal_r+0xde0>
   24c78:	00bfdfc4 	movi	r2,-129
   24c7c:	90a4703a 	and	r18,r18,r2
   24c80:	003a9106 	br	236c8 <___vfprintf_internal_r+0x37c>
   24c84:	010000f4 	movhi	r4,3
   24c88:	210e3b84 	addi	r4,r4,14574
   24c8c:	d9002b15 	stw	r4,172(sp)
   24c90:	003c0c06 	br	23cc4 <___vfprintf_internal_r+0x978>
   24c94:	d9002c17 	ldw	r4,176(sp)
   24c98:	d9801e04 	addi	r6,sp,120
   24c9c:	b80b883a 	mov	r5,r23
   24ca0:	002bd540 	call	2bd54 <__sprint_r>
   24ca4:	103aab1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24ca8:	d8c02017 	ldw	r3,128(sp)
   24cac:	da000404 	addi	r8,sp,16
   24cb0:	003d4106 	br	241b8 <___vfprintf_internal_r+0xe6c>
   24cb4:	d8801f17 	ldw	r2,124(sp)
   24cb8:	014000f4 	movhi	r5,3
   24cbc:	01000044 	movi	r4,1
   24cc0:	18c00044 	addi	r3,r3,1
   24cc4:	10800044 	addi	r2,r2,1
   24cc8:	294e3304 	addi	r5,r5,14540
   24ccc:	41000115 	stw	r4,4(r8)
   24cd0:	41400015 	stw	r5,0(r8)
   24cd4:	d8c02015 	stw	r3,128(sp)
   24cd8:	d8801f15 	stw	r2,124(sp)
   24cdc:	010001c4 	movi	r4,7
   24ce0:	20805c16 	blt	r4,r2,24e54 <___vfprintf_internal_r+0x1b08>
   24ce4:	42000204 	addi	r8,r8,8
   24ce8:	8800041e 	bne	r17,zero,24cfc <___vfprintf_internal_r+0x19b0>
   24cec:	d8803317 	ldw	r2,204(sp)
   24cf0:	1000021e 	bne	r2,zero,24cfc <___vfprintf_internal_r+0x19b0>
   24cf4:	9080004c 	andi	r2,r18,1
   24cf8:	103c0926 	beq	r2,zero,23d20 <___vfprintf_internal_r+0x9d4>
   24cfc:	d9003717 	ldw	r4,220(sp)
   24d00:	d8801f17 	ldw	r2,124(sp)
   24d04:	d9403417 	ldw	r5,208(sp)
   24d08:	20c7883a 	add	r3,r4,r3
   24d0c:	10800044 	addi	r2,r2,1
   24d10:	41000115 	stw	r4,4(r8)
   24d14:	41400015 	stw	r5,0(r8)
   24d18:	d8c02015 	stw	r3,128(sp)
   24d1c:	d8801f15 	stw	r2,124(sp)
   24d20:	010001c4 	movi	r4,7
   24d24:	20812116 	blt	r4,r2,251ac <___vfprintf_internal_r+0x1e60>
   24d28:	42000204 	addi	r8,r8,8
   24d2c:	0463c83a 	sub	r17,zero,r17
   24d30:	0440730e 	bge	zero,r17,24f00 <___vfprintf_internal_r+0x1bb4>
   24d34:	05800404 	movi	r22,16
   24d38:	b440860e 	bge	r22,r17,24f54 <___vfprintf_internal_r+0x1c08>
   24d3c:	014000f4 	movhi	r5,3
   24d40:	294e3b84 	addi	r5,r5,14574
   24d44:	d9402b15 	stw	r5,172(sp)
   24d48:	070001c4 	movi	fp,7
   24d4c:	dcc02c17 	ldw	r19,176(sp)
   24d50:	00000306 	br	24d60 <___vfprintf_internal_r+0x1a14>
   24d54:	42000204 	addi	r8,r8,8
   24d58:	8c7ffc04 	addi	r17,r17,-16
   24d5c:	b440800e 	bge	r22,r17,24f60 <___vfprintf_internal_r+0x1c14>
   24d60:	18c00404 	addi	r3,r3,16
   24d64:	10800044 	addi	r2,r2,1
   24d68:	45000015 	stw	r20,0(r8)
   24d6c:	45800115 	stw	r22,4(r8)
   24d70:	d8c02015 	stw	r3,128(sp)
   24d74:	d8801f15 	stw	r2,124(sp)
   24d78:	e0bff60e 	bge	fp,r2,24d54 <___vfprintf_internal_r+0x1a08>
   24d7c:	d9801e04 	addi	r6,sp,120
   24d80:	b80b883a 	mov	r5,r23
   24d84:	9809883a 	mov	r4,r19
   24d88:	002bd540 	call	2bd54 <__sprint_r>
   24d8c:	103a711e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24d90:	d8c02017 	ldw	r3,128(sp)
   24d94:	d8801f17 	ldw	r2,124(sp)
   24d98:	da000404 	addi	r8,sp,16
   24d9c:	003fee06 	br	24d58 <___vfprintf_internal_r+0x1a0c>
   24da0:	00bfffc4 	movi	r2,-1
   24da4:	003a6f06 	br	23764 <___vfprintf_internal_r+0x418>
   24da8:	008011c4 	movi	r2,71
   24dac:	1440b816 	blt	r2,r17,25090 <___vfprintf_internal_r+0x1d44>
   24db0:	040000f4 	movhi	r16,3
   24db4:	840e2504 	addi	r16,r16,14484
   24db8:	00c000c4 	movi	r3,3
   24dbc:	00bfdfc4 	movi	r2,-129
   24dc0:	d8c02a15 	stw	r3,168(sp)
   24dc4:	90a4703a 	and	r18,r18,r2
   24dc8:	df002783 	ldbu	fp,158(sp)
   24dcc:	d8c02e15 	stw	r3,184(sp)
   24dd0:	d8002915 	stw	zero,164(sp)
   24dd4:	d8003215 	stw	zero,200(sp)
   24dd8:	003b2906 	br	23a80 <___vfprintf_internal_r+0x734>
   24ddc:	d9002d17 	ldw	r4,180(sp)
   24de0:	24c00017 	ldw	r19,0(r4)
   24de4:	21000104 	addi	r4,r4,4
   24de8:	d9002d15 	stw	r4,180(sp)
   24dec:	982dd7fa 	srai	r22,r19,31
   24df0:	b005883a 	mov	r2,r22
   24df4:	003a9f06 	br	23874 <___vfprintf_internal_r+0x528>
   24df8:	d9402d17 	ldw	r5,180(sp)
   24dfc:	d8c02f17 	ldw	r3,188(sp)
   24e00:	28800017 	ldw	r2,0(r5)
   24e04:	29400104 	addi	r5,r5,4
   24e08:	d9402d15 	stw	r5,180(sp)
   24e0c:	10c00015 	stw	r3,0(r2)
   24e10:	00398606 	br	2342c <___vfprintf_internal_r+0xe0>
   24e14:	d9402d17 	ldw	r5,180(sp)
   24e18:	002d883a 	mov	r22,zero
   24e1c:	2cc00017 	ldw	r19,0(r5)
   24e20:	29400104 	addi	r5,r5,4
   24e24:	d9402d15 	stw	r5,180(sp)
   24e28:	003c2306 	br	23eb8 <___vfprintf_internal_r+0xb6c>
   24e2c:	d8c02d17 	ldw	r3,180(sp)
   24e30:	d9002917 	ldw	r4,164(sp)
   24e34:	002d883a 	mov	r22,zero
   24e38:	18800104 	addi	r2,r3,4
   24e3c:	1cc0000b 	ldhu	r19,0(r3)
   24e40:	203dc10e 	bge	r4,zero,24548 <___vfprintf_internal_r+0x11fc>
   24e44:	003f7506 	br	24c1c <___vfprintf_internal_r+0x18d0>
   24e48:	040000f4 	movhi	r16,3
   24e4c:	840e2304 	addi	r16,r16,14476
   24e50:	003acc06 	br	23984 <___vfprintf_internal_r+0x638>
   24e54:	d9002c17 	ldw	r4,176(sp)
   24e58:	d9801e04 	addi	r6,sp,120
   24e5c:	b80b883a 	mov	r5,r23
   24e60:	002bd540 	call	2bd54 <__sprint_r>
   24e64:	103a3b1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24e68:	dc402617 	ldw	r17,152(sp)
   24e6c:	d8c02017 	ldw	r3,128(sp)
   24e70:	da000404 	addi	r8,sp,16
   24e74:	003f9c06 	br	24ce8 <___vfprintf_internal_r+0x199c>
   24e78:	ac400043 	ldbu	r17,1(r21)
   24e7c:	94800814 	ori	r18,r18,32
   24e80:	ad400044 	addi	r21,r21,1
   24e84:	8c403fcc 	andi	r17,r17,255
   24e88:	8c40201c 	xori	r17,r17,128
   24e8c:	8c7fe004 	addi	r17,r17,-128
   24e90:	00398f06 	br	234d0 <___vfprintf_internal_r+0x184>
   24e94:	d8c02d15 	stw	r3,180(sp)
   24e98:	0039883a 	mov	fp,zero
   24e9c:	003e3506 	br	24774 <___vfprintf_internal_r+0x1428>
   24ea0:	d9002c17 	ldw	r4,176(sp)
   24ea4:	d9801e04 	addi	r6,sp,120
   24ea8:	b80b883a 	mov	r5,r23
   24eac:	002bd540 	call	2bd54 <__sprint_r>
   24eb0:	103a281e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24eb4:	d8c02017 	ldw	r3,128(sp)
   24eb8:	da000404 	addi	r8,sp,16
   24ebc:	003cd006 	br	24200 <___vfprintf_internal_r+0xeb4>
   24ec0:	8009883a 	mov	r4,r16
   24ec4:	da003d15 	stw	r8,244(sp)
   24ec8:	00210dc0 	call	210dc <strlen>
   24ecc:	d8802e15 	stw	r2,184(sp)
   24ed0:	da003d17 	ldw	r8,244(sp)
   24ed4:	103c340e 	bge	r2,zero,23fa8 <___vfprintf_internal_r+0xc5c>
   24ed8:	0005883a 	mov	r2,zero
   24edc:	003c3206 	br	23fa8 <___vfprintf_internal_r+0xc5c>
   24ee0:	d9002c17 	ldw	r4,176(sp)
   24ee4:	d9801e04 	addi	r6,sp,120
   24ee8:	b80b883a 	mov	r5,r23
   24eec:	002bd540 	call	2bd54 <__sprint_r>
   24ef0:	103a181e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24ef4:	d8c02017 	ldw	r3,128(sp)
   24ef8:	d8801f17 	ldw	r2,124(sp)
   24efc:	da000404 	addi	r8,sp,16
   24f00:	d9403317 	ldw	r5,204(sp)
   24f04:	10800044 	addi	r2,r2,1
   24f08:	44000015 	stw	r16,0(r8)
   24f0c:	28c7883a 	add	r3,r5,r3
   24f10:	003b7d06 	br	23d08 <___vfprintf_internal_r+0x9bc>
   24f14:	010000f4 	movhi	r4,3
   24f18:	210e3f84 	addi	r4,r4,14590
   24f1c:	d9003515 	stw	r4,212(sp)
   24f20:	003b1406 	br	23b74 <___vfprintf_internal_r+0x828>
   24f24:	013fffc4 	movi	r4,-1
   24f28:	003a3506 	br	23800 <___vfprintf_internal_r+0x4b4>
   24f2c:	0023883a 	mov	r17,zero
   24f30:	003d9d06 	br	245a8 <___vfprintf_internal_r+0x125c>
   24f34:	d9002c17 	ldw	r4,176(sp)
   24f38:	d9801e04 	addi	r6,sp,120
   24f3c:	b80b883a 	mov	r5,r23
   24f40:	002bd540 	call	2bd54 <__sprint_r>
   24f44:	103a031e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24f48:	d8c02017 	ldw	r3,128(sp)
   24f4c:	da000404 	addi	r8,sp,16
   24f50:	003d9406 	br	245a4 <___vfprintf_internal_r+0x1258>
   24f54:	010000f4 	movhi	r4,3
   24f58:	210e3b84 	addi	r4,r4,14574
   24f5c:	d9002b15 	stw	r4,172(sp)
   24f60:	d9002b17 	ldw	r4,172(sp)
   24f64:	1c47883a 	add	r3,r3,r17
   24f68:	10800044 	addi	r2,r2,1
   24f6c:	41000015 	stw	r4,0(r8)
   24f70:	44400115 	stw	r17,4(r8)
   24f74:	d8c02015 	stw	r3,128(sp)
   24f78:	d8801f15 	stw	r2,124(sp)
   24f7c:	010001c4 	movi	r4,7
   24f80:	20bfd716 	blt	r4,r2,24ee0 <___vfprintf_internal_r+0x1b94>
   24f84:	42000204 	addi	r8,r8,8
   24f88:	003fdd06 	br	24f00 <___vfprintf_internal_r+0x1bb4>
   24f8c:	d9002c17 	ldw	r4,176(sp)
   24f90:	d9801e04 	addi	r6,sp,120
   24f94:	b80b883a 	mov	r5,r23
   24f98:	002bd540 	call	2bd54 <__sprint_r>
   24f9c:	1039ed1e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   24fa0:	d8802617 	ldw	r2,152(sp)
   24fa4:	d8c02017 	ldw	r3,128(sp)
   24fa8:	da000404 	addi	r8,sp,16
   24fac:	003e1006 	br	247f0 <___vfprintf_internal_r+0x14a4>
   24fb0:	00800044 	movi	r2,1
   24fb4:	10803fcc 	andi	r2,r2,255
   24fb8:	00c00044 	movi	r3,1
   24fbc:	10fa3526 	beq	r2,r3,23894 <___vfprintf_internal_r+0x548>
   24fc0:	00c00084 	movi	r3,2
   24fc4:	10fbcb26 	beq	r2,r3,23ef4 <___vfprintf_internal_r+0xba8>
   24fc8:	003a8f06 	br	23a08 <___vfprintf_internal_r+0x6bc>
   24fcc:	010000f4 	movhi	r4,3
   24fd0:	210e3f84 	addi	r4,r4,14590
   24fd4:	d9003515 	stw	r4,212(sp)
   24fd8:	003b7606 	br	23db4 <___vfprintf_internal_r+0xa68>
   24fdc:	d8802917 	ldw	r2,164(sp)
   24fe0:	00c00184 	movi	r3,6
   24fe4:	1880012e 	bgeu	r3,r2,24fec <___vfprintf_internal_r+0x1ca0>
   24fe8:	1805883a 	mov	r2,r3
   24fec:	d8802e15 	stw	r2,184(sp)
   24ff0:	1000ef16 	blt	r2,zero,253b0 <___vfprintf_internal_r+0x2064>
   24ff4:	040000f4 	movhi	r16,3
   24ff8:	d8802a15 	stw	r2,168(sp)
   24ffc:	dcc02d15 	stw	r19,180(sp)
   25000:	d8002915 	stw	zero,164(sp)
   25004:	d8003215 	stw	zero,200(sp)
   25008:	840e3104 	addi	r16,r16,14532
   2500c:	0039883a 	mov	fp,zero
   25010:	003aa206 	br	23a9c <___vfprintf_internal_r+0x750>
   25014:	0021883a 	mov	r16,zero
   25018:	003e0706 	br	24838 <___vfprintf_internal_r+0x14ec>
   2501c:	d9002c17 	ldw	r4,176(sp)
   25020:	d9801e04 	addi	r6,sp,120
   25024:	b80b883a 	mov	r5,r23
   25028:	002bd540 	call	2bd54 <__sprint_r>
   2502c:	1039c91e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   25030:	d8802617 	ldw	r2,152(sp)
   25034:	d9403317 	ldw	r5,204(sp)
   25038:	d8c02017 	ldw	r3,128(sp)
   2503c:	da000404 	addi	r8,sp,16
   25040:	2885c83a 	sub	r2,r5,r2
   25044:	003dfb06 	br	24834 <___vfprintf_internal_r+0x14e8>
   25048:	9080004c 	andi	r2,r18,1
   2504c:	103e8f1e 	bne	r2,zero,24a8c <___vfprintf_internal_r+0x1740>
   25050:	d8802117 	ldw	r2,132(sp)
   25054:	003e9e06 	br	24ad0 <___vfprintf_internal_r+0x1784>
   25058:	1025883a 	mov	r18,r2
   2505c:	0039883a 	mov	fp,zero
   25060:	00800084 	movi	r2,2
   25064:	003fd306 	br	24fb4 <___vfprintf_internal_r+0x1c68>
   25068:	07000b44 	movi	fp,45
   2506c:	df002785 	stb	fp,158(sp)
   25070:	003a4006 	br	23974 <___vfprintf_internal_r+0x628>
   25074:	00c00b44 	movi	r3,45
   25078:	d8c02785 	stb	r3,158(sp)
   2507c:	d8802a15 	stw	r2,168(sp)
   25080:	dc802b17 	ldw	r18,172(sp)
   25084:	d8002915 	stw	zero,164(sp)
   25088:	07000b44 	movi	fp,45
   2508c:	003a8006 	br	23a90 <___vfprintf_internal_r+0x744>
   25090:	040000f4 	movhi	r16,3
   25094:	840e2604 	addi	r16,r16,14488
   25098:	003f4706 	br	24db8 <___vfprintf_internal_r+0x1a6c>
   2509c:	d8c02d17 	ldw	r3,180(sp)
   250a0:	d9002f17 	ldw	r4,188(sp)
   250a4:	18800017 	ldw	r2,0(r3)
   250a8:	18c00104 	addi	r3,r3,4
   250ac:	d8c02d15 	stw	r3,180(sp)
   250b0:	11000015 	stw	r4,0(r2)
   250b4:	0038dd06 	br	2342c <___vfprintf_internal_r+0xe0>
   250b8:	dd802617 	ldw	r22,152(sp)
   250bc:	00bfff44 	movi	r2,-3
   250c0:	b0801c16 	blt	r22,r2,25134 <___vfprintf_internal_r+0x1de8>
   250c4:	d9402917 	ldw	r5,164(sp)
   250c8:	2d801a16 	blt	r5,r22,25134 <___vfprintf_internal_r+0x1de8>
   250cc:	dd803215 	stw	r22,200(sp)
   250d0:	003e8906 	br	24af8 <___vfprintf_internal_r+0x17ac>
   250d4:	010000f4 	movhi	r4,3
   250d8:	210e3b84 	addi	r4,r4,14574
   250dc:	d9002b15 	stw	r4,172(sp)
   250e0:	003c9106 	br	24328 <___vfprintf_internal_r+0xfdc>
   250e4:	e005883a 	mov	r2,fp
   250e8:	003e7906 	br	24ad0 <___vfprintf_internal_r+0x1784>
   250ec:	d9402917 	ldw	r5,164(sp)
   250f0:	df002783 	ldbu	fp,158(sp)
   250f4:	dcc02d15 	stw	r19,180(sp)
   250f8:	d9402a15 	stw	r5,168(sp)
   250fc:	d9402e15 	stw	r5,184(sp)
   25100:	d8002915 	stw	zero,164(sp)
   25104:	d8003215 	stw	zero,200(sp)
   25108:	003a5d06 	br	23a80 <___vfprintf_internal_r+0x734>
   2510c:	9080004c 	andi	r2,r18,1
   25110:	0039883a 	mov	fp,zero
   25114:	10000426 	beq	r2,zero,25128 <___vfprintf_internal_r+0x1ddc>
   25118:	00800c04 	movi	r2,48
   2511c:	dc001dc4 	addi	r16,sp,119
   25120:	d8801dc5 	stb	r2,119(sp)
   25124:	003b8006 	br	23f28 <___vfprintf_internal_r+0xbdc>
   25128:	d8002e15 	stw	zero,184(sp)
   2512c:	dc001e04 	addi	r16,sp,120
   25130:	003a4d06 	br	23a68 <___vfprintf_internal_r+0x71c>
   25134:	8c7fff84 	addi	r17,r17,-2
   25138:	b5bfffc4 	addi	r22,r22,-1
   2513c:	dd802615 	stw	r22,152(sp)
   25140:	dc4022c5 	stb	r17,139(sp)
   25144:	b000bf16 	blt	r22,zero,25444 <___vfprintf_internal_r+0x20f8>
   25148:	00800ac4 	movi	r2,43
   2514c:	d8802305 	stb	r2,140(sp)
   25150:	00800244 	movi	r2,9
   25154:	15807016 	blt	r2,r22,25318 <___vfprintf_internal_r+0x1fcc>
   25158:	00800c04 	movi	r2,48
   2515c:	b5800c04 	addi	r22,r22,48
   25160:	d8802345 	stb	r2,141(sp)
   25164:	dd802385 	stb	r22,142(sp)
   25168:	d88023c4 	addi	r2,sp,143
   2516c:	df0022c4 	addi	fp,sp,139
   25170:	d8c03317 	ldw	r3,204(sp)
   25174:	1739c83a 	sub	fp,r2,fp
   25178:	d9003317 	ldw	r4,204(sp)
   2517c:	e0c7883a 	add	r3,fp,r3
   25180:	df003a15 	stw	fp,232(sp)
   25184:	d8c02e15 	stw	r3,184(sp)
   25188:	00800044 	movi	r2,1
   2518c:	1100b30e 	bge	r2,r4,2545c <___vfprintf_internal_r+0x2110>
   25190:	d8c02e17 	ldw	r3,184(sp)
   25194:	18c00044 	addi	r3,r3,1
   25198:	d8c02e15 	stw	r3,184(sp)
   2519c:	1805883a 	mov	r2,r3
   251a0:	1800ac16 	blt	r3,zero,25454 <___vfprintf_internal_r+0x2108>
   251a4:	d8003215 	stw	zero,200(sp)
   251a8:	003e5d06 	br	24b20 <___vfprintf_internal_r+0x17d4>
   251ac:	d9002c17 	ldw	r4,176(sp)
   251b0:	d9801e04 	addi	r6,sp,120
   251b4:	b80b883a 	mov	r5,r23
   251b8:	002bd540 	call	2bd54 <__sprint_r>
   251bc:	1039651e 	bne	r2,zero,23754 <___vfprintf_internal_r+0x408>
   251c0:	dc402617 	ldw	r17,152(sp)
   251c4:	d8c02017 	ldw	r3,128(sp)
   251c8:	d8801f17 	ldw	r2,124(sp)
   251cc:	da000404 	addi	r8,sp,16
   251d0:	003ed606 	br	24d2c <___vfprintf_internal_r+0x19e0>
   251d4:	582b883a 	mov	r21,r11
   251d8:	d8002915 	stw	zero,164(sp)
   251dc:	0038bd06 	br	234d4 <___vfprintf_internal_r+0x188>
   251e0:	d8802917 	ldw	r2,164(sp)
   251e4:	103e071e 	bne	r2,zero,24a04 <___vfprintf_internal_r+0x16b8>
   251e8:	dc002915 	stw	r16,164(sp)
   251ec:	003e0506 	br	24a04 <___vfprintf_internal_r+0x16b8>
   251f0:	d9002917 	ldw	r4,164(sp)
   251f4:	20c00044 	addi	r3,r4,1
   251f8:	003e0f06 	br	24a38 <___vfprintf_internal_r+0x16ec>
   251fc:	01400184 	movi	r5,6
   25200:	d9402915 	stw	r5,164(sp)
   25204:	003dff06 	br	24a04 <___vfprintf_internal_r+0x16b8>
   25208:	d8802104 	addi	r2,sp,132
   2520c:	d8800315 	stw	r2,12(sp)
   25210:	d8802504 	addi	r2,sp,148
   25214:	d8800215 	stw	r2,8(sp)
   25218:	d8802604 	addi	r2,sp,152
   2521c:	d8800115 	stw	r2,4(sp)
   25220:	d8802917 	ldw	r2,164(sp)
   25224:	d9403617 	ldw	r5,216(sp)
   25228:	d9002c17 	ldw	r4,176(sp)
   2522c:	d8800015 	stw	r2,0(sp)
   25230:	01c000c4 	movi	r7,3
   25234:	980d883a 	mov	r6,r19
   25238:	da003d15 	stw	r8,244(sp)
   2523c:	00259700 	call	25970 <_dtoa_r>
   25240:	d8c02917 	ldw	r3,164(sp)
   25244:	da003d17 	ldw	r8,244(sp)
   25248:	1021883a 	mov	r16,r2
   2524c:	10f9883a 	add	fp,r2,r3
   25250:	81000007 	ldb	r4,0(r16)
   25254:	00800c04 	movi	r2,48
   25258:	20805e26 	beq	r4,r2,253d4 <___vfprintf_internal_r+0x2088>
   2525c:	d8c02617 	ldw	r3,152(sp)
   25260:	e0f9883a 	add	fp,fp,r3
   25264:	003e0a06 	br	24a90 <___vfprintf_internal_r+0x1744>
   25268:	00c00b44 	movi	r3,45
   2526c:	24e0003c 	xorhi	r19,r4,32768
   25270:	d8c02a05 	stb	r3,168(sp)
   25274:	003de906 	br	24a1c <___vfprintf_internal_r+0x16d0>
   25278:	d8c03217 	ldw	r3,200(sp)
   2527c:	00c07a0e 	bge	zero,r3,25468 <___vfprintf_internal_r+0x211c>
   25280:	00800044 	movi	r2,1
   25284:	d9003317 	ldw	r4,204(sp)
   25288:	1105883a 	add	r2,r2,r4
   2528c:	d8802e15 	stw	r2,184(sp)
   25290:	10004e16 	blt	r2,zero,253cc <___vfprintf_internal_r+0x2080>
   25294:	044019c4 	movi	r17,103
   25298:	003e2106 	br	24b20 <___vfprintf_internal_r+0x17d4>
   2529c:	d9002917 	ldw	r4,164(sp)
   252a0:	d8802104 	addi	r2,sp,132
   252a4:	d8800315 	stw	r2,12(sp)
   252a8:	d9000015 	stw	r4,0(sp)
   252ac:	d8802504 	addi	r2,sp,148
   252b0:	d9403617 	ldw	r5,216(sp)
   252b4:	d9002c17 	ldw	r4,176(sp)
   252b8:	d8800215 	stw	r2,8(sp)
   252bc:	d8802604 	addi	r2,sp,152
   252c0:	d8800115 	stw	r2,4(sp)
   252c4:	01c000c4 	movi	r7,3
   252c8:	980d883a 	mov	r6,r19
   252cc:	da003d15 	stw	r8,244(sp)
   252d0:	00259700 	call	25970 <_dtoa_r>
   252d4:	d8c02917 	ldw	r3,164(sp)
   252d8:	da003d17 	ldw	r8,244(sp)
   252dc:	1021883a 	mov	r16,r2
   252e0:	00801184 	movi	r2,70
   252e4:	80f9883a 	add	fp,r16,r3
   252e8:	88bfd926 	beq	r17,r2,25250 <___vfprintf_internal_r+0x1f04>
   252ec:	003de806 	br	24a90 <___vfprintf_internal_r+0x1744>
   252f0:	d9002917 	ldw	r4,164(sp)
   252f4:	00c04d0e 	bge	zero,r3,2542c <___vfprintf_internal_r+0x20e0>
   252f8:	2000441e 	bne	r4,zero,2540c <___vfprintf_internal_r+0x20c0>
   252fc:	9480004c 	andi	r18,r18,1
   25300:	9000421e 	bne	r18,zero,2540c <___vfprintf_internal_r+0x20c0>
   25304:	1805883a 	mov	r2,r3
   25308:	18007016 	blt	r3,zero,254cc <___vfprintf_internal_r+0x2180>
   2530c:	d8c03217 	ldw	r3,200(sp)
   25310:	d8c02e15 	stw	r3,184(sp)
   25314:	003e0206 	br	24b20 <___vfprintf_internal_r+0x17d4>
   25318:	df0022c4 	addi	fp,sp,139
   2531c:	dc002915 	stw	r16,164(sp)
   25320:	4027883a 	mov	r19,r8
   25324:	e021883a 	mov	r16,fp
   25328:	b009883a 	mov	r4,r22
   2532c:	01400284 	movi	r5,10
   25330:	002e7080 	call	2e708 <__modsi3>
   25334:	10800c04 	addi	r2,r2,48
   25338:	843fffc4 	addi	r16,r16,-1
   2533c:	b009883a 	mov	r4,r22
   25340:	01400284 	movi	r5,10
   25344:	80800005 	stb	r2,0(r16)
   25348:	002e6840 	call	2e684 <__divsi3>
   2534c:	102d883a 	mov	r22,r2
   25350:	00800244 	movi	r2,9
   25354:	15bff416 	blt	r2,r22,25328 <___vfprintf_internal_r+0x1fdc>
   25358:	9811883a 	mov	r8,r19
   2535c:	b0800c04 	addi	r2,r22,48
   25360:	8027883a 	mov	r19,r16
   25364:	997fffc4 	addi	r5,r19,-1
   25368:	98bfffc5 	stb	r2,-1(r19)
   2536c:	dc002917 	ldw	r16,164(sp)
   25370:	2f006a2e 	bgeu	r5,fp,2551c <___vfprintf_internal_r+0x21d0>
   25374:	d9c02384 	addi	r7,sp,142
   25378:	3ccfc83a 	sub	r7,r7,r19
   2537c:	d9002344 	addi	r4,sp,141
   25380:	e1cf883a 	add	r7,fp,r7
   25384:	00000106 	br	2538c <___vfprintf_internal_r+0x2040>
   25388:	28800003 	ldbu	r2,0(r5)
   2538c:	20800005 	stb	r2,0(r4)
   25390:	21000044 	addi	r4,r4,1
   25394:	29400044 	addi	r5,r5,1
   25398:	393ffb1e 	bne	r7,r4,25388 <___vfprintf_internal_r+0x203c>
   2539c:	d8802304 	addi	r2,sp,140
   253a0:	14c5c83a 	sub	r2,r2,r19
   253a4:	d8c02344 	addi	r3,sp,141
   253a8:	1885883a 	add	r2,r3,r2
   253ac:	003f7006 	br	25170 <___vfprintf_internal_r+0x1e24>
   253b0:	0005883a 	mov	r2,zero
   253b4:	003f0f06 	br	24ff4 <___vfprintf_internal_r+0x1ca8>
   253b8:	d8c03217 	ldw	r3,200(sp)
   253bc:	18c00044 	addi	r3,r3,1
   253c0:	d8c02e15 	stw	r3,184(sp)
   253c4:	1805883a 	mov	r2,r3
   253c8:	183fb20e 	bge	r3,zero,25294 <___vfprintf_internal_r+0x1f48>
   253cc:	0005883a 	mov	r2,zero
   253d0:	003fb006 	br	25294 <___vfprintf_internal_r+0x1f48>
   253d4:	d9003617 	ldw	r4,216(sp)
   253d8:	000d883a 	mov	r6,zero
   253dc:	000f883a 	mov	r7,zero
   253e0:	980b883a 	mov	r5,r19
   253e4:	d8c03c15 	stw	r3,240(sp)
   253e8:	da003d15 	stw	r8,244(sp)
   253ec:	002f9cc0 	call	2f9cc <__eqdf2>
   253f0:	d8c03c17 	ldw	r3,240(sp)
   253f4:	da003d17 	ldw	r8,244(sp)
   253f8:	103f9826 	beq	r2,zero,2525c <___vfprintf_internal_r+0x1f10>
   253fc:	00800044 	movi	r2,1
   25400:	10c7c83a 	sub	r3,r2,r3
   25404:	d8c02615 	stw	r3,152(sp)
   25408:	003f9506 	br	25260 <___vfprintf_internal_r+0x1f14>
   2540c:	d9002917 	ldw	r4,164(sp)
   25410:	d8c03217 	ldw	r3,200(sp)
   25414:	20800044 	addi	r2,r4,1
   25418:	1885883a 	add	r2,r3,r2
   2541c:	d8802e15 	stw	r2,184(sp)
   25420:	103dbf0e 	bge	r2,zero,24b20 <___vfprintf_internal_r+0x17d4>
   25424:	0005883a 	mov	r2,zero
   25428:	003dbd06 	br	24b20 <___vfprintf_internal_r+0x17d4>
   2542c:	2000211e 	bne	r4,zero,254b4 <___vfprintf_internal_r+0x2168>
   25430:	9480004c 	andi	r18,r18,1
   25434:	90001f1e 	bne	r18,zero,254b4 <___vfprintf_internal_r+0x2168>
   25438:	00800044 	movi	r2,1
   2543c:	d8802e15 	stw	r2,184(sp)
   25440:	003db706 	br	24b20 <___vfprintf_internal_r+0x17d4>
   25444:	00800b44 	movi	r2,45
   25448:	05adc83a 	sub	r22,zero,r22
   2544c:	d8802305 	stb	r2,140(sp)
   25450:	003f3f06 	br	25150 <___vfprintf_internal_r+0x1e04>
   25454:	0005883a 	mov	r2,zero
   25458:	003f5206 	br	251a4 <___vfprintf_internal_r+0x1e58>
   2545c:	90a4703a 	and	r18,r18,r2
   25460:	903f4e26 	beq	r18,zero,2519c <___vfprintf_internal_r+0x1e50>
   25464:	003f4a06 	br	25190 <___vfprintf_internal_r+0x1e44>
   25468:	00800084 	movi	r2,2
   2546c:	10c5c83a 	sub	r2,r2,r3
   25470:	003f8406 	br	25284 <___vfprintf_internal_r+0x1f38>
   25474:	d8802d17 	ldw	r2,180(sp)
   25478:	d9002d17 	ldw	r4,180(sp)
   2547c:	ac400043 	ldbu	r17,1(r21)
   25480:	10800017 	ldw	r2,0(r2)
   25484:	582b883a 	mov	r21,r11
   25488:	d8802915 	stw	r2,164(sp)
   2548c:	20800104 	addi	r2,r4,4
   25490:	d9002917 	ldw	r4,164(sp)
   25494:	d8802d15 	stw	r2,180(sp)
   25498:	203e7a0e 	bge	r4,zero,24e84 <___vfprintf_internal_r+0x1b38>
   2549c:	8c403fcc 	andi	r17,r17,255
   254a0:	00bfffc4 	movi	r2,-1
   254a4:	8c40201c 	xori	r17,r17,128
   254a8:	d8802915 	stw	r2,164(sp)
   254ac:	8c7fe004 	addi	r17,r17,-128
   254b0:	00380706 	br	234d0 <___vfprintf_internal_r+0x184>
   254b4:	d8c02917 	ldw	r3,164(sp)
   254b8:	18c00084 	addi	r3,r3,2
   254bc:	d8c02e15 	stw	r3,184(sp)
   254c0:	1805883a 	mov	r2,r3
   254c4:	183d960e 	bge	r3,zero,24b20 <___vfprintf_internal_r+0x17d4>
   254c8:	003fd606 	br	25424 <___vfprintf_internal_r+0x20d8>
   254cc:	0005883a 	mov	r2,zero
   254d0:	003f8e06 	br	2530c <___vfprintf_internal_r+0x1fc0>
   254d4:	9080004c 	andi	r2,r18,1
   254d8:	103f811e 	bne	r2,zero,252e0 <___vfprintf_internal_r+0x1f94>
   254dc:	d8802117 	ldw	r2,132(sp)
   254e0:	1405c83a 	sub	r2,r2,r16
   254e4:	d8803315 	stw	r2,204(sp)
   254e8:	b47ef326 	beq	r22,r17,250b8 <___vfprintf_internal_r+0x1d6c>
   254ec:	dd802617 	ldw	r22,152(sp)
   254f0:	003f1106 	br	25138 <___vfprintf_internal_r+0x1dec>
   254f4:	d9c02785 	stb	r7,158(sp)
   254f8:	00390406 	br	2390c <___vfprintf_internal_r+0x5c0>
   254fc:	d9c02785 	stb	r7,158(sp)
   25500:	0038d306 	br	23850 <___vfprintf_internal_r+0x504>
   25504:	d9c02785 	stb	r7,158(sp)
   25508:	003a6106 	br	23e90 <___vfprintf_internal_r+0xb44>
   2550c:	d9c02785 	stb	r7,158(sp)
   25510:	003af806 	br	240f4 <___vfprintf_internal_r+0xda8>
   25514:	0005883a 	mov	r2,zero
   25518:	003d7e06 	br	24b14 <___vfprintf_internal_r+0x17c8>
   2551c:	d8802344 	addi	r2,sp,141
   25520:	003f1306 	br	25170 <___vfprintf_internal_r+0x1e24>
   25524:	d9c02785 	stb	r7,158(sp)
   25528:	00392306 	br	239b8 <___vfprintf_internal_r+0x66c>
   2552c:	d9c02785 	stb	r7,158(sp)
   25530:	003aa906 	br	23fd8 <___vfprintf_internal_r+0xc8c>
   25534:	d9c02785 	stb	r7,158(sp)
   25538:	003a3d06 	br	23e30 <___vfprintf_internal_r+0xae4>
   2553c:	d9c02785 	stb	r7,158(sp)
   25540:	003aca06 	br	2406c <___vfprintf_internal_r+0xd20>

00025544 <__vfprintf_internal>:
   25544:	008000f4 	movhi	r2,3
   25548:	1095a004 	addi	r2,r2,22144
   2554c:	300f883a 	mov	r7,r6
   25550:	280d883a 	mov	r6,r5
   25554:	200b883a 	mov	r5,r4
   25558:	11000017 	ldw	r4,0(r2)
   2555c:	002334c1 	jmpi	2334c <___vfprintf_internal_r>

00025560 <__sbprintf>:
   25560:	2880030b 	ldhu	r2,12(r5)
   25564:	2ac01917 	ldw	r11,100(r5)
   25568:	2a80038b 	ldhu	r10,14(r5)
   2556c:	2a400717 	ldw	r9,28(r5)
   25570:	2a000917 	ldw	r8,36(r5)
   25574:	defee204 	addi	sp,sp,-1144
   25578:	00c10004 	movi	r3,1024
   2557c:	dc011a15 	stw	r16,1128(sp)
   25580:	10bfff4c 	andi	r2,r2,65533
   25584:	2821883a 	mov	r16,r5
   25588:	d8cb883a 	add	r5,sp,r3
   2558c:	dc811c15 	stw	r18,1136(sp)
   25590:	dc411b15 	stw	r17,1132(sp)
   25594:	dfc11d15 	stw	ra,1140(sp)
   25598:	2025883a 	mov	r18,r4
   2559c:	d881030d 	sth	r2,1036(sp)
   255a0:	dac11915 	stw	r11,1124(sp)
   255a4:	da81038d 	sth	r10,1038(sp)
   255a8:	da410715 	stw	r9,1052(sp)
   255ac:	da010915 	stw	r8,1060(sp)
   255b0:	dec10015 	stw	sp,1024(sp)
   255b4:	dec10415 	stw	sp,1040(sp)
   255b8:	d8c10215 	stw	r3,1032(sp)
   255bc:	d8c10515 	stw	r3,1044(sp)
   255c0:	d8010615 	stw	zero,1048(sp)
   255c4:	002334c0 	call	2334c <___vfprintf_internal_r>
   255c8:	1023883a 	mov	r17,r2
   255cc:	10000416 	blt	r2,zero,255e0 <__sbprintf+0x80>
   255d0:	d9410004 	addi	r5,sp,1024
   255d4:	9009883a 	mov	r4,r18
   255d8:	00272140 	call	27214 <_fflush_r>
   255dc:	10000d1e 	bne	r2,zero,25614 <__sbprintf+0xb4>
   255e0:	d881030b 	ldhu	r2,1036(sp)
   255e4:	1080100c 	andi	r2,r2,64
   255e8:	10000326 	beq	r2,zero,255f8 <__sbprintf+0x98>
   255ec:	8080030b 	ldhu	r2,12(r16)
   255f0:	10801014 	ori	r2,r2,64
   255f4:	8080030d 	sth	r2,12(r16)
   255f8:	8805883a 	mov	r2,r17
   255fc:	dfc11d17 	ldw	ra,1140(sp)
   25600:	dc811c17 	ldw	r18,1136(sp)
   25604:	dc411b17 	ldw	r17,1132(sp)
   25608:	dc011a17 	ldw	r16,1128(sp)
   2560c:	dec11e04 	addi	sp,sp,1144
   25610:	f800283a 	ret
   25614:	047fffc4 	movi	r17,-1
   25618:	003ff106 	br	255e0 <__sbprintf+0x80>

0002561c <__swsetup_r>:
   2561c:	008000f4 	movhi	r2,3
   25620:	defffd04 	addi	sp,sp,-12
   25624:	1095a004 	addi	r2,r2,22144
   25628:	dc400115 	stw	r17,4(sp)
   2562c:	2023883a 	mov	r17,r4
   25630:	11000017 	ldw	r4,0(r2)
   25634:	dc000015 	stw	r16,0(sp)
   25638:	dfc00215 	stw	ra,8(sp)
   2563c:	2821883a 	mov	r16,r5
   25640:	20000226 	beq	r4,zero,2564c <__swsetup_r+0x30>
   25644:	20800e17 	ldw	r2,56(r4)
   25648:	10003126 	beq	r2,zero,25710 <__swsetup_r+0xf4>
   2564c:	8080030b 	ldhu	r2,12(r16)
   25650:	10c0020c 	andi	r3,r2,8
   25654:	1009883a 	mov	r4,r2
   25658:	18000f26 	beq	r3,zero,25698 <__swsetup_r+0x7c>
   2565c:	80c00417 	ldw	r3,16(r16)
   25660:	18001526 	beq	r3,zero,256b8 <__swsetup_r+0x9c>
   25664:	1100004c 	andi	r4,r2,1
   25668:	20001c1e 	bne	r4,zero,256dc <__swsetup_r+0xc0>
   2566c:	1080008c 	andi	r2,r2,2
   25670:	1000291e 	bne	r2,zero,25718 <__swsetup_r+0xfc>
   25674:	80800517 	ldw	r2,20(r16)
   25678:	80800215 	stw	r2,8(r16)
   2567c:	18001c26 	beq	r3,zero,256f0 <__swsetup_r+0xd4>
   25680:	0005883a 	mov	r2,zero
   25684:	dfc00217 	ldw	ra,8(sp)
   25688:	dc400117 	ldw	r17,4(sp)
   2568c:	dc000017 	ldw	r16,0(sp)
   25690:	dec00304 	addi	sp,sp,12
   25694:	f800283a 	ret
   25698:	2080040c 	andi	r2,r4,16
   2569c:	10002e26 	beq	r2,zero,25758 <__swsetup_r+0x13c>
   256a0:	2080010c 	andi	r2,r4,4
   256a4:	10001e1e 	bne	r2,zero,25720 <__swsetup_r+0x104>
   256a8:	80c00417 	ldw	r3,16(r16)
   256ac:	20800214 	ori	r2,r4,8
   256b0:	8080030d 	sth	r2,12(r16)
   256b4:	183feb1e 	bne	r3,zero,25664 <__swsetup_r+0x48>
   256b8:	1100a00c 	andi	r4,r2,640
   256bc:	01408004 	movi	r5,512
   256c0:	217fe826 	beq	r4,r5,25664 <__swsetup_r+0x48>
   256c4:	800b883a 	mov	r5,r16
   256c8:	8809883a 	mov	r4,r17
   256cc:	00281940 	call	28194 <__smakebuf_r>
   256d0:	8080030b 	ldhu	r2,12(r16)
   256d4:	80c00417 	ldw	r3,16(r16)
   256d8:	003fe206 	br	25664 <__swsetup_r+0x48>
   256dc:	80800517 	ldw	r2,20(r16)
   256e0:	80000215 	stw	zero,8(r16)
   256e4:	0085c83a 	sub	r2,zero,r2
   256e8:	80800615 	stw	r2,24(r16)
   256ec:	183fe41e 	bne	r3,zero,25680 <__swsetup_r+0x64>
   256f0:	80c0030b 	ldhu	r3,12(r16)
   256f4:	0005883a 	mov	r2,zero
   256f8:	1900200c 	andi	r4,r3,128
   256fc:	203fe126 	beq	r4,zero,25684 <__swsetup_r+0x68>
   25700:	18c01014 	ori	r3,r3,64
   25704:	80c0030d 	sth	r3,12(r16)
   25708:	00bfffc4 	movi	r2,-1
   2570c:	003fdd06 	br	25684 <__swsetup_r+0x68>
   25710:	00275f00 	call	275f0 <__sinit>
   25714:	003fcd06 	br	2564c <__swsetup_r+0x30>
   25718:	0005883a 	mov	r2,zero
   2571c:	003fd606 	br	25678 <__swsetup_r+0x5c>
   25720:	81400c17 	ldw	r5,48(r16)
   25724:	28000626 	beq	r5,zero,25740 <__swsetup_r+0x124>
   25728:	80801004 	addi	r2,r16,64
   2572c:	28800326 	beq	r5,r2,2573c <__swsetup_r+0x120>
   25730:	8809883a 	mov	r4,r17
   25734:	00277640 	call	27764 <_free_r>
   25738:	8100030b 	ldhu	r4,12(r16)
   2573c:	80000c15 	stw	zero,48(r16)
   25740:	80c00417 	ldw	r3,16(r16)
   25744:	00bff6c4 	movi	r2,-37
   25748:	1108703a 	and	r4,r2,r4
   2574c:	80000115 	stw	zero,4(r16)
   25750:	80c00015 	stw	r3,0(r16)
   25754:	003fd506 	br	256ac <__swsetup_r+0x90>
   25758:	00800244 	movi	r2,9
   2575c:	88800015 	stw	r2,0(r17)
   25760:	20801014 	ori	r2,r4,64
   25764:	8080030d 	sth	r2,12(r16)
   25768:	00bfffc4 	movi	r2,-1
   2576c:	003fc506 	br	25684 <__swsetup_r+0x68>

00025770 <quorem>:
   25770:	defff704 	addi	sp,sp,-36
   25774:	dc800215 	stw	r18,8(sp)
   25778:	20800417 	ldw	r2,16(r4)
   2577c:	2c800417 	ldw	r18,16(r5)
   25780:	dfc00815 	stw	ra,32(sp)
   25784:	ddc00715 	stw	r23,28(sp)
   25788:	dd800615 	stw	r22,24(sp)
   2578c:	dd400515 	stw	r21,20(sp)
   25790:	dd000415 	stw	r20,16(sp)
   25794:	dcc00315 	stw	r19,12(sp)
   25798:	dc400115 	stw	r17,4(sp)
   2579c:	dc000015 	stw	r16,0(sp)
   257a0:	14807116 	blt	r2,r18,25968 <quorem+0x1f8>
   257a4:	94bfffc4 	addi	r18,r18,-1
   257a8:	94ad883a 	add	r22,r18,r18
   257ac:	b5ad883a 	add	r22,r22,r22
   257b0:	2c400504 	addi	r17,r5,20
   257b4:	8da9883a 	add	r20,r17,r22
   257b8:	25400504 	addi	r21,r4,20
   257bc:	282f883a 	mov	r23,r5
   257c0:	adad883a 	add	r22,r21,r22
   257c4:	a1400017 	ldw	r5,0(r20)
   257c8:	2021883a 	mov	r16,r4
   257cc:	b1000017 	ldw	r4,0(r22)
   257d0:	29400044 	addi	r5,r5,1
   257d4:	002e77c0 	call	2e77c <__udivsi3>
   257d8:	1027883a 	mov	r19,r2
   257dc:	10002c26 	beq	r2,zero,25890 <quorem+0x120>
   257e0:	a813883a 	mov	r9,r21
   257e4:	880b883a 	mov	r5,r17
   257e8:	0009883a 	mov	r4,zero
   257ec:	000d883a 	mov	r6,zero
   257f0:	2a000017 	ldw	r8,0(r5)
   257f4:	49c00017 	ldw	r7,0(r9)
   257f8:	29400104 	addi	r5,r5,4
   257fc:	40bfffcc 	andi	r2,r8,65535
   25800:	14c5383a 	mul	r2,r2,r19
   25804:	4010d43a 	srli	r8,r8,16
   25808:	38ffffcc 	andi	r3,r7,65535
   2580c:	1105883a 	add	r2,r2,r4
   25810:	1008d43a 	srli	r4,r2,16
   25814:	44d1383a 	mul	r8,r8,r19
   25818:	198d883a 	add	r6,r3,r6
   2581c:	10ffffcc 	andi	r3,r2,65535
   25820:	30c7c83a 	sub	r3,r6,r3
   25824:	380ed43a 	srli	r7,r7,16
   25828:	4105883a 	add	r2,r8,r4
   2582c:	180dd43a 	srai	r6,r3,16
   25830:	113fffcc 	andi	r4,r2,65535
   25834:	390fc83a 	sub	r7,r7,r4
   25838:	398d883a 	add	r6,r7,r6
   2583c:	300e943a 	slli	r7,r6,16
   25840:	18ffffcc 	andi	r3,r3,65535
   25844:	1008d43a 	srli	r4,r2,16
   25848:	38ceb03a 	or	r7,r7,r3
   2584c:	49c00015 	stw	r7,0(r9)
   25850:	300dd43a 	srai	r6,r6,16
   25854:	4a400104 	addi	r9,r9,4
   25858:	a17fe52e 	bgeu	r20,r5,257f0 <quorem+0x80>
   2585c:	b0800017 	ldw	r2,0(r22)
   25860:	10000b1e 	bne	r2,zero,25890 <quorem+0x120>
   25864:	b0bfff04 	addi	r2,r22,-4
   25868:	a880082e 	bgeu	r21,r2,2588c <quorem+0x11c>
   2586c:	b0ffff17 	ldw	r3,-4(r22)
   25870:	18000326 	beq	r3,zero,25880 <quorem+0x110>
   25874:	00000506 	br	2588c <quorem+0x11c>
   25878:	10c00017 	ldw	r3,0(r2)
   2587c:	1800031e 	bne	r3,zero,2588c <quorem+0x11c>
   25880:	10bfff04 	addi	r2,r2,-4
   25884:	94bfffc4 	addi	r18,r18,-1
   25888:	a8bffb36 	bltu	r21,r2,25878 <quorem+0x108>
   2588c:	84800415 	stw	r18,16(r16)
   25890:	b80b883a 	mov	r5,r23
   25894:	8009883a 	mov	r4,r16
   25898:	00298d40 	call	298d4 <__mcmp>
   2589c:	10002616 	blt	r2,zero,25938 <quorem+0x1c8>
   258a0:	9cc00044 	addi	r19,r19,1
   258a4:	a805883a 	mov	r2,r21
   258a8:	000b883a 	mov	r5,zero
   258ac:	11000017 	ldw	r4,0(r2)
   258b0:	89800017 	ldw	r6,0(r17)
   258b4:	10800104 	addi	r2,r2,4
   258b8:	20ffffcc 	andi	r3,r4,65535
   258bc:	194b883a 	add	r5,r3,r5
   258c0:	30ffffcc 	andi	r3,r6,65535
   258c4:	28c7c83a 	sub	r3,r5,r3
   258c8:	300cd43a 	srli	r6,r6,16
   258cc:	2008d43a 	srli	r4,r4,16
   258d0:	180bd43a 	srai	r5,r3,16
   258d4:	18ffffcc 	andi	r3,r3,65535
   258d8:	2189c83a 	sub	r4,r4,r6
   258dc:	2149883a 	add	r4,r4,r5
   258e0:	200c943a 	slli	r6,r4,16
   258e4:	8c400104 	addi	r17,r17,4
   258e8:	200bd43a 	srai	r5,r4,16
   258ec:	30c6b03a 	or	r3,r6,r3
   258f0:	10ffff15 	stw	r3,-4(r2)
   258f4:	a47fed2e 	bgeu	r20,r17,258ac <quorem+0x13c>
   258f8:	9485883a 	add	r2,r18,r18
   258fc:	1085883a 	add	r2,r2,r2
   25900:	a887883a 	add	r3,r21,r2
   25904:	18800017 	ldw	r2,0(r3)
   25908:	10000b1e 	bne	r2,zero,25938 <quorem+0x1c8>
   2590c:	18bfff04 	addi	r2,r3,-4
   25910:	a880082e 	bgeu	r21,r2,25934 <quorem+0x1c4>
   25914:	18ffff17 	ldw	r3,-4(r3)
   25918:	18000326 	beq	r3,zero,25928 <quorem+0x1b8>
   2591c:	00000506 	br	25934 <quorem+0x1c4>
   25920:	10c00017 	ldw	r3,0(r2)
   25924:	1800031e 	bne	r3,zero,25934 <quorem+0x1c4>
   25928:	10bfff04 	addi	r2,r2,-4
   2592c:	94bfffc4 	addi	r18,r18,-1
   25930:	a8bffb36 	bltu	r21,r2,25920 <quorem+0x1b0>
   25934:	84800415 	stw	r18,16(r16)
   25938:	9805883a 	mov	r2,r19
   2593c:	dfc00817 	ldw	ra,32(sp)
   25940:	ddc00717 	ldw	r23,28(sp)
   25944:	dd800617 	ldw	r22,24(sp)
   25948:	dd400517 	ldw	r21,20(sp)
   2594c:	dd000417 	ldw	r20,16(sp)
   25950:	dcc00317 	ldw	r19,12(sp)
   25954:	dc800217 	ldw	r18,8(sp)
   25958:	dc400117 	ldw	r17,4(sp)
   2595c:	dc000017 	ldw	r16,0(sp)
   25960:	dec00904 	addi	sp,sp,36
   25964:	f800283a 	ret
   25968:	0005883a 	mov	r2,zero
   2596c:	003ff306 	br	2593c <quorem+0x1cc>

00025970 <_dtoa_r>:
   25970:	20801017 	ldw	r2,64(r4)
   25974:	deffde04 	addi	sp,sp,-136
   25978:	df002015 	stw	fp,128(sp)
   2597c:	dcc01b15 	stw	r19,108(sp)
   25980:	dc801a15 	stw	r18,104(sp)
   25984:	dc401915 	stw	r17,100(sp)
   25988:	dc001815 	stw	r16,96(sp)
   2598c:	dfc02115 	stw	ra,132(sp)
   25990:	ddc01f15 	stw	r23,124(sp)
   25994:	dd801e15 	stw	r22,120(sp)
   25998:	dd401d15 	stw	r21,116(sp)
   2599c:	dd001c15 	stw	r20,112(sp)
   259a0:	d9c00315 	stw	r7,12(sp)
   259a4:	2039883a 	mov	fp,r4
   259a8:	3023883a 	mov	r17,r6
   259ac:	2825883a 	mov	r18,r5
   259b0:	dc002417 	ldw	r16,144(sp)
   259b4:	3027883a 	mov	r19,r6
   259b8:	10000826 	beq	r2,zero,259dc <_dtoa_r+0x6c>
   259bc:	21801117 	ldw	r6,68(r4)
   259c0:	00c00044 	movi	r3,1
   259c4:	100b883a 	mov	r5,r2
   259c8:	1986983a 	sll	r3,r3,r6
   259cc:	11800115 	stw	r6,4(r2)
   259d0:	10c00215 	stw	r3,8(r2)
   259d4:	00290b40 	call	290b4 <_Bfree>
   259d8:	e0001015 	stw	zero,64(fp)
   259dc:	88002e16 	blt	r17,zero,25a98 <_dtoa_r+0x128>
   259e0:	80000015 	stw	zero,0(r16)
   259e4:	889ffc2c 	andhi	r2,r17,32752
   259e8:	00dffc34 	movhi	r3,32752
   259ec:	10c01c26 	beq	r2,r3,25a60 <_dtoa_r+0xf0>
   259f0:	000d883a 	mov	r6,zero
   259f4:	000f883a 	mov	r7,zero
   259f8:	9009883a 	mov	r4,r18
   259fc:	980b883a 	mov	r5,r19
   25a00:	002f9cc0 	call	2f9cc <__eqdf2>
   25a04:	10002b1e 	bne	r2,zero,25ab4 <_dtoa_r+0x144>
   25a08:	d9c02317 	ldw	r7,140(sp)
   25a0c:	00800044 	movi	r2,1
   25a10:	38800015 	stw	r2,0(r7)
   25a14:	d8802517 	ldw	r2,148(sp)
   25a18:	10019e26 	beq	r2,zero,26094 <_dtoa_r+0x724>
   25a1c:	d8c02517 	ldw	r3,148(sp)
   25a20:	008000f4 	movhi	r2,3
   25a24:	108e3344 	addi	r2,r2,14541
   25a28:	18800015 	stw	r2,0(r3)
   25a2c:	10bfffc4 	addi	r2,r2,-1
   25a30:	dfc02117 	ldw	ra,132(sp)
   25a34:	df002017 	ldw	fp,128(sp)
   25a38:	ddc01f17 	ldw	r23,124(sp)
   25a3c:	dd801e17 	ldw	r22,120(sp)
   25a40:	dd401d17 	ldw	r21,116(sp)
   25a44:	dd001c17 	ldw	r20,112(sp)
   25a48:	dcc01b17 	ldw	r19,108(sp)
   25a4c:	dc801a17 	ldw	r18,104(sp)
   25a50:	dc401917 	ldw	r17,100(sp)
   25a54:	dc001817 	ldw	r16,96(sp)
   25a58:	dec02204 	addi	sp,sp,136
   25a5c:	f800283a 	ret
   25a60:	d8c02317 	ldw	r3,140(sp)
   25a64:	0089c3c4 	movi	r2,9999
   25a68:	18800015 	stw	r2,0(r3)
   25a6c:	90017726 	beq	r18,zero,2604c <_dtoa_r+0x6dc>
   25a70:	008000f4 	movhi	r2,3
   25a74:	108e4704 	addi	r2,r2,14620
   25a78:	d9002517 	ldw	r4,148(sp)
   25a7c:	203fec26 	beq	r4,zero,25a30 <_dtoa_r+0xc0>
   25a80:	10c000c7 	ldb	r3,3(r2)
   25a84:	1801781e 	bne	r3,zero,26068 <_dtoa_r+0x6f8>
   25a88:	10c000c4 	addi	r3,r2,3
   25a8c:	d9802517 	ldw	r6,148(sp)
   25a90:	30c00015 	stw	r3,0(r6)
   25a94:	003fe606 	br	25a30 <_dtoa_r+0xc0>
   25a98:	04e00034 	movhi	r19,32768
   25a9c:	9cffffc4 	addi	r19,r19,-1
   25aa0:	00800044 	movi	r2,1
   25aa4:	8ce6703a 	and	r19,r17,r19
   25aa8:	80800015 	stw	r2,0(r16)
   25aac:	9823883a 	mov	r17,r19
   25ab0:	003fcc06 	br	259e4 <_dtoa_r+0x74>
   25ab4:	d8800204 	addi	r2,sp,8
   25ab8:	d8800015 	stw	r2,0(sp)
   25abc:	d9c00104 	addi	r7,sp,4
   25ac0:	900b883a 	mov	r5,r18
   25ac4:	980d883a 	mov	r6,r19
   25ac8:	e009883a 	mov	r4,fp
   25acc:	8820d53a 	srli	r16,r17,20
   25ad0:	0029ca00 	call	29ca0 <__d2b>
   25ad4:	d8800915 	stw	r2,36(sp)
   25ad8:	8001651e 	bne	r16,zero,26070 <_dtoa_r+0x700>
   25adc:	dd800217 	ldw	r22,8(sp)
   25ae0:	dc000117 	ldw	r16,4(sp)
   25ae4:	00800804 	movi	r2,32
   25ae8:	b421883a 	add	r16,r22,r16
   25aec:	80c10c84 	addi	r3,r16,1074
   25af0:	10c2d10e 	bge	r2,r3,26638 <_dtoa_r+0xcc8>
   25af4:	00801004 	movi	r2,64
   25af8:	81010484 	addi	r4,r16,1042
   25afc:	10c7c83a 	sub	r3,r2,r3
   25b00:	9108d83a 	srl	r4,r18,r4
   25b04:	88e2983a 	sll	r17,r17,r3
   25b08:	2448b03a 	or	r4,r4,r17
   25b0c:	0030d940 	call	30d94 <__floatunsidf>
   25b10:	017f8434 	movhi	r5,65040
   25b14:	01800044 	movi	r6,1
   25b18:	1009883a 	mov	r4,r2
   25b1c:	194b883a 	add	r5,r3,r5
   25b20:	843fffc4 	addi	r16,r16,-1
   25b24:	d9801115 	stw	r6,68(sp)
   25b28:	000d883a 	mov	r6,zero
   25b2c:	01cffe34 	movhi	r7,16376
   25b30:	003033c0 	call	3033c <__subdf3>
   25b34:	0198dbf4 	movhi	r6,25455
   25b38:	01cff4f4 	movhi	r7,16339
   25b3c:	3190d844 	addi	r6,r6,17249
   25b40:	39e1e9c4 	addi	r7,r7,-30809
   25b44:	1009883a 	mov	r4,r2
   25b48:	180b883a 	mov	r5,r3
   25b4c:	002fc240 	call	2fc24 <__muldf3>
   25b50:	01a2d874 	movhi	r6,35681
   25b54:	01cff1f4 	movhi	r7,16327
   25b58:	31b22cc4 	addi	r6,r6,-14157
   25b5c:	39e28a04 	addi	r7,r7,-30168
   25b60:	180b883a 	mov	r5,r3
   25b64:	1009883a 	mov	r4,r2
   25b68:	002e8380 	call	2e838 <__adddf3>
   25b6c:	8009883a 	mov	r4,r16
   25b70:	1029883a 	mov	r20,r2
   25b74:	1823883a 	mov	r17,r3
   25b78:	0030cb80 	call	30cb8 <__floatsidf>
   25b7c:	019427f4 	movhi	r6,20639
   25b80:	01cff4f4 	movhi	r7,16339
   25b84:	319e7ec4 	addi	r6,r6,31227
   25b88:	39d104c4 	addi	r7,r7,17427
   25b8c:	1009883a 	mov	r4,r2
   25b90:	180b883a 	mov	r5,r3
   25b94:	002fc240 	call	2fc24 <__muldf3>
   25b98:	100d883a 	mov	r6,r2
   25b9c:	180f883a 	mov	r7,r3
   25ba0:	a009883a 	mov	r4,r20
   25ba4:	880b883a 	mov	r5,r17
   25ba8:	002e8380 	call	2e838 <__adddf3>
   25bac:	1009883a 	mov	r4,r2
   25bb0:	180b883a 	mov	r5,r3
   25bb4:	1029883a 	mov	r20,r2
   25bb8:	1823883a 	mov	r17,r3
   25bbc:	0030c380 	call	30c38 <__fixdfsi>
   25bc0:	000d883a 	mov	r6,zero
   25bc4:	000f883a 	mov	r7,zero
   25bc8:	a009883a 	mov	r4,r20
   25bcc:	880b883a 	mov	r5,r17
   25bd0:	d8800515 	stw	r2,20(sp)
   25bd4:	002fb300 	call	2fb30 <__ledf2>
   25bd8:	10028716 	blt	r2,zero,265f8 <_dtoa_r+0xc88>
   25bdc:	d8c00517 	ldw	r3,20(sp)
   25be0:	00800584 	movi	r2,22
   25be4:	10c27536 	bltu	r2,r3,265bc <_dtoa_r+0xc4c>
   25be8:	180490fa 	slli	r2,r3,3
   25bec:	00c000f4 	movhi	r3,3
   25bf0:	18ce6304 	addi	r3,r3,14732
   25bf4:	1885883a 	add	r2,r3,r2
   25bf8:	11000017 	ldw	r4,0(r2)
   25bfc:	11400117 	ldw	r5,4(r2)
   25c00:	900d883a 	mov	r6,r18
   25c04:	980f883a 	mov	r7,r19
   25c08:	002fa540 	call	2fa54 <__gedf2>
   25c0c:	00828d0e 	bge	zero,r2,26644 <_dtoa_r+0xcd4>
   25c10:	d9000517 	ldw	r4,20(sp)
   25c14:	d8000e15 	stw	zero,56(sp)
   25c18:	213fffc4 	addi	r4,r4,-1
   25c1c:	d9000515 	stw	r4,20(sp)
   25c20:	b42dc83a 	sub	r22,r22,r16
   25c24:	b5bfffc4 	addi	r22,r22,-1
   25c28:	b0026f16 	blt	r22,zero,265e8 <_dtoa_r+0xc78>
   25c2c:	d8000815 	stw	zero,32(sp)
   25c30:	d9c00517 	ldw	r7,20(sp)
   25c34:	38026416 	blt	r7,zero,265c8 <_dtoa_r+0xc58>
   25c38:	b1ed883a 	add	r22,r22,r7
   25c3c:	d9c00d15 	stw	r7,52(sp)
   25c40:	d8000a15 	stw	zero,40(sp)
   25c44:	d9800317 	ldw	r6,12(sp)
   25c48:	00800244 	movi	r2,9
   25c4c:	11811436 	bltu	r2,r6,260a0 <_dtoa_r+0x730>
   25c50:	00800144 	movi	r2,5
   25c54:	1184e10e 	bge	r2,r6,26fdc <_dtoa_r+0x166c>
   25c58:	31bfff04 	addi	r6,r6,-4
   25c5c:	d9800315 	stw	r6,12(sp)
   25c60:	0023883a 	mov	r17,zero
   25c64:	d9800317 	ldw	r6,12(sp)
   25c68:	008000c4 	movi	r2,3
   25c6c:	30836726 	beq	r6,r2,26a0c <_dtoa_r+0x109c>
   25c70:	1183410e 	bge	r2,r6,26978 <_dtoa_r+0x1008>
   25c74:	d9c00317 	ldw	r7,12(sp)
   25c78:	00800104 	movi	r2,4
   25c7c:	38827c26 	beq	r7,r2,26670 <_dtoa_r+0xd00>
   25c80:	00800144 	movi	r2,5
   25c84:	3884c41e 	bne	r7,r2,26f98 <_dtoa_r+0x1628>
   25c88:	00800044 	movi	r2,1
   25c8c:	d8800b15 	stw	r2,44(sp)
   25c90:	d8c00517 	ldw	r3,20(sp)
   25c94:	d9002217 	ldw	r4,136(sp)
   25c98:	1907883a 	add	r3,r3,r4
   25c9c:	19800044 	addi	r6,r3,1
   25ca0:	d8c00c15 	stw	r3,48(sp)
   25ca4:	d9800615 	stw	r6,24(sp)
   25ca8:	0183a40e 	bge	zero,r6,26b3c <_dtoa_r+0x11cc>
   25cac:	d9800617 	ldw	r6,24(sp)
   25cb0:	3021883a 	mov	r16,r6
   25cb4:	e0001115 	stw	zero,68(fp)
   25cb8:	008005c4 	movi	r2,23
   25cbc:	1184c92e 	bgeu	r2,r6,26fe4 <_dtoa_r+0x1674>
   25cc0:	00c00044 	movi	r3,1
   25cc4:	00800104 	movi	r2,4
   25cc8:	1085883a 	add	r2,r2,r2
   25ccc:	11000504 	addi	r4,r2,20
   25cd0:	180b883a 	mov	r5,r3
   25cd4:	18c00044 	addi	r3,r3,1
   25cd8:	313ffb2e 	bgeu	r6,r4,25cc8 <_dtoa_r+0x358>
   25cdc:	e1401115 	stw	r5,68(fp)
   25ce0:	e009883a 	mov	r4,fp
   25ce4:	002900c0 	call	2900c <_Balloc>
   25ce8:	d8800715 	stw	r2,28(sp)
   25cec:	e0801015 	stw	r2,64(fp)
   25cf0:	00800384 	movi	r2,14
   25cf4:	1400f736 	bltu	r2,r16,260d4 <_dtoa_r+0x764>
   25cf8:	8800f626 	beq	r17,zero,260d4 <_dtoa_r+0x764>
   25cfc:	d9c00517 	ldw	r7,20(sp)
   25d00:	01c39a0e 	bge	zero,r7,26b6c <_dtoa_r+0x11fc>
   25d04:	388003cc 	andi	r2,r7,15
   25d08:	100490fa 	slli	r2,r2,3
   25d0c:	382bd13a 	srai	r21,r7,4
   25d10:	00c000f4 	movhi	r3,3
   25d14:	18ce6304 	addi	r3,r3,14732
   25d18:	1885883a 	add	r2,r3,r2
   25d1c:	a8c0040c 	andi	r3,r21,16
   25d20:	12400017 	ldw	r9,0(r2)
   25d24:	12000117 	ldw	r8,4(r2)
   25d28:	18037926 	beq	r3,zero,26b10 <_dtoa_r+0x11a0>
   25d2c:	008000f4 	movhi	r2,3
   25d30:	108e5904 	addi	r2,r2,14692
   25d34:	11800817 	ldw	r6,32(r2)
   25d38:	11c00917 	ldw	r7,36(r2)
   25d3c:	9009883a 	mov	r4,r18
   25d40:	980b883a 	mov	r5,r19
   25d44:	da001715 	stw	r8,92(sp)
   25d48:	da401615 	stw	r9,88(sp)
   25d4c:	002f0e40 	call	2f0e4 <__divdf3>
   25d50:	da001717 	ldw	r8,92(sp)
   25d54:	da401617 	ldw	r9,88(sp)
   25d58:	ad4003cc 	andi	r21,r21,15
   25d5c:	040000c4 	movi	r16,3
   25d60:	1023883a 	mov	r17,r2
   25d64:	1829883a 	mov	r20,r3
   25d68:	a8001126 	beq	r21,zero,25db0 <_dtoa_r+0x440>
   25d6c:	05c000f4 	movhi	r23,3
   25d70:	bdce5904 	addi	r23,r23,14692
   25d74:	4805883a 	mov	r2,r9
   25d78:	4007883a 	mov	r3,r8
   25d7c:	a980004c 	andi	r6,r21,1
   25d80:	1009883a 	mov	r4,r2
   25d84:	a82bd07a 	srai	r21,r21,1
   25d88:	180b883a 	mov	r5,r3
   25d8c:	30000426 	beq	r6,zero,25da0 <_dtoa_r+0x430>
   25d90:	b9800017 	ldw	r6,0(r23)
   25d94:	b9c00117 	ldw	r7,4(r23)
   25d98:	84000044 	addi	r16,r16,1
   25d9c:	002fc240 	call	2fc24 <__muldf3>
   25da0:	bdc00204 	addi	r23,r23,8
   25da4:	a83ff51e 	bne	r21,zero,25d7c <_dtoa_r+0x40c>
   25da8:	1013883a 	mov	r9,r2
   25dac:	1811883a 	mov	r8,r3
   25db0:	480d883a 	mov	r6,r9
   25db4:	400f883a 	mov	r7,r8
   25db8:	8809883a 	mov	r4,r17
   25dbc:	a00b883a 	mov	r5,r20
   25dc0:	002f0e40 	call	2f0e4 <__divdf3>
   25dc4:	d8800f15 	stw	r2,60(sp)
   25dc8:	d8c01015 	stw	r3,64(sp)
   25dcc:	d8c00e17 	ldw	r3,56(sp)
   25dd0:	18000626 	beq	r3,zero,25dec <_dtoa_r+0x47c>
   25dd4:	d9000f17 	ldw	r4,60(sp)
   25dd8:	d9401017 	ldw	r5,64(sp)
   25ddc:	000d883a 	mov	r6,zero
   25de0:	01cffc34 	movhi	r7,16368
   25de4:	002fb300 	call	2fb30 <__ledf2>
   25de8:	10040b16 	blt	r2,zero,26e18 <_dtoa_r+0x14a8>
   25dec:	8009883a 	mov	r4,r16
   25df0:	0030cb80 	call	30cb8 <__floatsidf>
   25df4:	d9800f17 	ldw	r6,60(sp)
   25df8:	d9c01017 	ldw	r7,64(sp)
   25dfc:	1009883a 	mov	r4,r2
   25e00:	180b883a 	mov	r5,r3
   25e04:	002fc240 	call	2fc24 <__muldf3>
   25e08:	000d883a 	mov	r6,zero
   25e0c:	01d00734 	movhi	r7,16412
   25e10:	1009883a 	mov	r4,r2
   25e14:	180b883a 	mov	r5,r3
   25e18:	002e8380 	call	2e838 <__adddf3>
   25e1c:	1021883a 	mov	r16,r2
   25e20:	d8800617 	ldw	r2,24(sp)
   25e24:	047f3034 	movhi	r17,64704
   25e28:	1c63883a 	add	r17,r3,r17
   25e2c:	10031826 	beq	r2,zero,26a90 <_dtoa_r+0x1120>
   25e30:	d8c00517 	ldw	r3,20(sp)
   25e34:	db000617 	ldw	r12,24(sp)
   25e38:	d8c01315 	stw	r3,76(sp)
   25e3c:	d9000b17 	ldw	r4,44(sp)
   25e40:	20038f26 	beq	r4,zero,26c80 <_dtoa_r+0x1310>
   25e44:	60bfffc4 	addi	r2,r12,-1
   25e48:	100490fa 	slli	r2,r2,3
   25e4c:	00c000f4 	movhi	r3,3
   25e50:	18ce6304 	addi	r3,r3,14732
   25e54:	1885883a 	add	r2,r3,r2
   25e58:	11800017 	ldw	r6,0(r2)
   25e5c:	11c00117 	ldw	r7,4(r2)
   25e60:	d8800717 	ldw	r2,28(sp)
   25e64:	0009883a 	mov	r4,zero
   25e68:	014ff834 	movhi	r5,16352
   25e6c:	db001615 	stw	r12,88(sp)
   25e70:	15c00044 	addi	r23,r2,1
   25e74:	002f0e40 	call	2f0e4 <__divdf3>
   25e78:	800d883a 	mov	r6,r16
   25e7c:	880f883a 	mov	r7,r17
   25e80:	1009883a 	mov	r4,r2
   25e84:	180b883a 	mov	r5,r3
   25e88:	003033c0 	call	3033c <__subdf3>
   25e8c:	d9401017 	ldw	r5,64(sp)
   25e90:	d9000f17 	ldw	r4,60(sp)
   25e94:	102b883a 	mov	r21,r2
   25e98:	d8c01215 	stw	r3,72(sp)
   25e9c:	0030c380 	call	30c38 <__fixdfsi>
   25ea0:	1009883a 	mov	r4,r2
   25ea4:	1029883a 	mov	r20,r2
   25ea8:	0030cb80 	call	30cb8 <__floatsidf>
   25eac:	d9000f17 	ldw	r4,60(sp)
   25eb0:	d9401017 	ldw	r5,64(sp)
   25eb4:	100d883a 	mov	r6,r2
   25eb8:	180f883a 	mov	r7,r3
   25ebc:	003033c0 	call	3033c <__subdf3>
   25ec0:	1823883a 	mov	r17,r3
   25ec4:	d8c00717 	ldw	r3,28(sp)
   25ec8:	d9401217 	ldw	r5,72(sp)
   25ecc:	a2000c04 	addi	r8,r20,48
   25ed0:	1021883a 	mov	r16,r2
   25ed4:	1a000005 	stb	r8,0(r3)
   25ed8:	800d883a 	mov	r6,r16
   25edc:	880f883a 	mov	r7,r17
   25ee0:	a809883a 	mov	r4,r21
   25ee4:	4029883a 	mov	r20,r8
   25ee8:	002fa540 	call	2fa54 <__gedf2>
   25eec:	00841d16 	blt	zero,r2,26f64 <_dtoa_r+0x15f4>
   25ef0:	800d883a 	mov	r6,r16
   25ef4:	880f883a 	mov	r7,r17
   25ef8:	0009883a 	mov	r4,zero
   25efc:	014ffc34 	movhi	r5,16368
   25f00:	003033c0 	call	3033c <__subdf3>
   25f04:	d9401217 	ldw	r5,72(sp)
   25f08:	100d883a 	mov	r6,r2
   25f0c:	180f883a 	mov	r7,r3
   25f10:	a809883a 	mov	r4,r21
   25f14:	002fa540 	call	2fa54 <__gedf2>
   25f18:	db001617 	ldw	r12,88(sp)
   25f1c:	00840e16 	blt	zero,r2,26f58 <_dtoa_r+0x15e8>
   25f20:	00800044 	movi	r2,1
   25f24:	13006b0e 	bge	r2,r12,260d4 <_dtoa_r+0x764>
   25f28:	d9000717 	ldw	r4,28(sp)
   25f2c:	dd800f15 	stw	r22,60(sp)
   25f30:	dcc01015 	stw	r19,64(sp)
   25f34:	2319883a 	add	r12,r4,r12
   25f38:	dcc01217 	ldw	r19,72(sp)
   25f3c:	602d883a 	mov	r22,r12
   25f40:	dc801215 	stw	r18,72(sp)
   25f44:	b825883a 	mov	r18,r23
   25f48:	00000906 	br	25f70 <_dtoa_r+0x600>
   25f4c:	003033c0 	call	3033c <__subdf3>
   25f50:	a80d883a 	mov	r6,r21
   25f54:	980f883a 	mov	r7,r19
   25f58:	1009883a 	mov	r4,r2
   25f5c:	180b883a 	mov	r5,r3
   25f60:	002fb300 	call	2fb30 <__ledf2>
   25f64:	1003e816 	blt	r2,zero,26f08 <_dtoa_r+0x1598>
   25f68:	b825883a 	mov	r18,r23
   25f6c:	bd83e926 	beq	r23,r22,26f14 <_dtoa_r+0x15a4>
   25f70:	a809883a 	mov	r4,r21
   25f74:	980b883a 	mov	r5,r19
   25f78:	000d883a 	mov	r6,zero
   25f7c:	01d00934 	movhi	r7,16420
   25f80:	002fc240 	call	2fc24 <__muldf3>
   25f84:	000d883a 	mov	r6,zero
   25f88:	01d00934 	movhi	r7,16420
   25f8c:	8009883a 	mov	r4,r16
   25f90:	880b883a 	mov	r5,r17
   25f94:	102b883a 	mov	r21,r2
   25f98:	1827883a 	mov	r19,r3
   25f9c:	002fc240 	call	2fc24 <__muldf3>
   25fa0:	180b883a 	mov	r5,r3
   25fa4:	1009883a 	mov	r4,r2
   25fa8:	1821883a 	mov	r16,r3
   25fac:	1023883a 	mov	r17,r2
   25fb0:	0030c380 	call	30c38 <__fixdfsi>
   25fb4:	1009883a 	mov	r4,r2
   25fb8:	1029883a 	mov	r20,r2
   25fbc:	0030cb80 	call	30cb8 <__floatsidf>
   25fc0:	8809883a 	mov	r4,r17
   25fc4:	800b883a 	mov	r5,r16
   25fc8:	100d883a 	mov	r6,r2
   25fcc:	180f883a 	mov	r7,r3
   25fd0:	003033c0 	call	3033c <__subdf3>
   25fd4:	a5000c04 	addi	r20,r20,48
   25fd8:	a80d883a 	mov	r6,r21
   25fdc:	980f883a 	mov	r7,r19
   25fe0:	1009883a 	mov	r4,r2
   25fe4:	180b883a 	mov	r5,r3
   25fe8:	95000005 	stb	r20,0(r18)
   25fec:	1021883a 	mov	r16,r2
   25ff0:	1823883a 	mov	r17,r3
   25ff4:	002fb300 	call	2fb30 <__ledf2>
   25ff8:	bdc00044 	addi	r23,r23,1
   25ffc:	800d883a 	mov	r6,r16
   26000:	880f883a 	mov	r7,r17
   26004:	0009883a 	mov	r4,zero
   26008:	014ffc34 	movhi	r5,16368
   2600c:	103fcf0e 	bge	r2,zero,25f4c <_dtoa_r+0x5dc>
   26010:	d8c01317 	ldw	r3,76(sp)
   26014:	d8c00515 	stw	r3,20(sp)
   26018:	d9400917 	ldw	r5,36(sp)
   2601c:	e009883a 	mov	r4,fp
   26020:	00290b40 	call	290b4 <_Bfree>
   26024:	d9000517 	ldw	r4,20(sp)
   26028:	d9802317 	ldw	r6,140(sp)
   2602c:	d9c02517 	ldw	r7,148(sp)
   26030:	b8000005 	stb	zero,0(r23)
   26034:	20800044 	addi	r2,r4,1
   26038:	30800015 	stw	r2,0(r6)
   2603c:	3802aa26 	beq	r7,zero,26ae8 <_dtoa_r+0x1178>
   26040:	3dc00015 	stw	r23,0(r7)
   26044:	d8800717 	ldw	r2,28(sp)
   26048:	003e7906 	br	25a30 <_dtoa_r+0xc0>
   2604c:	00800434 	movhi	r2,16
   26050:	10bfffc4 	addi	r2,r2,-1
   26054:	88a2703a 	and	r17,r17,r2
   26058:	883e851e 	bne	r17,zero,25a70 <_dtoa_r+0x100>
   2605c:	008000f4 	movhi	r2,3
   26060:	108e4404 	addi	r2,r2,14608
   26064:	003e8406 	br	25a78 <_dtoa_r+0x108>
   26068:	10c00204 	addi	r3,r2,8
   2606c:	003e8706 	br	25a8c <_dtoa_r+0x11c>
   26070:	01400434 	movhi	r5,16
   26074:	297fffc4 	addi	r5,r5,-1
   26078:	994a703a 	and	r5,r19,r5
   2607c:	9009883a 	mov	r4,r18
   26080:	843f0044 	addi	r16,r16,-1023
   26084:	294ffc34 	orhi	r5,r5,16368
   26088:	dd800217 	ldw	r22,8(sp)
   2608c:	d8001115 	stw	zero,68(sp)
   26090:	003ea506 	br	25b28 <_dtoa_r+0x1b8>
   26094:	008000f4 	movhi	r2,3
   26098:	108e3304 	addi	r2,r2,14540
   2609c:	003e6406 	br	25a30 <_dtoa_r+0xc0>
   260a0:	e0001115 	stw	zero,68(fp)
   260a4:	000b883a 	mov	r5,zero
   260a8:	e009883a 	mov	r4,fp
   260ac:	002900c0 	call	2900c <_Balloc>
   260b0:	01bfffc4 	movi	r6,-1
   260b4:	01c00044 	movi	r7,1
   260b8:	d8800715 	stw	r2,28(sp)
   260bc:	d9800c15 	stw	r6,48(sp)
   260c0:	e0801015 	stw	r2,64(fp)
   260c4:	d8000315 	stw	zero,12(sp)
   260c8:	d9c00b15 	stw	r7,44(sp)
   260cc:	d9800615 	stw	r6,24(sp)
   260d0:	d8002215 	stw	zero,136(sp)
   260d4:	d8800117 	ldw	r2,4(sp)
   260d8:	10008916 	blt	r2,zero,26300 <_dtoa_r+0x990>
   260dc:	d9000517 	ldw	r4,20(sp)
   260e0:	00c00384 	movi	r3,14
   260e4:	19008616 	blt	r3,r4,26300 <_dtoa_r+0x990>
   260e8:	200490fa 	slli	r2,r4,3
   260ec:	00c000f4 	movhi	r3,3
   260f0:	d9802217 	ldw	r6,136(sp)
   260f4:	18ce6304 	addi	r3,r3,14732
   260f8:	1885883a 	add	r2,r3,r2
   260fc:	14000017 	ldw	r16,0(r2)
   26100:	14400117 	ldw	r17,4(r2)
   26104:	30016316 	blt	r6,zero,26694 <_dtoa_r+0xd24>
   26108:	800d883a 	mov	r6,r16
   2610c:	880f883a 	mov	r7,r17
   26110:	9009883a 	mov	r4,r18
   26114:	980b883a 	mov	r5,r19
   26118:	002f0e40 	call	2f0e4 <__divdf3>
   2611c:	180b883a 	mov	r5,r3
   26120:	1009883a 	mov	r4,r2
   26124:	0030c380 	call	30c38 <__fixdfsi>
   26128:	1009883a 	mov	r4,r2
   2612c:	102b883a 	mov	r21,r2
   26130:	0030cb80 	call	30cb8 <__floatsidf>
   26134:	800d883a 	mov	r6,r16
   26138:	880f883a 	mov	r7,r17
   2613c:	1009883a 	mov	r4,r2
   26140:	180b883a 	mov	r5,r3
   26144:	002fc240 	call	2fc24 <__muldf3>
   26148:	100d883a 	mov	r6,r2
   2614c:	180f883a 	mov	r7,r3
   26150:	9009883a 	mov	r4,r18
   26154:	980b883a 	mov	r5,r19
   26158:	003033c0 	call	3033c <__subdf3>
   2615c:	d9c00717 	ldw	r7,28(sp)
   26160:	1009883a 	mov	r4,r2
   26164:	a8800c04 	addi	r2,r21,48
   26168:	38800005 	stb	r2,0(r7)
   2616c:	3dc00044 	addi	r23,r7,1
   26170:	d9c00617 	ldw	r7,24(sp)
   26174:	01800044 	movi	r6,1
   26178:	180b883a 	mov	r5,r3
   2617c:	2005883a 	mov	r2,r4
   26180:	39803826 	beq	r7,r6,26264 <_dtoa_r+0x8f4>
   26184:	000d883a 	mov	r6,zero
   26188:	01d00934 	movhi	r7,16420
   2618c:	002fc240 	call	2fc24 <__muldf3>
   26190:	000d883a 	mov	r6,zero
   26194:	000f883a 	mov	r7,zero
   26198:	1009883a 	mov	r4,r2
   2619c:	180b883a 	mov	r5,r3
   261a0:	1025883a 	mov	r18,r2
   261a4:	1827883a 	mov	r19,r3
   261a8:	002f9cc0 	call	2f9cc <__eqdf2>
   261ac:	103f9a26 	beq	r2,zero,26018 <_dtoa_r+0x6a8>
   261b0:	d9c00617 	ldw	r7,24(sp)
   261b4:	d8c00717 	ldw	r3,28(sp)
   261b8:	b829883a 	mov	r20,r23
   261bc:	38bfffc4 	addi	r2,r7,-1
   261c0:	18ad883a 	add	r22,r3,r2
   261c4:	00000a06 	br	261f0 <_dtoa_r+0x880>
   261c8:	002fc240 	call	2fc24 <__muldf3>
   261cc:	000d883a 	mov	r6,zero
   261d0:	000f883a 	mov	r7,zero
   261d4:	1009883a 	mov	r4,r2
   261d8:	180b883a 	mov	r5,r3
   261dc:	1025883a 	mov	r18,r2
   261e0:	1827883a 	mov	r19,r3
   261e4:	b829883a 	mov	r20,r23
   261e8:	002f9cc0 	call	2f9cc <__eqdf2>
   261ec:	103f8a26 	beq	r2,zero,26018 <_dtoa_r+0x6a8>
   261f0:	800d883a 	mov	r6,r16
   261f4:	880f883a 	mov	r7,r17
   261f8:	9009883a 	mov	r4,r18
   261fc:	980b883a 	mov	r5,r19
   26200:	002f0e40 	call	2f0e4 <__divdf3>
   26204:	180b883a 	mov	r5,r3
   26208:	1009883a 	mov	r4,r2
   2620c:	0030c380 	call	30c38 <__fixdfsi>
   26210:	1009883a 	mov	r4,r2
   26214:	102b883a 	mov	r21,r2
   26218:	0030cb80 	call	30cb8 <__floatsidf>
   2621c:	800d883a 	mov	r6,r16
   26220:	880f883a 	mov	r7,r17
   26224:	1009883a 	mov	r4,r2
   26228:	180b883a 	mov	r5,r3
   2622c:	002fc240 	call	2fc24 <__muldf3>
   26230:	100d883a 	mov	r6,r2
   26234:	180f883a 	mov	r7,r3
   26238:	9009883a 	mov	r4,r18
   2623c:	980b883a 	mov	r5,r19
   26240:	003033c0 	call	3033c <__subdf3>
   26244:	aa000c04 	addi	r8,r21,48
   26248:	a2000005 	stb	r8,0(r20)
   2624c:	000d883a 	mov	r6,zero
   26250:	01d00934 	movhi	r7,16420
   26254:	1009883a 	mov	r4,r2
   26258:	180b883a 	mov	r5,r3
   2625c:	a5c00044 	addi	r23,r20,1
   26260:	b53fd91e 	bne	r22,r20,261c8 <_dtoa_r+0x858>
   26264:	100d883a 	mov	r6,r2
   26268:	180f883a 	mov	r7,r3
   2626c:	1009883a 	mov	r4,r2
   26270:	180b883a 	mov	r5,r3
   26274:	002e8380 	call	2e838 <__adddf3>
   26278:	100d883a 	mov	r6,r2
   2627c:	180f883a 	mov	r7,r3
   26280:	8009883a 	mov	r4,r16
   26284:	880b883a 	mov	r5,r17
   26288:	1027883a 	mov	r19,r2
   2628c:	1825883a 	mov	r18,r3
   26290:	002fb300 	call	2fb30 <__ledf2>
   26294:	10000816 	blt	r2,zero,262b8 <_dtoa_r+0x948>
   26298:	980d883a 	mov	r6,r19
   2629c:	900f883a 	mov	r7,r18
   262a0:	8009883a 	mov	r4,r16
   262a4:	880b883a 	mov	r5,r17
   262a8:	002f9cc0 	call	2f9cc <__eqdf2>
   262ac:	103f5a1e 	bne	r2,zero,26018 <_dtoa_r+0x6a8>
   262b0:	ad40004c 	andi	r21,r21,1
   262b4:	a83f5826 	beq	r21,zero,26018 <_dtoa_r+0x6a8>
   262b8:	bd3fffc3 	ldbu	r20,-1(r23)
   262bc:	b8bfffc4 	addi	r2,r23,-1
   262c0:	1007883a 	mov	r3,r2
   262c4:	01400e44 	movi	r5,57
   262c8:	d9800717 	ldw	r6,28(sp)
   262cc:	00000506 	br	262e4 <_dtoa_r+0x974>
   262d0:	18ffffc4 	addi	r3,r3,-1
   262d4:	11824726 	beq	r2,r6,26bf4 <_dtoa_r+0x1284>
   262d8:	1d000003 	ldbu	r20,0(r3)
   262dc:	102f883a 	mov	r23,r2
   262e0:	10bfffc4 	addi	r2,r2,-1
   262e4:	a1003fcc 	andi	r4,r20,255
   262e8:	2100201c 	xori	r4,r4,128
   262ec:	213fe004 	addi	r4,r4,-128
   262f0:	217ff726 	beq	r4,r5,262d0 <_dtoa_r+0x960>
   262f4:	a2000044 	addi	r8,r20,1
   262f8:	12000005 	stb	r8,0(r2)
   262fc:	003f4606 	br	26018 <_dtoa_r+0x6a8>
   26300:	d9000b17 	ldw	r4,44(sp)
   26304:	2000c826 	beq	r4,zero,26628 <_dtoa_r+0xcb8>
   26308:	d9800317 	ldw	r6,12(sp)
   2630c:	00c00044 	movi	r3,1
   26310:	1980f90e 	bge	r3,r6,266f8 <_dtoa_r+0xd88>
   26314:	d8800617 	ldw	r2,24(sp)
   26318:	d8c00a17 	ldw	r3,40(sp)
   2631c:	157fffc4 	addi	r21,r2,-1
   26320:	1d41f316 	blt	r3,r21,26af0 <_dtoa_r+0x1180>
   26324:	1d6bc83a 	sub	r21,r3,r21
   26328:	d9c00617 	ldw	r7,24(sp)
   2632c:	3802aa16 	blt	r7,zero,26dd8 <_dtoa_r+0x1468>
   26330:	dd000817 	ldw	r20,32(sp)
   26334:	d8800617 	ldw	r2,24(sp)
   26338:	d8c00817 	ldw	r3,32(sp)
   2633c:	01400044 	movi	r5,1
   26340:	e009883a 	mov	r4,fp
   26344:	1887883a 	add	r3,r3,r2
   26348:	d8c00815 	stw	r3,32(sp)
   2634c:	b0ad883a 	add	r22,r22,r2
   26350:	00294180 	call	29418 <__i2b>
   26354:	1023883a 	mov	r17,r2
   26358:	a0000826 	beq	r20,zero,2637c <_dtoa_r+0xa0c>
   2635c:	0580070e 	bge	zero,r22,2637c <_dtoa_r+0xa0c>
   26360:	a005883a 	mov	r2,r20
   26364:	b500b916 	blt	r22,r20,2664c <_dtoa_r+0xcdc>
   26368:	d9000817 	ldw	r4,32(sp)
   2636c:	a0a9c83a 	sub	r20,r20,r2
   26370:	b0adc83a 	sub	r22,r22,r2
   26374:	2089c83a 	sub	r4,r4,r2
   26378:	d9000815 	stw	r4,32(sp)
   2637c:	d9800a17 	ldw	r6,40(sp)
   26380:	0181810e 	bge	zero,r6,26988 <_dtoa_r+0x1018>
   26384:	d9c00b17 	ldw	r7,44(sp)
   26388:	3800b326 	beq	r7,zero,26658 <_dtoa_r+0xce8>
   2638c:	a800b226 	beq	r21,zero,26658 <_dtoa_r+0xce8>
   26390:	880b883a 	mov	r5,r17
   26394:	a80d883a 	mov	r6,r21
   26398:	e009883a 	mov	r4,fp
   2639c:	002964c0 	call	2964c <__pow5mult>
   263a0:	d9800917 	ldw	r6,36(sp)
   263a4:	100b883a 	mov	r5,r2
   263a8:	e009883a 	mov	r4,fp
   263ac:	1023883a 	mov	r17,r2
   263b0:	00294540 	call	29454 <__multiply>
   263b4:	1021883a 	mov	r16,r2
   263b8:	d8800a17 	ldw	r2,40(sp)
   263bc:	d9400917 	ldw	r5,36(sp)
   263c0:	e009883a 	mov	r4,fp
   263c4:	1545c83a 	sub	r2,r2,r21
   263c8:	d8800a15 	stw	r2,40(sp)
   263cc:	00290b40 	call	290b4 <_Bfree>
   263d0:	d8c00a17 	ldw	r3,40(sp)
   263d4:	18009f1e 	bne	r3,zero,26654 <_dtoa_r+0xce4>
   263d8:	05c00044 	movi	r23,1
   263dc:	e009883a 	mov	r4,fp
   263e0:	b80b883a 	mov	r5,r23
   263e4:	00294180 	call	29418 <__i2b>
   263e8:	d9000d17 	ldw	r4,52(sp)
   263ec:	102b883a 	mov	r21,r2
   263f0:	2000ce26 	beq	r4,zero,2672c <_dtoa_r+0xdbc>
   263f4:	200d883a 	mov	r6,r4
   263f8:	100b883a 	mov	r5,r2
   263fc:	e009883a 	mov	r4,fp
   26400:	002964c0 	call	2964c <__pow5mult>
   26404:	d9800317 	ldw	r6,12(sp)
   26408:	102b883a 	mov	r21,r2
   2640c:	b981810e 	bge	r23,r6,26a14 <_dtoa_r+0x10a4>
   26410:	0027883a 	mov	r19,zero
   26414:	a8800417 	ldw	r2,16(r21)
   26418:	05c00804 	movi	r23,32
   2641c:	10800104 	addi	r2,r2,4
   26420:	1085883a 	add	r2,r2,r2
   26424:	1085883a 	add	r2,r2,r2
   26428:	a885883a 	add	r2,r21,r2
   2642c:	11000017 	ldw	r4,0(r2)
   26430:	00293000 	call	29300 <__hi0bits>
   26434:	b885c83a 	sub	r2,r23,r2
   26438:	1585883a 	add	r2,r2,r22
   2643c:	108007cc 	andi	r2,r2,31
   26440:	1000b326 	beq	r2,zero,26710 <_dtoa_r+0xda0>
   26444:	00c00804 	movi	r3,32
   26448:	1887c83a 	sub	r3,r3,r2
   2644c:	01000104 	movi	r4,4
   26450:	20c2cd0e 	bge	r4,r3,26f88 <_dtoa_r+0x1618>
   26454:	00c00704 	movi	r3,28
   26458:	1885c83a 	sub	r2,r3,r2
   2645c:	d8c00817 	ldw	r3,32(sp)
   26460:	a0a9883a 	add	r20,r20,r2
   26464:	b0ad883a 	add	r22,r22,r2
   26468:	1887883a 	add	r3,r3,r2
   2646c:	d8c00815 	stw	r3,32(sp)
   26470:	d9800817 	ldw	r6,32(sp)
   26474:	0180040e 	bge	zero,r6,26488 <_dtoa_r+0xb18>
   26478:	800b883a 	mov	r5,r16
   2647c:	e009883a 	mov	r4,fp
   26480:	002978c0 	call	2978c <__lshift>
   26484:	1021883a 	mov	r16,r2
   26488:	0580050e 	bge	zero,r22,264a0 <_dtoa_r+0xb30>
   2648c:	a80b883a 	mov	r5,r21
   26490:	b00d883a 	mov	r6,r22
   26494:	e009883a 	mov	r4,fp
   26498:	002978c0 	call	2978c <__lshift>
   2649c:	102b883a 	mov	r21,r2
   264a0:	d9c00e17 	ldw	r7,56(sp)
   264a4:	3801211e 	bne	r7,zero,2692c <_dtoa_r+0xfbc>
   264a8:	d9800617 	ldw	r6,24(sp)
   264ac:	0181380e 	bge	zero,r6,26990 <_dtoa_r+0x1020>
   264b0:	d8c00b17 	ldw	r3,44(sp)
   264b4:	1800ab1e 	bne	r3,zero,26764 <_dtoa_r+0xdf4>
   264b8:	dc800717 	ldw	r18,28(sp)
   264bc:	dcc00617 	ldw	r19,24(sp)
   264c0:	9029883a 	mov	r20,r18
   264c4:	00000206 	br	264d0 <_dtoa_r+0xb60>
   264c8:	00290dc0 	call	290dc <__multadd>
   264cc:	1021883a 	mov	r16,r2
   264d0:	a80b883a 	mov	r5,r21
   264d4:	8009883a 	mov	r4,r16
   264d8:	00257700 	call	25770 <quorem>
   264dc:	10800c04 	addi	r2,r2,48
   264e0:	90800005 	stb	r2,0(r18)
   264e4:	94800044 	addi	r18,r18,1
   264e8:	9507c83a 	sub	r3,r18,r20
   264ec:	000f883a 	mov	r7,zero
   264f0:	01800284 	movi	r6,10
   264f4:	800b883a 	mov	r5,r16
   264f8:	e009883a 	mov	r4,fp
   264fc:	1cfff216 	blt	r3,r19,264c8 <_dtoa_r+0xb58>
   26500:	1011883a 	mov	r8,r2
   26504:	d8800617 	ldw	r2,24(sp)
   26508:	0082370e 	bge	zero,r2,26de8 <_dtoa_r+0x1478>
   2650c:	d9000717 	ldw	r4,28(sp)
   26510:	0025883a 	mov	r18,zero
   26514:	20af883a 	add	r23,r4,r2
   26518:	01800044 	movi	r6,1
   2651c:	800b883a 	mov	r5,r16
   26520:	e009883a 	mov	r4,fp
   26524:	da001715 	stw	r8,92(sp)
   26528:	002978c0 	call	2978c <__lshift>
   2652c:	a80b883a 	mov	r5,r21
   26530:	1009883a 	mov	r4,r2
   26534:	d8800915 	stw	r2,36(sp)
   26538:	00298d40 	call	298d4 <__mcmp>
   2653c:	da001717 	ldw	r8,92(sp)
   26540:	0081800e 	bge	zero,r2,26b44 <_dtoa_r+0x11d4>
   26544:	b93fffc3 	ldbu	r4,-1(r23)
   26548:	b8bfffc4 	addi	r2,r23,-1
   2654c:	1007883a 	mov	r3,r2
   26550:	01800e44 	movi	r6,57
   26554:	d9c00717 	ldw	r7,28(sp)
   26558:	00000506 	br	26570 <_dtoa_r+0xc00>
   2655c:	18ffffc4 	addi	r3,r3,-1
   26560:	11c12326 	beq	r2,r7,269f0 <_dtoa_r+0x1080>
   26564:	19000003 	ldbu	r4,0(r3)
   26568:	102f883a 	mov	r23,r2
   2656c:	10bfffc4 	addi	r2,r2,-1
   26570:	21403fcc 	andi	r5,r4,255
   26574:	2940201c 	xori	r5,r5,128
   26578:	297fe004 	addi	r5,r5,-128
   2657c:	29bff726 	beq	r5,r6,2655c <_dtoa_r+0xbec>
   26580:	21000044 	addi	r4,r4,1
   26584:	11000005 	stb	r4,0(r2)
   26588:	a80b883a 	mov	r5,r21
   2658c:	e009883a 	mov	r4,fp
   26590:	00290b40 	call	290b4 <_Bfree>
   26594:	883ea026 	beq	r17,zero,26018 <_dtoa_r+0x6a8>
   26598:	90000426 	beq	r18,zero,265ac <_dtoa_r+0xc3c>
   2659c:	94400326 	beq	r18,r17,265ac <_dtoa_r+0xc3c>
   265a0:	900b883a 	mov	r5,r18
   265a4:	e009883a 	mov	r4,fp
   265a8:	00290b40 	call	290b4 <_Bfree>
   265ac:	880b883a 	mov	r5,r17
   265b0:	e009883a 	mov	r4,fp
   265b4:	00290b40 	call	290b4 <_Bfree>
   265b8:	003e9706 	br	26018 <_dtoa_r+0x6a8>
   265bc:	01800044 	movi	r6,1
   265c0:	d9800e15 	stw	r6,56(sp)
   265c4:	003d9606 	br	25c20 <_dtoa_r+0x2b0>
   265c8:	d8800817 	ldw	r2,32(sp)
   265cc:	d8c00517 	ldw	r3,20(sp)
   265d0:	d8000d15 	stw	zero,52(sp)
   265d4:	10c5c83a 	sub	r2,r2,r3
   265d8:	00c9c83a 	sub	r4,zero,r3
   265dc:	d8800815 	stw	r2,32(sp)
   265e0:	d9000a15 	stw	r4,40(sp)
   265e4:	003d9706 	br	25c44 <_dtoa_r+0x2d4>
   265e8:	05adc83a 	sub	r22,zero,r22
   265ec:	dd800815 	stw	r22,32(sp)
   265f0:	002d883a 	mov	r22,zero
   265f4:	003d8e06 	br	25c30 <_dtoa_r+0x2c0>
   265f8:	d9000517 	ldw	r4,20(sp)
   265fc:	0030cb80 	call	30cb8 <__floatsidf>
   26600:	100d883a 	mov	r6,r2
   26604:	180f883a 	mov	r7,r3
   26608:	a009883a 	mov	r4,r20
   2660c:	880b883a 	mov	r5,r17
   26610:	002f9cc0 	call	2f9cc <__eqdf2>
   26614:	103d7126 	beq	r2,zero,25bdc <_dtoa_r+0x26c>
   26618:	d9c00517 	ldw	r7,20(sp)
   2661c:	39ffffc4 	addi	r7,r7,-1
   26620:	d9c00515 	stw	r7,20(sp)
   26624:	003d6d06 	br	25bdc <_dtoa_r+0x26c>
   26628:	dd400a17 	ldw	r21,40(sp)
   2662c:	dd000817 	ldw	r20,32(sp)
   26630:	0023883a 	mov	r17,zero
   26634:	003f4806 	br	26358 <_dtoa_r+0x9e8>
   26638:	10e3c83a 	sub	r17,r2,r3
   2663c:	9448983a 	sll	r4,r18,r17
   26640:	003d3206 	br	25b0c <_dtoa_r+0x19c>
   26644:	d8000e15 	stw	zero,56(sp)
   26648:	003d7506 	br	25c20 <_dtoa_r+0x2b0>
   2664c:	b005883a 	mov	r2,r22
   26650:	003f4506 	br	26368 <_dtoa_r+0x9f8>
   26654:	dc000915 	stw	r16,36(sp)
   26658:	d9800a17 	ldw	r6,40(sp)
   2665c:	d9400917 	ldw	r5,36(sp)
   26660:	e009883a 	mov	r4,fp
   26664:	002964c0 	call	2964c <__pow5mult>
   26668:	1021883a 	mov	r16,r2
   2666c:	003f5a06 	br	263d8 <_dtoa_r+0xa68>
   26670:	01c00044 	movi	r7,1
   26674:	d9c00b15 	stw	r7,44(sp)
   26678:	d8802217 	ldw	r2,136(sp)
   2667c:	0081280e 	bge	zero,r2,26b20 <_dtoa_r+0x11b0>
   26680:	100d883a 	mov	r6,r2
   26684:	1021883a 	mov	r16,r2
   26688:	d8800c15 	stw	r2,48(sp)
   2668c:	d8800615 	stw	r2,24(sp)
   26690:	003d8806 	br	25cb4 <_dtoa_r+0x344>
   26694:	d8800617 	ldw	r2,24(sp)
   26698:	00be9b16 	blt	zero,r2,26108 <_dtoa_r+0x798>
   2669c:	10010f1e 	bne	r2,zero,26adc <_dtoa_r+0x116c>
   266a0:	880b883a 	mov	r5,r17
   266a4:	000d883a 	mov	r6,zero
   266a8:	01d00534 	movhi	r7,16404
   266ac:	8009883a 	mov	r4,r16
   266b0:	002fc240 	call	2fc24 <__muldf3>
   266b4:	900d883a 	mov	r6,r18
   266b8:	980f883a 	mov	r7,r19
   266bc:	1009883a 	mov	r4,r2
   266c0:	180b883a 	mov	r5,r3
   266c4:	002fa540 	call	2fa54 <__gedf2>
   266c8:	002b883a 	mov	r21,zero
   266cc:	0023883a 	mov	r17,zero
   266d0:	1000bf16 	blt	r2,zero,269d0 <_dtoa_r+0x1060>
   266d4:	d9802217 	ldw	r6,136(sp)
   266d8:	ddc00717 	ldw	r23,28(sp)
   266dc:	018c303a 	nor	r6,zero,r6
   266e0:	d9800515 	stw	r6,20(sp)
   266e4:	a80b883a 	mov	r5,r21
   266e8:	e009883a 	mov	r4,fp
   266ec:	00290b40 	call	290b4 <_Bfree>
   266f0:	883e4926 	beq	r17,zero,26018 <_dtoa_r+0x6a8>
   266f4:	003fad06 	br	265ac <_dtoa_r+0xc3c>
   266f8:	d9c01117 	ldw	r7,68(sp)
   266fc:	3801bc26 	beq	r7,zero,26df0 <_dtoa_r+0x1480>
   26700:	10810cc4 	addi	r2,r2,1075
   26704:	dd400a17 	ldw	r21,40(sp)
   26708:	dd000817 	ldw	r20,32(sp)
   2670c:	003f0a06 	br	26338 <_dtoa_r+0x9c8>
   26710:	00800704 	movi	r2,28
   26714:	d9000817 	ldw	r4,32(sp)
   26718:	a0a9883a 	add	r20,r20,r2
   2671c:	b0ad883a 	add	r22,r22,r2
   26720:	2089883a 	add	r4,r4,r2
   26724:	d9000815 	stw	r4,32(sp)
   26728:	003f5106 	br	26470 <_dtoa_r+0xb00>
   2672c:	d8c00317 	ldw	r3,12(sp)
   26730:	b8c1fc0e 	bge	r23,r3,26f24 <_dtoa_r+0x15b4>
   26734:	0027883a 	mov	r19,zero
   26738:	b805883a 	mov	r2,r23
   2673c:	003f3e06 	br	26438 <_dtoa_r+0xac8>
   26740:	880b883a 	mov	r5,r17
   26744:	e009883a 	mov	r4,fp
   26748:	000f883a 	mov	r7,zero
   2674c:	01800284 	movi	r6,10
   26750:	00290dc0 	call	290dc <__multadd>
   26754:	d9000c17 	ldw	r4,48(sp)
   26758:	1023883a 	mov	r17,r2
   2675c:	0102040e 	bge	zero,r4,26f70 <_dtoa_r+0x1600>
   26760:	d9000615 	stw	r4,24(sp)
   26764:	0500050e 	bge	zero,r20,2677c <_dtoa_r+0xe0c>
   26768:	880b883a 	mov	r5,r17
   2676c:	a00d883a 	mov	r6,r20
   26770:	e009883a 	mov	r4,fp
   26774:	002978c0 	call	2978c <__lshift>
   26778:	1023883a 	mov	r17,r2
   2677c:	9801241e 	bne	r19,zero,26c10 <_dtoa_r+0x12a0>
   26780:	8829883a 	mov	r20,r17
   26784:	d9000617 	ldw	r4,24(sp)
   26788:	dcc00717 	ldw	r19,28(sp)
   2678c:	9480004c 	andi	r18,r18,1
   26790:	20bfffc4 	addi	r2,r4,-1
   26794:	9885883a 	add	r2,r19,r2
   26798:	d8800415 	stw	r2,16(sp)
   2679c:	dc800615 	stw	r18,24(sp)
   267a0:	a80b883a 	mov	r5,r21
   267a4:	8009883a 	mov	r4,r16
   267a8:	00257700 	call	25770 <quorem>
   267ac:	880b883a 	mov	r5,r17
   267b0:	8009883a 	mov	r4,r16
   267b4:	102f883a 	mov	r23,r2
   267b8:	00298d40 	call	298d4 <__mcmp>
   267bc:	a80b883a 	mov	r5,r21
   267c0:	a00d883a 	mov	r6,r20
   267c4:	e009883a 	mov	r4,fp
   267c8:	102d883a 	mov	r22,r2
   267cc:	00299340 	call	29934 <__mdiff>
   267d0:	1007883a 	mov	r3,r2
   267d4:	10800317 	ldw	r2,12(r2)
   267d8:	bc800c04 	addi	r18,r23,48
   267dc:	180b883a 	mov	r5,r3
   267e0:	10004e1e 	bne	r2,zero,2691c <_dtoa_r+0xfac>
   267e4:	8009883a 	mov	r4,r16
   267e8:	d8c01615 	stw	r3,88(sp)
   267ec:	00298d40 	call	298d4 <__mcmp>
   267f0:	d8c01617 	ldw	r3,88(sp)
   267f4:	e009883a 	mov	r4,fp
   267f8:	d8801615 	stw	r2,88(sp)
   267fc:	180b883a 	mov	r5,r3
   26800:	00290b40 	call	290b4 <_Bfree>
   26804:	d8801617 	ldw	r2,88(sp)
   26808:	1000041e 	bne	r2,zero,2681c <_dtoa_r+0xeac>
   2680c:	d9800317 	ldw	r6,12(sp)
   26810:	3000021e 	bne	r6,zero,2681c <_dtoa_r+0xeac>
   26814:	d8c00617 	ldw	r3,24(sp)
   26818:	18003726 	beq	r3,zero,268f8 <_dtoa_r+0xf88>
   2681c:	b0002016 	blt	r22,zero,268a0 <_dtoa_r+0xf30>
   26820:	b000041e 	bne	r22,zero,26834 <_dtoa_r+0xec4>
   26824:	d9000317 	ldw	r4,12(sp)
   26828:	2000021e 	bne	r4,zero,26834 <_dtoa_r+0xec4>
   2682c:	d8c00617 	ldw	r3,24(sp)
   26830:	18001b26 	beq	r3,zero,268a0 <_dtoa_r+0xf30>
   26834:	00810716 	blt	zero,r2,26c54 <_dtoa_r+0x12e4>
   26838:	d8c00417 	ldw	r3,16(sp)
   2683c:	9d800044 	addi	r22,r19,1
   26840:	9c800005 	stb	r18,0(r19)
   26844:	b02f883a 	mov	r23,r22
   26848:	98c10626 	beq	r19,r3,26c64 <_dtoa_r+0x12f4>
   2684c:	800b883a 	mov	r5,r16
   26850:	000f883a 	mov	r7,zero
   26854:	01800284 	movi	r6,10
   26858:	e009883a 	mov	r4,fp
   2685c:	00290dc0 	call	290dc <__multadd>
   26860:	1021883a 	mov	r16,r2
   26864:	000f883a 	mov	r7,zero
   26868:	01800284 	movi	r6,10
   2686c:	880b883a 	mov	r5,r17
   26870:	e009883a 	mov	r4,fp
   26874:	8d002526 	beq	r17,r20,2690c <_dtoa_r+0xf9c>
   26878:	00290dc0 	call	290dc <__multadd>
   2687c:	a00b883a 	mov	r5,r20
   26880:	000f883a 	mov	r7,zero
   26884:	01800284 	movi	r6,10
   26888:	e009883a 	mov	r4,fp
   2688c:	1023883a 	mov	r17,r2
   26890:	00290dc0 	call	290dc <__multadd>
   26894:	1029883a 	mov	r20,r2
   26898:	b027883a 	mov	r19,r22
   2689c:	003fc006 	br	267a0 <_dtoa_r+0xe30>
   268a0:	9011883a 	mov	r8,r18
   268a4:	00800e0e 	bge	zero,r2,268e0 <_dtoa_r+0xf70>
   268a8:	800b883a 	mov	r5,r16
   268ac:	01800044 	movi	r6,1
   268b0:	e009883a 	mov	r4,fp
   268b4:	da001715 	stw	r8,92(sp)
   268b8:	002978c0 	call	2978c <__lshift>
   268bc:	a80b883a 	mov	r5,r21
   268c0:	1009883a 	mov	r4,r2
   268c4:	1021883a 	mov	r16,r2
   268c8:	00298d40 	call	298d4 <__mcmp>
   268cc:	da001717 	ldw	r8,92(sp)
   268d0:	0081960e 	bge	zero,r2,26f2c <_dtoa_r+0x15bc>
   268d4:	00800e44 	movi	r2,57
   268d8:	40817026 	beq	r8,r2,26e9c <_dtoa_r+0x152c>
   268dc:	ba000c44 	addi	r8,r23,49
   268e0:	8825883a 	mov	r18,r17
   268e4:	9dc00044 	addi	r23,r19,1
   268e8:	9a000005 	stb	r8,0(r19)
   268ec:	a023883a 	mov	r17,r20
   268f0:	dc000915 	stw	r16,36(sp)
   268f4:	003f2406 	br	26588 <_dtoa_r+0xc18>
   268f8:	00800e44 	movi	r2,57
   268fc:	9011883a 	mov	r8,r18
   26900:	90816626 	beq	r18,r2,26e9c <_dtoa_r+0x152c>
   26904:	05bff516 	blt	zero,r22,268dc <_dtoa_r+0xf6c>
   26908:	003ff506 	br	268e0 <_dtoa_r+0xf70>
   2690c:	00290dc0 	call	290dc <__multadd>
   26910:	1023883a 	mov	r17,r2
   26914:	1029883a 	mov	r20,r2
   26918:	003fdf06 	br	26898 <_dtoa_r+0xf28>
   2691c:	e009883a 	mov	r4,fp
   26920:	00290b40 	call	290b4 <_Bfree>
   26924:	00800044 	movi	r2,1
   26928:	003fbc06 	br	2681c <_dtoa_r+0xeac>
   2692c:	a80b883a 	mov	r5,r21
   26930:	8009883a 	mov	r4,r16
   26934:	00298d40 	call	298d4 <__mcmp>
   26938:	103edb0e 	bge	r2,zero,264a8 <_dtoa_r+0xb38>
   2693c:	800b883a 	mov	r5,r16
   26940:	000f883a 	mov	r7,zero
   26944:	01800284 	movi	r6,10
   26948:	e009883a 	mov	r4,fp
   2694c:	00290dc0 	call	290dc <__multadd>
   26950:	1021883a 	mov	r16,r2
   26954:	d8800517 	ldw	r2,20(sp)
   26958:	d8c00b17 	ldw	r3,44(sp)
   2695c:	10bfffc4 	addi	r2,r2,-1
   26960:	d8800515 	stw	r2,20(sp)
   26964:	183f761e 	bne	r3,zero,26740 <_dtoa_r+0xdd0>
   26968:	d9000c17 	ldw	r4,48(sp)
   2696c:	0101730e 	bge	zero,r4,26f3c <_dtoa_r+0x15cc>
   26970:	d9000615 	stw	r4,24(sp)
   26974:	003ed006 	br	264b8 <_dtoa_r+0xb48>
   26978:	00800084 	movi	r2,2
   2697c:	3081861e 	bne	r6,r2,26f98 <_dtoa_r+0x1628>
   26980:	d8000b15 	stw	zero,44(sp)
   26984:	003f3c06 	br	26678 <_dtoa_r+0xd08>
   26988:	dc000917 	ldw	r16,36(sp)
   2698c:	003e9206 	br	263d8 <_dtoa_r+0xa68>
   26990:	d9c00317 	ldw	r7,12(sp)
   26994:	00800084 	movi	r2,2
   26998:	11fec50e 	bge	r2,r7,264b0 <_dtoa_r+0xb40>
   2699c:	d9000617 	ldw	r4,24(sp)
   269a0:	20013c1e 	bne	r4,zero,26e94 <_dtoa_r+0x1524>
   269a4:	a80b883a 	mov	r5,r21
   269a8:	000f883a 	mov	r7,zero
   269ac:	01800144 	movi	r6,5
   269b0:	e009883a 	mov	r4,fp
   269b4:	00290dc0 	call	290dc <__multadd>
   269b8:	100b883a 	mov	r5,r2
   269bc:	8009883a 	mov	r4,r16
   269c0:	102b883a 	mov	r21,r2
   269c4:	00298d40 	call	298d4 <__mcmp>
   269c8:	dc000915 	stw	r16,36(sp)
   269cc:	00bf410e 	bge	zero,r2,266d4 <_dtoa_r+0xd64>
   269d0:	d9c00717 	ldw	r7,28(sp)
   269d4:	00800c44 	movi	r2,49
   269d8:	38800005 	stb	r2,0(r7)
   269dc:	d8800517 	ldw	r2,20(sp)
   269e0:	3dc00044 	addi	r23,r7,1
   269e4:	10800044 	addi	r2,r2,1
   269e8:	d8800515 	stw	r2,20(sp)
   269ec:	003f3d06 	br	266e4 <_dtoa_r+0xd74>
   269f0:	d9800517 	ldw	r6,20(sp)
   269f4:	d9c00717 	ldw	r7,28(sp)
   269f8:	00800c44 	movi	r2,49
   269fc:	31800044 	addi	r6,r6,1
   26a00:	d9800515 	stw	r6,20(sp)
   26a04:	38800005 	stb	r2,0(r7)
   26a08:	003edf06 	br	26588 <_dtoa_r+0xc18>
   26a0c:	d8000b15 	stw	zero,44(sp)
   26a10:	003c9f06 	br	25c90 <_dtoa_r+0x320>
   26a14:	903e7e1e 	bne	r18,zero,26410 <_dtoa_r+0xaa0>
   26a18:	00800434 	movhi	r2,16
   26a1c:	10bfffc4 	addi	r2,r2,-1
   26a20:	9884703a 	and	r2,r19,r2
   26a24:	1000ea1e 	bne	r2,zero,26dd0 <_dtoa_r+0x1460>
   26a28:	9cdffc2c 	andhi	r19,r19,32752
   26a2c:	9800e826 	beq	r19,zero,26dd0 <_dtoa_r+0x1460>
   26a30:	d9c00817 	ldw	r7,32(sp)
   26a34:	b5800044 	addi	r22,r22,1
   26a38:	04c00044 	movi	r19,1
   26a3c:	39c00044 	addi	r7,r7,1
   26a40:	d9c00815 	stw	r7,32(sp)
   26a44:	d8800d17 	ldw	r2,52(sp)
   26a48:	103e721e 	bne	r2,zero,26414 <_dtoa_r+0xaa4>
   26a4c:	00800044 	movi	r2,1
   26a50:	003e7906 	br	26438 <_dtoa_r+0xac8>
   26a54:	8009883a 	mov	r4,r16
   26a58:	0030cb80 	call	30cb8 <__floatsidf>
   26a5c:	d9800f17 	ldw	r6,60(sp)
   26a60:	d9c01017 	ldw	r7,64(sp)
   26a64:	1009883a 	mov	r4,r2
   26a68:	180b883a 	mov	r5,r3
   26a6c:	002fc240 	call	2fc24 <__muldf3>
   26a70:	000d883a 	mov	r6,zero
   26a74:	01d00734 	movhi	r7,16412
   26a78:	1009883a 	mov	r4,r2
   26a7c:	180b883a 	mov	r5,r3
   26a80:	002e8380 	call	2e838 <__adddf3>
   26a84:	047f3034 	movhi	r17,64704
   26a88:	1021883a 	mov	r16,r2
   26a8c:	1c63883a 	add	r17,r3,r17
   26a90:	d9000f17 	ldw	r4,60(sp)
   26a94:	d9401017 	ldw	r5,64(sp)
   26a98:	000d883a 	mov	r6,zero
   26a9c:	01d00534 	movhi	r7,16404
   26aa0:	003033c0 	call	3033c <__subdf3>
   26aa4:	800d883a 	mov	r6,r16
   26aa8:	880f883a 	mov	r7,r17
   26aac:	1009883a 	mov	r4,r2
   26ab0:	180b883a 	mov	r5,r3
   26ab4:	102b883a 	mov	r21,r2
   26ab8:	1829883a 	mov	r20,r3
   26abc:	002fa540 	call	2fa54 <__gedf2>
   26ac0:	00806c16 	blt	zero,r2,26c74 <_dtoa_r+0x1304>
   26ac4:	89e0003c 	xorhi	r7,r17,32768
   26ac8:	800d883a 	mov	r6,r16
   26acc:	a809883a 	mov	r4,r21
   26ad0:	a00b883a 	mov	r5,r20
   26ad4:	002fb300 	call	2fb30 <__ledf2>
   26ad8:	103d7e0e 	bge	r2,zero,260d4 <_dtoa_r+0x764>
   26adc:	002b883a 	mov	r21,zero
   26ae0:	0023883a 	mov	r17,zero
   26ae4:	003efb06 	br	266d4 <_dtoa_r+0xd64>
   26ae8:	d8800717 	ldw	r2,28(sp)
   26aec:	003bd006 	br	25a30 <_dtoa_r+0xc0>
   26af0:	d9000a17 	ldw	r4,40(sp)
   26af4:	d9800d17 	ldw	r6,52(sp)
   26af8:	dd400a15 	stw	r21,40(sp)
   26afc:	a905c83a 	sub	r2,r21,r4
   26b00:	308d883a 	add	r6,r6,r2
   26b04:	d9800d15 	stw	r6,52(sp)
   26b08:	002b883a 	mov	r21,zero
   26b0c:	003e0606 	br	26328 <_dtoa_r+0x9b8>
   26b10:	9023883a 	mov	r17,r18
   26b14:	9829883a 	mov	r20,r19
   26b18:	04000084 	movi	r16,2
   26b1c:	003c9206 	br	25d68 <_dtoa_r+0x3f8>
   26b20:	04000044 	movi	r16,1
   26b24:	dc000c15 	stw	r16,48(sp)
   26b28:	dc000615 	stw	r16,24(sp)
   26b2c:	dc002215 	stw	r16,136(sp)
   26b30:	e0001115 	stw	zero,68(fp)
   26b34:	000b883a 	mov	r5,zero
   26b38:	003c6906 	br	25ce0 <_dtoa_r+0x370>
   26b3c:	3021883a 	mov	r16,r6
   26b40:	003ffb06 	br	26b30 <_dtoa_r+0x11c0>
   26b44:	1000021e 	bne	r2,zero,26b50 <_dtoa_r+0x11e0>
   26b48:	4200004c 	andi	r8,r8,1
   26b4c:	403e7d1e 	bne	r8,zero,26544 <_dtoa_r+0xbd4>
   26b50:	01000c04 	movi	r4,48
   26b54:	00000106 	br	26b5c <_dtoa_r+0x11ec>
   26b58:	102f883a 	mov	r23,r2
   26b5c:	b8bfffc4 	addi	r2,r23,-1
   26b60:	10c00007 	ldb	r3,0(r2)
   26b64:	193ffc26 	beq	r3,r4,26b58 <_dtoa_r+0x11e8>
   26b68:	003e8706 	br	26588 <_dtoa_r+0xc18>
   26b6c:	d8800517 	ldw	r2,20(sp)
   26b70:	00a3c83a 	sub	r17,zero,r2
   26b74:	8800a426 	beq	r17,zero,26e08 <_dtoa_r+0x1498>
   26b78:	888003cc 	andi	r2,r17,15
   26b7c:	100490fa 	slli	r2,r2,3
   26b80:	00c000f4 	movhi	r3,3
   26b84:	18ce6304 	addi	r3,r3,14732
   26b88:	1885883a 	add	r2,r3,r2
   26b8c:	11800017 	ldw	r6,0(r2)
   26b90:	11c00117 	ldw	r7,4(r2)
   26b94:	9009883a 	mov	r4,r18
   26b98:	980b883a 	mov	r5,r19
   26b9c:	8823d13a 	srai	r17,r17,4
   26ba0:	002fc240 	call	2fc24 <__muldf3>
   26ba4:	d8800f15 	stw	r2,60(sp)
   26ba8:	d8c01015 	stw	r3,64(sp)
   26bac:	8800e826 	beq	r17,zero,26f50 <_dtoa_r+0x15e0>
   26bb0:	050000f4 	movhi	r20,3
   26bb4:	a50e5904 	addi	r20,r20,14692
   26bb8:	04000084 	movi	r16,2
   26bbc:	8980004c 	andi	r6,r17,1
   26bc0:	1009883a 	mov	r4,r2
   26bc4:	8823d07a 	srai	r17,r17,1
   26bc8:	180b883a 	mov	r5,r3
   26bcc:	30000426 	beq	r6,zero,26be0 <_dtoa_r+0x1270>
   26bd0:	a1800017 	ldw	r6,0(r20)
   26bd4:	a1c00117 	ldw	r7,4(r20)
   26bd8:	84000044 	addi	r16,r16,1
   26bdc:	002fc240 	call	2fc24 <__muldf3>
   26be0:	a5000204 	addi	r20,r20,8
   26be4:	883ff51e 	bne	r17,zero,26bbc <_dtoa_r+0x124c>
   26be8:	d8800f15 	stw	r2,60(sp)
   26bec:	d8c01015 	stw	r3,64(sp)
   26bf0:	003c7606 	br	25dcc <_dtoa_r+0x45c>
   26bf4:	00c00c04 	movi	r3,48
   26bf8:	10c00005 	stb	r3,0(r2)
   26bfc:	d8c00517 	ldw	r3,20(sp)
   26c00:	bd3fffc3 	ldbu	r20,-1(r23)
   26c04:	18c00044 	addi	r3,r3,1
   26c08:	d8c00515 	stw	r3,20(sp)
   26c0c:	003db906 	br	262f4 <_dtoa_r+0x984>
   26c10:	89400117 	ldw	r5,4(r17)
   26c14:	e009883a 	mov	r4,fp
   26c18:	002900c0 	call	2900c <_Balloc>
   26c1c:	89800417 	ldw	r6,16(r17)
   26c20:	89400304 	addi	r5,r17,12
   26c24:	11000304 	addi	r4,r2,12
   26c28:	31800084 	addi	r6,r6,2
   26c2c:	318d883a 	add	r6,r6,r6
   26c30:	318d883a 	add	r6,r6,r6
   26c34:	1027883a 	mov	r19,r2
   26c38:	0028c400 	call	28c40 <memcpy>
   26c3c:	01800044 	movi	r6,1
   26c40:	980b883a 	mov	r5,r19
   26c44:	e009883a 	mov	r4,fp
   26c48:	002978c0 	call	2978c <__lshift>
   26c4c:	1029883a 	mov	r20,r2
   26c50:	003ecc06 	br	26784 <_dtoa_r+0xe14>
   26c54:	00800e44 	movi	r2,57
   26c58:	90809026 	beq	r18,r2,26e9c <_dtoa_r+0x152c>
   26c5c:	92000044 	addi	r8,r18,1
   26c60:	003f1f06 	br	268e0 <_dtoa_r+0xf70>
   26c64:	9011883a 	mov	r8,r18
   26c68:	8825883a 	mov	r18,r17
   26c6c:	a023883a 	mov	r17,r20
   26c70:	003e2906 	br	26518 <_dtoa_r+0xba8>
   26c74:	002b883a 	mov	r21,zero
   26c78:	0023883a 	mov	r17,zero
   26c7c:	003f5406 	br	269d0 <_dtoa_r+0x1060>
   26c80:	61bfffc4 	addi	r6,r12,-1
   26c84:	300490fa 	slli	r2,r6,3
   26c88:	00c000f4 	movhi	r3,3
   26c8c:	18ce6304 	addi	r3,r3,14732
   26c90:	1885883a 	add	r2,r3,r2
   26c94:	11000017 	ldw	r4,0(r2)
   26c98:	11400117 	ldw	r5,4(r2)
   26c9c:	d8800717 	ldw	r2,28(sp)
   26ca0:	880f883a 	mov	r7,r17
   26ca4:	d9801215 	stw	r6,72(sp)
   26ca8:	800d883a 	mov	r6,r16
   26cac:	db001615 	stw	r12,88(sp)
   26cb0:	15c00044 	addi	r23,r2,1
   26cb4:	002fc240 	call	2fc24 <__muldf3>
   26cb8:	d9401017 	ldw	r5,64(sp)
   26cbc:	d9000f17 	ldw	r4,60(sp)
   26cc0:	d8c01515 	stw	r3,84(sp)
   26cc4:	d8801415 	stw	r2,80(sp)
   26cc8:	0030c380 	call	30c38 <__fixdfsi>
   26ccc:	1009883a 	mov	r4,r2
   26cd0:	1021883a 	mov	r16,r2
   26cd4:	0030cb80 	call	30cb8 <__floatsidf>
   26cd8:	d9000f17 	ldw	r4,60(sp)
   26cdc:	d9401017 	ldw	r5,64(sp)
   26ce0:	100d883a 	mov	r6,r2
   26ce4:	180f883a 	mov	r7,r3
   26ce8:	003033c0 	call	3033c <__subdf3>
   26cec:	1829883a 	mov	r20,r3
   26cf0:	d8c00717 	ldw	r3,28(sp)
   26cf4:	84000c04 	addi	r16,r16,48
   26cf8:	1023883a 	mov	r17,r2
   26cfc:	1c000005 	stb	r16,0(r3)
   26d00:	db001617 	ldw	r12,88(sp)
   26d04:	00800044 	movi	r2,1
   26d08:	60802226 	beq	r12,r2,26d94 <_dtoa_r+0x1424>
   26d0c:	d9c00717 	ldw	r7,28(sp)
   26d10:	8805883a 	mov	r2,r17
   26d14:	b82b883a 	mov	r21,r23
   26d18:	3b19883a 	add	r12,r7,r12
   26d1c:	6023883a 	mov	r17,r12
   26d20:	a007883a 	mov	r3,r20
   26d24:	dc800f15 	stw	r18,60(sp)
   26d28:	000d883a 	mov	r6,zero
   26d2c:	01d00934 	movhi	r7,16420
   26d30:	1009883a 	mov	r4,r2
   26d34:	180b883a 	mov	r5,r3
   26d38:	002fc240 	call	2fc24 <__muldf3>
   26d3c:	180b883a 	mov	r5,r3
   26d40:	1009883a 	mov	r4,r2
   26d44:	1829883a 	mov	r20,r3
   26d48:	1025883a 	mov	r18,r2
   26d4c:	0030c380 	call	30c38 <__fixdfsi>
   26d50:	1009883a 	mov	r4,r2
   26d54:	1021883a 	mov	r16,r2
   26d58:	0030cb80 	call	30cb8 <__floatsidf>
   26d5c:	100d883a 	mov	r6,r2
   26d60:	180f883a 	mov	r7,r3
   26d64:	9009883a 	mov	r4,r18
   26d68:	a00b883a 	mov	r5,r20
   26d6c:	84000c04 	addi	r16,r16,48
   26d70:	003033c0 	call	3033c <__subdf3>
   26d74:	ad400044 	addi	r21,r21,1
   26d78:	ac3fffc5 	stb	r16,-1(r21)
   26d7c:	ac7fea1e 	bne	r21,r17,26d28 <_dtoa_r+0x13b8>
   26d80:	1023883a 	mov	r17,r2
   26d84:	d8801217 	ldw	r2,72(sp)
   26d88:	dc800f17 	ldw	r18,60(sp)
   26d8c:	1829883a 	mov	r20,r3
   26d90:	b8af883a 	add	r23,r23,r2
   26d94:	d9001417 	ldw	r4,80(sp)
   26d98:	d9401517 	ldw	r5,84(sp)
   26d9c:	000d883a 	mov	r6,zero
   26da0:	01cff834 	movhi	r7,16352
   26da4:	002e8380 	call	2e838 <__adddf3>
   26da8:	880d883a 	mov	r6,r17
   26dac:	a00f883a 	mov	r7,r20
   26db0:	1009883a 	mov	r4,r2
   26db4:	180b883a 	mov	r5,r3
   26db8:	002fb300 	call	2fb30 <__ledf2>
   26dbc:	10003e0e 	bge	r2,zero,26eb8 <_dtoa_r+0x1548>
   26dc0:	d9001317 	ldw	r4,76(sp)
   26dc4:	bd3fffc3 	ldbu	r20,-1(r23)
   26dc8:	d9000515 	stw	r4,20(sp)
   26dcc:	003d3b06 	br	262bc <_dtoa_r+0x94c>
   26dd0:	0027883a 	mov	r19,zero
   26dd4:	003f1b06 	br	26a44 <_dtoa_r+0x10d4>
   26dd8:	d8800817 	ldw	r2,32(sp)
   26ddc:	11e9c83a 	sub	r20,r2,r7
   26de0:	0005883a 	mov	r2,zero
   26de4:	003d5406 	br	26338 <_dtoa_r+0x9c8>
   26de8:	00800044 	movi	r2,1
   26dec:	003dc706 	br	2650c <_dtoa_r+0xb9c>
   26df0:	d8c00217 	ldw	r3,8(sp)
   26df4:	00800d84 	movi	r2,54
   26df8:	dd400a17 	ldw	r21,40(sp)
   26dfc:	10c5c83a 	sub	r2,r2,r3
   26e00:	dd000817 	ldw	r20,32(sp)
   26e04:	003d4c06 	br	26338 <_dtoa_r+0x9c8>
   26e08:	dc800f15 	stw	r18,60(sp)
   26e0c:	dcc01015 	stw	r19,64(sp)
   26e10:	04000084 	movi	r16,2
   26e14:	003bed06 	br	25dcc <_dtoa_r+0x45c>
   26e18:	d9000617 	ldw	r4,24(sp)
   26e1c:	203f0d26 	beq	r4,zero,26a54 <_dtoa_r+0x10e4>
   26e20:	d9800c17 	ldw	r6,48(sp)
   26e24:	01bcab0e 	bge	zero,r6,260d4 <_dtoa_r+0x764>
   26e28:	d9401017 	ldw	r5,64(sp)
   26e2c:	d9000f17 	ldw	r4,60(sp)
   26e30:	000d883a 	mov	r6,zero
   26e34:	01d00934 	movhi	r7,16420
   26e38:	002fc240 	call	2fc24 <__muldf3>
   26e3c:	81000044 	addi	r4,r16,1
   26e40:	d8800f15 	stw	r2,60(sp)
   26e44:	d8c01015 	stw	r3,64(sp)
   26e48:	0030cb80 	call	30cb8 <__floatsidf>
   26e4c:	d9800f17 	ldw	r6,60(sp)
   26e50:	d9c01017 	ldw	r7,64(sp)
   26e54:	1009883a 	mov	r4,r2
   26e58:	180b883a 	mov	r5,r3
   26e5c:	002fc240 	call	2fc24 <__muldf3>
   26e60:	01d00734 	movhi	r7,16412
   26e64:	000d883a 	mov	r6,zero
   26e68:	1009883a 	mov	r4,r2
   26e6c:	180b883a 	mov	r5,r3
   26e70:	002e8380 	call	2e838 <__adddf3>
   26e74:	d9c00517 	ldw	r7,20(sp)
   26e78:	047f3034 	movhi	r17,64704
   26e7c:	1021883a 	mov	r16,r2
   26e80:	39ffffc4 	addi	r7,r7,-1
   26e84:	d9c01315 	stw	r7,76(sp)
   26e88:	1c63883a 	add	r17,r3,r17
   26e8c:	db000c17 	ldw	r12,48(sp)
   26e90:	003bea06 	br	25e3c <_dtoa_r+0x4cc>
   26e94:	dc000915 	stw	r16,36(sp)
   26e98:	003e0e06 	br	266d4 <_dtoa_r+0xd64>
   26e9c:	01000e44 	movi	r4,57
   26ea0:	8825883a 	mov	r18,r17
   26ea4:	9dc00044 	addi	r23,r19,1
   26ea8:	99000005 	stb	r4,0(r19)
   26eac:	a023883a 	mov	r17,r20
   26eb0:	dc000915 	stw	r16,36(sp)
   26eb4:	003da406 	br	26548 <_dtoa_r+0xbd8>
   26eb8:	d9801417 	ldw	r6,80(sp)
   26ebc:	d9c01517 	ldw	r7,84(sp)
   26ec0:	0009883a 	mov	r4,zero
   26ec4:	014ff834 	movhi	r5,16352
   26ec8:	003033c0 	call	3033c <__subdf3>
   26ecc:	880d883a 	mov	r6,r17
   26ed0:	a00f883a 	mov	r7,r20
   26ed4:	1009883a 	mov	r4,r2
   26ed8:	180b883a 	mov	r5,r3
   26edc:	002fa540 	call	2fa54 <__gedf2>
   26ee0:	00bc7c0e 	bge	zero,r2,260d4 <_dtoa_r+0x764>
   26ee4:	01000c04 	movi	r4,48
   26ee8:	00000106 	br	26ef0 <_dtoa_r+0x1580>
   26eec:	102f883a 	mov	r23,r2
   26ef0:	b8bfffc4 	addi	r2,r23,-1
   26ef4:	10c00007 	ldb	r3,0(r2)
   26ef8:	193ffc26 	beq	r3,r4,26eec <_dtoa_r+0x157c>
   26efc:	d9801317 	ldw	r6,76(sp)
   26f00:	d9800515 	stw	r6,20(sp)
   26f04:	003c4406 	br	26018 <_dtoa_r+0x6a8>
   26f08:	d9801317 	ldw	r6,76(sp)
   26f0c:	d9800515 	stw	r6,20(sp)
   26f10:	003cea06 	br	262bc <_dtoa_r+0x94c>
   26f14:	dd800f17 	ldw	r22,60(sp)
   26f18:	dcc01017 	ldw	r19,64(sp)
   26f1c:	dc801217 	ldw	r18,72(sp)
   26f20:	003c6c06 	br	260d4 <_dtoa_r+0x764>
   26f24:	903e031e 	bne	r18,zero,26734 <_dtoa_r+0xdc4>
   26f28:	003ebb06 	br	26a18 <_dtoa_r+0x10a8>
   26f2c:	103e6c1e 	bne	r2,zero,268e0 <_dtoa_r+0xf70>
   26f30:	4080004c 	andi	r2,r8,1
   26f34:	103e6a26 	beq	r2,zero,268e0 <_dtoa_r+0xf70>
   26f38:	003e6606 	br	268d4 <_dtoa_r+0xf64>
   26f3c:	d8c00317 	ldw	r3,12(sp)
   26f40:	00800084 	movi	r2,2
   26f44:	10c02916 	blt	r2,r3,26fec <_dtoa_r+0x167c>
   26f48:	d9000c17 	ldw	r4,48(sp)
   26f4c:	003e8806 	br	26970 <_dtoa_r+0x1000>
   26f50:	04000084 	movi	r16,2
   26f54:	003b9d06 	br	25dcc <_dtoa_r+0x45c>
   26f58:	d9001317 	ldw	r4,76(sp)
   26f5c:	d9000515 	stw	r4,20(sp)
   26f60:	003cd606 	br	262bc <_dtoa_r+0x94c>
   26f64:	d8801317 	ldw	r2,76(sp)
   26f68:	d8800515 	stw	r2,20(sp)
   26f6c:	003c2a06 	br	26018 <_dtoa_r+0x6a8>
   26f70:	d9800317 	ldw	r6,12(sp)
   26f74:	00800084 	movi	r2,2
   26f78:	11801516 	blt	r2,r6,26fd0 <_dtoa_r+0x1660>
   26f7c:	d9c00c17 	ldw	r7,48(sp)
   26f80:	d9c00615 	stw	r7,24(sp)
   26f84:	003df706 	br	26764 <_dtoa_r+0xdf4>
   26f88:	193d3926 	beq	r3,r4,26470 <_dtoa_r+0xb00>
   26f8c:	00c00f04 	movi	r3,60
   26f90:	1885c83a 	sub	r2,r3,r2
   26f94:	003ddf06 	br	26714 <_dtoa_r+0xda4>
   26f98:	e009883a 	mov	r4,fp
   26f9c:	e0001115 	stw	zero,68(fp)
   26fa0:	000b883a 	mov	r5,zero
   26fa4:	002900c0 	call	2900c <_Balloc>
   26fa8:	d8800715 	stw	r2,28(sp)
   26fac:	d8c00717 	ldw	r3,28(sp)
   26fb0:	00bfffc4 	movi	r2,-1
   26fb4:	01000044 	movi	r4,1
   26fb8:	d8800c15 	stw	r2,48(sp)
   26fbc:	e0c01015 	stw	r3,64(fp)
   26fc0:	d9000b15 	stw	r4,44(sp)
   26fc4:	d8800615 	stw	r2,24(sp)
   26fc8:	d8002215 	stw	zero,136(sp)
   26fcc:	003c4106 	br	260d4 <_dtoa_r+0x764>
   26fd0:	d8c00c17 	ldw	r3,48(sp)
   26fd4:	d8c00615 	stw	r3,24(sp)
   26fd8:	003e7006 	br	2699c <_dtoa_r+0x102c>
   26fdc:	04400044 	movi	r17,1
   26fe0:	003b2006 	br	25c64 <_dtoa_r+0x2f4>
   26fe4:	000b883a 	mov	r5,zero
   26fe8:	003b3d06 	br	25ce0 <_dtoa_r+0x370>
   26fec:	d8800c17 	ldw	r2,48(sp)
   26ff0:	d8800615 	stw	r2,24(sp)
   26ff4:	003e6906 	br	2699c <_dtoa_r+0x102c>

00026ff8 <__sflush_r>:
   26ff8:	2880030b 	ldhu	r2,12(r5)
   26ffc:	defffb04 	addi	sp,sp,-20
   27000:	dcc00315 	stw	r19,12(sp)
   27004:	dc400115 	stw	r17,4(sp)
   27008:	dfc00415 	stw	ra,16(sp)
   2700c:	dc800215 	stw	r18,8(sp)
   27010:	dc000015 	stw	r16,0(sp)
   27014:	10c0020c 	andi	r3,r2,8
   27018:	2823883a 	mov	r17,r5
   2701c:	2027883a 	mov	r19,r4
   27020:	1800311e 	bne	r3,zero,270e8 <__sflush_r+0xf0>
   27024:	28c00117 	ldw	r3,4(r5)
   27028:	10820014 	ori	r2,r2,2048
   2702c:	2880030d 	sth	r2,12(r5)
   27030:	00c04b0e 	bge	zero,r3,27160 <__sflush_r+0x168>
   27034:	8a000a17 	ldw	r8,40(r17)
   27038:	40002326 	beq	r8,zero,270c8 <__sflush_r+0xd0>
   2703c:	9c000017 	ldw	r16,0(r19)
   27040:	10c4000c 	andi	r3,r2,4096
   27044:	98000015 	stw	zero,0(r19)
   27048:	18004826 	beq	r3,zero,2716c <__sflush_r+0x174>
   2704c:	89801417 	ldw	r6,80(r17)
   27050:	10c0010c 	andi	r3,r2,4
   27054:	18000626 	beq	r3,zero,27070 <__sflush_r+0x78>
   27058:	88c00117 	ldw	r3,4(r17)
   2705c:	88800c17 	ldw	r2,48(r17)
   27060:	30cdc83a 	sub	r6,r6,r3
   27064:	10000226 	beq	r2,zero,27070 <__sflush_r+0x78>
   27068:	88800f17 	ldw	r2,60(r17)
   2706c:	308dc83a 	sub	r6,r6,r2
   27070:	89400717 	ldw	r5,28(r17)
   27074:	000f883a 	mov	r7,zero
   27078:	9809883a 	mov	r4,r19
   2707c:	403ee83a 	callr	r8
   27080:	00ffffc4 	movi	r3,-1
   27084:	10c04426 	beq	r2,r3,27198 <__sflush_r+0x1a0>
   27088:	88c0030b 	ldhu	r3,12(r17)
   2708c:	89000417 	ldw	r4,16(r17)
   27090:	88000115 	stw	zero,4(r17)
   27094:	197dffcc 	andi	r5,r3,63487
   27098:	8940030d 	sth	r5,12(r17)
   2709c:	89000015 	stw	r4,0(r17)
   270a0:	18c4000c 	andi	r3,r3,4096
   270a4:	18002c1e 	bne	r3,zero,27158 <__sflush_r+0x160>
   270a8:	89400c17 	ldw	r5,48(r17)
   270ac:	9c000015 	stw	r16,0(r19)
   270b0:	28000526 	beq	r5,zero,270c8 <__sflush_r+0xd0>
   270b4:	88801004 	addi	r2,r17,64
   270b8:	28800226 	beq	r5,r2,270c4 <__sflush_r+0xcc>
   270bc:	9809883a 	mov	r4,r19
   270c0:	00277640 	call	27764 <_free_r>
   270c4:	88000c15 	stw	zero,48(r17)
   270c8:	0005883a 	mov	r2,zero
   270cc:	dfc00417 	ldw	ra,16(sp)
   270d0:	dcc00317 	ldw	r19,12(sp)
   270d4:	dc800217 	ldw	r18,8(sp)
   270d8:	dc400117 	ldw	r17,4(sp)
   270dc:	dc000017 	ldw	r16,0(sp)
   270e0:	dec00504 	addi	sp,sp,20
   270e4:	f800283a 	ret
   270e8:	2c800417 	ldw	r18,16(r5)
   270ec:	903ff626 	beq	r18,zero,270c8 <__sflush_r+0xd0>
   270f0:	2c000017 	ldw	r16,0(r5)
   270f4:	108000cc 	andi	r2,r2,3
   270f8:	2c800015 	stw	r18,0(r5)
   270fc:	84a1c83a 	sub	r16,r16,r18
   27100:	1000131e 	bne	r2,zero,27150 <__sflush_r+0x158>
   27104:	28800517 	ldw	r2,20(r5)
   27108:	88800215 	stw	r2,8(r17)
   2710c:	04000316 	blt	zero,r16,2711c <__sflush_r+0x124>
   27110:	003fed06 	br	270c8 <__sflush_r+0xd0>
   27114:	90a5883a 	add	r18,r18,r2
   27118:	043feb0e 	bge	zero,r16,270c8 <__sflush_r+0xd0>
   2711c:	88800917 	ldw	r2,36(r17)
   27120:	89400717 	ldw	r5,28(r17)
   27124:	800f883a 	mov	r7,r16
   27128:	900d883a 	mov	r6,r18
   2712c:	9809883a 	mov	r4,r19
   27130:	103ee83a 	callr	r2
   27134:	80a1c83a 	sub	r16,r16,r2
   27138:	00bff616 	blt	zero,r2,27114 <__sflush_r+0x11c>
   2713c:	88c0030b 	ldhu	r3,12(r17)
   27140:	00bfffc4 	movi	r2,-1
   27144:	18c01014 	ori	r3,r3,64
   27148:	88c0030d 	sth	r3,12(r17)
   2714c:	003fdf06 	br	270cc <__sflush_r+0xd4>
   27150:	0005883a 	mov	r2,zero
   27154:	003fec06 	br	27108 <__sflush_r+0x110>
   27158:	88801415 	stw	r2,80(r17)
   2715c:	003fd206 	br	270a8 <__sflush_r+0xb0>
   27160:	28c00f17 	ldw	r3,60(r5)
   27164:	00ffb316 	blt	zero,r3,27034 <__sflush_r+0x3c>
   27168:	003fd706 	br	270c8 <__sflush_r+0xd0>
   2716c:	89400717 	ldw	r5,28(r17)
   27170:	000d883a 	mov	r6,zero
   27174:	01c00044 	movi	r7,1
   27178:	9809883a 	mov	r4,r19
   2717c:	403ee83a 	callr	r8
   27180:	100d883a 	mov	r6,r2
   27184:	00bfffc4 	movi	r2,-1
   27188:	30801426 	beq	r6,r2,271dc <__sflush_r+0x1e4>
   2718c:	8880030b 	ldhu	r2,12(r17)
   27190:	8a000a17 	ldw	r8,40(r17)
   27194:	003fae06 	br	27050 <__sflush_r+0x58>
   27198:	98c00017 	ldw	r3,0(r19)
   2719c:	183fba26 	beq	r3,zero,27088 <__sflush_r+0x90>
   271a0:	01000744 	movi	r4,29
   271a4:	19000626 	beq	r3,r4,271c0 <__sflush_r+0x1c8>
   271a8:	01000584 	movi	r4,22
   271ac:	19000426 	beq	r3,r4,271c0 <__sflush_r+0x1c8>
   271b0:	88c0030b 	ldhu	r3,12(r17)
   271b4:	18c01014 	ori	r3,r3,64
   271b8:	88c0030d 	sth	r3,12(r17)
   271bc:	003fc306 	br	270cc <__sflush_r+0xd4>
   271c0:	8880030b 	ldhu	r2,12(r17)
   271c4:	88c00417 	ldw	r3,16(r17)
   271c8:	88000115 	stw	zero,4(r17)
   271cc:	10bdffcc 	andi	r2,r2,63487
   271d0:	8880030d 	sth	r2,12(r17)
   271d4:	88c00015 	stw	r3,0(r17)
   271d8:	003fb306 	br	270a8 <__sflush_r+0xb0>
   271dc:	98800017 	ldw	r2,0(r19)
   271e0:	103fea26 	beq	r2,zero,2718c <__sflush_r+0x194>
   271e4:	00c00744 	movi	r3,29
   271e8:	10c00226 	beq	r2,r3,271f4 <__sflush_r+0x1fc>
   271ec:	00c00584 	movi	r3,22
   271f0:	10c0031e 	bne	r2,r3,27200 <__sflush_r+0x208>
   271f4:	9c000015 	stw	r16,0(r19)
   271f8:	0005883a 	mov	r2,zero
   271fc:	003fb306 	br	270cc <__sflush_r+0xd4>
   27200:	88c0030b 	ldhu	r3,12(r17)
   27204:	3005883a 	mov	r2,r6
   27208:	18c01014 	ori	r3,r3,64
   2720c:	88c0030d 	sth	r3,12(r17)
   27210:	003fae06 	br	270cc <__sflush_r+0xd4>

00027214 <_fflush_r>:
   27214:	defffd04 	addi	sp,sp,-12
   27218:	dc000115 	stw	r16,4(sp)
   2721c:	dfc00215 	stw	ra,8(sp)
   27220:	2021883a 	mov	r16,r4
   27224:	20000226 	beq	r4,zero,27230 <_fflush_r+0x1c>
   27228:	20800e17 	ldw	r2,56(r4)
   2722c:	10000c26 	beq	r2,zero,27260 <_fflush_r+0x4c>
   27230:	2880030f 	ldh	r2,12(r5)
   27234:	1000051e 	bne	r2,zero,2724c <_fflush_r+0x38>
   27238:	0005883a 	mov	r2,zero
   2723c:	dfc00217 	ldw	ra,8(sp)
   27240:	dc000117 	ldw	r16,4(sp)
   27244:	dec00304 	addi	sp,sp,12
   27248:	f800283a 	ret
   2724c:	8009883a 	mov	r4,r16
   27250:	dfc00217 	ldw	ra,8(sp)
   27254:	dc000117 	ldw	r16,4(sp)
   27258:	dec00304 	addi	sp,sp,12
   2725c:	0026ff81 	jmpi	26ff8 <__sflush_r>
   27260:	d9400015 	stw	r5,0(sp)
   27264:	00275f00 	call	275f0 <__sinit>
   27268:	d9400017 	ldw	r5,0(sp)
   2726c:	003ff006 	br	27230 <_fflush_r+0x1c>

00027270 <fflush>:
   27270:	20000526 	beq	r4,zero,27288 <fflush+0x18>
   27274:	008000f4 	movhi	r2,3
   27278:	1095a004 	addi	r2,r2,22144
   2727c:	200b883a 	mov	r5,r4
   27280:	11000017 	ldw	r4,0(r2)
   27284:	00272141 	jmpi	27214 <_fflush_r>
   27288:	008000f4 	movhi	r2,3
   2728c:	10959f04 	addi	r2,r2,22140
   27290:	11000017 	ldw	r4,0(r2)
   27294:	014000b4 	movhi	r5,2
   27298:	295c8504 	addi	r5,r5,29204
   2729c:	0027ff41 	jmpi	27ff4 <_fwalk_reent>

000272a0 <__fp_unlock>:
   272a0:	0005883a 	mov	r2,zero
   272a4:	f800283a 	ret

000272a8 <_cleanup_r>:
   272a8:	014000f4 	movhi	r5,3
   272ac:	29750604 	addi	r5,r5,-11240
   272b0:	0027ff41 	jmpi	27ff4 <_fwalk_reent>

000272b4 <__sinit.part.1>:
   272b4:	defff704 	addi	sp,sp,-36
   272b8:	00c000b4 	movhi	r3,2
   272bc:	dfc00815 	stw	ra,32(sp)
   272c0:	ddc00715 	stw	r23,28(sp)
   272c4:	dd800615 	stw	r22,24(sp)
   272c8:	dd400515 	stw	r21,20(sp)
   272cc:	dd000415 	stw	r20,16(sp)
   272d0:	dcc00315 	stw	r19,12(sp)
   272d4:	dc800215 	stw	r18,8(sp)
   272d8:	dc400115 	stw	r17,4(sp)
   272dc:	dc000015 	stw	r16,0(sp)
   272e0:	18dcaa04 	addi	r3,r3,29352
   272e4:	24000117 	ldw	r16,4(r4)
   272e8:	20c00f15 	stw	r3,60(r4)
   272ec:	2080bb04 	addi	r2,r4,748
   272f0:	00c000c4 	movi	r3,3
   272f4:	20c0b915 	stw	r3,740(r4)
   272f8:	2080ba15 	stw	r2,744(r4)
   272fc:	2000b815 	stw	zero,736(r4)
   27300:	05c00204 	movi	r23,8
   27304:	00800104 	movi	r2,4
   27308:	2025883a 	mov	r18,r4
   2730c:	b80d883a 	mov	r6,r23
   27310:	81001704 	addi	r4,r16,92
   27314:	000b883a 	mov	r5,zero
   27318:	80000015 	stw	zero,0(r16)
   2731c:	80000115 	stw	zero,4(r16)
   27320:	80000215 	stw	zero,8(r16)
   27324:	8080030d 	sth	r2,12(r16)
   27328:	80001915 	stw	zero,100(r16)
   2732c:	8000038d 	sth	zero,14(r16)
   27330:	80000415 	stw	zero,16(r16)
   27334:	80000515 	stw	zero,20(r16)
   27338:	80000615 	stw	zero,24(r16)
   2733c:	0028ee40 	call	28ee4 <memset>
   27340:	058000f4 	movhi	r22,3
   27344:	94400217 	ldw	r17,8(r18)
   27348:	054000f4 	movhi	r21,3
   2734c:	050000f4 	movhi	r20,3
   27350:	04c000f4 	movhi	r19,3
   27354:	b5a98d04 	addi	r22,r22,-22988
   27358:	ad69a404 	addi	r21,r21,-22896
   2735c:	a529c304 	addi	r20,r20,-22772
   27360:	9ce9da04 	addi	r19,r19,-22680
   27364:	85800815 	stw	r22,32(r16)
   27368:	85400915 	stw	r21,36(r16)
   2736c:	85000a15 	stw	r20,40(r16)
   27370:	84c00b15 	stw	r19,44(r16)
   27374:	84000715 	stw	r16,28(r16)
   27378:	00800284 	movi	r2,10
   2737c:	8880030d 	sth	r2,12(r17)
   27380:	00800044 	movi	r2,1
   27384:	b80d883a 	mov	r6,r23
   27388:	89001704 	addi	r4,r17,92
   2738c:	000b883a 	mov	r5,zero
   27390:	88000015 	stw	zero,0(r17)
   27394:	88000115 	stw	zero,4(r17)
   27398:	88000215 	stw	zero,8(r17)
   2739c:	88001915 	stw	zero,100(r17)
   273a0:	8880038d 	sth	r2,14(r17)
   273a4:	88000415 	stw	zero,16(r17)
   273a8:	88000515 	stw	zero,20(r17)
   273ac:	88000615 	stw	zero,24(r17)
   273b0:	0028ee40 	call	28ee4 <memset>
   273b4:	94000317 	ldw	r16,12(r18)
   273b8:	00800484 	movi	r2,18
   273bc:	8c400715 	stw	r17,28(r17)
   273c0:	8d800815 	stw	r22,32(r17)
   273c4:	8d400915 	stw	r21,36(r17)
   273c8:	8d000a15 	stw	r20,40(r17)
   273cc:	8cc00b15 	stw	r19,44(r17)
   273d0:	8080030d 	sth	r2,12(r16)
   273d4:	00800084 	movi	r2,2
   273d8:	80000015 	stw	zero,0(r16)
   273dc:	80000115 	stw	zero,4(r16)
   273e0:	80000215 	stw	zero,8(r16)
   273e4:	80001915 	stw	zero,100(r16)
   273e8:	8080038d 	sth	r2,14(r16)
   273ec:	80000415 	stw	zero,16(r16)
   273f0:	80000515 	stw	zero,20(r16)
   273f4:	80000615 	stw	zero,24(r16)
   273f8:	b80d883a 	mov	r6,r23
   273fc:	000b883a 	mov	r5,zero
   27400:	81001704 	addi	r4,r16,92
   27404:	0028ee40 	call	28ee4 <memset>
   27408:	00800044 	movi	r2,1
   2740c:	84000715 	stw	r16,28(r16)
   27410:	85800815 	stw	r22,32(r16)
   27414:	85400915 	stw	r21,36(r16)
   27418:	85000a15 	stw	r20,40(r16)
   2741c:	84c00b15 	stw	r19,44(r16)
   27420:	90800e15 	stw	r2,56(r18)
   27424:	dfc00817 	ldw	ra,32(sp)
   27428:	ddc00717 	ldw	r23,28(sp)
   2742c:	dd800617 	ldw	r22,24(sp)
   27430:	dd400517 	ldw	r21,20(sp)
   27434:	dd000417 	ldw	r20,16(sp)
   27438:	dcc00317 	ldw	r19,12(sp)
   2743c:	dc800217 	ldw	r18,8(sp)
   27440:	dc400117 	ldw	r17,4(sp)
   27444:	dc000017 	ldw	r16,0(sp)
   27448:	dec00904 	addi	sp,sp,36
   2744c:	f800283a 	ret

00027450 <__fp_lock>:
   27450:	0005883a 	mov	r2,zero
   27454:	f800283a 	ret

00027458 <__sfmoreglue>:
   27458:	defffc04 	addi	sp,sp,-16
   2745c:	dc400115 	stw	r17,4(sp)
   27460:	2c7fffc4 	addi	r17,r5,-1
   27464:	8c401a24 	muli	r17,r17,104
   27468:	dc800215 	stw	r18,8(sp)
   2746c:	2825883a 	mov	r18,r5
   27470:	89401d04 	addi	r5,r17,116
   27474:	dc000015 	stw	r16,0(sp)
   27478:	dfc00315 	stw	ra,12(sp)
   2747c:	00283500 	call	28350 <_malloc_r>
   27480:	1021883a 	mov	r16,r2
   27484:	10000726 	beq	r2,zero,274a4 <__sfmoreglue+0x4c>
   27488:	11000304 	addi	r4,r2,12
   2748c:	10000015 	stw	zero,0(r2)
   27490:	14800115 	stw	r18,4(r2)
   27494:	11000215 	stw	r4,8(r2)
   27498:	89801a04 	addi	r6,r17,104
   2749c:	000b883a 	mov	r5,zero
   274a0:	0028ee40 	call	28ee4 <memset>
   274a4:	8005883a 	mov	r2,r16
   274a8:	dfc00317 	ldw	ra,12(sp)
   274ac:	dc800217 	ldw	r18,8(sp)
   274b0:	dc400117 	ldw	r17,4(sp)
   274b4:	dc000017 	ldw	r16,0(sp)
   274b8:	dec00404 	addi	sp,sp,16
   274bc:	f800283a 	ret

000274c0 <__sfp>:
   274c0:	defffb04 	addi	sp,sp,-20
   274c4:	dc000015 	stw	r16,0(sp)
   274c8:	040000f4 	movhi	r16,3
   274cc:	84159f04 	addi	r16,r16,22140
   274d0:	dcc00315 	stw	r19,12(sp)
   274d4:	2027883a 	mov	r19,r4
   274d8:	81000017 	ldw	r4,0(r16)
   274dc:	dfc00415 	stw	ra,16(sp)
   274e0:	dc800215 	stw	r18,8(sp)
   274e4:	20800e17 	ldw	r2,56(r4)
   274e8:	dc400115 	stw	r17,4(sp)
   274ec:	1000021e 	bne	r2,zero,274f8 <__sfp+0x38>
   274f0:	00272b40 	call	272b4 <__sinit.part.1>
   274f4:	81000017 	ldw	r4,0(r16)
   274f8:	2480b804 	addi	r18,r4,736
   274fc:	047fffc4 	movi	r17,-1
   27500:	91000117 	ldw	r4,4(r18)
   27504:	94000217 	ldw	r16,8(r18)
   27508:	213fffc4 	addi	r4,r4,-1
   2750c:	20000a16 	blt	r4,zero,27538 <__sfp+0x78>
   27510:	8080030f 	ldh	r2,12(r16)
   27514:	10000c26 	beq	r2,zero,27548 <__sfp+0x88>
   27518:	80c01d04 	addi	r3,r16,116
   2751c:	00000206 	br	27528 <__sfp+0x68>
   27520:	18bfe60f 	ldh	r2,-104(r3)
   27524:	10000826 	beq	r2,zero,27548 <__sfp+0x88>
   27528:	213fffc4 	addi	r4,r4,-1
   2752c:	1c3ffd04 	addi	r16,r3,-12
   27530:	18c01a04 	addi	r3,r3,104
   27534:	247ffa1e 	bne	r4,r17,27520 <__sfp+0x60>
   27538:	90800017 	ldw	r2,0(r18)
   2753c:	10001d26 	beq	r2,zero,275b4 <__sfp+0xf4>
   27540:	1025883a 	mov	r18,r2
   27544:	003fee06 	br	27500 <__sfp+0x40>
   27548:	00bfffc4 	movi	r2,-1
   2754c:	8080038d 	sth	r2,14(r16)
   27550:	00800044 	movi	r2,1
   27554:	8080030d 	sth	r2,12(r16)
   27558:	80001915 	stw	zero,100(r16)
   2755c:	80000015 	stw	zero,0(r16)
   27560:	80000215 	stw	zero,8(r16)
   27564:	80000115 	stw	zero,4(r16)
   27568:	80000415 	stw	zero,16(r16)
   2756c:	80000515 	stw	zero,20(r16)
   27570:	80000615 	stw	zero,24(r16)
   27574:	01800204 	movi	r6,8
   27578:	000b883a 	mov	r5,zero
   2757c:	81001704 	addi	r4,r16,92
   27580:	0028ee40 	call	28ee4 <memset>
   27584:	8005883a 	mov	r2,r16
   27588:	80000c15 	stw	zero,48(r16)
   2758c:	80000d15 	stw	zero,52(r16)
   27590:	80001115 	stw	zero,68(r16)
   27594:	80001215 	stw	zero,72(r16)
   27598:	dfc00417 	ldw	ra,16(sp)
   2759c:	dcc00317 	ldw	r19,12(sp)
   275a0:	dc800217 	ldw	r18,8(sp)
   275a4:	dc400117 	ldw	r17,4(sp)
   275a8:	dc000017 	ldw	r16,0(sp)
   275ac:	dec00504 	addi	sp,sp,20
   275b0:	f800283a 	ret
   275b4:	01400104 	movi	r5,4
   275b8:	9809883a 	mov	r4,r19
   275bc:	00274580 	call	27458 <__sfmoreglue>
   275c0:	90800015 	stw	r2,0(r18)
   275c4:	103fde1e 	bne	r2,zero,27540 <__sfp+0x80>
   275c8:	00800304 	movi	r2,12
   275cc:	98800015 	stw	r2,0(r19)
   275d0:	0005883a 	mov	r2,zero
   275d4:	003ff006 	br	27598 <__sfp+0xd8>

000275d8 <_cleanup>:
   275d8:	008000f4 	movhi	r2,3
   275dc:	10959f04 	addi	r2,r2,22140
   275e0:	11000017 	ldw	r4,0(r2)
   275e4:	014000f4 	movhi	r5,3
   275e8:	29750604 	addi	r5,r5,-11240
   275ec:	0027ff41 	jmpi	27ff4 <_fwalk_reent>

000275f0 <__sinit>:
   275f0:	20800e17 	ldw	r2,56(r4)
   275f4:	10000126 	beq	r2,zero,275fc <__sinit+0xc>
   275f8:	f800283a 	ret
   275fc:	00272b41 	jmpi	272b4 <__sinit.part.1>

00027600 <__sfp_lock_acquire>:
   27600:	f800283a 	ret

00027604 <__sfp_lock_release>:
   27604:	f800283a 	ret

00027608 <__sinit_lock_acquire>:
   27608:	f800283a 	ret

0002760c <__sinit_lock_release>:
   2760c:	f800283a 	ret

00027610 <__fp_lock_all>:
   27610:	008000f4 	movhi	r2,3
   27614:	1095a004 	addi	r2,r2,22144
   27618:	11000017 	ldw	r4,0(r2)
   2761c:	014000b4 	movhi	r5,2
   27620:	295d1404 	addi	r5,r5,29776
   27624:	0027f301 	jmpi	27f30 <_fwalk>

00027628 <__fp_unlock_all>:
   27628:	008000f4 	movhi	r2,3
   2762c:	1095a004 	addi	r2,r2,22144
   27630:	11000017 	ldw	r4,0(r2)
   27634:	014000b4 	movhi	r5,2
   27638:	295ca804 	addi	r5,r5,29344
   2763c:	0027f301 	jmpi	27f30 <_fwalk>

00027640 <_malloc_trim_r>:
   27640:	defffb04 	addi	sp,sp,-20
   27644:	dcc00315 	stw	r19,12(sp)
   27648:	04c000f4 	movhi	r19,3
   2764c:	dc800215 	stw	r18,8(sp)
   27650:	dc400115 	stw	r17,4(sp)
   27654:	dc000015 	stw	r16,0(sp)
   27658:	dfc00415 	stw	ra,16(sp)
   2765c:	2821883a 	mov	r16,r5
   27660:	9cd01904 	addi	r19,r19,16484
   27664:	2025883a 	mov	r18,r4
   27668:	00316bc0 	call	316bc <__malloc_lock>
   2766c:	98800217 	ldw	r2,8(r19)
   27670:	14400117 	ldw	r17,4(r2)
   27674:	00bfff04 	movi	r2,-4
   27678:	88a2703a 	and	r17,r17,r2
   2767c:	8c21c83a 	sub	r16,r17,r16
   27680:	8403fbc4 	addi	r16,r16,4079
   27684:	8020d33a 	srli	r16,r16,12
   27688:	0083ffc4 	movi	r2,4095
   2768c:	843fffc4 	addi	r16,r16,-1
   27690:	8020933a 	slli	r16,r16,12
   27694:	1400060e 	bge	r2,r16,276b0 <_malloc_trim_r+0x70>
   27698:	000b883a 	mov	r5,zero
   2769c:	9009883a 	mov	r4,r18
   276a0:	002a5e00 	call	2a5e0 <_sbrk_r>
   276a4:	98c00217 	ldw	r3,8(r19)
   276a8:	1c47883a 	add	r3,r3,r17
   276ac:	10c00a26 	beq	r2,r3,276d8 <_malloc_trim_r+0x98>
   276b0:	9009883a 	mov	r4,r18
   276b4:	00316e00 	call	316e0 <__malloc_unlock>
   276b8:	0005883a 	mov	r2,zero
   276bc:	dfc00417 	ldw	ra,16(sp)
   276c0:	dcc00317 	ldw	r19,12(sp)
   276c4:	dc800217 	ldw	r18,8(sp)
   276c8:	dc400117 	ldw	r17,4(sp)
   276cc:	dc000017 	ldw	r16,0(sp)
   276d0:	dec00504 	addi	sp,sp,20
   276d4:	f800283a 	ret
   276d8:	040bc83a 	sub	r5,zero,r16
   276dc:	9009883a 	mov	r4,r18
   276e0:	002a5e00 	call	2a5e0 <_sbrk_r>
   276e4:	00ffffc4 	movi	r3,-1
   276e8:	10c00d26 	beq	r2,r3,27720 <_malloc_trim_r+0xe0>
   276ec:	00c000f4 	movhi	r3,3
   276f0:	18dc7a04 	addi	r3,r3,29160
   276f4:	18800017 	ldw	r2,0(r3)
   276f8:	99000217 	ldw	r4,8(r19)
   276fc:	8c23c83a 	sub	r17,r17,r16
   27700:	8c400054 	ori	r17,r17,1
   27704:	1421c83a 	sub	r16,r2,r16
   27708:	24400115 	stw	r17,4(r4)
   2770c:	9009883a 	mov	r4,r18
   27710:	1c000015 	stw	r16,0(r3)
   27714:	00316e00 	call	316e0 <__malloc_unlock>
   27718:	00800044 	movi	r2,1
   2771c:	003fe706 	br	276bc <_malloc_trim_r+0x7c>
   27720:	000b883a 	mov	r5,zero
   27724:	9009883a 	mov	r4,r18
   27728:	002a5e00 	call	2a5e0 <_sbrk_r>
   2772c:	99000217 	ldw	r4,8(r19)
   27730:	014003c4 	movi	r5,15
   27734:	1107c83a 	sub	r3,r2,r4
   27738:	28ffdd0e 	bge	r5,r3,276b0 <_malloc_trim_r+0x70>
   2773c:	014000f4 	movhi	r5,3
   27740:	2955a204 	addi	r5,r5,22152
   27744:	29400017 	ldw	r5,0(r5)
   27748:	18c00054 	ori	r3,r3,1
   2774c:	20c00115 	stw	r3,4(r4)
   27750:	00c000f4 	movhi	r3,3
   27754:	1145c83a 	sub	r2,r2,r5
   27758:	18dc7a04 	addi	r3,r3,29160
   2775c:	18800015 	stw	r2,0(r3)
   27760:	003fd306 	br	276b0 <_malloc_trim_r+0x70>

00027764 <_free_r>:
   27764:	28004126 	beq	r5,zero,2786c <_free_r+0x108>
   27768:	defffd04 	addi	sp,sp,-12
   2776c:	dc400115 	stw	r17,4(sp)
   27770:	dc000015 	stw	r16,0(sp)
   27774:	2023883a 	mov	r17,r4
   27778:	2821883a 	mov	r16,r5
   2777c:	dfc00215 	stw	ra,8(sp)
   27780:	00316bc0 	call	316bc <__malloc_lock>
   27784:	81ffff17 	ldw	r7,-4(r16)
   27788:	00bfff84 	movi	r2,-2
   2778c:	010000f4 	movhi	r4,3
   27790:	81bffe04 	addi	r6,r16,-8
   27794:	3884703a 	and	r2,r7,r2
   27798:	21101904 	addi	r4,r4,16484
   2779c:	308b883a 	add	r5,r6,r2
   277a0:	2a400117 	ldw	r9,4(r5)
   277a4:	22000217 	ldw	r8,8(r4)
   277a8:	00ffff04 	movi	r3,-4
   277ac:	48c6703a 	and	r3,r9,r3
   277b0:	2a005726 	beq	r5,r8,27910 <_free_r+0x1ac>
   277b4:	28c00115 	stw	r3,4(r5)
   277b8:	39c0004c 	andi	r7,r7,1
   277bc:	3800091e 	bne	r7,zero,277e4 <_free_r+0x80>
   277c0:	823ffe17 	ldw	r8,-8(r16)
   277c4:	22400204 	addi	r9,r4,8
   277c8:	320dc83a 	sub	r6,r6,r8
   277cc:	31c00217 	ldw	r7,8(r6)
   277d0:	1205883a 	add	r2,r2,r8
   277d4:	3a406526 	beq	r7,r9,2796c <_free_r+0x208>
   277d8:	32000317 	ldw	r8,12(r6)
   277dc:	3a000315 	stw	r8,12(r7)
   277e0:	41c00215 	stw	r7,8(r8)
   277e4:	28cf883a 	add	r7,r5,r3
   277e8:	39c00117 	ldw	r7,4(r7)
   277ec:	39c0004c 	andi	r7,r7,1
   277f0:	38003a26 	beq	r7,zero,278dc <_free_r+0x178>
   277f4:	10c00054 	ori	r3,r2,1
   277f8:	30c00115 	stw	r3,4(r6)
   277fc:	3087883a 	add	r3,r6,r2
   27800:	18800015 	stw	r2,0(r3)
   27804:	00c07fc4 	movi	r3,511
   27808:	18801936 	bltu	r3,r2,27870 <_free_r+0x10c>
   2780c:	1004d0fa 	srli	r2,r2,3
   27810:	01c00044 	movi	r7,1
   27814:	21400117 	ldw	r5,4(r4)
   27818:	10c00044 	addi	r3,r2,1
   2781c:	18c7883a 	add	r3,r3,r3
   27820:	1005d0ba 	srai	r2,r2,2
   27824:	18c7883a 	add	r3,r3,r3
   27828:	18c7883a 	add	r3,r3,r3
   2782c:	1907883a 	add	r3,r3,r4
   27830:	3884983a 	sll	r2,r7,r2
   27834:	19c00017 	ldw	r7,0(r3)
   27838:	1a3ffe04 	addi	r8,r3,-8
   2783c:	1144b03a 	or	r2,r2,r5
   27840:	32000315 	stw	r8,12(r6)
   27844:	31c00215 	stw	r7,8(r6)
   27848:	20800115 	stw	r2,4(r4)
   2784c:	19800015 	stw	r6,0(r3)
   27850:	39800315 	stw	r6,12(r7)
   27854:	8809883a 	mov	r4,r17
   27858:	dfc00217 	ldw	ra,8(sp)
   2785c:	dc400117 	ldw	r17,4(sp)
   27860:	dc000017 	ldw	r16,0(sp)
   27864:	dec00304 	addi	sp,sp,12
   27868:	00316e01 	jmpi	316e0 <__malloc_unlock>
   2786c:	f800283a 	ret
   27870:	100ad27a 	srli	r5,r2,9
   27874:	00c00104 	movi	r3,4
   27878:	19404a36 	bltu	r3,r5,279a4 <_free_r+0x240>
   2787c:	100ad1ba 	srli	r5,r2,6
   27880:	28c00e44 	addi	r3,r5,57
   27884:	18c7883a 	add	r3,r3,r3
   27888:	29400e04 	addi	r5,r5,56
   2788c:	18c7883a 	add	r3,r3,r3
   27890:	18c7883a 	add	r3,r3,r3
   27894:	1909883a 	add	r4,r3,r4
   27898:	20c00017 	ldw	r3,0(r4)
   2789c:	01c000f4 	movhi	r7,3
   278a0:	213ffe04 	addi	r4,r4,-8
   278a4:	39d01904 	addi	r7,r7,16484
   278a8:	20c04426 	beq	r4,r3,279bc <_free_r+0x258>
   278ac:	01ffff04 	movi	r7,-4
   278b0:	19400117 	ldw	r5,4(r3)
   278b4:	29ca703a 	and	r5,r5,r7
   278b8:	1140022e 	bgeu	r2,r5,278c4 <_free_r+0x160>
   278bc:	18c00217 	ldw	r3,8(r3)
   278c0:	20fffb1e 	bne	r4,r3,278b0 <_free_r+0x14c>
   278c4:	19000317 	ldw	r4,12(r3)
   278c8:	31000315 	stw	r4,12(r6)
   278cc:	30c00215 	stw	r3,8(r6)
   278d0:	21800215 	stw	r6,8(r4)
   278d4:	19800315 	stw	r6,12(r3)
   278d8:	003fde06 	br	27854 <_free_r+0xf0>
   278dc:	29c00217 	ldw	r7,8(r5)
   278e0:	10c5883a 	add	r2,r2,r3
   278e4:	00c000f4 	movhi	r3,3
   278e8:	18d01b04 	addi	r3,r3,16492
   278ec:	38c03b26 	beq	r7,r3,279dc <_free_r+0x278>
   278f0:	2a000317 	ldw	r8,12(r5)
   278f4:	11400054 	ori	r5,r2,1
   278f8:	3087883a 	add	r3,r6,r2
   278fc:	3a000315 	stw	r8,12(r7)
   27900:	41c00215 	stw	r7,8(r8)
   27904:	31400115 	stw	r5,4(r6)
   27908:	18800015 	stw	r2,0(r3)
   2790c:	003fbd06 	br	27804 <_free_r+0xa0>
   27910:	39c0004c 	andi	r7,r7,1
   27914:	10c5883a 	add	r2,r2,r3
   27918:	3800071e 	bne	r7,zero,27938 <_free_r+0x1d4>
   2791c:	81fffe17 	ldw	r7,-8(r16)
   27920:	31cdc83a 	sub	r6,r6,r7
   27924:	30c00317 	ldw	r3,12(r6)
   27928:	31400217 	ldw	r5,8(r6)
   2792c:	11c5883a 	add	r2,r2,r7
   27930:	28c00315 	stw	r3,12(r5)
   27934:	19400215 	stw	r5,8(r3)
   27938:	10c00054 	ori	r3,r2,1
   2793c:	30c00115 	stw	r3,4(r6)
   27940:	00c000f4 	movhi	r3,3
   27944:	18d5a304 	addi	r3,r3,22156
   27948:	18c00017 	ldw	r3,0(r3)
   2794c:	21800215 	stw	r6,8(r4)
   27950:	10ffc036 	bltu	r2,r3,27854 <_free_r+0xf0>
   27954:	008000f4 	movhi	r2,3
   27958:	109c7104 	addi	r2,r2,29124
   2795c:	11400017 	ldw	r5,0(r2)
   27960:	8809883a 	mov	r4,r17
   27964:	00276400 	call	27640 <_malloc_trim_r>
   27968:	003fba06 	br	27854 <_free_r+0xf0>
   2796c:	28c9883a 	add	r4,r5,r3
   27970:	21000117 	ldw	r4,4(r4)
   27974:	2100004c 	andi	r4,r4,1
   27978:	2000391e 	bne	r4,zero,27a60 <_free_r+0x2fc>
   2797c:	29c00217 	ldw	r7,8(r5)
   27980:	29000317 	ldw	r4,12(r5)
   27984:	1885883a 	add	r2,r3,r2
   27988:	10c00054 	ori	r3,r2,1
   2798c:	39000315 	stw	r4,12(r7)
   27990:	21c00215 	stw	r7,8(r4)
   27994:	30c00115 	stw	r3,4(r6)
   27998:	308d883a 	add	r6,r6,r2
   2799c:	30800015 	stw	r2,0(r6)
   279a0:	003fac06 	br	27854 <_free_r+0xf0>
   279a4:	00c00504 	movi	r3,20
   279a8:	19401536 	bltu	r3,r5,27a00 <_free_r+0x29c>
   279ac:	28c01704 	addi	r3,r5,92
   279b0:	18c7883a 	add	r3,r3,r3
   279b4:	294016c4 	addi	r5,r5,91
   279b8:	003fb406 	br	2788c <_free_r+0x128>
   279bc:	280bd0ba 	srai	r5,r5,2
   279c0:	00c00044 	movi	r3,1
   279c4:	38800117 	ldw	r2,4(r7)
   279c8:	194a983a 	sll	r5,r3,r5
   279cc:	2007883a 	mov	r3,r4
   279d0:	2884b03a 	or	r2,r5,r2
   279d4:	38800115 	stw	r2,4(r7)
   279d8:	003fbb06 	br	278c8 <_free_r+0x164>
   279dc:	21800515 	stw	r6,20(r4)
   279e0:	21800415 	stw	r6,16(r4)
   279e4:	10c00054 	ori	r3,r2,1
   279e8:	31c00315 	stw	r7,12(r6)
   279ec:	31c00215 	stw	r7,8(r6)
   279f0:	30c00115 	stw	r3,4(r6)
   279f4:	308d883a 	add	r6,r6,r2
   279f8:	30800015 	stw	r2,0(r6)
   279fc:	003f9506 	br	27854 <_free_r+0xf0>
   27a00:	00c01504 	movi	r3,84
   27a04:	19400536 	bltu	r3,r5,27a1c <_free_r+0x2b8>
   27a08:	100ad33a 	srli	r5,r2,12
   27a0c:	28c01bc4 	addi	r3,r5,111
   27a10:	18c7883a 	add	r3,r3,r3
   27a14:	29401b84 	addi	r5,r5,110
   27a18:	003f9c06 	br	2788c <_free_r+0x128>
   27a1c:	00c05504 	movi	r3,340
   27a20:	19400536 	bltu	r3,r5,27a38 <_free_r+0x2d4>
   27a24:	100ad3fa 	srli	r5,r2,15
   27a28:	28c01e04 	addi	r3,r5,120
   27a2c:	18c7883a 	add	r3,r3,r3
   27a30:	29401dc4 	addi	r5,r5,119
   27a34:	003f9506 	br	2788c <_free_r+0x128>
   27a38:	00c15504 	movi	r3,1364
   27a3c:	19400536 	bltu	r3,r5,27a54 <_free_r+0x2f0>
   27a40:	100ad4ba 	srli	r5,r2,18
   27a44:	28c01f44 	addi	r3,r5,125
   27a48:	18c7883a 	add	r3,r3,r3
   27a4c:	29401f04 	addi	r5,r5,124
   27a50:	003f8e06 	br	2788c <_free_r+0x128>
   27a54:	00c03f84 	movi	r3,254
   27a58:	01401f84 	movi	r5,126
   27a5c:	003f8b06 	br	2788c <_free_r+0x128>
   27a60:	10c00054 	ori	r3,r2,1
   27a64:	30c00115 	stw	r3,4(r6)
   27a68:	308d883a 	add	r6,r6,r2
   27a6c:	30800015 	stw	r2,0(r6)
   27a70:	003f7806 	br	27854 <_free_r+0xf0>

00027a74 <__sfvwrite_r>:
   27a74:	30800217 	ldw	r2,8(r6)
   27a78:	10006726 	beq	r2,zero,27c18 <__sfvwrite_r+0x1a4>
   27a7c:	28c0030b 	ldhu	r3,12(r5)
   27a80:	defff404 	addi	sp,sp,-48
   27a84:	dd400715 	stw	r21,28(sp)
   27a88:	dd000615 	stw	r20,24(sp)
   27a8c:	dc000215 	stw	r16,8(sp)
   27a90:	dfc00b15 	stw	ra,44(sp)
   27a94:	df000a15 	stw	fp,40(sp)
   27a98:	ddc00915 	stw	r23,36(sp)
   27a9c:	dd800815 	stw	r22,32(sp)
   27aa0:	dcc00515 	stw	r19,20(sp)
   27aa4:	dc800415 	stw	r18,16(sp)
   27aa8:	dc400315 	stw	r17,12(sp)
   27aac:	1880020c 	andi	r2,r3,8
   27ab0:	2821883a 	mov	r16,r5
   27ab4:	202b883a 	mov	r21,r4
   27ab8:	3029883a 	mov	r20,r6
   27abc:	10002726 	beq	r2,zero,27b5c <__sfvwrite_r+0xe8>
   27ac0:	28800417 	ldw	r2,16(r5)
   27ac4:	10002526 	beq	r2,zero,27b5c <__sfvwrite_r+0xe8>
   27ac8:	1880008c 	andi	r2,r3,2
   27acc:	a4400017 	ldw	r17,0(r20)
   27ad0:	10002a26 	beq	r2,zero,27b7c <__sfvwrite_r+0x108>
   27ad4:	05a00034 	movhi	r22,32768
   27ad8:	0027883a 	mov	r19,zero
   27adc:	0025883a 	mov	r18,zero
   27ae0:	b5bf0004 	addi	r22,r22,-1024
   27ae4:	980d883a 	mov	r6,r19
   27ae8:	a809883a 	mov	r4,r21
   27aec:	90004626 	beq	r18,zero,27c08 <__sfvwrite_r+0x194>
   27af0:	900f883a 	mov	r7,r18
   27af4:	b480022e 	bgeu	r22,r18,27b00 <__sfvwrite_r+0x8c>
   27af8:	01e00034 	movhi	r7,32768
   27afc:	39ff0004 	addi	r7,r7,-1024
   27b00:	80800917 	ldw	r2,36(r16)
   27b04:	81400717 	ldw	r5,28(r16)
   27b08:	103ee83a 	callr	r2
   27b0c:	0080570e 	bge	zero,r2,27c6c <__sfvwrite_r+0x1f8>
   27b10:	a0c00217 	ldw	r3,8(r20)
   27b14:	98a7883a 	add	r19,r19,r2
   27b18:	90a5c83a 	sub	r18,r18,r2
   27b1c:	1885c83a 	sub	r2,r3,r2
   27b20:	a0800215 	stw	r2,8(r20)
   27b24:	103fef1e 	bne	r2,zero,27ae4 <__sfvwrite_r+0x70>
   27b28:	0005883a 	mov	r2,zero
   27b2c:	dfc00b17 	ldw	ra,44(sp)
   27b30:	df000a17 	ldw	fp,40(sp)
   27b34:	ddc00917 	ldw	r23,36(sp)
   27b38:	dd800817 	ldw	r22,32(sp)
   27b3c:	dd400717 	ldw	r21,28(sp)
   27b40:	dd000617 	ldw	r20,24(sp)
   27b44:	dcc00517 	ldw	r19,20(sp)
   27b48:	dc800417 	ldw	r18,16(sp)
   27b4c:	dc400317 	ldw	r17,12(sp)
   27b50:	dc000217 	ldw	r16,8(sp)
   27b54:	dec00c04 	addi	sp,sp,48
   27b58:	f800283a 	ret
   27b5c:	800b883a 	mov	r5,r16
   27b60:	a809883a 	mov	r4,r21
   27b64:	002561c0 	call	2561c <__swsetup_r>
   27b68:	1000eb1e 	bne	r2,zero,27f18 <__sfvwrite_r+0x4a4>
   27b6c:	80c0030b 	ldhu	r3,12(r16)
   27b70:	a4400017 	ldw	r17,0(r20)
   27b74:	1880008c 	andi	r2,r3,2
   27b78:	103fd61e 	bne	r2,zero,27ad4 <__sfvwrite_r+0x60>
   27b7c:	1880004c 	andi	r2,r3,1
   27b80:	10003f1e 	bne	r2,zero,27c80 <__sfvwrite_r+0x20c>
   27b84:	0039883a 	mov	fp,zero
   27b88:	0025883a 	mov	r18,zero
   27b8c:	90001a26 	beq	r18,zero,27bf8 <__sfvwrite_r+0x184>
   27b90:	1880800c 	andi	r2,r3,512
   27b94:	84c00217 	ldw	r19,8(r16)
   27b98:	10002126 	beq	r2,zero,27c20 <__sfvwrite_r+0x1ac>
   27b9c:	982f883a 	mov	r23,r19
   27ba0:	94c09336 	bltu	r18,r19,27df0 <__sfvwrite_r+0x37c>
   27ba4:	1881200c 	andi	r2,r3,1152
   27ba8:	10009e1e 	bne	r2,zero,27e24 <__sfvwrite_r+0x3b0>
   27bac:	81000017 	ldw	r4,0(r16)
   27bb0:	b80d883a 	mov	r6,r23
   27bb4:	e00b883a 	mov	r5,fp
   27bb8:	0028d880 	call	28d88 <memmove>
   27bbc:	80c00217 	ldw	r3,8(r16)
   27bc0:	81000017 	ldw	r4,0(r16)
   27bc4:	9005883a 	mov	r2,r18
   27bc8:	1ce7c83a 	sub	r19,r3,r19
   27bcc:	25cf883a 	add	r7,r4,r23
   27bd0:	84c00215 	stw	r19,8(r16)
   27bd4:	81c00015 	stw	r7,0(r16)
   27bd8:	a0c00217 	ldw	r3,8(r20)
   27bdc:	e0b9883a 	add	fp,fp,r2
   27be0:	90a5c83a 	sub	r18,r18,r2
   27be4:	18a7c83a 	sub	r19,r3,r2
   27be8:	a4c00215 	stw	r19,8(r20)
   27bec:	983fce26 	beq	r19,zero,27b28 <__sfvwrite_r+0xb4>
   27bf0:	80c0030b 	ldhu	r3,12(r16)
   27bf4:	903fe61e 	bne	r18,zero,27b90 <__sfvwrite_r+0x11c>
   27bf8:	8f000017 	ldw	fp,0(r17)
   27bfc:	8c800117 	ldw	r18,4(r17)
   27c00:	8c400204 	addi	r17,r17,8
   27c04:	003fe106 	br	27b8c <__sfvwrite_r+0x118>
   27c08:	8cc00017 	ldw	r19,0(r17)
   27c0c:	8c800117 	ldw	r18,4(r17)
   27c10:	8c400204 	addi	r17,r17,8
   27c14:	003fb306 	br	27ae4 <__sfvwrite_r+0x70>
   27c18:	0005883a 	mov	r2,zero
   27c1c:	f800283a 	ret
   27c20:	81000017 	ldw	r4,0(r16)
   27c24:	80800417 	ldw	r2,16(r16)
   27c28:	11005736 	bltu	r2,r4,27d88 <__sfvwrite_r+0x314>
   27c2c:	85c00517 	ldw	r23,20(r16)
   27c30:	95c05536 	bltu	r18,r23,27d88 <__sfvwrite_r+0x314>
   27c34:	00a00034 	movhi	r2,32768
   27c38:	10bfffc4 	addi	r2,r2,-1
   27c3c:	9009883a 	mov	r4,r18
   27c40:	1480012e 	bgeu	r2,r18,27c48 <__sfvwrite_r+0x1d4>
   27c44:	1009883a 	mov	r4,r2
   27c48:	b80b883a 	mov	r5,r23
   27c4c:	002e6840 	call	2e684 <__divsi3>
   27c50:	15cf383a 	mul	r7,r2,r23
   27c54:	81400717 	ldw	r5,28(r16)
   27c58:	80800917 	ldw	r2,36(r16)
   27c5c:	e00d883a 	mov	r6,fp
   27c60:	a809883a 	mov	r4,r21
   27c64:	103ee83a 	callr	r2
   27c68:	00bfdb16 	blt	zero,r2,27bd8 <__sfvwrite_r+0x164>
   27c6c:	8080030b 	ldhu	r2,12(r16)
   27c70:	10801014 	ori	r2,r2,64
   27c74:	8080030d 	sth	r2,12(r16)
   27c78:	00bfffc4 	movi	r2,-1
   27c7c:	003fab06 	br	27b2c <__sfvwrite_r+0xb8>
   27c80:	0027883a 	mov	r19,zero
   27c84:	0011883a 	mov	r8,zero
   27c88:	0039883a 	mov	fp,zero
   27c8c:	0025883a 	mov	r18,zero
   27c90:	90001f26 	beq	r18,zero,27d10 <__sfvwrite_r+0x29c>
   27c94:	40005a26 	beq	r8,zero,27e00 <__sfvwrite_r+0x38c>
   27c98:	982d883a 	mov	r22,r19
   27c9c:	94c0012e 	bgeu	r18,r19,27ca4 <__sfvwrite_r+0x230>
   27ca0:	902d883a 	mov	r22,r18
   27ca4:	81000017 	ldw	r4,0(r16)
   27ca8:	80800417 	ldw	r2,16(r16)
   27cac:	b02f883a 	mov	r23,r22
   27cb0:	81c00517 	ldw	r7,20(r16)
   27cb4:	1100032e 	bgeu	r2,r4,27cc4 <__sfvwrite_r+0x250>
   27cb8:	80c00217 	ldw	r3,8(r16)
   27cbc:	38c7883a 	add	r3,r7,r3
   27cc0:	1d801816 	blt	r3,r22,27d24 <__sfvwrite_r+0x2b0>
   27cc4:	b1c03e16 	blt	r22,r7,27dc0 <__sfvwrite_r+0x34c>
   27cc8:	80800917 	ldw	r2,36(r16)
   27ccc:	81400717 	ldw	r5,28(r16)
   27cd0:	e00d883a 	mov	r6,fp
   27cd4:	da000115 	stw	r8,4(sp)
   27cd8:	a809883a 	mov	r4,r21
   27cdc:	103ee83a 	callr	r2
   27ce0:	102f883a 	mov	r23,r2
   27ce4:	da000117 	ldw	r8,4(sp)
   27ce8:	00bfe00e 	bge	zero,r2,27c6c <__sfvwrite_r+0x1f8>
   27cec:	9de7c83a 	sub	r19,r19,r23
   27cf0:	98001f26 	beq	r19,zero,27d70 <__sfvwrite_r+0x2fc>
   27cf4:	a0800217 	ldw	r2,8(r20)
   27cf8:	e5f9883a 	add	fp,fp,r23
   27cfc:	95e5c83a 	sub	r18,r18,r23
   27d00:	15efc83a 	sub	r23,r2,r23
   27d04:	a5c00215 	stw	r23,8(r20)
   27d08:	b83f8726 	beq	r23,zero,27b28 <__sfvwrite_r+0xb4>
   27d0c:	903fe11e 	bne	r18,zero,27c94 <__sfvwrite_r+0x220>
   27d10:	8f000017 	ldw	fp,0(r17)
   27d14:	8c800117 	ldw	r18,4(r17)
   27d18:	0011883a 	mov	r8,zero
   27d1c:	8c400204 	addi	r17,r17,8
   27d20:	003fdb06 	br	27c90 <__sfvwrite_r+0x21c>
   27d24:	180d883a 	mov	r6,r3
   27d28:	e00b883a 	mov	r5,fp
   27d2c:	da000115 	stw	r8,4(sp)
   27d30:	d8c00015 	stw	r3,0(sp)
   27d34:	0028d880 	call	28d88 <memmove>
   27d38:	d8c00017 	ldw	r3,0(sp)
   27d3c:	80800017 	ldw	r2,0(r16)
   27d40:	800b883a 	mov	r5,r16
   27d44:	a809883a 	mov	r4,r21
   27d48:	10c5883a 	add	r2,r2,r3
   27d4c:	80800015 	stw	r2,0(r16)
   27d50:	d8c00015 	stw	r3,0(sp)
   27d54:	00272140 	call	27214 <_fflush_r>
   27d58:	d8c00017 	ldw	r3,0(sp)
   27d5c:	da000117 	ldw	r8,4(sp)
   27d60:	103fc21e 	bne	r2,zero,27c6c <__sfvwrite_r+0x1f8>
   27d64:	182f883a 	mov	r23,r3
   27d68:	9de7c83a 	sub	r19,r19,r23
   27d6c:	983fe11e 	bne	r19,zero,27cf4 <__sfvwrite_r+0x280>
   27d70:	800b883a 	mov	r5,r16
   27d74:	a809883a 	mov	r4,r21
   27d78:	00272140 	call	27214 <_fflush_r>
   27d7c:	103fbb1e 	bne	r2,zero,27c6c <__sfvwrite_r+0x1f8>
   27d80:	0011883a 	mov	r8,zero
   27d84:	003fdb06 	br	27cf4 <__sfvwrite_r+0x280>
   27d88:	94c0012e 	bgeu	r18,r19,27d90 <__sfvwrite_r+0x31c>
   27d8c:	9027883a 	mov	r19,r18
   27d90:	980d883a 	mov	r6,r19
   27d94:	e00b883a 	mov	r5,fp
   27d98:	0028d880 	call	28d88 <memmove>
   27d9c:	80800217 	ldw	r2,8(r16)
   27da0:	80c00017 	ldw	r3,0(r16)
   27da4:	14c5c83a 	sub	r2,r2,r19
   27da8:	1cc7883a 	add	r3,r3,r19
   27dac:	80800215 	stw	r2,8(r16)
   27db0:	80c00015 	stw	r3,0(r16)
   27db4:	10004326 	beq	r2,zero,27ec4 <__sfvwrite_r+0x450>
   27db8:	9805883a 	mov	r2,r19
   27dbc:	003f8606 	br	27bd8 <__sfvwrite_r+0x164>
   27dc0:	b00d883a 	mov	r6,r22
   27dc4:	e00b883a 	mov	r5,fp
   27dc8:	da000115 	stw	r8,4(sp)
   27dcc:	0028d880 	call	28d88 <memmove>
   27dd0:	80800217 	ldw	r2,8(r16)
   27dd4:	80c00017 	ldw	r3,0(r16)
   27dd8:	da000117 	ldw	r8,4(sp)
   27ddc:	1585c83a 	sub	r2,r2,r22
   27de0:	1dad883a 	add	r22,r3,r22
   27de4:	80800215 	stw	r2,8(r16)
   27de8:	85800015 	stw	r22,0(r16)
   27dec:	003fbf06 	br	27cec <__sfvwrite_r+0x278>
   27df0:	81000017 	ldw	r4,0(r16)
   27df4:	9027883a 	mov	r19,r18
   27df8:	902f883a 	mov	r23,r18
   27dfc:	003f6c06 	br	27bb0 <__sfvwrite_r+0x13c>
   27e00:	900d883a 	mov	r6,r18
   27e04:	01400284 	movi	r5,10
   27e08:	e009883a 	mov	r4,fp
   27e0c:	0028b5c0 	call	28b5c <memchr>
   27e10:	10003e26 	beq	r2,zero,27f0c <__sfvwrite_r+0x498>
   27e14:	10800044 	addi	r2,r2,1
   27e18:	1727c83a 	sub	r19,r2,fp
   27e1c:	02000044 	movi	r8,1
   27e20:	003f9d06 	br	27c98 <__sfvwrite_r+0x224>
   27e24:	80800517 	ldw	r2,20(r16)
   27e28:	81400417 	ldw	r5,16(r16)
   27e2c:	81c00017 	ldw	r7,0(r16)
   27e30:	10a7883a 	add	r19,r2,r2
   27e34:	9885883a 	add	r2,r19,r2
   27e38:	1026d7fa 	srli	r19,r2,31
   27e3c:	396dc83a 	sub	r22,r7,r5
   27e40:	b1000044 	addi	r4,r22,1
   27e44:	9885883a 	add	r2,r19,r2
   27e48:	1027d07a 	srai	r19,r2,1
   27e4c:	2485883a 	add	r2,r4,r18
   27e50:	980d883a 	mov	r6,r19
   27e54:	9880022e 	bgeu	r19,r2,27e60 <__sfvwrite_r+0x3ec>
   27e58:	1027883a 	mov	r19,r2
   27e5c:	100d883a 	mov	r6,r2
   27e60:	18c1000c 	andi	r3,r3,1024
   27e64:	18001c26 	beq	r3,zero,27ed8 <__sfvwrite_r+0x464>
   27e68:	300b883a 	mov	r5,r6
   27e6c:	a809883a 	mov	r4,r21
   27e70:	00283500 	call	28350 <_malloc_r>
   27e74:	102f883a 	mov	r23,r2
   27e78:	10002926 	beq	r2,zero,27f20 <__sfvwrite_r+0x4ac>
   27e7c:	81400417 	ldw	r5,16(r16)
   27e80:	b00d883a 	mov	r6,r22
   27e84:	1009883a 	mov	r4,r2
   27e88:	0028c400 	call	28c40 <memcpy>
   27e8c:	8080030b 	ldhu	r2,12(r16)
   27e90:	00fedfc4 	movi	r3,-1153
   27e94:	10c4703a 	and	r2,r2,r3
   27e98:	10802014 	ori	r2,r2,128
   27e9c:	8080030d 	sth	r2,12(r16)
   27ea0:	bd89883a 	add	r4,r23,r22
   27ea4:	9d8fc83a 	sub	r7,r19,r22
   27ea8:	85c00415 	stw	r23,16(r16)
   27eac:	84c00515 	stw	r19,20(r16)
   27eb0:	81000015 	stw	r4,0(r16)
   27eb4:	9027883a 	mov	r19,r18
   27eb8:	81c00215 	stw	r7,8(r16)
   27ebc:	902f883a 	mov	r23,r18
   27ec0:	003f3b06 	br	27bb0 <__sfvwrite_r+0x13c>
   27ec4:	800b883a 	mov	r5,r16
   27ec8:	a809883a 	mov	r4,r21
   27ecc:	00272140 	call	27214 <_fflush_r>
   27ed0:	103fb926 	beq	r2,zero,27db8 <__sfvwrite_r+0x344>
   27ed4:	003f6506 	br	27c6c <__sfvwrite_r+0x1f8>
   27ed8:	a809883a 	mov	r4,r21
   27edc:	002a0080 	call	2a008 <_realloc_r>
   27ee0:	102f883a 	mov	r23,r2
   27ee4:	103fee1e 	bne	r2,zero,27ea0 <__sfvwrite_r+0x42c>
   27ee8:	81400417 	ldw	r5,16(r16)
   27eec:	a809883a 	mov	r4,r21
   27ef0:	00277640 	call	27764 <_free_r>
   27ef4:	8080030b 	ldhu	r2,12(r16)
   27ef8:	00ffdfc4 	movi	r3,-129
   27efc:	1884703a 	and	r2,r3,r2
   27f00:	00c00304 	movi	r3,12
   27f04:	a8c00015 	stw	r3,0(r21)
   27f08:	003f5906 	br	27c70 <__sfvwrite_r+0x1fc>
   27f0c:	94c00044 	addi	r19,r18,1
   27f10:	02000044 	movi	r8,1
   27f14:	003f6006 	br	27c98 <__sfvwrite_r+0x224>
   27f18:	00bfffc4 	movi	r2,-1
   27f1c:	003f0306 	br	27b2c <__sfvwrite_r+0xb8>
   27f20:	00800304 	movi	r2,12
   27f24:	a8800015 	stw	r2,0(r21)
   27f28:	8080030b 	ldhu	r2,12(r16)
   27f2c:	003f5006 	br	27c70 <__sfvwrite_r+0x1fc>

00027f30 <_fwalk>:
   27f30:	defff704 	addi	sp,sp,-36
   27f34:	dd000415 	stw	r20,16(sp)
   27f38:	dfc00815 	stw	ra,32(sp)
   27f3c:	ddc00715 	stw	r23,28(sp)
   27f40:	dd800615 	stw	r22,24(sp)
   27f44:	dd400515 	stw	r21,20(sp)
   27f48:	dcc00315 	stw	r19,12(sp)
   27f4c:	dc800215 	stw	r18,8(sp)
   27f50:	dc400115 	stw	r17,4(sp)
   27f54:	dc000015 	stw	r16,0(sp)
   27f58:	2500b804 	addi	r20,r4,736
   27f5c:	a0002326 	beq	r20,zero,27fec <_fwalk+0xbc>
   27f60:	282b883a 	mov	r21,r5
   27f64:	002f883a 	mov	r23,zero
   27f68:	05800044 	movi	r22,1
   27f6c:	04ffffc4 	movi	r19,-1
   27f70:	a4400117 	ldw	r17,4(r20)
   27f74:	a4800217 	ldw	r18,8(r20)
   27f78:	8c7fffc4 	addi	r17,r17,-1
   27f7c:	88000d16 	blt	r17,zero,27fb4 <_fwalk+0x84>
   27f80:	94000304 	addi	r16,r18,12
   27f84:	94800384 	addi	r18,r18,14
   27f88:	8080000b 	ldhu	r2,0(r16)
   27f8c:	8c7fffc4 	addi	r17,r17,-1
   27f90:	813ffd04 	addi	r4,r16,-12
   27f94:	b080042e 	bgeu	r22,r2,27fa8 <_fwalk+0x78>
   27f98:	9080000f 	ldh	r2,0(r18)
   27f9c:	14c00226 	beq	r2,r19,27fa8 <_fwalk+0x78>
   27fa0:	a83ee83a 	callr	r21
   27fa4:	b8aeb03a 	or	r23,r23,r2
   27fa8:	84001a04 	addi	r16,r16,104
   27fac:	94801a04 	addi	r18,r18,104
   27fb0:	8cfff51e 	bne	r17,r19,27f88 <_fwalk+0x58>
   27fb4:	a5000017 	ldw	r20,0(r20)
   27fb8:	a03fed1e 	bne	r20,zero,27f70 <_fwalk+0x40>
   27fbc:	b805883a 	mov	r2,r23
   27fc0:	dfc00817 	ldw	ra,32(sp)
   27fc4:	ddc00717 	ldw	r23,28(sp)
   27fc8:	dd800617 	ldw	r22,24(sp)
   27fcc:	dd400517 	ldw	r21,20(sp)
   27fd0:	dd000417 	ldw	r20,16(sp)
   27fd4:	dcc00317 	ldw	r19,12(sp)
   27fd8:	dc800217 	ldw	r18,8(sp)
   27fdc:	dc400117 	ldw	r17,4(sp)
   27fe0:	dc000017 	ldw	r16,0(sp)
   27fe4:	dec00904 	addi	sp,sp,36
   27fe8:	f800283a 	ret
   27fec:	002f883a 	mov	r23,zero
   27ff0:	003ff206 	br	27fbc <_fwalk+0x8c>

00027ff4 <_fwalk_reent>:
   27ff4:	defff704 	addi	sp,sp,-36
   27ff8:	dd000415 	stw	r20,16(sp)
   27ffc:	dfc00815 	stw	ra,32(sp)
   28000:	ddc00715 	stw	r23,28(sp)
   28004:	dd800615 	stw	r22,24(sp)
   28008:	dd400515 	stw	r21,20(sp)
   2800c:	dcc00315 	stw	r19,12(sp)
   28010:	dc800215 	stw	r18,8(sp)
   28014:	dc400115 	stw	r17,4(sp)
   28018:	dc000015 	stw	r16,0(sp)
   2801c:	2500b804 	addi	r20,r4,736
   28020:	a0002326 	beq	r20,zero,280b0 <_fwalk_reent+0xbc>
   28024:	282b883a 	mov	r21,r5
   28028:	2027883a 	mov	r19,r4
   2802c:	002f883a 	mov	r23,zero
   28030:	05800044 	movi	r22,1
   28034:	04bfffc4 	movi	r18,-1
   28038:	a4400117 	ldw	r17,4(r20)
   2803c:	a4000217 	ldw	r16,8(r20)
   28040:	8c7fffc4 	addi	r17,r17,-1
   28044:	88000c16 	blt	r17,zero,28078 <_fwalk_reent+0x84>
   28048:	84000304 	addi	r16,r16,12
   2804c:	8080000b 	ldhu	r2,0(r16)
   28050:	8c7fffc4 	addi	r17,r17,-1
   28054:	817ffd04 	addi	r5,r16,-12
   28058:	b080052e 	bgeu	r22,r2,28070 <_fwalk_reent+0x7c>
   2805c:	8080008f 	ldh	r2,2(r16)
   28060:	9809883a 	mov	r4,r19
   28064:	14800226 	beq	r2,r18,28070 <_fwalk_reent+0x7c>
   28068:	a83ee83a 	callr	r21
   2806c:	b8aeb03a 	or	r23,r23,r2
   28070:	84001a04 	addi	r16,r16,104
   28074:	8cbff51e 	bne	r17,r18,2804c <_fwalk_reent+0x58>
   28078:	a5000017 	ldw	r20,0(r20)
   2807c:	a03fee1e 	bne	r20,zero,28038 <_fwalk_reent+0x44>
   28080:	b805883a 	mov	r2,r23
   28084:	dfc00817 	ldw	ra,32(sp)
   28088:	ddc00717 	ldw	r23,28(sp)
   2808c:	dd800617 	ldw	r22,24(sp)
   28090:	dd400517 	ldw	r21,20(sp)
   28094:	dd000417 	ldw	r20,16(sp)
   28098:	dcc00317 	ldw	r19,12(sp)
   2809c:	dc800217 	ldw	r18,8(sp)
   280a0:	dc400117 	ldw	r17,4(sp)
   280a4:	dc000017 	ldw	r16,0(sp)
   280a8:	dec00904 	addi	sp,sp,36
   280ac:	f800283a 	ret
   280b0:	002f883a 	mov	r23,zero
   280b4:	003ff206 	br	28080 <_fwalk_reent+0x8c>

000280b8 <_setlocale_r>:
   280b8:	30001b26 	beq	r6,zero,28128 <_setlocale_r+0x70>
   280bc:	014000f4 	movhi	r5,3
   280c0:	defffe04 	addi	sp,sp,-8
   280c4:	294e4904 	addi	r5,r5,14628
   280c8:	3009883a 	mov	r4,r6
   280cc:	dc000015 	stw	r16,0(sp)
   280d0:	dfc00115 	stw	ra,4(sp)
   280d4:	3021883a 	mov	r16,r6
   280d8:	002a7700 	call	2a770 <strcmp>
   280dc:	1000061e 	bne	r2,zero,280f8 <_setlocale_r+0x40>
   280e0:	008000f4 	movhi	r2,3
   280e4:	108e4804 	addi	r2,r2,14624
   280e8:	dfc00117 	ldw	ra,4(sp)
   280ec:	dc000017 	ldw	r16,0(sp)
   280f0:	dec00204 	addi	sp,sp,8
   280f4:	f800283a 	ret
   280f8:	014000f4 	movhi	r5,3
   280fc:	294e4804 	addi	r5,r5,14624
   28100:	8009883a 	mov	r4,r16
   28104:	002a7700 	call	2a770 <strcmp>
   28108:	103ff526 	beq	r2,zero,280e0 <_setlocale_r+0x28>
   2810c:	014000f4 	movhi	r5,3
   28110:	294e2b04 	addi	r5,r5,14508
   28114:	8009883a 	mov	r4,r16
   28118:	002a7700 	call	2a770 <strcmp>
   2811c:	103ff026 	beq	r2,zero,280e0 <_setlocale_r+0x28>
   28120:	0005883a 	mov	r2,zero
   28124:	003ff006 	br	280e8 <_setlocale_r+0x30>
   28128:	008000f4 	movhi	r2,3
   2812c:	108e4804 	addi	r2,r2,14624
   28130:	f800283a 	ret

00028134 <__locale_charset>:
   28134:	008000f4 	movhi	r2,3
   28138:	10900304 	addi	r2,r2,16396
   2813c:	f800283a 	ret

00028140 <__locale_mb_cur_max>:
   28140:	008000f4 	movhi	r2,3
   28144:	1095a104 	addi	r2,r2,22148
   28148:	10800017 	ldw	r2,0(r2)
   2814c:	f800283a 	ret

00028150 <__locale_msgcharset>:
   28150:	008000f4 	movhi	r2,3
   28154:	108ffb04 	addi	r2,r2,16364
   28158:	f800283a 	ret

0002815c <__locale_cjk_lang>:
   2815c:	0005883a 	mov	r2,zero
   28160:	f800283a 	ret

00028164 <_localeconv_r>:
   28164:	008000f4 	movhi	r2,3
   28168:	10900b04 	addi	r2,r2,16428
   2816c:	f800283a 	ret

00028170 <setlocale>:
   28170:	008000f4 	movhi	r2,3
   28174:	1095a004 	addi	r2,r2,22144
   28178:	280d883a 	mov	r6,r5
   2817c:	200b883a 	mov	r5,r4
   28180:	11000017 	ldw	r4,0(r2)
   28184:	00280b81 	jmpi	280b8 <_setlocale_r>

00028188 <localeconv>:
   28188:	008000f4 	movhi	r2,3
   2818c:	10900b04 	addi	r2,r2,16428
   28190:	f800283a 	ret

00028194 <__smakebuf_r>:
   28194:	2880030b 	ldhu	r2,12(r5)
   28198:	10c0008c 	andi	r3,r2,2
   2819c:	1800411e 	bne	r3,zero,282a4 <__smakebuf_r+0x110>
   281a0:	deffec04 	addi	sp,sp,-80
   281a4:	dc000f15 	stw	r16,60(sp)
   281a8:	2821883a 	mov	r16,r5
   281ac:	2940038f 	ldh	r5,14(r5)
   281b0:	dc401015 	stw	r17,64(sp)
   281b4:	dfc01315 	stw	ra,76(sp)
   281b8:	dcc01215 	stw	r19,72(sp)
   281bc:	dc801115 	stw	r18,68(sp)
   281c0:	2023883a 	mov	r17,r4
   281c4:	28001c16 	blt	r5,zero,28238 <__smakebuf_r+0xa4>
   281c8:	d80d883a 	mov	r6,sp
   281cc:	002d7240 	call	2d724 <_fstat_r>
   281d0:	10001816 	blt	r2,zero,28234 <__smakebuf_r+0xa0>
   281d4:	d8800117 	ldw	r2,4(sp)
   281d8:	00e00014 	movui	r3,32768
   281dc:	10bc000c 	andi	r2,r2,61440
   281e0:	14c80020 	cmpeqi	r19,r2,8192
   281e4:	10c03726 	beq	r2,r3,282c4 <__smakebuf_r+0x130>
   281e8:	80c0030b 	ldhu	r3,12(r16)
   281ec:	18c20014 	ori	r3,r3,2048
   281f0:	80c0030d 	sth	r3,12(r16)
   281f4:	00c80004 	movi	r3,8192
   281f8:	10c0521e 	bne	r2,r3,28344 <__smakebuf_r+0x1b0>
   281fc:	8140038f 	ldh	r5,14(r16)
   28200:	8809883a 	mov	r4,r17
   28204:	002d7800 	call	2d780 <_isatty_r>
   28208:	10004c26 	beq	r2,zero,2833c <__smakebuf_r+0x1a8>
   2820c:	8080030b 	ldhu	r2,12(r16)
   28210:	80c010c4 	addi	r3,r16,67
   28214:	80c00015 	stw	r3,0(r16)
   28218:	10800054 	ori	r2,r2,1
   2821c:	8080030d 	sth	r2,12(r16)
   28220:	00800044 	movi	r2,1
   28224:	80c00415 	stw	r3,16(r16)
   28228:	80800515 	stw	r2,20(r16)
   2822c:	04810004 	movi	r18,1024
   28230:	00000706 	br	28250 <__smakebuf_r+0xbc>
   28234:	8080030b 	ldhu	r2,12(r16)
   28238:	10c0200c 	andi	r3,r2,128
   2823c:	18001f1e 	bne	r3,zero,282bc <__smakebuf_r+0x128>
   28240:	04810004 	movi	r18,1024
   28244:	10820014 	ori	r2,r2,2048
   28248:	8080030d 	sth	r2,12(r16)
   2824c:	0027883a 	mov	r19,zero
   28250:	900b883a 	mov	r5,r18
   28254:	8809883a 	mov	r4,r17
   28258:	00283500 	call	28350 <_malloc_r>
   2825c:	10002c26 	beq	r2,zero,28310 <__smakebuf_r+0x17c>
   28260:	80c0030b 	ldhu	r3,12(r16)
   28264:	010000b4 	movhi	r4,2
   28268:	211caa04 	addi	r4,r4,29352
   2826c:	89000f15 	stw	r4,60(r17)
   28270:	18c02014 	ori	r3,r3,128
   28274:	80c0030d 	sth	r3,12(r16)
   28278:	80800015 	stw	r2,0(r16)
   2827c:	80800415 	stw	r2,16(r16)
   28280:	84800515 	stw	r18,20(r16)
   28284:	98001a1e 	bne	r19,zero,282f0 <__smakebuf_r+0x15c>
   28288:	dfc01317 	ldw	ra,76(sp)
   2828c:	dcc01217 	ldw	r19,72(sp)
   28290:	dc801117 	ldw	r18,68(sp)
   28294:	dc401017 	ldw	r17,64(sp)
   28298:	dc000f17 	ldw	r16,60(sp)
   2829c:	dec01404 	addi	sp,sp,80
   282a0:	f800283a 	ret
   282a4:	288010c4 	addi	r2,r5,67
   282a8:	28800015 	stw	r2,0(r5)
   282ac:	28800415 	stw	r2,16(r5)
   282b0:	00800044 	movi	r2,1
   282b4:	28800515 	stw	r2,20(r5)
   282b8:	f800283a 	ret
   282bc:	04801004 	movi	r18,64
   282c0:	003fe006 	br	28244 <__smakebuf_r+0xb0>
   282c4:	81000a17 	ldw	r4,40(r16)
   282c8:	00c000f4 	movhi	r3,3
   282cc:	18e9c304 	addi	r3,r3,-22772
   282d0:	20ffc51e 	bne	r4,r3,281e8 <__smakebuf_r+0x54>
   282d4:	8080030b 	ldhu	r2,12(r16)
   282d8:	04810004 	movi	r18,1024
   282dc:	84801315 	stw	r18,76(r16)
   282e0:	1484b03a 	or	r2,r2,r18
   282e4:	8080030d 	sth	r2,12(r16)
   282e8:	0027883a 	mov	r19,zero
   282ec:	003fd806 	br	28250 <__smakebuf_r+0xbc>
   282f0:	8140038f 	ldh	r5,14(r16)
   282f4:	8809883a 	mov	r4,r17
   282f8:	002d7800 	call	2d780 <_isatty_r>
   282fc:	103fe226 	beq	r2,zero,28288 <__smakebuf_r+0xf4>
   28300:	8080030b 	ldhu	r2,12(r16)
   28304:	10800054 	ori	r2,r2,1
   28308:	8080030d 	sth	r2,12(r16)
   2830c:	003fde06 	br	28288 <__smakebuf_r+0xf4>
   28310:	8080030b 	ldhu	r2,12(r16)
   28314:	10c0800c 	andi	r3,r2,512
   28318:	183fdb1e 	bne	r3,zero,28288 <__smakebuf_r+0xf4>
   2831c:	10800094 	ori	r2,r2,2
   28320:	80c010c4 	addi	r3,r16,67
   28324:	8080030d 	sth	r2,12(r16)
   28328:	00800044 	movi	r2,1
   2832c:	80c00015 	stw	r3,0(r16)
   28330:	80c00415 	stw	r3,16(r16)
   28334:	80800515 	stw	r2,20(r16)
   28338:	003fd306 	br	28288 <__smakebuf_r+0xf4>
   2833c:	04810004 	movi	r18,1024
   28340:	003fc306 	br	28250 <__smakebuf_r+0xbc>
   28344:	0027883a 	mov	r19,zero
   28348:	04810004 	movi	r18,1024
   2834c:	003fc006 	br	28250 <__smakebuf_r+0xbc>

00028350 <_malloc_r>:
   28350:	defff504 	addi	sp,sp,-44
   28354:	dc800315 	stw	r18,12(sp)
   28358:	dfc00a15 	stw	ra,40(sp)
   2835c:	df000915 	stw	fp,36(sp)
   28360:	ddc00815 	stw	r23,32(sp)
   28364:	dd800715 	stw	r22,28(sp)
   28368:	dd400615 	stw	r21,24(sp)
   2836c:	dd000515 	stw	r20,20(sp)
   28370:	dcc00415 	stw	r19,16(sp)
   28374:	dc400215 	stw	r17,8(sp)
   28378:	dc000115 	stw	r16,4(sp)
   2837c:	288002c4 	addi	r2,r5,11
   28380:	00c00584 	movi	r3,22
   28384:	2025883a 	mov	r18,r4
   28388:	18807f2e 	bgeu	r3,r2,28588 <_malloc_r+0x238>
   2838c:	047ffe04 	movi	r17,-8
   28390:	1462703a 	and	r17,r2,r17
   28394:	8800a316 	blt	r17,zero,28624 <_malloc_r+0x2d4>
   28398:	8940a236 	bltu	r17,r5,28624 <_malloc_r+0x2d4>
   2839c:	00316bc0 	call	316bc <__malloc_lock>
   283a0:	00807dc4 	movi	r2,503
   283a4:	1441e92e 	bgeu	r2,r17,28b4c <_malloc_r+0x7fc>
   283a8:	8804d27a 	srli	r2,r17,9
   283ac:	1000a126 	beq	r2,zero,28634 <_malloc_r+0x2e4>
   283b0:	00c00104 	movi	r3,4
   283b4:	18811e36 	bltu	r3,r2,28830 <_malloc_r+0x4e0>
   283b8:	8804d1ba 	srli	r2,r17,6
   283bc:	12000e44 	addi	r8,r2,57
   283c0:	11c00e04 	addi	r7,r2,56
   283c4:	4209883a 	add	r4,r8,r8
   283c8:	04c000f4 	movhi	r19,3
   283cc:	2109883a 	add	r4,r4,r4
   283d0:	9cd01904 	addi	r19,r19,16484
   283d4:	2109883a 	add	r4,r4,r4
   283d8:	9909883a 	add	r4,r19,r4
   283dc:	24000117 	ldw	r16,4(r4)
   283e0:	213ffe04 	addi	r4,r4,-8
   283e4:	24009726 	beq	r4,r16,28644 <_malloc_r+0x2f4>
   283e8:	80800117 	ldw	r2,4(r16)
   283ec:	01bfff04 	movi	r6,-4
   283f0:	014003c4 	movi	r5,15
   283f4:	1184703a 	and	r2,r2,r6
   283f8:	1447c83a 	sub	r3,r2,r17
   283fc:	28c00716 	blt	r5,r3,2841c <_malloc_r+0xcc>
   28400:	1800920e 	bge	r3,zero,2864c <_malloc_r+0x2fc>
   28404:	84000317 	ldw	r16,12(r16)
   28408:	24008e26 	beq	r4,r16,28644 <_malloc_r+0x2f4>
   2840c:	80800117 	ldw	r2,4(r16)
   28410:	1184703a 	and	r2,r2,r6
   28414:	1447c83a 	sub	r3,r2,r17
   28418:	28fff90e 	bge	r5,r3,28400 <_malloc_r+0xb0>
   2841c:	3809883a 	mov	r4,r7
   28420:	018000f4 	movhi	r6,3
   28424:	9c000417 	ldw	r16,16(r19)
   28428:	31901904 	addi	r6,r6,16484
   2842c:	32000204 	addi	r8,r6,8
   28430:	82013426 	beq	r16,r8,28904 <_malloc_r+0x5b4>
   28434:	80c00117 	ldw	r3,4(r16)
   28438:	00bfff04 	movi	r2,-4
   2843c:	188e703a 	and	r7,r3,r2
   28440:	3c45c83a 	sub	r2,r7,r17
   28444:	00c003c4 	movi	r3,15
   28448:	18811f16 	blt	r3,r2,288c8 <_malloc_r+0x578>
   2844c:	32000515 	stw	r8,20(r6)
   28450:	32000415 	stw	r8,16(r6)
   28454:	10007f0e 	bge	r2,zero,28654 <_malloc_r+0x304>
   28458:	00807fc4 	movi	r2,511
   2845c:	11c0fd36 	bltu	r2,r7,28854 <_malloc_r+0x504>
   28460:	3806d0fa 	srli	r3,r7,3
   28464:	01c00044 	movi	r7,1
   28468:	30800117 	ldw	r2,4(r6)
   2846c:	19400044 	addi	r5,r3,1
   28470:	294b883a 	add	r5,r5,r5
   28474:	1807d0ba 	srai	r3,r3,2
   28478:	294b883a 	add	r5,r5,r5
   2847c:	294b883a 	add	r5,r5,r5
   28480:	298b883a 	add	r5,r5,r6
   28484:	38c6983a 	sll	r3,r7,r3
   28488:	29c00017 	ldw	r7,0(r5)
   2848c:	2a7ffe04 	addi	r9,r5,-8
   28490:	1886b03a 	or	r3,r3,r2
   28494:	82400315 	stw	r9,12(r16)
   28498:	81c00215 	stw	r7,8(r16)
   2849c:	30c00115 	stw	r3,4(r6)
   284a0:	2c000015 	stw	r16,0(r5)
   284a4:	3c000315 	stw	r16,12(r7)
   284a8:	2005d0ba 	srai	r2,r4,2
   284ac:	01400044 	movi	r5,1
   284b0:	288a983a 	sll	r5,r5,r2
   284b4:	19406f36 	bltu	r3,r5,28674 <_malloc_r+0x324>
   284b8:	28c4703a 	and	r2,r5,r3
   284bc:	10000a1e 	bne	r2,zero,284e8 <_malloc_r+0x198>
   284c0:	00bfff04 	movi	r2,-4
   284c4:	294b883a 	add	r5,r5,r5
   284c8:	2088703a 	and	r4,r4,r2
   284cc:	28c4703a 	and	r2,r5,r3
   284d0:	21000104 	addi	r4,r4,4
   284d4:	1000041e 	bne	r2,zero,284e8 <_malloc_r+0x198>
   284d8:	294b883a 	add	r5,r5,r5
   284dc:	28c4703a 	and	r2,r5,r3
   284e0:	21000104 	addi	r4,r4,4
   284e4:	103ffc26 	beq	r2,zero,284d8 <_malloc_r+0x188>
   284e8:	02bfff04 	movi	r10,-4
   284ec:	024003c4 	movi	r9,15
   284f0:	21800044 	addi	r6,r4,1
   284f4:	318d883a 	add	r6,r6,r6
   284f8:	318d883a 	add	r6,r6,r6
   284fc:	318d883a 	add	r6,r6,r6
   28500:	998d883a 	add	r6,r19,r6
   28504:	333ffe04 	addi	r12,r6,-8
   28508:	2017883a 	mov	r11,r4
   2850c:	31800104 	addi	r6,r6,4
   28510:	34000017 	ldw	r16,0(r6)
   28514:	31fffd04 	addi	r7,r6,-12
   28518:	81c0041e 	bne	r16,r7,2852c <_malloc_r+0x1dc>
   2851c:	0000fb06 	br	2890c <_malloc_r+0x5bc>
   28520:	1801030e 	bge	r3,zero,28930 <_malloc_r+0x5e0>
   28524:	84000317 	ldw	r16,12(r16)
   28528:	81c0f826 	beq	r16,r7,2890c <_malloc_r+0x5bc>
   2852c:	80800117 	ldw	r2,4(r16)
   28530:	1284703a 	and	r2,r2,r10
   28534:	1447c83a 	sub	r3,r2,r17
   28538:	48fff90e 	bge	r9,r3,28520 <_malloc_r+0x1d0>
   2853c:	80800317 	ldw	r2,12(r16)
   28540:	81000217 	ldw	r4,8(r16)
   28544:	89400054 	ori	r5,r17,1
   28548:	81400115 	stw	r5,4(r16)
   2854c:	20800315 	stw	r2,12(r4)
   28550:	11000215 	stw	r4,8(r2)
   28554:	8463883a 	add	r17,r16,r17
   28558:	9c400515 	stw	r17,20(r19)
   2855c:	9c400415 	stw	r17,16(r19)
   28560:	18800054 	ori	r2,r3,1
   28564:	88800115 	stw	r2,4(r17)
   28568:	8a000315 	stw	r8,12(r17)
   2856c:	8a000215 	stw	r8,8(r17)
   28570:	88e3883a 	add	r17,r17,r3
   28574:	88c00015 	stw	r3,0(r17)
   28578:	9009883a 	mov	r4,r18
   2857c:	00316e00 	call	316e0 <__malloc_unlock>
   28580:	80800204 	addi	r2,r16,8
   28584:	00001b06 	br	285f4 <_malloc_r+0x2a4>
   28588:	04400404 	movi	r17,16
   2858c:	89402536 	bltu	r17,r5,28624 <_malloc_r+0x2d4>
   28590:	00316bc0 	call	316bc <__malloc_lock>
   28594:	00800184 	movi	r2,6
   28598:	01000084 	movi	r4,2
   2859c:	04c000f4 	movhi	r19,3
   285a0:	1085883a 	add	r2,r2,r2
   285a4:	9cd01904 	addi	r19,r19,16484
   285a8:	1085883a 	add	r2,r2,r2
   285ac:	9885883a 	add	r2,r19,r2
   285b0:	14000117 	ldw	r16,4(r2)
   285b4:	10fffe04 	addi	r3,r2,-8
   285b8:	80c0d926 	beq	r16,r3,28920 <_malloc_r+0x5d0>
   285bc:	80c00117 	ldw	r3,4(r16)
   285c0:	81000317 	ldw	r4,12(r16)
   285c4:	00bfff04 	movi	r2,-4
   285c8:	1884703a 	and	r2,r3,r2
   285cc:	81400217 	ldw	r5,8(r16)
   285d0:	8085883a 	add	r2,r16,r2
   285d4:	10c00117 	ldw	r3,4(r2)
   285d8:	29000315 	stw	r4,12(r5)
   285dc:	21400215 	stw	r5,8(r4)
   285e0:	18c00054 	ori	r3,r3,1
   285e4:	10c00115 	stw	r3,4(r2)
   285e8:	9009883a 	mov	r4,r18
   285ec:	00316e00 	call	316e0 <__malloc_unlock>
   285f0:	80800204 	addi	r2,r16,8
   285f4:	dfc00a17 	ldw	ra,40(sp)
   285f8:	df000917 	ldw	fp,36(sp)
   285fc:	ddc00817 	ldw	r23,32(sp)
   28600:	dd800717 	ldw	r22,28(sp)
   28604:	dd400617 	ldw	r21,24(sp)
   28608:	dd000517 	ldw	r20,20(sp)
   2860c:	dcc00417 	ldw	r19,16(sp)
   28610:	dc800317 	ldw	r18,12(sp)
   28614:	dc400217 	ldw	r17,8(sp)
   28618:	dc000117 	ldw	r16,4(sp)
   2861c:	dec00b04 	addi	sp,sp,44
   28620:	f800283a 	ret
   28624:	00800304 	movi	r2,12
   28628:	90800015 	stw	r2,0(r18)
   2862c:	0005883a 	mov	r2,zero
   28630:	003ff006 	br	285f4 <_malloc_r+0x2a4>
   28634:	01002004 	movi	r4,128
   28638:	02001004 	movi	r8,64
   2863c:	01c00fc4 	movi	r7,63
   28640:	003f6106 	br	283c8 <_malloc_r+0x78>
   28644:	4009883a 	mov	r4,r8
   28648:	003f7506 	br	28420 <_malloc_r+0xd0>
   2864c:	81000317 	ldw	r4,12(r16)
   28650:	003fde06 	br	285cc <_malloc_r+0x27c>
   28654:	81c5883a 	add	r2,r16,r7
   28658:	11400117 	ldw	r5,4(r2)
   2865c:	9009883a 	mov	r4,r18
   28660:	29400054 	ori	r5,r5,1
   28664:	11400115 	stw	r5,4(r2)
   28668:	00316e00 	call	316e0 <__malloc_unlock>
   2866c:	80800204 	addi	r2,r16,8
   28670:	003fe006 	br	285f4 <_malloc_r+0x2a4>
   28674:	9c000217 	ldw	r16,8(r19)
   28678:	00bfff04 	movi	r2,-4
   2867c:	85800117 	ldw	r22,4(r16)
   28680:	b0ac703a 	and	r22,r22,r2
   28684:	b4400336 	bltu	r22,r17,28694 <_malloc_r+0x344>
   28688:	b445c83a 	sub	r2,r22,r17
   2868c:	00c003c4 	movi	r3,15
   28690:	18805d16 	blt	r3,r2,28808 <_malloc_r+0x4b8>
   28694:	05c000f4 	movhi	r23,3
   28698:	008000f4 	movhi	r2,3
   2869c:	109c7104 	addi	r2,r2,29124
   286a0:	bdd5a204 	addi	r23,r23,22152
   286a4:	15400017 	ldw	r21,0(r2)
   286a8:	b8c00017 	ldw	r3,0(r23)
   286ac:	00bfffc4 	movi	r2,-1
   286b0:	858d883a 	add	r6,r16,r22
   286b4:	8d6b883a 	add	r21,r17,r21
   286b8:	1880ea26 	beq	r3,r2,28a64 <_malloc_r+0x714>
   286bc:	ad4403c4 	addi	r21,r21,4111
   286c0:	00bc0004 	movi	r2,-4096
   286c4:	a8aa703a 	and	r21,r21,r2
   286c8:	a80b883a 	mov	r5,r21
   286cc:	9009883a 	mov	r4,r18
   286d0:	d9800015 	stw	r6,0(sp)
   286d4:	002a5e00 	call	2a5e0 <_sbrk_r>
   286d8:	1029883a 	mov	r20,r2
   286dc:	00bfffc4 	movi	r2,-1
   286e0:	d9800017 	ldw	r6,0(sp)
   286e4:	a080e826 	beq	r20,r2,28a88 <_malloc_r+0x738>
   286e8:	a180a636 	bltu	r20,r6,28984 <_malloc_r+0x634>
   286ec:	070000f4 	movhi	fp,3
   286f0:	e71c7a04 	addi	fp,fp,29160
   286f4:	e0800017 	ldw	r2,0(fp)
   286f8:	a887883a 	add	r3,r21,r2
   286fc:	e0c00015 	stw	r3,0(fp)
   28700:	3500e626 	beq	r6,r20,28a9c <_malloc_r+0x74c>
   28704:	b9000017 	ldw	r4,0(r23)
   28708:	00bfffc4 	movi	r2,-1
   2870c:	2080ee26 	beq	r4,r2,28ac8 <_malloc_r+0x778>
   28710:	a185c83a 	sub	r2,r20,r6
   28714:	10c5883a 	add	r2,r2,r3
   28718:	e0800015 	stw	r2,0(fp)
   2871c:	a0c001cc 	andi	r3,r20,7
   28720:	1800bc26 	beq	r3,zero,28a14 <_malloc_r+0x6c4>
   28724:	a0e9c83a 	sub	r20,r20,r3
   28728:	00840204 	movi	r2,4104
   2872c:	a5000204 	addi	r20,r20,8
   28730:	10c7c83a 	sub	r3,r2,r3
   28734:	a545883a 	add	r2,r20,r21
   28738:	1083ffcc 	andi	r2,r2,4095
   2873c:	18abc83a 	sub	r21,r3,r2
   28740:	a80b883a 	mov	r5,r21
   28744:	9009883a 	mov	r4,r18
   28748:	002a5e00 	call	2a5e0 <_sbrk_r>
   2874c:	00ffffc4 	movi	r3,-1
   28750:	10c0e126 	beq	r2,r3,28ad8 <_malloc_r+0x788>
   28754:	1505c83a 	sub	r2,r2,r20
   28758:	1545883a 	add	r2,r2,r21
   2875c:	10800054 	ori	r2,r2,1
   28760:	e0c00017 	ldw	r3,0(fp)
   28764:	9d000215 	stw	r20,8(r19)
   28768:	a0800115 	stw	r2,4(r20)
   2876c:	a8c7883a 	add	r3,r21,r3
   28770:	e0c00015 	stw	r3,0(fp)
   28774:	84c00e26 	beq	r16,r19,287b0 <_malloc_r+0x460>
   28778:	018003c4 	movi	r6,15
   2877c:	3580a72e 	bgeu	r6,r22,28a1c <_malloc_r+0x6cc>
   28780:	81400117 	ldw	r5,4(r16)
   28784:	013ffe04 	movi	r4,-8
   28788:	b0bffd04 	addi	r2,r22,-12
   2878c:	1104703a 	and	r2,r2,r4
   28790:	2900004c 	andi	r4,r5,1
   28794:	2088b03a 	or	r4,r4,r2
   28798:	81000115 	stw	r4,4(r16)
   2879c:	01400144 	movi	r5,5
   287a0:	8089883a 	add	r4,r16,r2
   287a4:	21400115 	stw	r5,4(r4)
   287a8:	21400215 	stw	r5,8(r4)
   287ac:	3080cd36 	bltu	r6,r2,28ae4 <_malloc_r+0x794>
   287b0:	008000f4 	movhi	r2,3
   287b4:	109c7004 	addi	r2,r2,29120
   287b8:	11000017 	ldw	r4,0(r2)
   287bc:	20c0012e 	bgeu	r4,r3,287c4 <_malloc_r+0x474>
   287c0:	10c00015 	stw	r3,0(r2)
   287c4:	008000f4 	movhi	r2,3
   287c8:	109c6f04 	addi	r2,r2,29116
   287cc:	11000017 	ldw	r4,0(r2)
   287d0:	9c000217 	ldw	r16,8(r19)
   287d4:	20c0012e 	bgeu	r4,r3,287dc <_malloc_r+0x48c>
   287d8:	10c00015 	stw	r3,0(r2)
   287dc:	80c00117 	ldw	r3,4(r16)
   287e0:	00bfff04 	movi	r2,-4
   287e4:	1886703a 	and	r3,r3,r2
   287e8:	1c45c83a 	sub	r2,r3,r17
   287ec:	1c400236 	bltu	r3,r17,287f8 <_malloc_r+0x4a8>
   287f0:	00c003c4 	movi	r3,15
   287f4:	18800416 	blt	r3,r2,28808 <_malloc_r+0x4b8>
   287f8:	9009883a 	mov	r4,r18
   287fc:	00316e00 	call	316e0 <__malloc_unlock>
   28800:	0005883a 	mov	r2,zero
   28804:	003f7b06 	br	285f4 <_malloc_r+0x2a4>
   28808:	88c00054 	ori	r3,r17,1
   2880c:	80c00115 	stw	r3,4(r16)
   28810:	8463883a 	add	r17,r16,r17
   28814:	10800054 	ori	r2,r2,1
   28818:	9c400215 	stw	r17,8(r19)
   2881c:	88800115 	stw	r2,4(r17)
   28820:	9009883a 	mov	r4,r18
   28824:	00316e00 	call	316e0 <__malloc_unlock>
   28828:	80800204 	addi	r2,r16,8
   2882c:	003f7106 	br	285f4 <_malloc_r+0x2a4>
   28830:	00c00504 	movi	r3,20
   28834:	18804a2e 	bgeu	r3,r2,28960 <_malloc_r+0x610>
   28838:	00c01504 	movi	r3,84
   2883c:	18806e36 	bltu	r3,r2,289f8 <_malloc_r+0x6a8>
   28840:	8804d33a 	srli	r2,r17,12
   28844:	12001bc4 	addi	r8,r2,111
   28848:	11c01b84 	addi	r7,r2,110
   2884c:	4209883a 	add	r4,r8,r8
   28850:	003edd06 	br	283c8 <_malloc_r+0x78>
   28854:	3804d27a 	srli	r2,r7,9
   28858:	00c00104 	movi	r3,4
   2885c:	1880442e 	bgeu	r3,r2,28970 <_malloc_r+0x620>
   28860:	00c00504 	movi	r3,20
   28864:	18808136 	bltu	r3,r2,28a6c <_malloc_r+0x71c>
   28868:	11401704 	addi	r5,r2,92
   2886c:	10c016c4 	addi	r3,r2,91
   28870:	294b883a 	add	r5,r5,r5
   28874:	294b883a 	add	r5,r5,r5
   28878:	294b883a 	add	r5,r5,r5
   2887c:	994b883a 	add	r5,r19,r5
   28880:	28800017 	ldw	r2,0(r5)
   28884:	018000f4 	movhi	r6,3
   28888:	297ffe04 	addi	r5,r5,-8
   2888c:	31901904 	addi	r6,r6,16484
   28890:	28806526 	beq	r5,r2,28a28 <_malloc_r+0x6d8>
   28894:	01bfff04 	movi	r6,-4
   28898:	10c00117 	ldw	r3,4(r2)
   2889c:	1986703a 	and	r3,r3,r6
   288a0:	38c0022e 	bgeu	r7,r3,288ac <_malloc_r+0x55c>
   288a4:	10800217 	ldw	r2,8(r2)
   288a8:	28bffb1e 	bne	r5,r2,28898 <_malloc_r+0x548>
   288ac:	11400317 	ldw	r5,12(r2)
   288b0:	98c00117 	ldw	r3,4(r19)
   288b4:	81400315 	stw	r5,12(r16)
   288b8:	80800215 	stw	r2,8(r16)
   288bc:	2c000215 	stw	r16,8(r5)
   288c0:	14000315 	stw	r16,12(r2)
   288c4:	003ef806 	br	284a8 <_malloc_r+0x158>
   288c8:	88c00054 	ori	r3,r17,1
   288cc:	80c00115 	stw	r3,4(r16)
   288d0:	8463883a 	add	r17,r16,r17
   288d4:	34400515 	stw	r17,20(r6)
   288d8:	34400415 	stw	r17,16(r6)
   288dc:	10c00054 	ori	r3,r2,1
   288e0:	8a000315 	stw	r8,12(r17)
   288e4:	8a000215 	stw	r8,8(r17)
   288e8:	88c00115 	stw	r3,4(r17)
   288ec:	88a3883a 	add	r17,r17,r2
   288f0:	88800015 	stw	r2,0(r17)
   288f4:	9009883a 	mov	r4,r18
   288f8:	00316e00 	call	316e0 <__malloc_unlock>
   288fc:	80800204 	addi	r2,r16,8
   28900:	003f3c06 	br	285f4 <_malloc_r+0x2a4>
   28904:	30c00117 	ldw	r3,4(r6)
   28908:	003ee706 	br	284a8 <_malloc_r+0x158>
   2890c:	5ac00044 	addi	r11,r11,1
   28910:	588000cc 	andi	r2,r11,3
   28914:	31800204 	addi	r6,r6,8
   28918:	103efd1e 	bne	r2,zero,28510 <_malloc_r+0x1c0>
   2891c:	00002406 	br	289b0 <_malloc_r+0x660>
   28920:	14000317 	ldw	r16,12(r2)
   28924:	143f251e 	bne	r2,r16,285bc <_malloc_r+0x26c>
   28928:	21000084 	addi	r4,r4,2
   2892c:	003ebc06 	br	28420 <_malloc_r+0xd0>
   28930:	8085883a 	add	r2,r16,r2
   28934:	10c00117 	ldw	r3,4(r2)
   28938:	81000317 	ldw	r4,12(r16)
   2893c:	81400217 	ldw	r5,8(r16)
   28940:	18c00054 	ori	r3,r3,1
   28944:	10c00115 	stw	r3,4(r2)
   28948:	29000315 	stw	r4,12(r5)
   2894c:	21400215 	stw	r5,8(r4)
   28950:	9009883a 	mov	r4,r18
   28954:	00316e00 	call	316e0 <__malloc_unlock>
   28958:	80800204 	addi	r2,r16,8
   2895c:	003f2506 	br	285f4 <_malloc_r+0x2a4>
   28960:	12001704 	addi	r8,r2,92
   28964:	11c016c4 	addi	r7,r2,91
   28968:	4209883a 	add	r4,r8,r8
   2896c:	003e9606 	br	283c8 <_malloc_r+0x78>
   28970:	3804d1ba 	srli	r2,r7,6
   28974:	11400e44 	addi	r5,r2,57
   28978:	10c00e04 	addi	r3,r2,56
   2897c:	294b883a 	add	r5,r5,r5
   28980:	003fbc06 	br	28874 <_malloc_r+0x524>
   28984:	84ff5926 	beq	r16,r19,286ec <_malloc_r+0x39c>
   28988:	008000f4 	movhi	r2,3
   2898c:	10901904 	addi	r2,r2,16484
   28990:	14000217 	ldw	r16,8(r2)
   28994:	00bfff04 	movi	r2,-4
   28998:	80c00117 	ldw	r3,4(r16)
   2899c:	1886703a 	and	r3,r3,r2
   289a0:	003f9106 	br	287e8 <_malloc_r+0x498>
   289a4:	60800217 	ldw	r2,8(r12)
   289a8:	213fffc4 	addi	r4,r4,-1
   289ac:	1300651e 	bne	r2,r12,28b44 <_malloc_r+0x7f4>
   289b0:	208000cc 	andi	r2,r4,3
   289b4:	633ffe04 	addi	r12,r12,-8
   289b8:	103ffa1e 	bne	r2,zero,289a4 <_malloc_r+0x654>
   289bc:	98800117 	ldw	r2,4(r19)
   289c0:	0146303a 	nor	r3,zero,r5
   289c4:	1884703a 	and	r2,r3,r2
   289c8:	98800115 	stw	r2,4(r19)
   289cc:	294b883a 	add	r5,r5,r5
   289d0:	117f2836 	bltu	r2,r5,28674 <_malloc_r+0x324>
   289d4:	283f2726 	beq	r5,zero,28674 <_malloc_r+0x324>
   289d8:	2886703a 	and	r3,r5,r2
   289dc:	5809883a 	mov	r4,r11
   289e0:	183ec31e 	bne	r3,zero,284f0 <_malloc_r+0x1a0>
   289e4:	294b883a 	add	r5,r5,r5
   289e8:	2886703a 	and	r3,r5,r2
   289ec:	21000104 	addi	r4,r4,4
   289f0:	183ffc26 	beq	r3,zero,289e4 <_malloc_r+0x694>
   289f4:	003ebe06 	br	284f0 <_malloc_r+0x1a0>
   289f8:	00c05504 	movi	r3,340
   289fc:	18801236 	bltu	r3,r2,28a48 <_malloc_r+0x6f8>
   28a00:	8804d3fa 	srli	r2,r17,15
   28a04:	12001e04 	addi	r8,r2,120
   28a08:	11c01dc4 	addi	r7,r2,119
   28a0c:	4209883a 	add	r4,r8,r8
   28a10:	003e6d06 	br	283c8 <_malloc_r+0x78>
   28a14:	00c40004 	movi	r3,4096
   28a18:	003f4606 	br	28734 <_malloc_r+0x3e4>
   28a1c:	00800044 	movi	r2,1
   28a20:	a0800115 	stw	r2,4(r20)
   28a24:	003f7406 	br	287f8 <_malloc_r+0x4a8>
   28a28:	1805d0ba 	srai	r2,r3,2
   28a2c:	01c00044 	movi	r7,1
   28a30:	30c00117 	ldw	r3,4(r6)
   28a34:	388e983a 	sll	r7,r7,r2
   28a38:	2805883a 	mov	r2,r5
   28a3c:	38c6b03a 	or	r3,r7,r3
   28a40:	30c00115 	stw	r3,4(r6)
   28a44:	003f9b06 	br	288b4 <_malloc_r+0x564>
   28a48:	00c15504 	movi	r3,1364
   28a4c:	18801a36 	bltu	r3,r2,28ab8 <_malloc_r+0x768>
   28a50:	8804d4ba 	srli	r2,r17,18
   28a54:	12001f44 	addi	r8,r2,125
   28a58:	11c01f04 	addi	r7,r2,124
   28a5c:	4209883a 	add	r4,r8,r8
   28a60:	003e5906 	br	283c8 <_malloc_r+0x78>
   28a64:	ad400404 	addi	r21,r21,16
   28a68:	003f1706 	br	286c8 <_malloc_r+0x378>
   28a6c:	00c01504 	movi	r3,84
   28a70:	18802336 	bltu	r3,r2,28b00 <_malloc_r+0x7b0>
   28a74:	3804d33a 	srli	r2,r7,12
   28a78:	11401bc4 	addi	r5,r2,111
   28a7c:	10c01b84 	addi	r3,r2,110
   28a80:	294b883a 	add	r5,r5,r5
   28a84:	003f7b06 	br	28874 <_malloc_r+0x524>
   28a88:	9c000217 	ldw	r16,8(r19)
   28a8c:	00bfff04 	movi	r2,-4
   28a90:	80c00117 	ldw	r3,4(r16)
   28a94:	1886703a 	and	r3,r3,r2
   28a98:	003f5306 	br	287e8 <_malloc_r+0x498>
   28a9c:	3083ffcc 	andi	r2,r6,4095
   28aa0:	103f181e 	bne	r2,zero,28704 <_malloc_r+0x3b4>
   28aa4:	99000217 	ldw	r4,8(r19)
   28aa8:	b545883a 	add	r2,r22,r21
   28aac:	10800054 	ori	r2,r2,1
   28ab0:	20800115 	stw	r2,4(r4)
   28ab4:	003f3e06 	br	287b0 <_malloc_r+0x460>
   28ab8:	01003f84 	movi	r4,254
   28abc:	02001fc4 	movi	r8,127
   28ac0:	01c01f84 	movi	r7,126
   28ac4:	003e4006 	br	283c8 <_malloc_r+0x78>
   28ac8:	008000f4 	movhi	r2,3
   28acc:	1095a204 	addi	r2,r2,22152
   28ad0:	15000015 	stw	r20,0(r2)
   28ad4:	003f1106 	br	2871c <_malloc_r+0x3cc>
   28ad8:	00800044 	movi	r2,1
   28adc:	002b883a 	mov	r21,zero
   28ae0:	003f1f06 	br	28760 <_malloc_r+0x410>
   28ae4:	81400204 	addi	r5,r16,8
   28ae8:	9009883a 	mov	r4,r18
   28aec:	00277640 	call	27764 <_free_r>
   28af0:	008000f4 	movhi	r2,3
   28af4:	109c7a04 	addi	r2,r2,29160
   28af8:	10c00017 	ldw	r3,0(r2)
   28afc:	003f2c06 	br	287b0 <_malloc_r+0x460>
   28b00:	00c05504 	movi	r3,340
   28b04:	18800536 	bltu	r3,r2,28b1c <_malloc_r+0x7cc>
   28b08:	3804d3fa 	srli	r2,r7,15
   28b0c:	11401e04 	addi	r5,r2,120
   28b10:	10c01dc4 	addi	r3,r2,119
   28b14:	294b883a 	add	r5,r5,r5
   28b18:	003f5606 	br	28874 <_malloc_r+0x524>
   28b1c:	00c15504 	movi	r3,1364
   28b20:	18800536 	bltu	r3,r2,28b38 <_malloc_r+0x7e8>
   28b24:	3804d4ba 	srli	r2,r7,18
   28b28:	11401f44 	addi	r5,r2,125
   28b2c:	10c01f04 	addi	r3,r2,124
   28b30:	294b883a 	add	r5,r5,r5
   28b34:	003f4f06 	br	28874 <_malloc_r+0x524>
   28b38:	01403f84 	movi	r5,254
   28b3c:	00c01f84 	movi	r3,126
   28b40:	003f4c06 	br	28874 <_malloc_r+0x524>
   28b44:	98800117 	ldw	r2,4(r19)
   28b48:	003fa006 	br	289cc <_malloc_r+0x67c>
   28b4c:	8808d0fa 	srli	r4,r17,3
   28b50:	20800044 	addi	r2,r4,1
   28b54:	1085883a 	add	r2,r2,r2
   28b58:	003e9006 	br	2859c <_malloc_r+0x24c>

00028b5c <memchr>:
   28b5c:	208000cc 	andi	r2,r4,3
   28b60:	280f883a 	mov	r7,r5
   28b64:	10003426 	beq	r2,zero,28c38 <memchr+0xdc>
   28b68:	30bfffc4 	addi	r2,r6,-1
   28b6c:	30001a26 	beq	r6,zero,28bd8 <memchr+0x7c>
   28b70:	20c00003 	ldbu	r3,0(r4)
   28b74:	29803fcc 	andi	r6,r5,255
   28b78:	30c0051e 	bne	r6,r3,28b90 <memchr+0x34>
   28b7c:	00001806 	br	28be0 <memchr+0x84>
   28b80:	10001526 	beq	r2,zero,28bd8 <memchr+0x7c>
   28b84:	20c00003 	ldbu	r3,0(r4)
   28b88:	10bfffc4 	addi	r2,r2,-1
   28b8c:	30c01426 	beq	r6,r3,28be0 <memchr+0x84>
   28b90:	21000044 	addi	r4,r4,1
   28b94:	20c000cc 	andi	r3,r4,3
   28b98:	183ff91e 	bne	r3,zero,28b80 <memchr+0x24>
   28b9c:	020000c4 	movi	r8,3
   28ba0:	40801136 	bltu	r8,r2,28be8 <memchr+0x8c>
   28ba4:	10000c26 	beq	r2,zero,28bd8 <memchr+0x7c>
   28ba8:	20c00003 	ldbu	r3,0(r4)
   28bac:	29403fcc 	andi	r5,r5,255
   28bb0:	28c00b26 	beq	r5,r3,28be0 <memchr+0x84>
   28bb4:	20c00044 	addi	r3,r4,1
   28bb8:	39803fcc 	andi	r6,r7,255
   28bbc:	2089883a 	add	r4,r4,r2
   28bc0:	00000306 	br	28bd0 <memchr+0x74>
   28bc4:	18c00044 	addi	r3,r3,1
   28bc8:	197fffc3 	ldbu	r5,-1(r3)
   28bcc:	31400526 	beq	r6,r5,28be4 <memchr+0x88>
   28bd0:	1805883a 	mov	r2,r3
   28bd4:	20fffb1e 	bne	r4,r3,28bc4 <memchr+0x68>
   28bd8:	0005883a 	mov	r2,zero
   28bdc:	f800283a 	ret
   28be0:	2005883a 	mov	r2,r4
   28be4:	f800283a 	ret
   28be8:	28c03fcc 	andi	r3,r5,255
   28bec:	1812923a 	slli	r9,r3,8
   28bf0:	02ffbff4 	movhi	r11,65279
   28bf4:	02a02074 	movhi	r10,32897
   28bf8:	48d2b03a 	or	r9,r9,r3
   28bfc:	4806943a 	slli	r3,r9,16
   28c00:	5affbfc4 	addi	r11,r11,-257
   28c04:	52a02004 	addi	r10,r10,-32640
   28c08:	48d2b03a 	or	r9,r9,r3
   28c0c:	20c00017 	ldw	r3,0(r4)
   28c10:	48c6f03a 	xor	r3,r9,r3
   28c14:	1acd883a 	add	r6,r3,r11
   28c18:	00c6303a 	nor	r3,zero,r3
   28c1c:	30c6703a 	and	r3,r6,r3
   28c20:	1a86703a 	and	r3,r3,r10
   28c24:	183fe01e 	bne	r3,zero,28ba8 <memchr+0x4c>
   28c28:	10bfff04 	addi	r2,r2,-4
   28c2c:	21000104 	addi	r4,r4,4
   28c30:	40bff636 	bltu	r8,r2,28c0c <memchr+0xb0>
   28c34:	003fdb06 	br	28ba4 <memchr+0x48>
   28c38:	3005883a 	mov	r2,r6
   28c3c:	003fd706 	br	28b9c <memchr+0x40>

00028c40 <memcpy>:
   28c40:	defffd04 	addi	sp,sp,-12
   28c44:	dfc00215 	stw	ra,8(sp)
   28c48:	dc400115 	stw	r17,4(sp)
   28c4c:	dc000015 	stw	r16,0(sp)
   28c50:	00c003c4 	movi	r3,15
   28c54:	2005883a 	mov	r2,r4
   28c58:	1980452e 	bgeu	r3,r6,28d70 <memcpy+0x130>
   28c5c:	2906b03a 	or	r3,r5,r4
   28c60:	18c000cc 	andi	r3,r3,3
   28c64:	1800441e 	bne	r3,zero,28d78 <memcpy+0x138>
   28c68:	347ffc04 	addi	r17,r6,-16
   28c6c:	8822d13a 	srli	r17,r17,4
   28c70:	28c00104 	addi	r3,r5,4
   28c74:	23400104 	addi	r13,r4,4
   28c78:	8820913a 	slli	r16,r17,4
   28c7c:	2b000204 	addi	r12,r5,8
   28c80:	22c00204 	addi	r11,r4,8
   28c84:	84000504 	addi	r16,r16,20
   28c88:	2a800304 	addi	r10,r5,12
   28c8c:	22400304 	addi	r9,r4,12
   28c90:	2c21883a 	add	r16,r5,r16
   28c94:	2811883a 	mov	r8,r5
   28c98:	200f883a 	mov	r7,r4
   28c9c:	41000017 	ldw	r4,0(r8)
   28ca0:	1fc00017 	ldw	ra,0(r3)
   28ca4:	63c00017 	ldw	r15,0(r12)
   28ca8:	39000015 	stw	r4,0(r7)
   28cac:	53800017 	ldw	r14,0(r10)
   28cb0:	6fc00015 	stw	ra,0(r13)
   28cb4:	5bc00015 	stw	r15,0(r11)
   28cb8:	4b800015 	stw	r14,0(r9)
   28cbc:	18c00404 	addi	r3,r3,16
   28cc0:	39c00404 	addi	r7,r7,16
   28cc4:	42000404 	addi	r8,r8,16
   28cc8:	6b400404 	addi	r13,r13,16
   28ccc:	63000404 	addi	r12,r12,16
   28cd0:	5ac00404 	addi	r11,r11,16
   28cd4:	52800404 	addi	r10,r10,16
   28cd8:	4a400404 	addi	r9,r9,16
   28cdc:	1c3fef1e 	bne	r3,r16,28c9c <memcpy+0x5c>
   28ce0:	89c00044 	addi	r7,r17,1
   28ce4:	380e913a 	slli	r7,r7,4
   28ce8:	310003cc 	andi	r4,r6,15
   28cec:	02c000c4 	movi	r11,3
   28cf0:	11c7883a 	add	r3,r2,r7
   28cf4:	29cb883a 	add	r5,r5,r7
   28cf8:	5900212e 	bgeu	r11,r4,28d80 <memcpy+0x140>
   28cfc:	1813883a 	mov	r9,r3
   28d00:	2811883a 	mov	r8,r5
   28d04:	200f883a 	mov	r7,r4
   28d08:	42800017 	ldw	r10,0(r8)
   28d0c:	4a400104 	addi	r9,r9,4
   28d10:	39ffff04 	addi	r7,r7,-4
   28d14:	4abfff15 	stw	r10,-4(r9)
   28d18:	42000104 	addi	r8,r8,4
   28d1c:	59fffa36 	bltu	r11,r7,28d08 <memcpy+0xc8>
   28d20:	213fff04 	addi	r4,r4,-4
   28d24:	2008d0ba 	srli	r4,r4,2
   28d28:	318000cc 	andi	r6,r6,3
   28d2c:	21000044 	addi	r4,r4,1
   28d30:	2109883a 	add	r4,r4,r4
   28d34:	2109883a 	add	r4,r4,r4
   28d38:	1907883a 	add	r3,r3,r4
   28d3c:	290b883a 	add	r5,r5,r4
   28d40:	30000626 	beq	r6,zero,28d5c <memcpy+0x11c>
   28d44:	198d883a 	add	r6,r3,r6
   28d48:	29c00003 	ldbu	r7,0(r5)
   28d4c:	18c00044 	addi	r3,r3,1
   28d50:	29400044 	addi	r5,r5,1
   28d54:	19ffffc5 	stb	r7,-1(r3)
   28d58:	19bffb1e 	bne	r3,r6,28d48 <memcpy+0x108>
   28d5c:	dfc00217 	ldw	ra,8(sp)
   28d60:	dc400117 	ldw	r17,4(sp)
   28d64:	dc000017 	ldw	r16,0(sp)
   28d68:	dec00304 	addi	sp,sp,12
   28d6c:	f800283a 	ret
   28d70:	2007883a 	mov	r3,r4
   28d74:	003ff206 	br	28d40 <memcpy+0x100>
   28d78:	2007883a 	mov	r3,r4
   28d7c:	003ff106 	br	28d44 <memcpy+0x104>
   28d80:	200d883a 	mov	r6,r4
   28d84:	003fee06 	br	28d40 <memcpy+0x100>

00028d88 <memmove>:
   28d88:	2005883a 	mov	r2,r4
   28d8c:	29000b2e 	bgeu	r5,r4,28dbc <memmove+0x34>
   28d90:	298f883a 	add	r7,r5,r6
   28d94:	21c0092e 	bgeu	r4,r7,28dbc <memmove+0x34>
   28d98:	2187883a 	add	r3,r4,r6
   28d9c:	198bc83a 	sub	r5,r3,r6
   28da0:	30004826 	beq	r6,zero,28ec4 <memmove+0x13c>
   28da4:	39ffffc4 	addi	r7,r7,-1
   28da8:	39000003 	ldbu	r4,0(r7)
   28dac:	18ffffc4 	addi	r3,r3,-1
   28db0:	19000005 	stb	r4,0(r3)
   28db4:	28fffb1e 	bne	r5,r3,28da4 <memmove+0x1c>
   28db8:	f800283a 	ret
   28dbc:	00c003c4 	movi	r3,15
   28dc0:	1980412e 	bgeu	r3,r6,28ec8 <memmove+0x140>
   28dc4:	2886b03a 	or	r3,r5,r2
   28dc8:	18c000cc 	andi	r3,r3,3
   28dcc:	1800401e 	bne	r3,zero,28ed0 <memmove+0x148>
   28dd0:	33fffc04 	addi	r15,r6,-16
   28dd4:	781ed13a 	srli	r15,r15,4
   28dd8:	28c00104 	addi	r3,r5,4
   28ddc:	13400104 	addi	r13,r2,4
   28de0:	781c913a 	slli	r14,r15,4
   28de4:	2b000204 	addi	r12,r5,8
   28de8:	12c00204 	addi	r11,r2,8
   28dec:	73800504 	addi	r14,r14,20
   28df0:	2a800304 	addi	r10,r5,12
   28df4:	12400304 	addi	r9,r2,12
   28df8:	2b9d883a 	add	r14,r5,r14
   28dfc:	2811883a 	mov	r8,r5
   28e00:	100f883a 	mov	r7,r2
   28e04:	41000017 	ldw	r4,0(r8)
   28e08:	39c00404 	addi	r7,r7,16
   28e0c:	18c00404 	addi	r3,r3,16
   28e10:	393ffc15 	stw	r4,-16(r7)
   28e14:	193ffc17 	ldw	r4,-16(r3)
   28e18:	6b400404 	addi	r13,r13,16
   28e1c:	5ac00404 	addi	r11,r11,16
   28e20:	693ffc15 	stw	r4,-16(r13)
   28e24:	61000017 	ldw	r4,0(r12)
   28e28:	4a400404 	addi	r9,r9,16
   28e2c:	42000404 	addi	r8,r8,16
   28e30:	593ffc15 	stw	r4,-16(r11)
   28e34:	51000017 	ldw	r4,0(r10)
   28e38:	63000404 	addi	r12,r12,16
   28e3c:	52800404 	addi	r10,r10,16
   28e40:	493ffc15 	stw	r4,-16(r9)
   28e44:	1bbfef1e 	bne	r3,r14,28e04 <memmove+0x7c>
   28e48:	79000044 	addi	r4,r15,1
   28e4c:	2008913a 	slli	r4,r4,4
   28e50:	328003cc 	andi	r10,r6,15
   28e54:	02c000c4 	movi	r11,3
   28e58:	1107883a 	add	r3,r2,r4
   28e5c:	290b883a 	add	r5,r5,r4
   28e60:	5a801e2e 	bgeu	r11,r10,28edc <memmove+0x154>
   28e64:	1813883a 	mov	r9,r3
   28e68:	2811883a 	mov	r8,r5
   28e6c:	500f883a 	mov	r7,r10
   28e70:	41000017 	ldw	r4,0(r8)
   28e74:	4a400104 	addi	r9,r9,4
   28e78:	39ffff04 	addi	r7,r7,-4
   28e7c:	493fff15 	stw	r4,-4(r9)
   28e80:	42000104 	addi	r8,r8,4
   28e84:	59fffa36 	bltu	r11,r7,28e70 <memmove+0xe8>
   28e88:	513fff04 	addi	r4,r10,-4
   28e8c:	2008d0ba 	srli	r4,r4,2
   28e90:	318000cc 	andi	r6,r6,3
   28e94:	21000044 	addi	r4,r4,1
   28e98:	2109883a 	add	r4,r4,r4
   28e9c:	2109883a 	add	r4,r4,r4
   28ea0:	1907883a 	add	r3,r3,r4
   28ea4:	290b883a 	add	r5,r5,r4
   28ea8:	30000b26 	beq	r6,zero,28ed8 <memmove+0x150>
   28eac:	198d883a 	add	r6,r3,r6
   28eb0:	29c00003 	ldbu	r7,0(r5)
   28eb4:	18c00044 	addi	r3,r3,1
   28eb8:	29400044 	addi	r5,r5,1
   28ebc:	19ffffc5 	stb	r7,-1(r3)
   28ec0:	19bffb1e 	bne	r3,r6,28eb0 <memmove+0x128>
   28ec4:	f800283a 	ret
   28ec8:	1007883a 	mov	r3,r2
   28ecc:	003ff606 	br	28ea8 <memmove+0x120>
   28ed0:	1007883a 	mov	r3,r2
   28ed4:	003ff506 	br	28eac <memmove+0x124>
   28ed8:	f800283a 	ret
   28edc:	500d883a 	mov	r6,r10
   28ee0:	003ff106 	br	28ea8 <memmove+0x120>

00028ee4 <memset>:
   28ee4:	20c000cc 	andi	r3,r4,3
   28ee8:	2005883a 	mov	r2,r4
   28eec:	18004426 	beq	r3,zero,29000 <memset+0x11c>
   28ef0:	31ffffc4 	addi	r7,r6,-1
   28ef4:	30004026 	beq	r6,zero,28ff8 <memset+0x114>
   28ef8:	2813883a 	mov	r9,r5
   28efc:	200d883a 	mov	r6,r4
   28f00:	2007883a 	mov	r3,r4
   28f04:	00000406 	br	28f18 <memset+0x34>
   28f08:	3a3fffc4 	addi	r8,r7,-1
   28f0c:	31800044 	addi	r6,r6,1
   28f10:	38003926 	beq	r7,zero,28ff8 <memset+0x114>
   28f14:	400f883a 	mov	r7,r8
   28f18:	18c00044 	addi	r3,r3,1
   28f1c:	32400005 	stb	r9,0(r6)
   28f20:	1a0000cc 	andi	r8,r3,3
   28f24:	403ff81e 	bne	r8,zero,28f08 <memset+0x24>
   28f28:	010000c4 	movi	r4,3
   28f2c:	21c02d2e 	bgeu	r4,r7,28fe4 <memset+0x100>
   28f30:	29003fcc 	andi	r4,r5,255
   28f34:	200c923a 	slli	r6,r4,8
   28f38:	3108b03a 	or	r4,r6,r4
   28f3c:	200c943a 	slli	r6,r4,16
   28f40:	218cb03a 	or	r6,r4,r6
   28f44:	010003c4 	movi	r4,15
   28f48:	21c0182e 	bgeu	r4,r7,28fac <memset+0xc8>
   28f4c:	3b3ffc04 	addi	r12,r7,-16
   28f50:	6018d13a 	srli	r12,r12,4
   28f54:	1a000104 	addi	r8,r3,4
   28f58:	1ac00204 	addi	r11,r3,8
   28f5c:	6008913a 	slli	r4,r12,4
   28f60:	1a800304 	addi	r10,r3,12
   28f64:	1813883a 	mov	r9,r3
   28f68:	21000504 	addi	r4,r4,20
   28f6c:	1909883a 	add	r4,r3,r4
   28f70:	49800015 	stw	r6,0(r9)
   28f74:	41800015 	stw	r6,0(r8)
   28f78:	59800015 	stw	r6,0(r11)
   28f7c:	51800015 	stw	r6,0(r10)
   28f80:	42000404 	addi	r8,r8,16
   28f84:	4a400404 	addi	r9,r9,16
   28f88:	5ac00404 	addi	r11,r11,16
   28f8c:	52800404 	addi	r10,r10,16
   28f90:	413ff71e 	bne	r8,r4,28f70 <memset+0x8c>
   28f94:	63000044 	addi	r12,r12,1
   28f98:	6018913a 	slli	r12,r12,4
   28f9c:	39c003cc 	andi	r7,r7,15
   28fa0:	010000c4 	movi	r4,3
   28fa4:	1b07883a 	add	r3,r3,r12
   28fa8:	21c00e2e 	bgeu	r4,r7,28fe4 <memset+0x100>
   28fac:	1813883a 	mov	r9,r3
   28fb0:	3811883a 	mov	r8,r7
   28fb4:	010000c4 	movi	r4,3
   28fb8:	49800015 	stw	r6,0(r9)
   28fbc:	423fff04 	addi	r8,r8,-4
   28fc0:	4a400104 	addi	r9,r9,4
   28fc4:	223ffc36 	bltu	r4,r8,28fb8 <memset+0xd4>
   28fc8:	393fff04 	addi	r4,r7,-4
   28fcc:	2008d0ba 	srli	r4,r4,2
   28fd0:	39c000cc 	andi	r7,r7,3
   28fd4:	21000044 	addi	r4,r4,1
   28fd8:	2109883a 	add	r4,r4,r4
   28fdc:	2109883a 	add	r4,r4,r4
   28fe0:	1907883a 	add	r3,r3,r4
   28fe4:	38000526 	beq	r7,zero,28ffc <memset+0x118>
   28fe8:	19cf883a 	add	r7,r3,r7
   28fec:	19400005 	stb	r5,0(r3)
   28ff0:	18c00044 	addi	r3,r3,1
   28ff4:	38fffd1e 	bne	r7,r3,28fec <memset+0x108>
   28ff8:	f800283a 	ret
   28ffc:	f800283a 	ret
   29000:	2007883a 	mov	r3,r4
   29004:	300f883a 	mov	r7,r6
   29008:	003fc706 	br	28f28 <memset+0x44>

0002900c <_Balloc>:
   2900c:	20801317 	ldw	r2,76(r4)
   29010:	defffc04 	addi	sp,sp,-16
   29014:	dc400115 	stw	r17,4(sp)
   29018:	dc000015 	stw	r16,0(sp)
   2901c:	dfc00315 	stw	ra,12(sp)
   29020:	dc800215 	stw	r18,8(sp)
   29024:	2023883a 	mov	r17,r4
   29028:	2821883a 	mov	r16,r5
   2902c:	10000f26 	beq	r2,zero,2906c <_Balloc+0x60>
   29030:	8407883a 	add	r3,r16,r16
   29034:	18c7883a 	add	r3,r3,r3
   29038:	10c7883a 	add	r3,r2,r3
   2903c:	18800017 	ldw	r2,0(r3)
   29040:	10001126 	beq	r2,zero,29088 <_Balloc+0x7c>
   29044:	11000017 	ldw	r4,0(r2)
   29048:	19000015 	stw	r4,0(r3)
   2904c:	10000415 	stw	zero,16(r2)
   29050:	10000315 	stw	zero,12(r2)
   29054:	dfc00317 	ldw	ra,12(sp)
   29058:	dc800217 	ldw	r18,8(sp)
   2905c:	dc400117 	ldw	r17,4(sp)
   29060:	dc000017 	ldw	r16,0(sp)
   29064:	dec00404 	addi	sp,sp,16
   29068:	f800283a 	ret
   2906c:	01800844 	movi	r6,33
   29070:	01400104 	movi	r5,4
   29074:	002d3540 	call	2d354 <_calloc_r>
   29078:	88801315 	stw	r2,76(r17)
   2907c:	103fec1e 	bne	r2,zero,29030 <_Balloc+0x24>
   29080:	0005883a 	mov	r2,zero
   29084:	003ff306 	br	29054 <_Balloc+0x48>
   29088:	01400044 	movi	r5,1
   2908c:	2c24983a 	sll	r18,r5,r16
   29090:	8809883a 	mov	r4,r17
   29094:	91800144 	addi	r6,r18,5
   29098:	318d883a 	add	r6,r6,r6
   2909c:	318d883a 	add	r6,r6,r6
   290a0:	002d3540 	call	2d354 <_calloc_r>
   290a4:	103ff626 	beq	r2,zero,29080 <_Balloc+0x74>
   290a8:	14000115 	stw	r16,4(r2)
   290ac:	14800215 	stw	r18,8(r2)
   290b0:	003fe606 	br	2904c <_Balloc+0x40>

000290b4 <_Bfree>:
   290b4:	28000826 	beq	r5,zero,290d8 <_Bfree+0x24>
   290b8:	28c00117 	ldw	r3,4(r5)
   290bc:	20801317 	ldw	r2,76(r4)
   290c0:	18c7883a 	add	r3,r3,r3
   290c4:	18c7883a 	add	r3,r3,r3
   290c8:	10c5883a 	add	r2,r2,r3
   290cc:	10c00017 	ldw	r3,0(r2)
   290d0:	28c00015 	stw	r3,0(r5)
   290d4:	11400015 	stw	r5,0(r2)
   290d8:	f800283a 	ret

000290dc <__multadd>:
   290dc:	defffa04 	addi	sp,sp,-24
   290e0:	dc800315 	stw	r18,12(sp)
   290e4:	dc400215 	stw	r17,8(sp)
   290e8:	dc000115 	stw	r16,4(sp)
   290ec:	2823883a 	mov	r17,r5
   290f0:	2c000417 	ldw	r16,16(r5)
   290f4:	dfc00515 	stw	ra,20(sp)
   290f8:	dcc00415 	stw	r19,16(sp)
   290fc:	2025883a 	mov	r18,r4
   29100:	29400504 	addi	r5,r5,20
   29104:	0011883a 	mov	r8,zero
   29108:	28c00017 	ldw	r3,0(r5)
   2910c:	29400104 	addi	r5,r5,4
   29110:	42000044 	addi	r8,r8,1
   29114:	18bfffcc 	andi	r2,r3,65535
   29118:	1185383a 	mul	r2,r2,r6
   2911c:	1806d43a 	srli	r3,r3,16
   29120:	11cf883a 	add	r7,r2,r7
   29124:	3808d43a 	srli	r4,r7,16
   29128:	1987383a 	mul	r3,r3,r6
   2912c:	38bfffcc 	andi	r2,r7,65535
   29130:	1907883a 	add	r3,r3,r4
   29134:	1808943a 	slli	r4,r3,16
   29138:	180ed43a 	srli	r7,r3,16
   2913c:	2085883a 	add	r2,r4,r2
   29140:	28bfff15 	stw	r2,-4(r5)
   29144:	443ff016 	blt	r8,r16,29108 <__multadd+0x2c>
   29148:	38000926 	beq	r7,zero,29170 <__multadd+0x94>
   2914c:	88800217 	ldw	r2,8(r17)
   29150:	80800f0e 	bge	r16,r2,29190 <__multadd+0xb4>
   29154:	80800144 	addi	r2,r16,5
   29158:	1085883a 	add	r2,r2,r2
   2915c:	1085883a 	add	r2,r2,r2
   29160:	8885883a 	add	r2,r17,r2
   29164:	11c00015 	stw	r7,0(r2)
   29168:	84000044 	addi	r16,r16,1
   2916c:	8c000415 	stw	r16,16(r17)
   29170:	8805883a 	mov	r2,r17
   29174:	dfc00517 	ldw	ra,20(sp)
   29178:	dcc00417 	ldw	r19,16(sp)
   2917c:	dc800317 	ldw	r18,12(sp)
   29180:	dc400217 	ldw	r17,8(sp)
   29184:	dc000117 	ldw	r16,4(sp)
   29188:	dec00604 	addi	sp,sp,24
   2918c:	f800283a 	ret
   29190:	89400117 	ldw	r5,4(r17)
   29194:	9009883a 	mov	r4,r18
   29198:	d9c00015 	stw	r7,0(sp)
   2919c:	29400044 	addi	r5,r5,1
   291a0:	002900c0 	call	2900c <_Balloc>
   291a4:	89800417 	ldw	r6,16(r17)
   291a8:	89400304 	addi	r5,r17,12
   291ac:	11000304 	addi	r4,r2,12
   291b0:	31800084 	addi	r6,r6,2
   291b4:	318d883a 	add	r6,r6,r6
   291b8:	318d883a 	add	r6,r6,r6
   291bc:	1027883a 	mov	r19,r2
   291c0:	0028c400 	call	28c40 <memcpy>
   291c4:	d9c00017 	ldw	r7,0(sp)
   291c8:	88000a26 	beq	r17,zero,291f4 <__multadd+0x118>
   291cc:	88c00117 	ldw	r3,4(r17)
   291d0:	90801317 	ldw	r2,76(r18)
   291d4:	18c7883a 	add	r3,r3,r3
   291d8:	18c7883a 	add	r3,r3,r3
   291dc:	10c5883a 	add	r2,r2,r3
   291e0:	10c00017 	ldw	r3,0(r2)
   291e4:	88c00015 	stw	r3,0(r17)
   291e8:	14400015 	stw	r17,0(r2)
   291ec:	9823883a 	mov	r17,r19
   291f0:	003fd806 	br	29154 <__multadd+0x78>
   291f4:	9823883a 	mov	r17,r19
   291f8:	003fd606 	br	29154 <__multadd+0x78>

000291fc <__s2b>:
   291fc:	defff904 	addi	sp,sp,-28
   29200:	dc400115 	stw	r17,4(sp)
   29204:	dc000015 	stw	r16,0(sp)
   29208:	2023883a 	mov	r17,r4
   2920c:	2821883a 	mov	r16,r5
   29210:	39000204 	addi	r4,r7,8
   29214:	01400244 	movi	r5,9
   29218:	dcc00315 	stw	r19,12(sp)
   2921c:	dc800215 	stw	r18,8(sp)
   29220:	dfc00615 	stw	ra,24(sp)
   29224:	dd400515 	stw	r21,20(sp)
   29228:	dd000415 	stw	r20,16(sp)
   2922c:	3825883a 	mov	r18,r7
   29230:	3027883a 	mov	r19,r6
   29234:	002e6840 	call	2e684 <__divsi3>
   29238:	00c00044 	movi	r3,1
   2923c:	000b883a 	mov	r5,zero
   29240:	1880030e 	bge	r3,r2,29250 <__s2b+0x54>
   29244:	18c7883a 	add	r3,r3,r3
   29248:	29400044 	addi	r5,r5,1
   2924c:	18bffd16 	blt	r3,r2,29244 <__s2b+0x48>
   29250:	8809883a 	mov	r4,r17
   29254:	002900c0 	call	2900c <_Balloc>
   29258:	d8c00717 	ldw	r3,28(sp)
   2925c:	10c00515 	stw	r3,20(r2)
   29260:	00c00044 	movi	r3,1
   29264:	10c00415 	stw	r3,16(r2)
   29268:	00c00244 	movi	r3,9
   2926c:	1cc0210e 	bge	r3,r19,292f4 <__s2b+0xf8>
   29270:	80eb883a 	add	r21,r16,r3
   29274:	a829883a 	mov	r20,r21
   29278:	84e1883a 	add	r16,r16,r19
   2927c:	a1c00007 	ldb	r7,0(r20)
   29280:	01800284 	movi	r6,10
   29284:	a5000044 	addi	r20,r20,1
   29288:	100b883a 	mov	r5,r2
   2928c:	39fff404 	addi	r7,r7,-48
   29290:	8809883a 	mov	r4,r17
   29294:	00290dc0 	call	290dc <__multadd>
   29298:	a43ff81e 	bne	r20,r16,2927c <__s2b+0x80>
   2929c:	ace1883a 	add	r16,r21,r19
   292a0:	843ffe04 	addi	r16,r16,-8
   292a4:	9c800a0e 	bge	r19,r18,292d0 <__s2b+0xd4>
   292a8:	94e5c83a 	sub	r18,r18,r19
   292ac:	84a5883a 	add	r18,r16,r18
   292b0:	81c00007 	ldb	r7,0(r16)
   292b4:	01800284 	movi	r6,10
   292b8:	84000044 	addi	r16,r16,1
   292bc:	100b883a 	mov	r5,r2
   292c0:	39fff404 	addi	r7,r7,-48
   292c4:	8809883a 	mov	r4,r17
   292c8:	00290dc0 	call	290dc <__multadd>
   292cc:	84bff81e 	bne	r16,r18,292b0 <__s2b+0xb4>
   292d0:	dfc00617 	ldw	ra,24(sp)
   292d4:	dd400517 	ldw	r21,20(sp)
   292d8:	dd000417 	ldw	r20,16(sp)
   292dc:	dcc00317 	ldw	r19,12(sp)
   292e0:	dc800217 	ldw	r18,8(sp)
   292e4:	dc400117 	ldw	r17,4(sp)
   292e8:	dc000017 	ldw	r16,0(sp)
   292ec:	dec00704 	addi	sp,sp,28
   292f0:	f800283a 	ret
   292f4:	84000284 	addi	r16,r16,10
   292f8:	1827883a 	mov	r19,r3
   292fc:	003fe906 	br	292a4 <__s2b+0xa8>

00029300 <__hi0bits>:
   29300:	20bfffec 	andhi	r2,r4,65535
   29304:	1000141e 	bne	r2,zero,29358 <__hi0bits+0x58>
   29308:	2008943a 	slli	r4,r4,16
   2930c:	00800404 	movi	r2,16
   29310:	20ffc02c 	andhi	r3,r4,65280
   29314:	1800021e 	bne	r3,zero,29320 <__hi0bits+0x20>
   29318:	2008923a 	slli	r4,r4,8
   2931c:	10800204 	addi	r2,r2,8
   29320:	20fc002c 	andhi	r3,r4,61440
   29324:	1800021e 	bne	r3,zero,29330 <__hi0bits+0x30>
   29328:	2008913a 	slli	r4,r4,4
   2932c:	10800104 	addi	r2,r2,4
   29330:	20f0002c 	andhi	r3,r4,49152
   29334:	1800031e 	bne	r3,zero,29344 <__hi0bits+0x44>
   29338:	2109883a 	add	r4,r4,r4
   2933c:	10800084 	addi	r2,r2,2
   29340:	2109883a 	add	r4,r4,r4
   29344:	20000316 	blt	r4,zero,29354 <__hi0bits+0x54>
   29348:	2110002c 	andhi	r4,r4,16384
   2934c:	2000041e 	bne	r4,zero,29360 <__hi0bits+0x60>
   29350:	00800804 	movi	r2,32
   29354:	f800283a 	ret
   29358:	0005883a 	mov	r2,zero
   2935c:	003fec06 	br	29310 <__hi0bits+0x10>
   29360:	10800044 	addi	r2,r2,1
   29364:	f800283a 	ret

00029368 <__lo0bits>:
   29368:	20c00017 	ldw	r3,0(r4)
   2936c:	188001cc 	andi	r2,r3,7
   29370:	10000826 	beq	r2,zero,29394 <__lo0bits+0x2c>
   29374:	1880004c 	andi	r2,r3,1
   29378:	1000211e 	bne	r2,zero,29400 <__lo0bits+0x98>
   2937c:	1880008c 	andi	r2,r3,2
   29380:	1000211e 	bne	r2,zero,29408 <__lo0bits+0xa0>
   29384:	1806d0ba 	srli	r3,r3,2
   29388:	00800084 	movi	r2,2
   2938c:	20c00015 	stw	r3,0(r4)
   29390:	f800283a 	ret
   29394:	18bfffcc 	andi	r2,r3,65535
   29398:	10001326 	beq	r2,zero,293e8 <__lo0bits+0x80>
   2939c:	0005883a 	mov	r2,zero
   293a0:	19403fcc 	andi	r5,r3,255
   293a4:	2800021e 	bne	r5,zero,293b0 <__lo0bits+0x48>
   293a8:	1806d23a 	srli	r3,r3,8
   293ac:	10800204 	addi	r2,r2,8
   293b0:	194003cc 	andi	r5,r3,15
   293b4:	2800021e 	bne	r5,zero,293c0 <__lo0bits+0x58>
   293b8:	1806d13a 	srli	r3,r3,4
   293bc:	10800104 	addi	r2,r2,4
   293c0:	194000cc 	andi	r5,r3,3
   293c4:	2800021e 	bne	r5,zero,293d0 <__lo0bits+0x68>
   293c8:	1806d0ba 	srli	r3,r3,2
   293cc:	10800084 	addi	r2,r2,2
   293d0:	1940004c 	andi	r5,r3,1
   293d4:	2800081e 	bne	r5,zero,293f8 <__lo0bits+0x90>
   293d8:	1806d07a 	srli	r3,r3,1
   293dc:	1800051e 	bne	r3,zero,293f4 <__lo0bits+0x8c>
   293e0:	00800804 	movi	r2,32
   293e4:	f800283a 	ret
   293e8:	1806d43a 	srli	r3,r3,16
   293ec:	00800404 	movi	r2,16
   293f0:	003feb06 	br	293a0 <__lo0bits+0x38>
   293f4:	10800044 	addi	r2,r2,1
   293f8:	20c00015 	stw	r3,0(r4)
   293fc:	f800283a 	ret
   29400:	0005883a 	mov	r2,zero
   29404:	f800283a 	ret
   29408:	1806d07a 	srli	r3,r3,1
   2940c:	00800044 	movi	r2,1
   29410:	20c00015 	stw	r3,0(r4)
   29414:	f800283a 	ret

00029418 <__i2b>:
   29418:	defffd04 	addi	sp,sp,-12
   2941c:	dc000015 	stw	r16,0(sp)
   29420:	04000044 	movi	r16,1
   29424:	dc400115 	stw	r17,4(sp)
   29428:	2823883a 	mov	r17,r5
   2942c:	800b883a 	mov	r5,r16
   29430:	dfc00215 	stw	ra,8(sp)
   29434:	002900c0 	call	2900c <_Balloc>
   29438:	14400515 	stw	r17,20(r2)
   2943c:	14000415 	stw	r16,16(r2)
   29440:	dfc00217 	ldw	ra,8(sp)
   29444:	dc400117 	ldw	r17,4(sp)
   29448:	dc000017 	ldw	r16,0(sp)
   2944c:	dec00304 	addi	sp,sp,12
   29450:	f800283a 	ret

00029454 <__multiply>:
   29454:	defffa04 	addi	sp,sp,-24
   29458:	dcc00315 	stw	r19,12(sp)
   2945c:	dc800215 	stw	r18,8(sp)
   29460:	34c00417 	ldw	r19,16(r6)
   29464:	2c800417 	ldw	r18,16(r5)
   29468:	dd000415 	stw	r20,16(sp)
   2946c:	dc400115 	stw	r17,4(sp)
   29470:	dfc00515 	stw	ra,20(sp)
   29474:	dc000015 	stw	r16,0(sp)
   29478:	2829883a 	mov	r20,r5
   2947c:	3023883a 	mov	r17,r6
   29480:	94c0050e 	bge	r18,r19,29498 <__multiply+0x44>
   29484:	9007883a 	mov	r3,r18
   29488:	3029883a 	mov	r20,r6
   2948c:	9825883a 	mov	r18,r19
   29490:	2823883a 	mov	r17,r5
   29494:	1827883a 	mov	r19,r3
   29498:	a0800217 	ldw	r2,8(r20)
   2949c:	94e1883a 	add	r16,r18,r19
   294a0:	a1400117 	ldw	r5,4(r20)
   294a4:	1400010e 	bge	r2,r16,294ac <__multiply+0x58>
   294a8:	29400044 	addi	r5,r5,1
   294ac:	002900c0 	call	2900c <_Balloc>
   294b0:	8415883a 	add	r10,r16,r16
   294b4:	12c00504 	addi	r11,r2,20
   294b8:	5295883a 	add	r10,r10,r10
   294bc:	5a95883a 	add	r10,r11,r10
   294c0:	5807883a 	mov	r3,r11
   294c4:	5a80032e 	bgeu	r11,r10,294d4 <__multiply+0x80>
   294c8:	18000015 	stw	zero,0(r3)
   294cc:	18c00104 	addi	r3,r3,4
   294d0:	1abffd36 	bltu	r3,r10,294c8 <__multiply+0x74>
   294d4:	9ce7883a 	add	r19,r19,r19
   294d8:	94a5883a 	add	r18,r18,r18
   294dc:	89800504 	addi	r6,r17,20
   294e0:	9ce7883a 	add	r19,r19,r19
   294e4:	a3400504 	addi	r13,r20,20
   294e8:	94a5883a 	add	r18,r18,r18
   294ec:	34d9883a 	add	r12,r6,r19
   294f0:	6c93883a 	add	r9,r13,r18
   294f4:	3300422e 	bgeu	r6,r12,29600 <__multiply+0x1ac>
   294f8:	37c00017 	ldw	ra,0(r6)
   294fc:	fbffffcc 	andi	r15,ra,65535
   29500:	78001b26 	beq	r15,zero,29570 <__multiply+0x11c>
   29504:	5811883a 	mov	r8,r11
   29508:	681d883a 	mov	r14,r13
   2950c:	000f883a 	mov	r7,zero
   29510:	71000017 	ldw	r4,0(r14)
   29514:	40c00017 	ldw	r3,0(r8)
   29518:	73800104 	addi	r14,r14,4
   2951c:	217fffcc 	andi	r5,r4,65535
   29520:	2bcb383a 	mul	r5,r5,r15
   29524:	2008d43a 	srli	r4,r4,16
   29528:	1c7fffcc 	andi	r17,r3,65535
   2952c:	2c4b883a 	add	r5,r5,r17
   29530:	29cb883a 	add	r5,r5,r7
   29534:	23c9383a 	mul	r4,r4,r15
   29538:	1806d43a 	srli	r3,r3,16
   2953c:	280ed43a 	srli	r7,r5,16
   29540:	297fffcc 	andi	r5,r5,65535
   29544:	20c7883a 	add	r3,r4,r3
   29548:	19c7883a 	add	r3,r3,r7
   2954c:	1808943a 	slli	r4,r3,16
   29550:	4023883a 	mov	r17,r8
   29554:	180ed43a 	srli	r7,r3,16
   29558:	214ab03a 	or	r5,r4,r5
   2955c:	41400015 	stw	r5,0(r8)
   29560:	42000104 	addi	r8,r8,4
   29564:	727fea36 	bltu	r14,r9,29510 <__multiply+0xbc>
   29568:	89c00115 	stw	r7,4(r17)
   2956c:	37c00017 	ldw	ra,0(r6)
   29570:	f83ed43a 	srli	ra,ra,16
   29574:	f8001f26 	beq	ra,zero,295f4 <__multiply+0x1a0>
   29578:	58c00017 	ldw	r3,0(r11)
   2957c:	681d883a 	mov	r14,r13
   29580:	581f883a 	mov	r15,r11
   29584:	1811883a 	mov	r8,r3
   29588:	5825883a 	mov	r18,r11
   2958c:	000f883a 	mov	r7,zero
   29590:	00000106 	br	29598 <__multiply+0x144>
   29594:	8825883a 	mov	r18,r17
   29598:	7140000b 	ldhu	r5,0(r14)
   2959c:	4010d43a 	srli	r8,r8,16
   295a0:	193fffcc 	andi	r4,r3,65535
   295a4:	2fcb383a 	mul	r5,r5,ra
   295a8:	7bc00104 	addi	r15,r15,4
   295ac:	73800104 	addi	r14,r14,4
   295b0:	2a0b883a 	add	r5,r5,r8
   295b4:	29cb883a 	add	r5,r5,r7
   295b8:	2806943a 	slli	r3,r5,16
   295bc:	94400104 	addi	r17,r18,4
   295c0:	280ad43a 	srli	r5,r5,16
   295c4:	1908b03a 	or	r4,r3,r4
   295c8:	793fff15 	stw	r4,-4(r15)
   295cc:	70ffff17 	ldw	r3,-4(r14)
   295d0:	8a000017 	ldw	r8,0(r17)
   295d4:	1806d43a 	srli	r3,r3,16
   295d8:	413fffcc 	andi	r4,r8,65535
   295dc:	1fc7383a 	mul	r3,r3,ra
   295e0:	1907883a 	add	r3,r3,r4
   295e4:	1947883a 	add	r3,r3,r5
   295e8:	180ed43a 	srli	r7,r3,16
   295ec:	727fe936 	bltu	r14,r9,29594 <__multiply+0x140>
   295f0:	90c00115 	stw	r3,4(r18)
   295f4:	31800104 	addi	r6,r6,4
   295f8:	5ac00104 	addi	r11,r11,4
   295fc:	333fbe36 	bltu	r6,r12,294f8 <__multiply+0xa4>
   29600:	0400090e 	bge	zero,r16,29628 <__multiply+0x1d4>
   29604:	50ffff17 	ldw	r3,-4(r10)
   29608:	52bfff04 	addi	r10,r10,-4
   2960c:	18000326 	beq	r3,zero,2961c <__multiply+0x1c8>
   29610:	00000506 	br	29628 <__multiply+0x1d4>
   29614:	50c00017 	ldw	r3,0(r10)
   29618:	1800031e 	bne	r3,zero,29628 <__multiply+0x1d4>
   2961c:	843fffc4 	addi	r16,r16,-1
   29620:	52bfff04 	addi	r10,r10,-4
   29624:	803ffb1e 	bne	r16,zero,29614 <__multiply+0x1c0>
   29628:	14000415 	stw	r16,16(r2)
   2962c:	dfc00517 	ldw	ra,20(sp)
   29630:	dd000417 	ldw	r20,16(sp)
   29634:	dcc00317 	ldw	r19,12(sp)
   29638:	dc800217 	ldw	r18,8(sp)
   2963c:	dc400117 	ldw	r17,4(sp)
   29640:	dc000017 	ldw	r16,0(sp)
   29644:	dec00604 	addi	sp,sp,24
   29648:	f800283a 	ret

0002964c <__pow5mult>:
   2964c:	defffa04 	addi	sp,sp,-24
   29650:	dcc00315 	stw	r19,12(sp)
   29654:	dc000015 	stw	r16,0(sp)
   29658:	dfc00515 	stw	ra,20(sp)
   2965c:	dd000415 	stw	r20,16(sp)
   29660:	dc800215 	stw	r18,8(sp)
   29664:	dc400115 	stw	r17,4(sp)
   29668:	308000cc 	andi	r2,r6,3
   2966c:	3021883a 	mov	r16,r6
   29670:	2027883a 	mov	r19,r4
   29674:	10002f1e 	bne	r2,zero,29734 <__pow5mult+0xe8>
   29678:	2825883a 	mov	r18,r5
   2967c:	8021d0ba 	srai	r16,r16,2
   29680:	80001a26 	beq	r16,zero,296ec <__pow5mult+0xa0>
   29684:	9c401217 	ldw	r17,72(r19)
   29688:	8800061e 	bne	r17,zero,296a4 <__pow5mult+0x58>
   2968c:	00003406 	br	29760 <__pow5mult+0x114>
   29690:	8021d07a 	srai	r16,r16,1
   29694:	80001526 	beq	r16,zero,296ec <__pow5mult+0xa0>
   29698:	88800017 	ldw	r2,0(r17)
   2969c:	10001c26 	beq	r2,zero,29710 <__pow5mult+0xc4>
   296a0:	1023883a 	mov	r17,r2
   296a4:	8080004c 	andi	r2,r16,1
   296a8:	103ff926 	beq	r2,zero,29690 <__pow5mult+0x44>
   296ac:	880d883a 	mov	r6,r17
   296b0:	900b883a 	mov	r5,r18
   296b4:	9809883a 	mov	r4,r19
   296b8:	00294540 	call	29454 <__multiply>
   296bc:	90001b26 	beq	r18,zero,2972c <__pow5mult+0xe0>
   296c0:	91000117 	ldw	r4,4(r18)
   296c4:	98c01317 	ldw	r3,76(r19)
   296c8:	8021d07a 	srai	r16,r16,1
   296cc:	2109883a 	add	r4,r4,r4
   296d0:	2109883a 	add	r4,r4,r4
   296d4:	1907883a 	add	r3,r3,r4
   296d8:	19000017 	ldw	r4,0(r3)
   296dc:	91000015 	stw	r4,0(r18)
   296e0:	1c800015 	stw	r18,0(r3)
   296e4:	1025883a 	mov	r18,r2
   296e8:	803feb1e 	bne	r16,zero,29698 <__pow5mult+0x4c>
   296ec:	9005883a 	mov	r2,r18
   296f0:	dfc00517 	ldw	ra,20(sp)
   296f4:	dd000417 	ldw	r20,16(sp)
   296f8:	dcc00317 	ldw	r19,12(sp)
   296fc:	dc800217 	ldw	r18,8(sp)
   29700:	dc400117 	ldw	r17,4(sp)
   29704:	dc000017 	ldw	r16,0(sp)
   29708:	dec00604 	addi	sp,sp,24
   2970c:	f800283a 	ret
   29710:	880d883a 	mov	r6,r17
   29714:	880b883a 	mov	r5,r17
   29718:	9809883a 	mov	r4,r19
   2971c:	00294540 	call	29454 <__multiply>
   29720:	88800015 	stw	r2,0(r17)
   29724:	10000015 	stw	zero,0(r2)
   29728:	003fdd06 	br	296a0 <__pow5mult+0x54>
   2972c:	1025883a 	mov	r18,r2
   29730:	003fd706 	br	29690 <__pow5mult+0x44>
   29734:	10bfffc4 	addi	r2,r2,-1
   29738:	1085883a 	add	r2,r2,r2
   2973c:	00c000f4 	movhi	r3,3
   29740:	18ce4c04 	addi	r3,r3,14640
   29744:	1085883a 	add	r2,r2,r2
   29748:	1885883a 	add	r2,r3,r2
   2974c:	11800017 	ldw	r6,0(r2)
   29750:	000f883a 	mov	r7,zero
   29754:	00290dc0 	call	290dc <__multadd>
   29758:	1025883a 	mov	r18,r2
   2975c:	003fc706 	br	2967c <__pow5mult+0x30>
   29760:	05000044 	movi	r20,1
   29764:	a00b883a 	mov	r5,r20
   29768:	9809883a 	mov	r4,r19
   2976c:	002900c0 	call	2900c <_Balloc>
   29770:	1023883a 	mov	r17,r2
   29774:	00809c44 	movi	r2,625
   29778:	88800515 	stw	r2,20(r17)
   2977c:	8d000415 	stw	r20,16(r17)
   29780:	9c401215 	stw	r17,72(r19)
   29784:	88000015 	stw	zero,0(r17)
   29788:	003fc606 	br	296a4 <__pow5mult+0x58>

0002978c <__lshift>:
   2978c:	defff904 	addi	sp,sp,-28
   29790:	dd400515 	stw	r21,20(sp)
   29794:	dcc00315 	stw	r19,12(sp)
   29798:	302bd17a 	srai	r21,r6,5
   2979c:	2cc00417 	ldw	r19,16(r5)
   297a0:	28800217 	ldw	r2,8(r5)
   297a4:	dd000415 	stw	r20,16(sp)
   297a8:	ace7883a 	add	r19,r21,r19
   297ac:	dc800215 	stw	r18,8(sp)
   297b0:	dc400115 	stw	r17,4(sp)
   297b4:	dc000015 	stw	r16,0(sp)
   297b8:	dfc00615 	stw	ra,24(sp)
   297bc:	9c000044 	addi	r16,r19,1
   297c0:	2823883a 	mov	r17,r5
   297c4:	3029883a 	mov	r20,r6
   297c8:	2025883a 	mov	r18,r4
   297cc:	29400117 	ldw	r5,4(r5)
   297d0:	1400030e 	bge	r2,r16,297e0 <__lshift+0x54>
   297d4:	1085883a 	add	r2,r2,r2
   297d8:	29400044 	addi	r5,r5,1
   297dc:	143ffd16 	blt	r2,r16,297d4 <__lshift+0x48>
   297e0:	9009883a 	mov	r4,r18
   297e4:	002900c0 	call	2900c <_Balloc>
   297e8:	10c00504 	addi	r3,r2,20
   297ec:	0540070e 	bge	zero,r21,2980c <__lshift+0x80>
   297f0:	ad6b883a 	add	r21,r21,r21
   297f4:	ad6b883a 	add	r21,r21,r21
   297f8:	1809883a 	mov	r4,r3
   297fc:	1d47883a 	add	r3,r3,r21
   29800:	20000015 	stw	zero,0(r4)
   29804:	21000104 	addi	r4,r4,4
   29808:	193ffd1e 	bne	r3,r4,29800 <__lshift+0x74>
   2980c:	8a000417 	ldw	r8,16(r17)
   29810:	89000504 	addi	r4,r17,20
   29814:	a18007cc 	andi	r6,r20,31
   29818:	4211883a 	add	r8,r8,r8
   2981c:	4211883a 	add	r8,r8,r8
   29820:	2211883a 	add	r8,r4,r8
   29824:	30002326 	beq	r6,zero,298b4 <__lshift+0x128>
   29828:	02400804 	movi	r9,32
   2982c:	4993c83a 	sub	r9,r9,r6
   29830:	000b883a 	mov	r5,zero
   29834:	21c00017 	ldw	r7,0(r4)
   29838:	1815883a 	mov	r10,r3
   2983c:	18c00104 	addi	r3,r3,4
   29840:	398e983a 	sll	r7,r7,r6
   29844:	21000104 	addi	r4,r4,4
   29848:	394ab03a 	or	r5,r7,r5
   2984c:	197fff15 	stw	r5,-4(r3)
   29850:	217fff17 	ldw	r5,-4(r4)
   29854:	2a4ad83a 	srl	r5,r5,r9
   29858:	223ff636 	bltu	r4,r8,29834 <__lshift+0xa8>
   2985c:	51400115 	stw	r5,4(r10)
   29860:	28001a1e 	bne	r5,zero,298cc <__lshift+0x140>
   29864:	843fffc4 	addi	r16,r16,-1
   29868:	14000415 	stw	r16,16(r2)
   2986c:	88000826 	beq	r17,zero,29890 <__lshift+0x104>
   29870:	89000117 	ldw	r4,4(r17)
   29874:	90c01317 	ldw	r3,76(r18)
   29878:	2109883a 	add	r4,r4,r4
   2987c:	2109883a 	add	r4,r4,r4
   29880:	1907883a 	add	r3,r3,r4
   29884:	19000017 	ldw	r4,0(r3)
   29888:	89000015 	stw	r4,0(r17)
   2988c:	1c400015 	stw	r17,0(r3)
   29890:	dfc00617 	ldw	ra,24(sp)
   29894:	dd400517 	ldw	r21,20(sp)
   29898:	dd000417 	ldw	r20,16(sp)
   2989c:	dcc00317 	ldw	r19,12(sp)
   298a0:	dc800217 	ldw	r18,8(sp)
   298a4:	dc400117 	ldw	r17,4(sp)
   298a8:	dc000017 	ldw	r16,0(sp)
   298ac:	dec00704 	addi	sp,sp,28
   298b0:	f800283a 	ret
   298b4:	21400017 	ldw	r5,0(r4)
   298b8:	18c00104 	addi	r3,r3,4
   298bc:	21000104 	addi	r4,r4,4
   298c0:	197fff15 	stw	r5,-4(r3)
   298c4:	223ffb36 	bltu	r4,r8,298b4 <__lshift+0x128>
   298c8:	003fe606 	br	29864 <__lshift+0xd8>
   298cc:	9c000084 	addi	r16,r19,2
   298d0:	003fe406 	br	29864 <__lshift+0xd8>

000298d4 <__mcmp>:
   298d4:	20800417 	ldw	r2,16(r4)
   298d8:	28c00417 	ldw	r3,16(r5)
   298dc:	10c5c83a 	sub	r2,r2,r3
   298e0:	1000111e 	bne	r2,zero,29928 <__mcmp+0x54>
   298e4:	18c7883a 	add	r3,r3,r3
   298e8:	18c7883a 	add	r3,r3,r3
   298ec:	21000504 	addi	r4,r4,20
   298f0:	29400504 	addi	r5,r5,20
   298f4:	20c5883a 	add	r2,r4,r3
   298f8:	28cb883a 	add	r5,r5,r3
   298fc:	00000106 	br	29904 <__mcmp+0x30>
   29900:	20800a2e 	bgeu	r4,r2,2992c <__mcmp+0x58>
   29904:	10bfff04 	addi	r2,r2,-4
   29908:	297fff04 	addi	r5,r5,-4
   2990c:	11800017 	ldw	r6,0(r2)
   29910:	28c00017 	ldw	r3,0(r5)
   29914:	30fffa26 	beq	r6,r3,29900 <__mcmp+0x2c>
   29918:	30c00236 	bltu	r6,r3,29924 <__mcmp+0x50>
   2991c:	00800044 	movi	r2,1
   29920:	f800283a 	ret
   29924:	00bfffc4 	movi	r2,-1
   29928:	f800283a 	ret
   2992c:	0005883a 	mov	r2,zero
   29930:	f800283a 	ret

00029934 <__mdiff>:
   29934:	28c00417 	ldw	r3,16(r5)
   29938:	30800417 	ldw	r2,16(r6)
   2993c:	defffa04 	addi	sp,sp,-24
   29940:	dcc00315 	stw	r19,12(sp)
   29944:	dc800215 	stw	r18,8(sp)
   29948:	dfc00515 	stw	ra,20(sp)
   2994c:	dd000415 	stw	r20,16(sp)
   29950:	dc400115 	stw	r17,4(sp)
   29954:	dc000015 	stw	r16,0(sp)
   29958:	1887c83a 	sub	r3,r3,r2
   2995c:	2825883a 	mov	r18,r5
   29960:	3027883a 	mov	r19,r6
   29964:	1800141e 	bne	r3,zero,299b8 <__mdiff+0x84>
   29968:	1085883a 	add	r2,r2,r2
   2996c:	1085883a 	add	r2,r2,r2
   29970:	2a000504 	addi	r8,r5,20
   29974:	34000504 	addi	r16,r6,20
   29978:	4087883a 	add	r3,r8,r2
   2997c:	8085883a 	add	r2,r16,r2
   29980:	00000106 	br	29988 <__mdiff+0x54>
   29984:	40c0592e 	bgeu	r8,r3,29aec <__mdiff+0x1b8>
   29988:	18ffff04 	addi	r3,r3,-4
   2998c:	10bfff04 	addi	r2,r2,-4
   29990:	19c00017 	ldw	r7,0(r3)
   29994:	11400017 	ldw	r5,0(r2)
   29998:	397ffa26 	beq	r7,r5,29984 <__mdiff+0x50>
   2999c:	3940592e 	bgeu	r7,r5,29b04 <__mdiff+0x1d0>
   299a0:	9005883a 	mov	r2,r18
   299a4:	4023883a 	mov	r17,r8
   299a8:	9825883a 	mov	r18,r19
   299ac:	05000044 	movi	r20,1
   299b0:	1027883a 	mov	r19,r2
   299b4:	00000406 	br	299c8 <__mdiff+0x94>
   299b8:	18005616 	blt	r3,zero,29b14 <__mdiff+0x1e0>
   299bc:	34400504 	addi	r17,r6,20
   299c0:	2c000504 	addi	r16,r5,20
   299c4:	0029883a 	mov	r20,zero
   299c8:	91400117 	ldw	r5,4(r18)
   299cc:	002900c0 	call	2900c <_Balloc>
   299d0:	92400417 	ldw	r9,16(r18)
   299d4:	9b000417 	ldw	r12,16(r19)
   299d8:	12c00504 	addi	r11,r2,20
   299dc:	4a51883a 	add	r8,r9,r9
   299e0:	6319883a 	add	r12,r12,r12
   299e4:	4211883a 	add	r8,r8,r8
   299e8:	6319883a 	add	r12,r12,r12
   299ec:	15000315 	stw	r20,12(r2)
   299f0:	8211883a 	add	r8,r16,r8
   299f4:	8b19883a 	add	r12,r17,r12
   299f8:	0007883a 	mov	r3,zero
   299fc:	81400017 	ldw	r5,0(r16)
   29a00:	89c00017 	ldw	r7,0(r17)
   29a04:	59800104 	addi	r6,r11,4
   29a08:	293fffcc 	andi	r4,r5,65535
   29a0c:	20c7883a 	add	r3,r4,r3
   29a10:	393fffcc 	andi	r4,r7,65535
   29a14:	1909c83a 	sub	r4,r3,r4
   29a18:	280ad43a 	srli	r5,r5,16
   29a1c:	380ed43a 	srli	r7,r7,16
   29a20:	2007d43a 	srai	r3,r4,16
   29a24:	213fffcc 	andi	r4,r4,65535
   29a28:	29cbc83a 	sub	r5,r5,r7
   29a2c:	28c7883a 	add	r3,r5,r3
   29a30:	180a943a 	slli	r5,r3,16
   29a34:	8c400104 	addi	r17,r17,4
   29a38:	84000104 	addi	r16,r16,4
   29a3c:	2908b03a 	or	r4,r5,r4
   29a40:	59000015 	stw	r4,0(r11)
   29a44:	1807d43a 	srai	r3,r3,16
   29a48:	3015883a 	mov	r10,r6
   29a4c:	3017883a 	mov	r11,r6
   29a50:	8b3fea36 	bltu	r17,r12,299fc <__mdiff+0xc8>
   29a54:	8200162e 	bgeu	r16,r8,29ab0 <__mdiff+0x17c>
   29a58:	8017883a 	mov	r11,r16
   29a5c:	59400017 	ldw	r5,0(r11)
   29a60:	31800104 	addi	r6,r6,4
   29a64:	5ac00104 	addi	r11,r11,4
   29a68:	293fffcc 	andi	r4,r5,65535
   29a6c:	20c7883a 	add	r3,r4,r3
   29a70:	280ed43a 	srli	r7,r5,16
   29a74:	180bd43a 	srai	r5,r3,16
   29a78:	193fffcc 	andi	r4,r3,65535
   29a7c:	3947883a 	add	r3,r7,r5
   29a80:	180a943a 	slli	r5,r3,16
   29a84:	1807d43a 	srai	r3,r3,16
   29a88:	2908b03a 	or	r4,r5,r4
   29a8c:	313fff15 	stw	r4,-4(r6)
   29a90:	5a3ff236 	bltu	r11,r8,29a5c <__mdiff+0x128>
   29a94:	0406303a 	nor	r3,zero,r16
   29a98:	1a07883a 	add	r3,r3,r8
   29a9c:	1806d0ba 	srli	r3,r3,2
   29aa0:	18c00044 	addi	r3,r3,1
   29aa4:	18c7883a 	add	r3,r3,r3
   29aa8:	18c7883a 	add	r3,r3,r3
   29aac:	50d5883a 	add	r10,r10,r3
   29ab0:	50ffff04 	addi	r3,r10,-4
   29ab4:	2000041e 	bne	r4,zero,29ac8 <__mdiff+0x194>
   29ab8:	18ffff04 	addi	r3,r3,-4
   29abc:	19000017 	ldw	r4,0(r3)
   29ac0:	4a7fffc4 	addi	r9,r9,-1
   29ac4:	203ffc26 	beq	r4,zero,29ab8 <__mdiff+0x184>
   29ac8:	12400415 	stw	r9,16(r2)
   29acc:	dfc00517 	ldw	ra,20(sp)
   29ad0:	dd000417 	ldw	r20,16(sp)
   29ad4:	dcc00317 	ldw	r19,12(sp)
   29ad8:	dc800217 	ldw	r18,8(sp)
   29adc:	dc400117 	ldw	r17,4(sp)
   29ae0:	dc000017 	ldw	r16,0(sp)
   29ae4:	dec00604 	addi	sp,sp,24
   29ae8:	f800283a 	ret
   29aec:	000b883a 	mov	r5,zero
   29af0:	002900c0 	call	2900c <_Balloc>
   29af4:	00c00044 	movi	r3,1
   29af8:	10c00415 	stw	r3,16(r2)
   29afc:	10000515 	stw	zero,20(r2)
   29b00:	003ff206 	br	29acc <__mdiff+0x198>
   29b04:	8023883a 	mov	r17,r16
   29b08:	0029883a 	mov	r20,zero
   29b0c:	4021883a 	mov	r16,r8
   29b10:	003fad06 	br	299c8 <__mdiff+0x94>
   29b14:	9005883a 	mov	r2,r18
   29b18:	94400504 	addi	r17,r18,20
   29b1c:	9c000504 	addi	r16,r19,20
   29b20:	9825883a 	mov	r18,r19
   29b24:	05000044 	movi	r20,1
   29b28:	1027883a 	mov	r19,r2
   29b2c:	003fa606 	br	299c8 <__mdiff+0x94>

00029b30 <__ulp>:
   29b30:	295ffc2c 	andhi	r5,r5,32752
   29b34:	00bf3034 	movhi	r2,64704
   29b38:	2887883a 	add	r3,r5,r2
   29b3c:	00c0020e 	bge	zero,r3,29b48 <__ulp+0x18>
   29b40:	0005883a 	mov	r2,zero
   29b44:	f800283a 	ret
   29b48:	00c7c83a 	sub	r3,zero,r3
   29b4c:	1807d53a 	srai	r3,r3,20
   29b50:	008004c4 	movi	r2,19
   29b54:	10c00b0e 	bge	r2,r3,29b84 <__ulp+0x54>
   29b58:	18bffb04 	addi	r2,r3,-20
   29b5c:	01000784 	movi	r4,30
   29b60:	0007883a 	mov	r3,zero
   29b64:	20800516 	blt	r4,r2,29b7c <__ulp+0x4c>
   29b68:	010007c4 	movi	r4,31
   29b6c:	2089c83a 	sub	r4,r4,r2
   29b70:	00800044 	movi	r2,1
   29b74:	1104983a 	sll	r2,r2,r4
   29b78:	f800283a 	ret
   29b7c:	00800044 	movi	r2,1
   29b80:	f800283a 	ret
   29b84:	01400234 	movhi	r5,8
   29b88:	28c7d83a 	sra	r3,r5,r3
   29b8c:	0005883a 	mov	r2,zero
   29b90:	f800283a 	ret

00029b94 <__b2d>:
   29b94:	defffa04 	addi	sp,sp,-24
   29b98:	dc000015 	stw	r16,0(sp)
   29b9c:	24000417 	ldw	r16,16(r4)
   29ba0:	dc400115 	stw	r17,4(sp)
   29ba4:	24400504 	addi	r17,r4,20
   29ba8:	8421883a 	add	r16,r16,r16
   29bac:	8421883a 	add	r16,r16,r16
   29bb0:	8c21883a 	add	r16,r17,r16
   29bb4:	dc800215 	stw	r18,8(sp)
   29bb8:	84bfff17 	ldw	r18,-4(r16)
   29bbc:	dd000415 	stw	r20,16(sp)
   29bc0:	dcc00315 	stw	r19,12(sp)
   29bc4:	9009883a 	mov	r4,r18
   29bc8:	2829883a 	mov	r20,r5
   29bcc:	dfc00515 	stw	ra,20(sp)
   29bd0:	00293000 	call	29300 <__hi0bits>
   29bd4:	00c00804 	movi	r3,32
   29bd8:	1889c83a 	sub	r4,r3,r2
   29bdc:	a1000015 	stw	r4,0(r20)
   29be0:	01000284 	movi	r4,10
   29be4:	84ffff04 	addi	r19,r16,-4
   29be8:	20801216 	blt	r4,r2,29c34 <__b2d+0xa0>
   29bec:	018002c4 	movi	r6,11
   29bf0:	308dc83a 	sub	r6,r6,r2
   29bf4:	9186d83a 	srl	r3,r18,r6
   29bf8:	18cffc34 	orhi	r3,r3,16368
   29bfc:	8cc0212e 	bgeu	r17,r19,29c84 <__b2d+0xf0>
   29c00:	813ffe17 	ldw	r4,-8(r16)
   29c04:	218cd83a 	srl	r6,r4,r6
   29c08:	10800544 	addi	r2,r2,21
   29c0c:	9084983a 	sll	r2,r18,r2
   29c10:	1184b03a 	or	r2,r2,r6
   29c14:	dfc00517 	ldw	ra,20(sp)
   29c18:	dd000417 	ldw	r20,16(sp)
   29c1c:	dcc00317 	ldw	r19,12(sp)
   29c20:	dc800217 	ldw	r18,8(sp)
   29c24:	dc400117 	ldw	r17,4(sp)
   29c28:	dc000017 	ldw	r16,0(sp)
   29c2c:	dec00604 	addi	sp,sp,24
   29c30:	f800283a 	ret
   29c34:	8cc00f2e 	bgeu	r17,r19,29c74 <__b2d+0xe0>
   29c38:	117ffd44 	addi	r5,r2,-11
   29c3c:	80bffe17 	ldw	r2,-8(r16)
   29c40:	28000e26 	beq	r5,zero,29c7c <__b2d+0xe8>
   29c44:	1949c83a 	sub	r4,r3,r5
   29c48:	9164983a 	sll	r18,r18,r5
   29c4c:	1106d83a 	srl	r3,r2,r4
   29c50:	81bffe04 	addi	r6,r16,-8
   29c54:	948ffc34 	orhi	r18,r18,16368
   29c58:	90c6b03a 	or	r3,r18,r3
   29c5c:	89800e2e 	bgeu	r17,r6,29c98 <__b2d+0x104>
   29c60:	81bffd17 	ldw	r6,-12(r16)
   29c64:	1144983a 	sll	r2,r2,r5
   29c68:	310ad83a 	srl	r5,r6,r4
   29c6c:	2884b03a 	or	r2,r5,r2
   29c70:	003fe806 	br	29c14 <__b2d+0x80>
   29c74:	10bffd44 	addi	r2,r2,-11
   29c78:	1000041e 	bne	r2,zero,29c8c <__b2d+0xf8>
   29c7c:	90cffc34 	orhi	r3,r18,16368
   29c80:	003fe406 	br	29c14 <__b2d+0x80>
   29c84:	000d883a 	mov	r6,zero
   29c88:	003fdf06 	br	29c08 <__b2d+0x74>
   29c8c:	90a4983a 	sll	r18,r18,r2
   29c90:	0005883a 	mov	r2,zero
   29c94:	003ff906 	br	29c7c <__b2d+0xe8>
   29c98:	1144983a 	sll	r2,r2,r5
   29c9c:	003fdd06 	br	29c14 <__b2d+0x80>

00029ca0 <__d2b>:
   29ca0:	defff804 	addi	sp,sp,-32
   29ca4:	dc000215 	stw	r16,8(sp)
   29ca8:	3021883a 	mov	r16,r6
   29cac:	dc400315 	stw	r17,12(sp)
   29cb0:	8022907a 	slli	r17,r16,1
   29cb4:	dd000615 	stw	r20,24(sp)
   29cb8:	2829883a 	mov	r20,r5
   29cbc:	01400044 	movi	r5,1
   29cc0:	dcc00515 	stw	r19,20(sp)
   29cc4:	dc800415 	stw	r18,16(sp)
   29cc8:	dfc00715 	stw	ra,28(sp)
   29ccc:	3825883a 	mov	r18,r7
   29cd0:	8822d57a 	srli	r17,r17,21
   29cd4:	002900c0 	call	2900c <_Balloc>
   29cd8:	1027883a 	mov	r19,r2
   29cdc:	00800434 	movhi	r2,16
   29ce0:	10bfffc4 	addi	r2,r2,-1
   29ce4:	808c703a 	and	r6,r16,r2
   29ce8:	88000126 	beq	r17,zero,29cf0 <__d2b+0x50>
   29cec:	31800434 	orhi	r6,r6,16
   29cf0:	d9800015 	stw	r6,0(sp)
   29cf4:	a0002426 	beq	r20,zero,29d88 <__d2b+0xe8>
   29cf8:	d9000104 	addi	r4,sp,4
   29cfc:	dd000115 	stw	r20,4(sp)
   29d00:	00293680 	call	29368 <__lo0bits>
   29d04:	d8c00017 	ldw	r3,0(sp)
   29d08:	10002f1e 	bne	r2,zero,29dc8 <__d2b+0x128>
   29d0c:	d9000117 	ldw	r4,4(sp)
   29d10:	99000515 	stw	r4,20(r19)
   29d14:	1821003a 	cmpeq	r16,r3,zero
   29d18:	01000084 	movi	r4,2
   29d1c:	2421c83a 	sub	r16,r4,r16
   29d20:	98c00615 	stw	r3,24(r19)
   29d24:	9c000415 	stw	r16,16(r19)
   29d28:	88001f1e 	bne	r17,zero,29da8 <__d2b+0x108>
   29d2c:	10bef384 	addi	r2,r2,-1074
   29d30:	90800015 	stw	r2,0(r18)
   29d34:	00900034 	movhi	r2,16384
   29d38:	10bfffc4 	addi	r2,r2,-1
   29d3c:	8085883a 	add	r2,r16,r2
   29d40:	1085883a 	add	r2,r2,r2
   29d44:	1085883a 	add	r2,r2,r2
   29d48:	9885883a 	add	r2,r19,r2
   29d4c:	11000517 	ldw	r4,20(r2)
   29d50:	8020917a 	slli	r16,r16,5
   29d54:	00293000 	call	29300 <__hi0bits>
   29d58:	d8c00817 	ldw	r3,32(sp)
   29d5c:	8085c83a 	sub	r2,r16,r2
   29d60:	18800015 	stw	r2,0(r3)
   29d64:	9805883a 	mov	r2,r19
   29d68:	dfc00717 	ldw	ra,28(sp)
   29d6c:	dd000617 	ldw	r20,24(sp)
   29d70:	dcc00517 	ldw	r19,20(sp)
   29d74:	dc800417 	ldw	r18,16(sp)
   29d78:	dc400317 	ldw	r17,12(sp)
   29d7c:	dc000217 	ldw	r16,8(sp)
   29d80:	dec00804 	addi	sp,sp,32
   29d84:	f800283a 	ret
   29d88:	d809883a 	mov	r4,sp
   29d8c:	00293680 	call	29368 <__lo0bits>
   29d90:	d8c00017 	ldw	r3,0(sp)
   29d94:	04000044 	movi	r16,1
   29d98:	9c000415 	stw	r16,16(r19)
   29d9c:	98c00515 	stw	r3,20(r19)
   29da0:	10800804 	addi	r2,r2,32
   29da4:	883fe126 	beq	r17,zero,29d2c <__d2b+0x8c>
   29da8:	00c00d44 	movi	r3,53
   29dac:	8c7ef344 	addi	r17,r17,-1075
   29db0:	88a3883a 	add	r17,r17,r2
   29db4:	1885c83a 	sub	r2,r3,r2
   29db8:	d8c00817 	ldw	r3,32(sp)
   29dbc:	94400015 	stw	r17,0(r18)
   29dc0:	18800015 	stw	r2,0(r3)
   29dc4:	003fe706 	br	29d64 <__d2b+0xc4>
   29dc8:	01000804 	movi	r4,32
   29dcc:	2089c83a 	sub	r4,r4,r2
   29dd0:	1908983a 	sll	r4,r3,r4
   29dd4:	d9400117 	ldw	r5,4(sp)
   29dd8:	1886d83a 	srl	r3,r3,r2
   29ddc:	2148b03a 	or	r4,r4,r5
   29de0:	99000515 	stw	r4,20(r19)
   29de4:	d8c00015 	stw	r3,0(sp)
   29de8:	003fca06 	br	29d14 <__d2b+0x74>

00029dec <__ratio>:
   29dec:	defff904 	addi	sp,sp,-28
   29df0:	dc400315 	stw	r17,12(sp)
   29df4:	2823883a 	mov	r17,r5
   29df8:	d9400104 	addi	r5,sp,4
   29dfc:	dfc00615 	stw	ra,24(sp)
   29e00:	dcc00515 	stw	r19,20(sp)
   29e04:	dc800415 	stw	r18,16(sp)
   29e08:	2027883a 	mov	r19,r4
   29e0c:	dc000215 	stw	r16,8(sp)
   29e10:	0029b940 	call	29b94 <__b2d>
   29e14:	d80b883a 	mov	r5,sp
   29e18:	8809883a 	mov	r4,r17
   29e1c:	1025883a 	mov	r18,r2
   29e20:	1821883a 	mov	r16,r3
   29e24:	0029b940 	call	29b94 <__b2d>
   29e28:	8a000417 	ldw	r8,16(r17)
   29e2c:	99000417 	ldw	r4,16(r19)
   29e30:	d9400117 	ldw	r5,4(sp)
   29e34:	2209c83a 	sub	r4,r4,r8
   29e38:	2010917a 	slli	r8,r4,5
   29e3c:	d9000017 	ldw	r4,0(sp)
   29e40:	2909c83a 	sub	r4,r5,r4
   29e44:	4109883a 	add	r4,r8,r4
   29e48:	01000e0e 	bge	zero,r4,29e84 <__ratio+0x98>
   29e4c:	2008953a 	slli	r4,r4,20
   29e50:	2421883a 	add	r16,r4,r16
   29e54:	100d883a 	mov	r6,r2
   29e58:	180f883a 	mov	r7,r3
   29e5c:	9009883a 	mov	r4,r18
   29e60:	800b883a 	mov	r5,r16
   29e64:	002f0e40 	call	2f0e4 <__divdf3>
   29e68:	dfc00617 	ldw	ra,24(sp)
   29e6c:	dcc00517 	ldw	r19,20(sp)
   29e70:	dc800417 	ldw	r18,16(sp)
   29e74:	dc400317 	ldw	r17,12(sp)
   29e78:	dc000217 	ldw	r16,8(sp)
   29e7c:	dec00704 	addi	sp,sp,28
   29e80:	f800283a 	ret
   29e84:	2008953a 	slli	r4,r4,20
   29e88:	1907c83a 	sub	r3,r3,r4
   29e8c:	003ff106 	br	29e54 <__ratio+0x68>

00029e90 <_mprec_log10>:
   29e90:	defffe04 	addi	sp,sp,-8
   29e94:	dc000015 	stw	r16,0(sp)
   29e98:	dfc00115 	stw	ra,4(sp)
   29e9c:	008005c4 	movi	r2,23
   29ea0:	2021883a 	mov	r16,r4
   29ea4:	11000d0e 	bge	r2,r4,29edc <_mprec_log10+0x4c>
   29ea8:	0005883a 	mov	r2,zero
   29eac:	00cffc34 	movhi	r3,16368
   29eb0:	843fffc4 	addi	r16,r16,-1
   29eb4:	000d883a 	mov	r6,zero
   29eb8:	01d00934 	movhi	r7,16420
   29ebc:	1009883a 	mov	r4,r2
   29ec0:	180b883a 	mov	r5,r3
   29ec4:	002fc240 	call	2fc24 <__muldf3>
   29ec8:	803ff91e 	bne	r16,zero,29eb0 <_mprec_log10+0x20>
   29ecc:	dfc00117 	ldw	ra,4(sp)
   29ed0:	dc000017 	ldw	r16,0(sp)
   29ed4:	dec00204 	addi	sp,sp,8
   29ed8:	f800283a 	ret
   29edc:	202090fa 	slli	r16,r4,3
   29ee0:	008000f4 	movhi	r2,3
   29ee4:	108e6304 	addi	r2,r2,14732
   29ee8:	1421883a 	add	r16,r2,r16
   29eec:	80800017 	ldw	r2,0(r16)
   29ef0:	80c00117 	ldw	r3,4(r16)
   29ef4:	dfc00117 	ldw	ra,4(sp)
   29ef8:	dc000017 	ldw	r16,0(sp)
   29efc:	dec00204 	addi	sp,sp,8
   29f00:	f800283a 	ret

00029f04 <__copybits>:
   29f04:	297fffc4 	addi	r5,r5,-1
   29f08:	280fd17a 	srai	r7,r5,5
   29f0c:	30c00417 	ldw	r3,16(r6)
   29f10:	30800504 	addi	r2,r6,20
   29f14:	39c00044 	addi	r7,r7,1
   29f18:	18c7883a 	add	r3,r3,r3
   29f1c:	39cf883a 	add	r7,r7,r7
   29f20:	18c7883a 	add	r3,r3,r3
   29f24:	39cf883a 	add	r7,r7,r7
   29f28:	10c7883a 	add	r3,r2,r3
   29f2c:	21cf883a 	add	r7,r4,r7
   29f30:	10c00d2e 	bgeu	r2,r3,29f68 <__copybits+0x64>
   29f34:	200b883a 	mov	r5,r4
   29f38:	12000017 	ldw	r8,0(r2)
   29f3c:	29400104 	addi	r5,r5,4
   29f40:	10800104 	addi	r2,r2,4
   29f44:	2a3fff15 	stw	r8,-4(r5)
   29f48:	10fffb36 	bltu	r2,r3,29f38 <__copybits+0x34>
   29f4c:	1985c83a 	sub	r2,r3,r6
   29f50:	10bffac4 	addi	r2,r2,-21
   29f54:	1004d0ba 	srli	r2,r2,2
   29f58:	10800044 	addi	r2,r2,1
   29f5c:	1085883a 	add	r2,r2,r2
   29f60:	1085883a 	add	r2,r2,r2
   29f64:	2089883a 	add	r4,r4,r2
   29f68:	21c0032e 	bgeu	r4,r7,29f78 <__copybits+0x74>
   29f6c:	20000015 	stw	zero,0(r4)
   29f70:	21000104 	addi	r4,r4,4
   29f74:	21fffd36 	bltu	r4,r7,29f6c <__copybits+0x68>
   29f78:	f800283a 	ret

00029f7c <__any_on>:
   29f7c:	20c00417 	ldw	r3,16(r4)
   29f80:	2805d17a 	srai	r2,r5,5
   29f84:	21000504 	addi	r4,r4,20
   29f88:	18800d0e 	bge	r3,r2,29fc0 <__any_on+0x44>
   29f8c:	18c7883a 	add	r3,r3,r3
   29f90:	18c7883a 	add	r3,r3,r3
   29f94:	20c7883a 	add	r3,r4,r3
   29f98:	20c0192e 	bgeu	r4,r3,2a000 <__any_on+0x84>
   29f9c:	18bfff17 	ldw	r2,-4(r3)
   29fa0:	18ffff04 	addi	r3,r3,-4
   29fa4:	1000041e 	bne	r2,zero,29fb8 <__any_on+0x3c>
   29fa8:	20c0142e 	bgeu	r4,r3,29ffc <__any_on+0x80>
   29fac:	18ffff04 	addi	r3,r3,-4
   29fb0:	19400017 	ldw	r5,0(r3)
   29fb4:	283ffc26 	beq	r5,zero,29fa8 <__any_on+0x2c>
   29fb8:	00800044 	movi	r2,1
   29fbc:	f800283a 	ret
   29fc0:	10c00a0e 	bge	r2,r3,29fec <__any_on+0x70>
   29fc4:	1085883a 	add	r2,r2,r2
   29fc8:	1085883a 	add	r2,r2,r2
   29fcc:	294007cc 	andi	r5,r5,31
   29fd0:	2087883a 	add	r3,r4,r2
   29fd4:	283ff026 	beq	r5,zero,29f98 <__any_on+0x1c>
   29fd8:	19800017 	ldw	r6,0(r3)
   29fdc:	3144d83a 	srl	r2,r6,r5
   29fe0:	114a983a 	sll	r5,r2,r5
   29fe4:	317ff41e 	bne	r6,r5,29fb8 <__any_on+0x3c>
   29fe8:	003feb06 	br	29f98 <__any_on+0x1c>
   29fec:	1085883a 	add	r2,r2,r2
   29ff0:	1085883a 	add	r2,r2,r2
   29ff4:	2087883a 	add	r3,r4,r2
   29ff8:	003fe706 	br	29f98 <__any_on+0x1c>
   29ffc:	f800283a 	ret
   2a000:	0005883a 	mov	r2,zero
   2a004:	f800283a 	ret

0002a008 <_realloc_r>:
   2a008:	defff604 	addi	sp,sp,-40
   2a00c:	dc800215 	stw	r18,8(sp)
   2a010:	dfc00915 	stw	ra,36(sp)
   2a014:	df000815 	stw	fp,32(sp)
   2a018:	ddc00715 	stw	r23,28(sp)
   2a01c:	dd800615 	stw	r22,24(sp)
   2a020:	dd400515 	stw	r21,20(sp)
   2a024:	dd000415 	stw	r20,16(sp)
   2a028:	dcc00315 	stw	r19,12(sp)
   2a02c:	dc400115 	stw	r17,4(sp)
   2a030:	dc000015 	stw	r16,0(sp)
   2a034:	3025883a 	mov	r18,r6
   2a038:	2800b726 	beq	r5,zero,2a318 <_realloc_r+0x310>
   2a03c:	282b883a 	mov	r21,r5
   2a040:	2029883a 	mov	r20,r4
   2a044:	00316bc0 	call	316bc <__malloc_lock>
   2a048:	a8bfff17 	ldw	r2,-4(r21)
   2a04c:	043fff04 	movi	r16,-4
   2a050:	90c002c4 	addi	r3,r18,11
   2a054:	01000584 	movi	r4,22
   2a058:	acfffe04 	addi	r19,r21,-8
   2a05c:	1420703a 	and	r16,r2,r16
   2a060:	20c0332e 	bgeu	r4,r3,2a130 <_realloc_r+0x128>
   2a064:	047ffe04 	movi	r17,-8
   2a068:	1c62703a 	and	r17,r3,r17
   2a06c:	8807883a 	mov	r3,r17
   2a070:	88005816 	blt	r17,zero,2a1d4 <_realloc_r+0x1cc>
   2a074:	8c805736 	bltu	r17,r18,2a1d4 <_realloc_r+0x1cc>
   2a078:	80c0300e 	bge	r16,r3,2a13c <_realloc_r+0x134>
   2a07c:	070000f4 	movhi	fp,3
   2a080:	e7101904 	addi	fp,fp,16484
   2a084:	e1c00217 	ldw	r7,8(fp)
   2a088:	9c09883a 	add	r4,r19,r16
   2a08c:	22000117 	ldw	r8,4(r4)
   2a090:	21c06326 	beq	r4,r7,2a220 <_realloc_r+0x218>
   2a094:	017fff84 	movi	r5,-2
   2a098:	414a703a 	and	r5,r8,r5
   2a09c:	214b883a 	add	r5,r4,r5
   2a0a0:	29800117 	ldw	r6,4(r5)
   2a0a4:	3180004c 	andi	r6,r6,1
   2a0a8:	30003f26 	beq	r6,zero,2a1a8 <_realloc_r+0x1a0>
   2a0ac:	1080004c 	andi	r2,r2,1
   2a0b0:	10008326 	beq	r2,zero,2a2c0 <_realloc_r+0x2b8>
   2a0b4:	900b883a 	mov	r5,r18
   2a0b8:	a009883a 	mov	r4,r20
   2a0bc:	00283500 	call	28350 <_malloc_r>
   2a0c0:	1025883a 	mov	r18,r2
   2a0c4:	10011e26 	beq	r2,zero,2a540 <_realloc_r+0x538>
   2a0c8:	a93fff17 	ldw	r4,-4(r21)
   2a0cc:	10fffe04 	addi	r3,r2,-8
   2a0d0:	00bfff84 	movi	r2,-2
   2a0d4:	2084703a 	and	r2,r4,r2
   2a0d8:	9885883a 	add	r2,r19,r2
   2a0dc:	1880ee26 	beq	r3,r2,2a498 <_realloc_r+0x490>
   2a0e0:	81bfff04 	addi	r6,r16,-4
   2a0e4:	00800904 	movi	r2,36
   2a0e8:	1180b836 	bltu	r2,r6,2a3cc <_realloc_r+0x3c4>
   2a0ec:	00c004c4 	movi	r3,19
   2a0f0:	19809636 	bltu	r3,r6,2a34c <_realloc_r+0x344>
   2a0f4:	9005883a 	mov	r2,r18
   2a0f8:	a807883a 	mov	r3,r21
   2a0fc:	19000017 	ldw	r4,0(r3)
   2a100:	11000015 	stw	r4,0(r2)
   2a104:	19000117 	ldw	r4,4(r3)
   2a108:	11000115 	stw	r4,4(r2)
   2a10c:	18c00217 	ldw	r3,8(r3)
   2a110:	10c00215 	stw	r3,8(r2)
   2a114:	a80b883a 	mov	r5,r21
   2a118:	a009883a 	mov	r4,r20
   2a11c:	00277640 	call	27764 <_free_r>
   2a120:	a009883a 	mov	r4,r20
   2a124:	00316e00 	call	316e0 <__malloc_unlock>
   2a128:	9005883a 	mov	r2,r18
   2a12c:	00001206 	br	2a178 <_realloc_r+0x170>
   2a130:	00c00404 	movi	r3,16
   2a134:	1823883a 	mov	r17,r3
   2a138:	003fce06 	br	2a074 <_realloc_r+0x6c>
   2a13c:	a825883a 	mov	r18,r21
   2a140:	8445c83a 	sub	r2,r16,r17
   2a144:	00c003c4 	movi	r3,15
   2a148:	18802636 	bltu	r3,r2,2a1e4 <_realloc_r+0x1dc>
   2a14c:	99800117 	ldw	r6,4(r19)
   2a150:	9c07883a 	add	r3,r19,r16
   2a154:	3180004c 	andi	r6,r6,1
   2a158:	3420b03a 	or	r16,r6,r16
   2a15c:	9c000115 	stw	r16,4(r19)
   2a160:	18800117 	ldw	r2,4(r3)
   2a164:	10800054 	ori	r2,r2,1
   2a168:	18800115 	stw	r2,4(r3)
   2a16c:	a009883a 	mov	r4,r20
   2a170:	00316e00 	call	316e0 <__malloc_unlock>
   2a174:	9005883a 	mov	r2,r18
   2a178:	dfc00917 	ldw	ra,36(sp)
   2a17c:	df000817 	ldw	fp,32(sp)
   2a180:	ddc00717 	ldw	r23,28(sp)
   2a184:	dd800617 	ldw	r22,24(sp)
   2a188:	dd400517 	ldw	r21,20(sp)
   2a18c:	dd000417 	ldw	r20,16(sp)
   2a190:	dcc00317 	ldw	r19,12(sp)
   2a194:	dc800217 	ldw	r18,8(sp)
   2a198:	dc400117 	ldw	r17,4(sp)
   2a19c:	dc000017 	ldw	r16,0(sp)
   2a1a0:	dec00a04 	addi	sp,sp,40
   2a1a4:	f800283a 	ret
   2a1a8:	017fff04 	movi	r5,-4
   2a1ac:	414a703a 	and	r5,r8,r5
   2a1b0:	814d883a 	add	r6,r16,r5
   2a1b4:	30c01f16 	blt	r6,r3,2a234 <_realloc_r+0x22c>
   2a1b8:	20800317 	ldw	r2,12(r4)
   2a1bc:	20c00217 	ldw	r3,8(r4)
   2a1c0:	a825883a 	mov	r18,r21
   2a1c4:	3021883a 	mov	r16,r6
   2a1c8:	18800315 	stw	r2,12(r3)
   2a1cc:	10c00215 	stw	r3,8(r2)
   2a1d0:	003fdb06 	br	2a140 <_realloc_r+0x138>
   2a1d4:	00800304 	movi	r2,12
   2a1d8:	a0800015 	stw	r2,0(r20)
   2a1dc:	0005883a 	mov	r2,zero
   2a1e0:	003fe506 	br	2a178 <_realloc_r+0x170>
   2a1e4:	98c00117 	ldw	r3,4(r19)
   2a1e8:	9c4b883a 	add	r5,r19,r17
   2a1ec:	11000054 	ori	r4,r2,1
   2a1f0:	18c0004c 	andi	r3,r3,1
   2a1f4:	1c62b03a 	or	r17,r3,r17
   2a1f8:	9c400115 	stw	r17,4(r19)
   2a1fc:	29000115 	stw	r4,4(r5)
   2a200:	2885883a 	add	r2,r5,r2
   2a204:	10c00117 	ldw	r3,4(r2)
   2a208:	29400204 	addi	r5,r5,8
   2a20c:	a009883a 	mov	r4,r20
   2a210:	18c00054 	ori	r3,r3,1
   2a214:	10c00115 	stw	r3,4(r2)
   2a218:	00277640 	call	27764 <_free_r>
   2a21c:	003fd306 	br	2a16c <_realloc_r+0x164>
   2a220:	017fff04 	movi	r5,-4
   2a224:	414a703a 	and	r5,r8,r5
   2a228:	89800404 	addi	r6,r17,16
   2a22c:	8151883a 	add	r8,r16,r5
   2a230:	4180590e 	bge	r8,r6,2a398 <_realloc_r+0x390>
   2a234:	1080004c 	andi	r2,r2,1
   2a238:	103f9e1e 	bne	r2,zero,2a0b4 <_realloc_r+0xac>
   2a23c:	adbffe17 	ldw	r22,-8(r21)
   2a240:	00bfff04 	movi	r2,-4
   2a244:	9dadc83a 	sub	r22,r19,r22
   2a248:	b1800117 	ldw	r6,4(r22)
   2a24c:	3084703a 	and	r2,r6,r2
   2a250:	20002026 	beq	r4,zero,2a2d4 <_realloc_r+0x2cc>
   2a254:	80af883a 	add	r23,r16,r2
   2a258:	b96f883a 	add	r23,r23,r5
   2a25c:	21c05f26 	beq	r4,r7,2a3dc <_realloc_r+0x3d4>
   2a260:	b8c01c16 	blt	r23,r3,2a2d4 <_realloc_r+0x2cc>
   2a264:	20800317 	ldw	r2,12(r4)
   2a268:	20c00217 	ldw	r3,8(r4)
   2a26c:	81bfff04 	addi	r6,r16,-4
   2a270:	01000904 	movi	r4,36
   2a274:	18800315 	stw	r2,12(r3)
   2a278:	10c00215 	stw	r3,8(r2)
   2a27c:	b0c00217 	ldw	r3,8(r22)
   2a280:	b0800317 	ldw	r2,12(r22)
   2a284:	b4800204 	addi	r18,r22,8
   2a288:	18800315 	stw	r2,12(r3)
   2a28c:	10c00215 	stw	r3,8(r2)
   2a290:	21801b36 	bltu	r4,r6,2a300 <_realloc_r+0x2f8>
   2a294:	008004c4 	movi	r2,19
   2a298:	1180352e 	bgeu	r2,r6,2a370 <_realloc_r+0x368>
   2a29c:	a8800017 	ldw	r2,0(r21)
   2a2a0:	b0800215 	stw	r2,8(r22)
   2a2a4:	a8800117 	ldw	r2,4(r21)
   2a2a8:	b0800315 	stw	r2,12(r22)
   2a2ac:	008006c4 	movi	r2,27
   2a2b0:	11807f36 	bltu	r2,r6,2a4b0 <_realloc_r+0x4a8>
   2a2b4:	b0800404 	addi	r2,r22,16
   2a2b8:	ad400204 	addi	r21,r21,8
   2a2bc:	00002d06 	br	2a374 <_realloc_r+0x36c>
   2a2c0:	adbffe17 	ldw	r22,-8(r21)
   2a2c4:	00bfff04 	movi	r2,-4
   2a2c8:	9dadc83a 	sub	r22,r19,r22
   2a2cc:	b1000117 	ldw	r4,4(r22)
   2a2d0:	2084703a 	and	r2,r4,r2
   2a2d4:	b03f7726 	beq	r22,zero,2a0b4 <_realloc_r+0xac>
   2a2d8:	80af883a 	add	r23,r16,r2
   2a2dc:	b8ff7516 	blt	r23,r3,2a0b4 <_realloc_r+0xac>
   2a2e0:	b0800317 	ldw	r2,12(r22)
   2a2e4:	b0c00217 	ldw	r3,8(r22)
   2a2e8:	81bfff04 	addi	r6,r16,-4
   2a2ec:	01000904 	movi	r4,36
   2a2f0:	18800315 	stw	r2,12(r3)
   2a2f4:	10c00215 	stw	r3,8(r2)
   2a2f8:	b4800204 	addi	r18,r22,8
   2a2fc:	21bfe52e 	bgeu	r4,r6,2a294 <_realloc_r+0x28c>
   2a300:	a80b883a 	mov	r5,r21
   2a304:	9009883a 	mov	r4,r18
   2a308:	0028d880 	call	28d88 <memmove>
   2a30c:	b821883a 	mov	r16,r23
   2a310:	b027883a 	mov	r19,r22
   2a314:	003f8a06 	br	2a140 <_realloc_r+0x138>
   2a318:	300b883a 	mov	r5,r6
   2a31c:	dfc00917 	ldw	ra,36(sp)
   2a320:	df000817 	ldw	fp,32(sp)
   2a324:	ddc00717 	ldw	r23,28(sp)
   2a328:	dd800617 	ldw	r22,24(sp)
   2a32c:	dd400517 	ldw	r21,20(sp)
   2a330:	dd000417 	ldw	r20,16(sp)
   2a334:	dcc00317 	ldw	r19,12(sp)
   2a338:	dc800217 	ldw	r18,8(sp)
   2a33c:	dc400117 	ldw	r17,4(sp)
   2a340:	dc000017 	ldw	r16,0(sp)
   2a344:	dec00a04 	addi	sp,sp,40
   2a348:	00283501 	jmpi	28350 <_malloc_r>
   2a34c:	a8c00017 	ldw	r3,0(r21)
   2a350:	90c00015 	stw	r3,0(r18)
   2a354:	a8c00117 	ldw	r3,4(r21)
   2a358:	90c00115 	stw	r3,4(r18)
   2a35c:	00c006c4 	movi	r3,27
   2a360:	19804536 	bltu	r3,r6,2a478 <_realloc_r+0x470>
   2a364:	90800204 	addi	r2,r18,8
   2a368:	a8c00204 	addi	r3,r21,8
   2a36c:	003f6306 	br	2a0fc <_realloc_r+0xf4>
   2a370:	9005883a 	mov	r2,r18
   2a374:	a8c00017 	ldw	r3,0(r21)
   2a378:	b821883a 	mov	r16,r23
   2a37c:	b027883a 	mov	r19,r22
   2a380:	10c00015 	stw	r3,0(r2)
   2a384:	a8c00117 	ldw	r3,4(r21)
   2a388:	10c00115 	stw	r3,4(r2)
   2a38c:	a8c00217 	ldw	r3,8(r21)
   2a390:	10c00215 	stw	r3,8(r2)
   2a394:	003f6a06 	br	2a140 <_realloc_r+0x138>
   2a398:	9c67883a 	add	r19,r19,r17
   2a39c:	4445c83a 	sub	r2,r8,r17
   2a3a0:	e4c00215 	stw	r19,8(fp)
   2a3a4:	10800054 	ori	r2,r2,1
   2a3a8:	98800115 	stw	r2,4(r19)
   2a3ac:	a8bfff17 	ldw	r2,-4(r21)
   2a3b0:	a009883a 	mov	r4,r20
   2a3b4:	1080004c 	andi	r2,r2,1
   2a3b8:	1462b03a 	or	r17,r2,r17
   2a3bc:	ac7fff15 	stw	r17,-4(r21)
   2a3c0:	00316e00 	call	316e0 <__malloc_unlock>
   2a3c4:	a805883a 	mov	r2,r21
   2a3c8:	003f6b06 	br	2a178 <_realloc_r+0x170>
   2a3cc:	a80b883a 	mov	r5,r21
   2a3d0:	9009883a 	mov	r4,r18
   2a3d4:	0028d880 	call	28d88 <memmove>
   2a3d8:	003f4e06 	br	2a114 <_realloc_r+0x10c>
   2a3dc:	89000404 	addi	r4,r17,16
   2a3e0:	b93fbc16 	blt	r23,r4,2a2d4 <_realloc_r+0x2cc>
   2a3e4:	b0800317 	ldw	r2,12(r22)
   2a3e8:	b0c00217 	ldw	r3,8(r22)
   2a3ec:	81bfff04 	addi	r6,r16,-4
   2a3f0:	01000904 	movi	r4,36
   2a3f4:	18800315 	stw	r2,12(r3)
   2a3f8:	10c00215 	stw	r3,8(r2)
   2a3fc:	b4800204 	addi	r18,r22,8
   2a400:	21804336 	bltu	r4,r6,2a510 <_realloc_r+0x508>
   2a404:	008004c4 	movi	r2,19
   2a408:	11803f2e 	bgeu	r2,r6,2a508 <_realloc_r+0x500>
   2a40c:	a8800017 	ldw	r2,0(r21)
   2a410:	b0800215 	stw	r2,8(r22)
   2a414:	a8800117 	ldw	r2,4(r21)
   2a418:	b0800315 	stw	r2,12(r22)
   2a41c:	008006c4 	movi	r2,27
   2a420:	11803f36 	bltu	r2,r6,2a520 <_realloc_r+0x518>
   2a424:	b0800404 	addi	r2,r22,16
   2a428:	ad400204 	addi	r21,r21,8
   2a42c:	a8c00017 	ldw	r3,0(r21)
   2a430:	10c00015 	stw	r3,0(r2)
   2a434:	a8c00117 	ldw	r3,4(r21)
   2a438:	10c00115 	stw	r3,4(r2)
   2a43c:	a8c00217 	ldw	r3,8(r21)
   2a440:	10c00215 	stw	r3,8(r2)
   2a444:	b447883a 	add	r3,r22,r17
   2a448:	bc45c83a 	sub	r2,r23,r17
   2a44c:	e0c00215 	stw	r3,8(fp)
   2a450:	10800054 	ori	r2,r2,1
   2a454:	18800115 	stw	r2,4(r3)
   2a458:	b0800117 	ldw	r2,4(r22)
   2a45c:	a009883a 	mov	r4,r20
   2a460:	1080004c 	andi	r2,r2,1
   2a464:	1462b03a 	or	r17,r2,r17
   2a468:	b4400115 	stw	r17,4(r22)
   2a46c:	00316e00 	call	316e0 <__malloc_unlock>
   2a470:	9005883a 	mov	r2,r18
   2a474:	003f4006 	br	2a178 <_realloc_r+0x170>
   2a478:	a8c00217 	ldw	r3,8(r21)
   2a47c:	90c00215 	stw	r3,8(r18)
   2a480:	a8c00317 	ldw	r3,12(r21)
   2a484:	90c00315 	stw	r3,12(r18)
   2a488:	30801126 	beq	r6,r2,2a4d0 <_realloc_r+0x4c8>
   2a48c:	90800404 	addi	r2,r18,16
   2a490:	a8c00404 	addi	r3,r21,16
   2a494:	003f1906 	br	2a0fc <_realloc_r+0xf4>
   2a498:	90ffff17 	ldw	r3,-4(r18)
   2a49c:	00bfff04 	movi	r2,-4
   2a4a0:	a825883a 	mov	r18,r21
   2a4a4:	1884703a 	and	r2,r3,r2
   2a4a8:	80a1883a 	add	r16,r16,r2
   2a4ac:	003f2406 	br	2a140 <_realloc_r+0x138>
   2a4b0:	a8800217 	ldw	r2,8(r21)
   2a4b4:	b0800415 	stw	r2,16(r22)
   2a4b8:	a8800317 	ldw	r2,12(r21)
   2a4bc:	b0800515 	stw	r2,20(r22)
   2a4c0:	31000a26 	beq	r6,r4,2a4ec <_realloc_r+0x4e4>
   2a4c4:	b0800604 	addi	r2,r22,24
   2a4c8:	ad400404 	addi	r21,r21,16
   2a4cc:	003fa906 	br	2a374 <_realloc_r+0x36c>
   2a4d0:	a9000417 	ldw	r4,16(r21)
   2a4d4:	90800604 	addi	r2,r18,24
   2a4d8:	a8c00604 	addi	r3,r21,24
   2a4dc:	91000415 	stw	r4,16(r18)
   2a4e0:	a9000517 	ldw	r4,20(r21)
   2a4e4:	91000515 	stw	r4,20(r18)
   2a4e8:	003f0406 	br	2a0fc <_realloc_r+0xf4>
   2a4ec:	a8c00417 	ldw	r3,16(r21)
   2a4f0:	ad400604 	addi	r21,r21,24
   2a4f4:	b0800804 	addi	r2,r22,32
   2a4f8:	b0c00615 	stw	r3,24(r22)
   2a4fc:	a8ffff17 	ldw	r3,-4(r21)
   2a500:	b0c00715 	stw	r3,28(r22)
   2a504:	003f9b06 	br	2a374 <_realloc_r+0x36c>
   2a508:	9005883a 	mov	r2,r18
   2a50c:	003fc706 	br	2a42c <_realloc_r+0x424>
   2a510:	a80b883a 	mov	r5,r21
   2a514:	9009883a 	mov	r4,r18
   2a518:	0028d880 	call	28d88 <memmove>
   2a51c:	003fc906 	br	2a444 <_realloc_r+0x43c>
   2a520:	a8800217 	ldw	r2,8(r21)
   2a524:	b0800415 	stw	r2,16(r22)
   2a528:	a8800317 	ldw	r2,12(r21)
   2a52c:	b0800515 	stw	r2,20(r22)
   2a530:	31000726 	beq	r6,r4,2a550 <_realloc_r+0x548>
   2a534:	b0800604 	addi	r2,r22,24
   2a538:	ad400404 	addi	r21,r21,16
   2a53c:	003fbb06 	br	2a42c <_realloc_r+0x424>
   2a540:	a009883a 	mov	r4,r20
   2a544:	00316e00 	call	316e0 <__malloc_unlock>
   2a548:	0005883a 	mov	r2,zero
   2a54c:	003f0a06 	br	2a178 <_realloc_r+0x170>
   2a550:	a8c00417 	ldw	r3,16(r21)
   2a554:	ad400604 	addi	r21,r21,24
   2a558:	b0800804 	addi	r2,r22,32
   2a55c:	b0c00615 	stw	r3,24(r22)
   2a560:	a8ffff17 	ldw	r3,-4(r21)
   2a564:	b0c00715 	stw	r3,28(r22)
   2a568:	003fb006 	br	2a42c <_realloc_r+0x424>

0002a56c <__fpclassifyd>:
   2a56c:	00a00034 	movhi	r2,32768
   2a570:	10bfffc4 	addi	r2,r2,-1
   2a574:	2884703a 	and	r2,r5,r2
   2a578:	10000726 	beq	r2,zero,2a598 <__fpclassifyd+0x2c>
   2a57c:	00fffc34 	movhi	r3,65520
   2a580:	019ff834 	movhi	r6,32736
   2a584:	28c7883a 	add	r3,r5,r3
   2a588:	31bfffc4 	addi	r6,r6,-1
   2a58c:	30c00536 	bltu	r6,r3,2a5a4 <__fpclassifyd+0x38>
   2a590:	00800104 	movi	r2,4
   2a594:	f800283a 	ret
   2a598:	2000021e 	bne	r4,zero,2a5a4 <__fpclassifyd+0x38>
   2a59c:	00800084 	movi	r2,2
   2a5a0:	f800283a 	ret
   2a5a4:	00dffc34 	movhi	r3,32752
   2a5a8:	019ff834 	movhi	r6,32736
   2a5ac:	28cb883a 	add	r5,r5,r3
   2a5b0:	31bfffc4 	addi	r6,r6,-1
   2a5b4:	317ff62e 	bgeu	r6,r5,2a590 <__fpclassifyd+0x24>
   2a5b8:	01400434 	movhi	r5,16
   2a5bc:	297fffc4 	addi	r5,r5,-1
   2a5c0:	28800236 	bltu	r5,r2,2a5cc <__fpclassifyd+0x60>
   2a5c4:	008000c4 	movi	r2,3
   2a5c8:	f800283a 	ret
   2a5cc:	10c00226 	beq	r2,r3,2a5d8 <__fpclassifyd+0x6c>
   2a5d0:	0005883a 	mov	r2,zero
   2a5d4:	f800283a 	ret
   2a5d8:	2005003a 	cmpeq	r2,r4,zero
   2a5dc:	f800283a 	ret

0002a5e0 <_sbrk_r>:
   2a5e0:	defffd04 	addi	sp,sp,-12
   2a5e4:	dc000015 	stw	r16,0(sp)
   2a5e8:	040000f4 	movhi	r16,3
   2a5ec:	dc400115 	stw	r17,4(sp)
   2a5f0:	841c7204 	addi	r16,r16,29128
   2a5f4:	2023883a 	mov	r17,r4
   2a5f8:	2809883a 	mov	r4,r5
   2a5fc:	dfc00215 	stw	ra,8(sp)
   2a600:	80000015 	stw	zero,0(r16)
   2a604:	00318a00 	call	318a0 <sbrk>
   2a608:	00ffffc4 	movi	r3,-1
   2a60c:	10c00526 	beq	r2,r3,2a624 <_sbrk_r+0x44>
   2a610:	dfc00217 	ldw	ra,8(sp)
   2a614:	dc400117 	ldw	r17,4(sp)
   2a618:	dc000017 	ldw	r16,0(sp)
   2a61c:	dec00304 	addi	sp,sp,12
   2a620:	f800283a 	ret
   2a624:	80c00017 	ldw	r3,0(r16)
   2a628:	183ff926 	beq	r3,zero,2a610 <_sbrk_r+0x30>
   2a62c:	88c00015 	stw	r3,0(r17)
   2a630:	003ff706 	br	2a610 <_sbrk_r+0x30>

0002a634 <__sread>:
   2a634:	defffe04 	addi	sp,sp,-8
   2a638:	dc000015 	stw	r16,0(sp)
   2a63c:	2821883a 	mov	r16,r5
   2a640:	2940038f 	ldh	r5,14(r5)
   2a644:	dfc00115 	stw	ra,4(sp)
   2a648:	002d8340 	call	2d834 <_read_r>
   2a64c:	10000716 	blt	r2,zero,2a66c <__sread+0x38>
   2a650:	80c01417 	ldw	r3,80(r16)
   2a654:	1887883a 	add	r3,r3,r2
   2a658:	80c01415 	stw	r3,80(r16)
   2a65c:	dfc00117 	ldw	ra,4(sp)
   2a660:	dc000017 	ldw	r16,0(sp)
   2a664:	dec00204 	addi	sp,sp,8
   2a668:	f800283a 	ret
   2a66c:	80c0030b 	ldhu	r3,12(r16)
   2a670:	18fbffcc 	andi	r3,r3,61439
   2a674:	80c0030d 	sth	r3,12(r16)
   2a678:	dfc00117 	ldw	ra,4(sp)
   2a67c:	dc000017 	ldw	r16,0(sp)
   2a680:	dec00204 	addi	sp,sp,8
   2a684:	f800283a 	ret

0002a688 <__seofread>:
   2a688:	0005883a 	mov	r2,zero
   2a68c:	f800283a 	ret

0002a690 <__swrite>:
   2a690:	2880030b 	ldhu	r2,12(r5)
   2a694:	defffb04 	addi	sp,sp,-20
   2a698:	dcc00315 	stw	r19,12(sp)
   2a69c:	dc800215 	stw	r18,8(sp)
   2a6a0:	dc400115 	stw	r17,4(sp)
   2a6a4:	dc000015 	stw	r16,0(sp)
   2a6a8:	dfc00415 	stw	ra,16(sp)
   2a6ac:	10c0400c 	andi	r3,r2,256
   2a6b0:	2821883a 	mov	r16,r5
   2a6b4:	2023883a 	mov	r17,r4
   2a6b8:	3025883a 	mov	r18,r6
   2a6bc:	3827883a 	mov	r19,r7
   2a6c0:	18000526 	beq	r3,zero,2a6d8 <__swrite+0x48>
   2a6c4:	2940038f 	ldh	r5,14(r5)
   2a6c8:	01c00084 	movi	r7,2
   2a6cc:	000d883a 	mov	r6,zero
   2a6d0:	002d7d40 	call	2d7d4 <_lseek_r>
   2a6d4:	8080030b 	ldhu	r2,12(r16)
   2a6d8:	8140038f 	ldh	r5,14(r16)
   2a6dc:	10bbffcc 	andi	r2,r2,61439
   2a6e0:	980f883a 	mov	r7,r19
   2a6e4:	900d883a 	mov	r6,r18
   2a6e8:	8809883a 	mov	r4,r17
   2a6ec:	8080030d 	sth	r2,12(r16)
   2a6f0:	dfc00417 	ldw	ra,16(sp)
   2a6f4:	dcc00317 	ldw	r19,12(sp)
   2a6f8:	dc800217 	ldw	r18,8(sp)
   2a6fc:	dc400117 	ldw	r17,4(sp)
   2a700:	dc000017 	ldw	r16,0(sp)
   2a704:	dec00504 	addi	sp,sp,20
   2a708:	002d2a01 	jmpi	2d2a0 <_write_r>

0002a70c <__sseek>:
   2a70c:	defffe04 	addi	sp,sp,-8
   2a710:	dc000015 	stw	r16,0(sp)
   2a714:	2821883a 	mov	r16,r5
   2a718:	2940038f 	ldh	r5,14(r5)
   2a71c:	dfc00115 	stw	ra,4(sp)
   2a720:	002d7d40 	call	2d7d4 <_lseek_r>
   2a724:	00ffffc4 	movi	r3,-1
   2a728:	10c00826 	beq	r2,r3,2a74c <__sseek+0x40>
   2a72c:	80c0030b 	ldhu	r3,12(r16)
   2a730:	80801415 	stw	r2,80(r16)
   2a734:	18c40014 	ori	r3,r3,4096
   2a738:	80c0030d 	sth	r3,12(r16)
   2a73c:	dfc00117 	ldw	ra,4(sp)
   2a740:	dc000017 	ldw	r16,0(sp)
   2a744:	dec00204 	addi	sp,sp,8
   2a748:	f800283a 	ret
   2a74c:	80c0030b 	ldhu	r3,12(r16)
   2a750:	18fbffcc 	andi	r3,r3,61439
   2a754:	80c0030d 	sth	r3,12(r16)
   2a758:	dfc00117 	ldw	ra,4(sp)
   2a75c:	dc000017 	ldw	r16,0(sp)
   2a760:	dec00204 	addi	sp,sp,8
   2a764:	f800283a 	ret

0002a768 <__sclose>:
   2a768:	2940038f 	ldh	r5,14(r5)
   2a76c:	002d3001 	jmpi	2d300 <_close_r>

0002a770 <strcmp>:
   2a770:	2144b03a 	or	r2,r4,r5
   2a774:	108000cc 	andi	r2,r2,3
   2a778:	1000171e 	bne	r2,zero,2a7d8 <strcmp+0x68>
   2a77c:	20800017 	ldw	r2,0(r4)
   2a780:	28c00017 	ldw	r3,0(r5)
   2a784:	10c0141e 	bne	r2,r3,2a7d8 <strcmp+0x68>
   2a788:	027fbff4 	movhi	r9,65279
   2a78c:	4a7fbfc4 	addi	r9,r9,-257
   2a790:	0086303a 	nor	r3,zero,r2
   2a794:	02202074 	movhi	r8,32897
   2a798:	1245883a 	add	r2,r2,r9
   2a79c:	42202004 	addi	r8,r8,-32640
   2a7a0:	10c4703a 	and	r2,r2,r3
   2a7a4:	1204703a 	and	r2,r2,r8
   2a7a8:	10000226 	beq	r2,zero,2a7b4 <strcmp+0x44>
   2a7ac:	00002306 	br	2a83c <strcmp+0xcc>
   2a7b0:	1000221e 	bne	r2,zero,2a83c <strcmp+0xcc>
   2a7b4:	21000104 	addi	r4,r4,4
   2a7b8:	20c00017 	ldw	r3,0(r4)
   2a7bc:	29400104 	addi	r5,r5,4
   2a7c0:	29800017 	ldw	r6,0(r5)
   2a7c4:	1a4f883a 	add	r7,r3,r9
   2a7c8:	00c4303a 	nor	r2,zero,r3
   2a7cc:	3884703a 	and	r2,r7,r2
   2a7d0:	1204703a 	and	r2,r2,r8
   2a7d4:	19bff626 	beq	r3,r6,2a7b0 <strcmp+0x40>
   2a7d8:	20800003 	ldbu	r2,0(r4)
   2a7dc:	10c03fcc 	andi	r3,r2,255
   2a7e0:	18c0201c 	xori	r3,r3,128
   2a7e4:	18ffe004 	addi	r3,r3,-128
   2a7e8:	18000c26 	beq	r3,zero,2a81c <strcmp+0xac>
   2a7ec:	29800007 	ldb	r6,0(r5)
   2a7f0:	19800326 	beq	r3,r6,2a800 <strcmp+0x90>
   2a7f4:	00001306 	br	2a844 <strcmp+0xd4>
   2a7f8:	29800007 	ldb	r6,0(r5)
   2a7fc:	11800b1e 	bne	r2,r6,2a82c <strcmp+0xbc>
   2a800:	21000044 	addi	r4,r4,1
   2a804:	20c00003 	ldbu	r3,0(r4)
   2a808:	29400044 	addi	r5,r5,1
   2a80c:	18803fcc 	andi	r2,r3,255
   2a810:	1080201c 	xori	r2,r2,128
   2a814:	10bfe004 	addi	r2,r2,-128
   2a818:	103ff71e 	bne	r2,zero,2a7f8 <strcmp+0x88>
   2a81c:	0007883a 	mov	r3,zero
   2a820:	28800003 	ldbu	r2,0(r5)
   2a824:	1885c83a 	sub	r2,r3,r2
   2a828:	f800283a 	ret
   2a82c:	28800003 	ldbu	r2,0(r5)
   2a830:	18c03fcc 	andi	r3,r3,255
   2a834:	1885c83a 	sub	r2,r3,r2
   2a838:	f800283a 	ret
   2a83c:	0005883a 	mov	r2,zero
   2a840:	f800283a 	ret
   2a844:	10c03fcc 	andi	r3,r2,255
   2a848:	003ff506 	br	2a820 <strcmp+0xb0>

0002a84c <__ssprint_r>:
   2a84c:	30800217 	ldw	r2,8(r6)
   2a850:	defff604 	addi	sp,sp,-40
   2a854:	dc800215 	stw	r18,8(sp)
   2a858:	dfc00915 	stw	ra,36(sp)
   2a85c:	df000815 	stw	fp,32(sp)
   2a860:	ddc00715 	stw	r23,28(sp)
   2a864:	dd800615 	stw	r22,24(sp)
   2a868:	dd400515 	stw	r21,20(sp)
   2a86c:	dd000415 	stw	r20,16(sp)
   2a870:	dcc00315 	stw	r19,12(sp)
   2a874:	dc400115 	stw	r17,4(sp)
   2a878:	dc000015 	stw	r16,0(sp)
   2a87c:	3025883a 	mov	r18,r6
   2a880:	10005826 	beq	r2,zero,2a9e4 <__ssprint_r+0x198>
   2a884:	2027883a 	mov	r19,r4
   2a888:	35c00017 	ldw	r23,0(r6)
   2a88c:	29000017 	ldw	r4,0(r5)
   2a890:	28800217 	ldw	r2,8(r5)
   2a894:	2823883a 	mov	r17,r5
   2a898:	0039883a 	mov	fp,zero
   2a89c:	0021883a 	mov	r16,zero
   2a8a0:	80003926 	beq	r16,zero,2a988 <__ssprint_r+0x13c>
   2a8a4:	102b883a 	mov	r21,r2
   2a8a8:	102d883a 	mov	r22,r2
   2a8ac:	80803a36 	bltu	r16,r2,2a998 <__ssprint_r+0x14c>
   2a8b0:	88c0030b 	ldhu	r3,12(r17)
   2a8b4:	1881200c 	andi	r2,r3,1152
   2a8b8:	10002626 	beq	r2,zero,2a954 <__ssprint_r+0x108>
   2a8bc:	88800517 	ldw	r2,20(r17)
   2a8c0:	89400417 	ldw	r5,16(r17)
   2a8c4:	81800044 	addi	r6,r16,1
   2a8c8:	108f883a 	add	r7,r2,r2
   2a8cc:	3885883a 	add	r2,r7,r2
   2a8d0:	100ed7fa 	srli	r7,r2,31
   2a8d4:	216dc83a 	sub	r22,r4,r5
   2a8d8:	3589883a 	add	r4,r6,r22
   2a8dc:	3885883a 	add	r2,r7,r2
   2a8e0:	102bd07a 	srai	r21,r2,1
   2a8e4:	a80d883a 	mov	r6,r21
   2a8e8:	a900022e 	bgeu	r21,r4,2a8f4 <__ssprint_r+0xa8>
   2a8ec:	202b883a 	mov	r21,r4
   2a8f0:	200d883a 	mov	r6,r4
   2a8f4:	18c1000c 	andi	r3,r3,1024
   2a8f8:	18002a26 	beq	r3,zero,2a9a4 <__ssprint_r+0x158>
   2a8fc:	300b883a 	mov	r5,r6
   2a900:	9809883a 	mov	r4,r19
   2a904:	00283500 	call	28350 <_malloc_r>
   2a908:	1029883a 	mov	r20,r2
   2a90c:	10002c26 	beq	r2,zero,2a9c0 <__ssprint_r+0x174>
   2a910:	89400417 	ldw	r5,16(r17)
   2a914:	b00d883a 	mov	r6,r22
   2a918:	1009883a 	mov	r4,r2
   2a91c:	0028c400 	call	28c40 <memcpy>
   2a920:	8880030b 	ldhu	r2,12(r17)
   2a924:	00fedfc4 	movi	r3,-1153
   2a928:	10c4703a 	and	r2,r2,r3
   2a92c:	10802014 	ori	r2,r2,128
   2a930:	8880030d 	sth	r2,12(r17)
   2a934:	a589883a 	add	r4,r20,r22
   2a938:	adadc83a 	sub	r22,r21,r22
   2a93c:	8d400515 	stw	r21,20(r17)
   2a940:	8d800215 	stw	r22,8(r17)
   2a944:	8d000415 	stw	r20,16(r17)
   2a948:	89000015 	stw	r4,0(r17)
   2a94c:	802b883a 	mov	r21,r16
   2a950:	802d883a 	mov	r22,r16
   2a954:	b00d883a 	mov	r6,r22
   2a958:	e00b883a 	mov	r5,fp
   2a95c:	0028d880 	call	28d88 <memmove>
   2a960:	88800217 	ldw	r2,8(r17)
   2a964:	89000017 	ldw	r4,0(r17)
   2a968:	90c00217 	ldw	r3,8(r18)
   2a96c:	1545c83a 	sub	r2,r2,r21
   2a970:	2589883a 	add	r4,r4,r22
   2a974:	88800215 	stw	r2,8(r17)
   2a978:	89000015 	stw	r4,0(r17)
   2a97c:	1c21c83a 	sub	r16,r3,r16
   2a980:	94000215 	stw	r16,8(r18)
   2a984:	80001726 	beq	r16,zero,2a9e4 <__ssprint_r+0x198>
   2a988:	bf000017 	ldw	fp,0(r23)
   2a98c:	bc000117 	ldw	r16,4(r23)
   2a990:	bdc00204 	addi	r23,r23,8
   2a994:	003fc206 	br	2a8a0 <__ssprint_r+0x54>
   2a998:	802b883a 	mov	r21,r16
   2a99c:	802d883a 	mov	r22,r16
   2a9a0:	003fec06 	br	2a954 <__ssprint_r+0x108>
   2a9a4:	9809883a 	mov	r4,r19
   2a9a8:	002a0080 	call	2a008 <_realloc_r>
   2a9ac:	1029883a 	mov	r20,r2
   2a9b0:	103fe01e 	bne	r2,zero,2a934 <__ssprint_r+0xe8>
   2a9b4:	89400417 	ldw	r5,16(r17)
   2a9b8:	9809883a 	mov	r4,r19
   2a9bc:	00277640 	call	27764 <_free_r>
   2a9c0:	88c0030b 	ldhu	r3,12(r17)
   2a9c4:	00800304 	movi	r2,12
   2a9c8:	98800015 	stw	r2,0(r19)
   2a9cc:	18c01014 	ori	r3,r3,64
   2a9d0:	88c0030d 	sth	r3,12(r17)
   2a9d4:	00bfffc4 	movi	r2,-1
   2a9d8:	90000215 	stw	zero,8(r18)
   2a9dc:	90000115 	stw	zero,4(r18)
   2a9e0:	00000206 	br	2a9ec <__ssprint_r+0x1a0>
   2a9e4:	90000115 	stw	zero,4(r18)
   2a9e8:	0005883a 	mov	r2,zero
   2a9ec:	dfc00917 	ldw	ra,36(sp)
   2a9f0:	df000817 	ldw	fp,32(sp)
   2a9f4:	ddc00717 	ldw	r23,28(sp)
   2a9f8:	dd800617 	ldw	r22,24(sp)
   2a9fc:	dd400517 	ldw	r21,20(sp)
   2aa00:	dd000417 	ldw	r20,16(sp)
   2aa04:	dcc00317 	ldw	r19,12(sp)
   2aa08:	dc800217 	ldw	r18,8(sp)
   2aa0c:	dc400117 	ldw	r17,4(sp)
   2aa10:	dc000017 	ldw	r16,0(sp)
   2aa14:	dec00a04 	addi	sp,sp,40
   2aa18:	f800283a 	ret

0002aa1c <___svfiprintf_internal_r>:
   2aa1c:	2880030b 	ldhu	r2,12(r5)
   2aa20:	deffc804 	addi	sp,sp,-224
   2aa24:	dcc03115 	stw	r19,196(sp)
   2aa28:	dfc03715 	stw	ra,220(sp)
   2aa2c:	df003615 	stw	fp,216(sp)
   2aa30:	ddc03515 	stw	r23,212(sp)
   2aa34:	dd803415 	stw	r22,208(sp)
   2aa38:	dd403315 	stw	r21,204(sp)
   2aa3c:	dd003215 	stw	r20,200(sp)
   2aa40:	dc803015 	stw	r18,192(sp)
   2aa44:	dc402f15 	stw	r17,188(sp)
   2aa48:	dc002e15 	stw	r16,184(sp)
   2aa4c:	d9402715 	stw	r5,156(sp)
   2aa50:	d9002a15 	stw	r4,168(sp)
   2aa54:	1080200c 	andi	r2,r2,128
   2aa58:	d9c02315 	stw	r7,140(sp)
   2aa5c:	3027883a 	mov	r19,r6
   2aa60:	10000226 	beq	r2,zero,2aa6c <___svfiprintf_internal_r+0x50>
   2aa64:	28800417 	ldw	r2,16(r5)
   2aa68:	10041d26 	beq	r2,zero,2bae0 <___svfiprintf_internal_r+0x10c4>
   2aa6c:	dac01a04 	addi	r11,sp,104
   2aa70:	dac01e15 	stw	r11,120(sp)
   2aa74:	d8801e17 	ldw	r2,120(sp)
   2aa78:	dac019c4 	addi	r11,sp,103
   2aa7c:	dd402a17 	ldw	r21,168(sp)
   2aa80:	ddc02717 	ldw	r23,156(sp)
   2aa84:	058000f4 	movhi	r22,3
   2aa88:	050000f4 	movhi	r20,3
   2aa8c:	dac01f15 	stw	r11,124(sp)
   2aa90:	12d7c83a 	sub	r11,r2,r11
   2aa94:	b58e9904 	addi	r22,r22,14948
   2aa98:	a50e9504 	addi	r20,r20,14932
   2aa9c:	dec01a15 	stw	sp,104(sp)
   2aaa0:	d8001c15 	stw	zero,112(sp)
   2aaa4:	d8001b15 	stw	zero,108(sp)
   2aaa8:	d811883a 	mov	r8,sp
   2aaac:	d8002915 	stw	zero,164(sp)
   2aab0:	d8002515 	stw	zero,148(sp)
   2aab4:	dac02b15 	stw	r11,172(sp)
   2aab8:	98800007 	ldb	r2,0(r19)
   2aabc:	1002dd26 	beq	r2,zero,2b634 <___svfiprintf_internal_r+0xc18>
   2aac0:	00c00944 	movi	r3,37
   2aac4:	9823883a 	mov	r17,r19
   2aac8:	10c0021e 	bne	r2,r3,2aad4 <___svfiprintf_internal_r+0xb8>
   2aacc:	00001406 	br	2ab20 <___svfiprintf_internal_r+0x104>
   2aad0:	10c00326 	beq	r2,r3,2aae0 <___svfiprintf_internal_r+0xc4>
   2aad4:	8c400044 	addi	r17,r17,1
   2aad8:	88800007 	ldb	r2,0(r17)
   2aadc:	103ffc1e 	bne	r2,zero,2aad0 <___svfiprintf_internal_r+0xb4>
   2aae0:	8ce1c83a 	sub	r16,r17,r19
   2aae4:	80000e26 	beq	r16,zero,2ab20 <___svfiprintf_internal_r+0x104>
   2aae8:	d8c01c17 	ldw	r3,112(sp)
   2aaec:	d8801b17 	ldw	r2,108(sp)
   2aaf0:	44c00015 	stw	r19,0(r8)
   2aaf4:	1c07883a 	add	r3,r3,r16
   2aaf8:	10800044 	addi	r2,r2,1
   2aafc:	d8c01c15 	stw	r3,112(sp)
   2ab00:	44000115 	stw	r16,4(r8)
   2ab04:	d8801b15 	stw	r2,108(sp)
   2ab08:	00c001c4 	movi	r3,7
   2ab0c:	18831e16 	blt	r3,r2,2b788 <___svfiprintf_internal_r+0xd6c>
   2ab10:	42000204 	addi	r8,r8,8
   2ab14:	dac02517 	ldw	r11,148(sp)
   2ab18:	5c17883a 	add	r11,r11,r16
   2ab1c:	dac02515 	stw	r11,148(sp)
   2ab20:	88800007 	ldb	r2,0(r17)
   2ab24:	1002c526 	beq	r2,zero,2b63c <___svfiprintf_internal_r+0xc20>
   2ab28:	88c00047 	ldb	r3,1(r17)
   2ab2c:	8cc00044 	addi	r19,r17,1
   2ab30:	d8001d85 	stb	zero,118(sp)
   2ab34:	0009883a 	mov	r4,zero
   2ab38:	000f883a 	mov	r7,zero
   2ab3c:	043fffc4 	movi	r16,-1
   2ab40:	d8002415 	stw	zero,144(sp)
   2ab44:	0025883a 	mov	r18,zero
   2ab48:	01401604 	movi	r5,88
   2ab4c:	01800244 	movi	r6,9
   2ab50:	02800a84 	movi	r10,42
   2ab54:	02401b04 	movi	r9,108
   2ab58:	9cc00044 	addi	r19,r19,1
   2ab5c:	18bff804 	addi	r2,r3,-32
   2ab60:	2881dd36 	bltu	r5,r2,2b2d8 <___svfiprintf_internal_r+0x8bc>
   2ab64:	100490ba 	slli	r2,r2,2
   2ab68:	02c000f4 	movhi	r11,3
   2ab6c:	5aeadf04 	addi	r11,r11,-21636
   2ab70:	12c5883a 	add	r2,r2,r11
   2ab74:	10800017 	ldw	r2,0(r2)
   2ab78:	1000683a 	jmp	r2
   2ab7c:	0002ad78 	rdprs	zero,zero,2741
   2ab80:	0002b2d8 	cmpnei	zero,zero,2763
   2ab84:	0002b2d8 	cmpnei	zero,zero,2763
   2ab88:	0002ad6c 	andhi	zero,zero,2741
   2ab8c:	0002b2d8 	cmpnei	zero,zero,2763
   2ab90:	0002b2d8 	cmpnei	zero,zero,2763
   2ab94:	0002b2d8 	cmpnei	zero,zero,2763
   2ab98:	0002b2d8 	cmpnei	zero,zero,2763
   2ab9c:	0002b2d8 	cmpnei	zero,zero,2763
   2aba0:	0002b2d8 	cmpnei	zero,zero,2763
   2aba4:	0002ace0 	cmpeqi	zero,zero,2739
   2aba8:	0002aebc 	xorhi	zero,zero,2746
   2abac:	0002b2d8 	cmpnei	zero,zero,2763
   2abb0:	0002ad0c 	andi	zero,zero,2740
   2abb4:	0002b30c 	andi	zero,zero,2764
   2abb8:	0002b2d8 	cmpnei	zero,zero,2763
   2abbc:	0002b300 	call	2b30 <__alt_mem_MEMOIRE_ONCHIP-0x1d4d0>
   2abc0:	0002b2a0 	cmpeqi	zero,zero,2762
   2abc4:	0002b2a0 	cmpeqi	zero,zero,2762
   2abc8:	0002b2a0 	cmpeqi	zero,zero,2762
   2abcc:	0002b2a0 	cmpeqi	zero,zero,2762
   2abd0:	0002b2a0 	cmpeqi	zero,zero,2762
   2abd4:	0002b2a0 	cmpeqi	zero,zero,2762
   2abd8:	0002b2a0 	cmpeqi	zero,zero,2762
   2abdc:	0002b2a0 	cmpeqi	zero,zero,2762
   2abe0:	0002b2a0 	cmpeqi	zero,zero,2762
   2abe4:	0002b2d8 	cmpnei	zero,zero,2763
   2abe8:	0002b2d8 	cmpnei	zero,zero,2763
   2abec:	0002b2d8 	cmpnei	zero,zero,2763
   2abf0:	0002b2d8 	cmpnei	zero,zero,2763
   2abf4:	0002b2d8 	cmpnei	zero,zero,2763
   2abf8:	0002b2d8 	cmpnei	zero,zero,2763
   2abfc:	0002b2d8 	cmpnei	zero,zero,2763
   2ac00:	0002b2d8 	cmpnei	zero,zero,2763
   2ac04:	0002b2d8 	cmpnei	zero,zero,2763
   2ac08:	0002b2d8 	cmpnei	zero,zero,2763
   2ac0c:	0002b23c 	xorhi	zero,zero,2760
   2ac10:	0002b2d8 	cmpnei	zero,zero,2763
   2ac14:	0002b2d8 	cmpnei	zero,zero,2763
   2ac18:	0002b2d8 	cmpnei	zero,zero,2763
   2ac1c:	0002b2d8 	cmpnei	zero,zero,2763
   2ac20:	0002b2d8 	cmpnei	zero,zero,2763
   2ac24:	0002b2d8 	cmpnei	zero,zero,2763
   2ac28:	0002b2d8 	cmpnei	zero,zero,2763
   2ac2c:	0002b2d8 	cmpnei	zero,zero,2763
   2ac30:	0002b2d8 	cmpnei	zero,zero,2763
   2ac34:	0002b2d8 	cmpnei	zero,zero,2763
   2ac38:	0002b3b4 	movhi	zero,2766
   2ac3c:	0002b2d8 	cmpnei	zero,zero,2763
   2ac40:	0002b2d8 	cmpnei	zero,zero,2763
   2ac44:	0002b2d8 	cmpnei	zero,zero,2763
   2ac48:	0002b2d8 	cmpnei	zero,zero,2763
   2ac4c:	0002b2d8 	cmpnei	zero,zero,2763
   2ac50:	0002b34c 	andi	zero,zero,2765
   2ac54:	0002b2d8 	cmpnei	zero,zero,2763
   2ac58:	0002b2d8 	cmpnei	zero,zero,2763
   2ac5c:	0002b080 	call	2b08 <__alt_mem_MEMOIRE_ONCHIP-0x1d4f8>
   2ac60:	0002b2d8 	cmpnei	zero,zero,2763
   2ac64:	0002b2d8 	cmpnei	zero,zero,2763
   2ac68:	0002b2d8 	cmpnei	zero,zero,2763
   2ac6c:	0002b2d8 	cmpnei	zero,zero,2763
   2ac70:	0002b2d8 	cmpnei	zero,zero,2763
   2ac74:	0002b2d8 	cmpnei	zero,zero,2763
   2ac78:	0002b2d8 	cmpnei	zero,zero,2763
   2ac7c:	0002b2d8 	cmpnei	zero,zero,2763
   2ac80:	0002b2d8 	cmpnei	zero,zero,2763
   2ac84:	0002b2d8 	cmpnei	zero,zero,2763
   2ac88:	0002af70 	cmpltui	zero,zero,2749
   2ac8c:	0002b11c 	xori	zero,zero,2756
   2ac90:	0002b2d8 	cmpnei	zero,zero,2763
   2ac94:	0002b2d8 	cmpnei	zero,zero,2763
   2ac98:	0002b2d8 	cmpnei	zero,zero,2763
   2ac9c:	0002b110 	cmplti	zero,zero,2756
   2aca0:	0002b11c 	xori	zero,zero,2756
   2aca4:	0002b2d8 	cmpnei	zero,zero,2763
   2aca8:	0002b2d8 	cmpnei	zero,zero,2763
   2acac:	0002b100 	call	2b10 <__alt_mem_MEMOIRE_ONCHIP-0x1d4f0>
   2acb0:	0002b2d8 	cmpnei	zero,zero,2763
   2acb4:	0002b0c4 	movi	zero,2755
   2acb8:	0002aecc 	andi	zero,zero,2747
   2acbc:	0002ad18 	cmpnei	zero,zero,2740
   2acc0:	0002b230 	cmpltui	zero,zero,2760
   2acc4:	0002b2d8 	cmpnei	zero,zero,2763
   2acc8:	0002b1e4 	muli	zero,zero,2759
   2accc:	0002b2d8 	cmpnei	zero,zero,2763
   2acd0:	0002ae3c 	xorhi	zero,zero,2744
   2acd4:	0002b2d8 	cmpnei	zero,zero,2763
   2acd8:	0002b2d8 	cmpnei	zero,zero,2763
   2acdc:	0002ad98 	cmpnei	zero,zero,2742
   2ace0:	dac02317 	ldw	r11,140(sp)
   2ace4:	5ac00017 	ldw	r11,0(r11)
   2ace8:	dac02415 	stw	r11,144(sp)
   2acec:	dac02317 	ldw	r11,140(sp)
   2acf0:	58800104 	addi	r2,r11,4
   2acf4:	dac02417 	ldw	r11,144(sp)
   2acf8:	5802e90e 	bge	r11,zero,2b8a0 <___svfiprintf_internal_r+0xe84>
   2acfc:	dac02417 	ldw	r11,144(sp)
   2ad00:	d8802315 	stw	r2,140(sp)
   2ad04:	02d7c83a 	sub	r11,zero,r11
   2ad08:	dac02415 	stw	r11,144(sp)
   2ad0c:	94800114 	ori	r18,r18,4
   2ad10:	98c00007 	ldb	r3,0(r19)
   2ad14:	003f9006 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2ad18:	00800c04 	movi	r2,48
   2ad1c:	dac02317 	ldw	r11,140(sp)
   2ad20:	d8801d05 	stb	r2,116(sp)
   2ad24:	00801e04 	movi	r2,120
   2ad28:	d8801d45 	stb	r2,117(sp)
   2ad2c:	d8001d85 	stb	zero,118(sp)
   2ad30:	58c00104 	addi	r3,r11,4
   2ad34:	5f000017 	ldw	fp,0(r11)
   2ad38:	0013883a 	mov	r9,zero
   2ad3c:	90800094 	ori	r2,r18,2
   2ad40:	80032b16 	blt	r16,zero,2b9f0 <___svfiprintf_internal_r+0xfd4>
   2ad44:	00bfdfc4 	movi	r2,-129
   2ad48:	90a4703a 	and	r18,r18,r2
   2ad4c:	d8c02315 	stw	r3,140(sp)
   2ad50:	94800094 	ori	r18,r18,2
   2ad54:	e002dc26 	beq	fp,zero,2b8c8 <___svfiprintf_internal_r+0xeac>
   2ad58:	010000f4 	movhi	r4,3
   2ad5c:	210e2c04 	addi	r4,r4,14512
   2ad60:	0015883a 	mov	r10,zero
   2ad64:	d9002915 	stw	r4,164(sp)
   2ad68:	00002306 	br	2adf8 <___svfiprintf_internal_r+0x3dc>
   2ad6c:	94800054 	ori	r18,r18,1
   2ad70:	98c00007 	ldb	r3,0(r19)
   2ad74:	003f7806 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2ad78:	38803fcc 	andi	r2,r7,255
   2ad7c:	1080201c 	xori	r2,r2,128
   2ad80:	10bfe004 	addi	r2,r2,-128
   2ad84:	1002f31e 	bne	r2,zero,2b954 <___svfiprintf_internal_r+0xf38>
   2ad88:	01000044 	movi	r4,1
   2ad8c:	01c00804 	movi	r7,32
   2ad90:	98c00007 	ldb	r3,0(r19)
   2ad94:	003f7006 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2ad98:	21003fcc 	andi	r4,r4,255
   2ad9c:	2003aa1e 	bne	r4,zero,2bc48 <___svfiprintf_internal_r+0x122c>
   2ada0:	008000f4 	movhi	r2,3
   2ada4:	108e2c04 	addi	r2,r2,14512
   2ada8:	d8802915 	stw	r2,164(sp)
   2adac:	9080080c 	andi	r2,r18,32
   2adb0:	1000ba26 	beq	r2,zero,2b09c <___svfiprintf_internal_r+0x680>
   2adb4:	dac02317 	ldw	r11,140(sp)
   2adb8:	5f000017 	ldw	fp,0(r11)
   2adbc:	5a400117 	ldw	r9,4(r11)
   2adc0:	5ac00204 	addi	r11,r11,8
   2adc4:	dac02315 	stw	r11,140(sp)
   2adc8:	9080004c 	andi	r2,r18,1
   2adcc:	10029026 	beq	r2,zero,2b810 <___svfiprintf_internal_r+0xdf4>
   2add0:	e244b03a 	or	r2,fp,r9
   2add4:	1002d41e 	bne	r2,zero,2b928 <___svfiprintf_internal_r+0xf0c>
   2add8:	d8001d85 	stb	zero,118(sp)
   2addc:	80030b16 	blt	r16,zero,2ba0c <___svfiprintf_internal_r+0xff0>
   2ade0:	00bfdfc4 	movi	r2,-129
   2ade4:	90a4703a 	and	r18,r18,r2
   2ade8:	0015883a 	mov	r10,zero
   2adec:	80002426 	beq	r16,zero,2ae80 <___svfiprintf_internal_r+0x464>
   2adf0:	0039883a 	mov	fp,zero
   2adf4:	0013883a 	mov	r9,zero
   2adf8:	d9002917 	ldw	r4,164(sp)
   2adfc:	dc401a04 	addi	r17,sp,104
   2ae00:	e08003cc 	andi	r2,fp,15
   2ae04:	4806973a 	slli	r3,r9,28
   2ae08:	2085883a 	add	r2,r4,r2
   2ae0c:	e038d13a 	srli	fp,fp,4
   2ae10:	10800003 	ldbu	r2,0(r2)
   2ae14:	4812d13a 	srli	r9,r9,4
   2ae18:	8c7fffc4 	addi	r17,r17,-1
   2ae1c:	1f38b03a 	or	fp,r3,fp
   2ae20:	88800005 	stb	r2,0(r17)
   2ae24:	e244b03a 	or	r2,fp,r9
   2ae28:	103ff51e 	bne	r2,zero,2ae00 <___svfiprintf_internal_r+0x3e4>
   2ae2c:	dac01e17 	ldw	r11,120(sp)
   2ae30:	5c57c83a 	sub	r11,r11,r17
   2ae34:	dac02115 	stw	r11,132(sp)
   2ae38:	00001406 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2ae3c:	21003fcc 	andi	r4,r4,255
   2ae40:	2003741e 	bne	r4,zero,2bc14 <___svfiprintf_internal_r+0x11f8>
   2ae44:	9080080c 	andi	r2,r18,32
   2ae48:	10014526 	beq	r2,zero,2b360 <___svfiprintf_internal_r+0x944>
   2ae4c:	dac02317 	ldw	r11,140(sp)
   2ae50:	d8001d85 	stb	zero,118(sp)
   2ae54:	58c00204 	addi	r3,r11,8
   2ae58:	5f000017 	ldw	fp,0(r11)
   2ae5c:	5a400117 	ldw	r9,4(r11)
   2ae60:	8002d916 	blt	r16,zero,2b9c8 <___svfiprintf_internal_r+0xfac>
   2ae64:	013fdfc4 	movi	r4,-129
   2ae68:	e244b03a 	or	r2,fp,r9
   2ae6c:	d8c02315 	stw	r3,140(sp)
   2ae70:	9124703a 	and	r18,r18,r4
   2ae74:	0015883a 	mov	r10,zero
   2ae78:	1000b91e 	bne	r2,zero,2b160 <___svfiprintf_internal_r+0x744>
   2ae7c:	8002e61e 	bne	r16,zero,2ba18 <___svfiprintf_internal_r+0xffc>
   2ae80:	0021883a 	mov	r16,zero
   2ae84:	d8002115 	stw	zero,132(sp)
   2ae88:	dc401a04 	addi	r17,sp,104
   2ae8c:	d8c02117 	ldw	r3,132(sp)
   2ae90:	dc002015 	stw	r16,128(sp)
   2ae94:	80c0010e 	bge	r16,r3,2ae9c <___svfiprintf_internal_r+0x480>
   2ae98:	d8c02015 	stw	r3,128(sp)
   2ae9c:	52803fcc 	andi	r10,r10,255
   2aea0:	5280201c 	xori	r10,r10,128
   2aea4:	52bfe004 	addi	r10,r10,-128
   2aea8:	50003c26 	beq	r10,zero,2af9c <___svfiprintf_internal_r+0x580>
   2aeac:	dac02017 	ldw	r11,128(sp)
   2aeb0:	5ac00044 	addi	r11,r11,1
   2aeb4:	dac02015 	stw	r11,128(sp)
   2aeb8:	00003806 	br	2af9c <___svfiprintf_internal_r+0x580>
   2aebc:	01000044 	movi	r4,1
   2aec0:	01c00ac4 	movi	r7,43
   2aec4:	98c00007 	ldb	r3,0(r19)
   2aec8:	003f2306 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2aecc:	21003fcc 	andi	r4,r4,255
   2aed0:	2003481e 	bne	r4,zero,2bbf4 <___svfiprintf_internal_r+0x11d8>
   2aed4:	9080080c 	andi	r2,r18,32
   2aed8:	10013b26 	beq	r2,zero,2b3c8 <___svfiprintf_internal_r+0x9ac>
   2aedc:	dac02317 	ldw	r11,140(sp)
   2aee0:	d8001d85 	stb	zero,118(sp)
   2aee4:	58800204 	addi	r2,r11,8
   2aee8:	5f000017 	ldw	fp,0(r11)
   2aeec:	5a400117 	ldw	r9,4(r11)
   2aef0:	8002a816 	blt	r16,zero,2b994 <___svfiprintf_internal_r+0xf78>
   2aef4:	013fdfc4 	movi	r4,-129
   2aef8:	e246b03a 	or	r3,fp,r9
   2aefc:	d8802315 	stw	r2,140(sp)
   2af00:	9124703a 	and	r18,r18,r4
   2af04:	18013c26 	beq	r3,zero,2b3f8 <___svfiprintf_internal_r+0x9dc>
   2af08:	0015883a 	mov	r10,zero
   2af0c:	dc401a04 	addi	r17,sp,104
   2af10:	e006d0fa 	srli	r3,fp,3
   2af14:	4808977a 	slli	r4,r9,29
   2af18:	4812d0fa 	srli	r9,r9,3
   2af1c:	e70001cc 	andi	fp,fp,7
   2af20:	e0800c04 	addi	r2,fp,48
   2af24:	8c7fffc4 	addi	r17,r17,-1
   2af28:	20f8b03a 	or	fp,r4,r3
   2af2c:	88800005 	stb	r2,0(r17)
   2af30:	e246b03a 	or	r3,fp,r9
   2af34:	183ff61e 	bne	r3,zero,2af10 <___svfiprintf_internal_r+0x4f4>
   2af38:	90c0004c 	andi	r3,r18,1
   2af3c:	1800a526 	beq	r3,zero,2b1d4 <___svfiprintf_internal_r+0x7b8>
   2af40:	10803fcc 	andi	r2,r2,255
   2af44:	1080201c 	xori	r2,r2,128
   2af48:	10bfe004 	addi	r2,r2,-128
   2af4c:	00c00c04 	movi	r3,48
   2af50:	10ffb626 	beq	r2,r3,2ae2c <___svfiprintf_internal_r+0x410>
   2af54:	88ffffc5 	stb	r3,-1(r17)
   2af58:	d8c01e17 	ldw	r3,120(sp)
   2af5c:	88bfffc4 	addi	r2,r17,-1
   2af60:	1023883a 	mov	r17,r2
   2af64:	1887c83a 	sub	r3,r3,r2
   2af68:	d8c02115 	stw	r3,132(sp)
   2af6c:	003fc706 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2af70:	dac02317 	ldw	r11,140(sp)
   2af74:	00c00044 	movi	r3,1
   2af78:	d8c02015 	stw	r3,128(sp)
   2af7c:	58800017 	ldw	r2,0(r11)
   2af80:	5ac00104 	addi	r11,r11,4
   2af84:	d8001d85 	stb	zero,118(sp)
   2af88:	d8801005 	stb	r2,64(sp)
   2af8c:	dac02315 	stw	r11,140(sp)
   2af90:	d8c02115 	stw	r3,132(sp)
   2af94:	dc401004 	addi	r17,sp,64
   2af98:	0021883a 	mov	r16,zero
   2af9c:	90c0008c 	andi	r3,r18,2
   2afa0:	d8c02215 	stw	r3,136(sp)
   2afa4:	18000326 	beq	r3,zero,2afb4 <___svfiprintf_internal_r+0x598>
   2afa8:	dac02017 	ldw	r11,128(sp)
   2afac:	5ac00084 	addi	r11,r11,2
   2afb0:	dac02015 	stw	r11,128(sp)
   2afb4:	90c0210c 	andi	r3,r18,132
   2afb8:	d8c02615 	stw	r3,152(sp)
   2afbc:	1801131e 	bne	r3,zero,2b40c <___svfiprintf_internal_r+0x9f0>
   2afc0:	dac02417 	ldw	r11,144(sp)
   2afc4:	d8c02017 	ldw	r3,128(sp)
   2afc8:	58f9c83a 	sub	fp,r11,r3
   2afcc:	07010f0e 	bge	zero,fp,2b40c <___svfiprintf_internal_r+0x9f0>
   2afd0:	02400404 	movi	r9,16
   2afd4:	d8c01c17 	ldw	r3,112(sp)
   2afd8:	d8801b17 	ldw	r2,108(sp)
   2afdc:	4f02d60e 	bge	r9,fp,2bb38 <___svfiprintf_internal_r+0x111c>
   2afe0:	014000f4 	movhi	r5,3
   2afe4:	294e9904 	addi	r5,r5,14948
   2afe8:	d9402815 	stw	r5,160(sp)
   2afec:	028001c4 	movi	r10,7
   2aff0:	00000306 	br	2b000 <___svfiprintf_internal_r+0x5e4>
   2aff4:	e73ffc04 	addi	fp,fp,-16
   2aff8:	42000204 	addi	r8,r8,8
   2affc:	4f00150e 	bge	r9,fp,2b054 <___svfiprintf_internal_r+0x638>
   2b000:	18c00404 	addi	r3,r3,16
   2b004:	10800044 	addi	r2,r2,1
   2b008:	45800015 	stw	r22,0(r8)
   2b00c:	42400115 	stw	r9,4(r8)
   2b010:	d8c01c15 	stw	r3,112(sp)
   2b014:	d8801b15 	stw	r2,108(sp)
   2b018:	50bff60e 	bge	r10,r2,2aff4 <___svfiprintf_internal_r+0x5d8>
   2b01c:	d9801a04 	addi	r6,sp,104
   2b020:	b80b883a 	mov	r5,r23
   2b024:	a809883a 	mov	r4,r21
   2b028:	da402c15 	stw	r9,176(sp)
   2b02c:	da802d15 	stw	r10,180(sp)
   2b030:	002a84c0 	call	2a84c <__ssprint_r>
   2b034:	da402c17 	ldw	r9,176(sp)
   2b038:	da802d17 	ldw	r10,180(sp)
   2b03c:	1001851e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b040:	e73ffc04 	addi	fp,fp,-16
   2b044:	d8c01c17 	ldw	r3,112(sp)
   2b048:	d8801b17 	ldw	r2,108(sp)
   2b04c:	d811883a 	mov	r8,sp
   2b050:	4f3feb16 	blt	r9,fp,2b000 <___svfiprintf_internal_r+0x5e4>
   2b054:	dac02817 	ldw	r11,160(sp)
   2b058:	e0c7883a 	add	r3,fp,r3
   2b05c:	10800044 	addi	r2,r2,1
   2b060:	42c00015 	stw	r11,0(r8)
   2b064:	47000115 	stw	fp,4(r8)
   2b068:	d8c01c15 	stw	r3,112(sp)
   2b06c:	d8801b15 	stw	r2,108(sp)
   2b070:	010001c4 	movi	r4,7
   2b074:	2081ee16 	blt	r4,r2,2b830 <___svfiprintf_internal_r+0xe14>
   2b078:	42000204 	addi	r8,r8,8
   2b07c:	0000e506 	br	2b414 <___svfiprintf_internal_r+0x9f8>
   2b080:	21003fcc 	andi	r4,r4,255
   2b084:	2002dd1e 	bne	r4,zero,2bbfc <___svfiprintf_internal_r+0x11e0>
   2b088:	008000f4 	movhi	r2,3
   2b08c:	108e2704 	addi	r2,r2,14492
   2b090:	d8802915 	stw	r2,164(sp)
   2b094:	9080080c 	andi	r2,r18,32
   2b098:	103f461e 	bne	r2,zero,2adb4 <___svfiprintf_internal_r+0x398>
   2b09c:	9080040c 	andi	r2,r18,16
   2b0a0:	10022e1e 	bne	r2,zero,2b95c <___svfiprintf_internal_r+0xf40>
   2b0a4:	9080100c 	andi	r2,r18,64
   2b0a8:	dac02317 	ldw	r11,140(sp)
   2b0ac:	10027326 	beq	r2,zero,2ba7c <___svfiprintf_internal_r+0x1060>
   2b0b0:	5f00000b 	ldhu	fp,0(r11)
   2b0b4:	5ac00104 	addi	r11,r11,4
   2b0b8:	0013883a 	mov	r9,zero
   2b0bc:	dac02315 	stw	r11,140(sp)
   2b0c0:	003f4106 	br	2adc8 <___svfiprintf_internal_r+0x3ac>
   2b0c4:	21003fcc 	andi	r4,r4,255
   2b0c8:	2002e11e 	bne	r4,zero,2bc50 <___svfiprintf_internal_r+0x1234>
   2b0cc:	9080080c 	andi	r2,r18,32
   2b0d0:	1002011e 	bne	r2,zero,2b8d8 <___svfiprintf_internal_r+0xebc>
   2b0d4:	9080040c 	andi	r2,r18,16
   2b0d8:	10023e1e 	bne	r2,zero,2b9d4 <___svfiprintf_internal_r+0xfb8>
   2b0dc:	9480100c 	andi	r18,r18,64
   2b0e0:	90023c26 	beq	r18,zero,2b9d4 <___svfiprintf_internal_r+0xfb8>
   2b0e4:	dac02317 	ldw	r11,140(sp)
   2b0e8:	58800017 	ldw	r2,0(r11)
   2b0ec:	5ac00104 	addi	r11,r11,4
   2b0f0:	dac02315 	stw	r11,140(sp)
   2b0f4:	dac02517 	ldw	r11,148(sp)
   2b0f8:	12c0000d 	sth	r11,0(r2)
   2b0fc:	003e6e06 	br	2aab8 <___svfiprintf_internal_r+0x9c>
   2b100:	98c00007 	ldb	r3,0(r19)
   2b104:	1a422926 	beq	r3,r9,2b9ac <___svfiprintf_internal_r+0xf90>
   2b108:	94800414 	ori	r18,r18,16
   2b10c:	003e9206 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2b110:	94801014 	ori	r18,r18,64
   2b114:	98c00007 	ldb	r3,0(r19)
   2b118:	003e8f06 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2b11c:	21003fcc 	andi	r4,r4,255
   2b120:	2002c71e 	bne	r4,zero,2bc40 <___svfiprintf_internal_r+0x1224>
   2b124:	9080080c 	andi	r2,r18,32
   2b128:	10004926 	beq	r2,zero,2b250 <___svfiprintf_internal_r+0x834>
   2b12c:	dac02317 	ldw	r11,140(sp)
   2b130:	58800117 	ldw	r2,4(r11)
   2b134:	5f000017 	ldw	fp,0(r11)
   2b138:	5ac00204 	addi	r11,r11,8
   2b13c:	dac02315 	stw	r11,140(sp)
   2b140:	1013883a 	mov	r9,r2
   2b144:	10004b16 	blt	r2,zero,2b274 <___svfiprintf_internal_r+0x858>
   2b148:	da801d83 	ldbu	r10,118(sp)
   2b14c:	8001cb16 	blt	r16,zero,2b87c <___svfiprintf_internal_r+0xe60>
   2b150:	00ffdfc4 	movi	r3,-129
   2b154:	e244b03a 	or	r2,fp,r9
   2b158:	90e4703a 	and	r18,r18,r3
   2b15c:	103f4726 	beq	r2,zero,2ae7c <___svfiprintf_internal_r+0x460>
   2b160:	48008c26 	beq	r9,zero,2b394 <___svfiprintf_internal_r+0x978>
   2b164:	dc802015 	stw	r18,128(sp)
   2b168:	dc002115 	stw	r16,132(sp)
   2b16c:	dc401a04 	addi	r17,sp,104
   2b170:	e021883a 	mov	r16,fp
   2b174:	da002215 	stw	r8,136(sp)
   2b178:	5039883a 	mov	fp,r10
   2b17c:	4825883a 	mov	r18,r9
   2b180:	8009883a 	mov	r4,r16
   2b184:	900b883a 	mov	r5,r18
   2b188:	01800284 	movi	r6,10
   2b18c:	000f883a 	mov	r7,zero
   2b190:	002e14c0 	call	2e14c <__umoddi3>
   2b194:	10800c04 	addi	r2,r2,48
   2b198:	8c7fffc4 	addi	r17,r17,-1
   2b19c:	8009883a 	mov	r4,r16
   2b1a0:	900b883a 	mov	r5,r18
   2b1a4:	88800005 	stb	r2,0(r17)
   2b1a8:	01800284 	movi	r6,10
   2b1ac:	000f883a 	mov	r7,zero
   2b1b0:	002dbd40 	call	2dbd4 <__udivdi3>
   2b1b4:	1021883a 	mov	r16,r2
   2b1b8:	10c4b03a 	or	r2,r2,r3
   2b1bc:	1825883a 	mov	r18,r3
   2b1c0:	103fef1e 	bne	r2,zero,2b180 <___svfiprintf_internal_r+0x764>
   2b1c4:	dc802017 	ldw	r18,128(sp)
   2b1c8:	dc002117 	ldw	r16,132(sp)
   2b1cc:	da002217 	ldw	r8,136(sp)
   2b1d0:	e015883a 	mov	r10,fp
   2b1d4:	d8c01e17 	ldw	r3,120(sp)
   2b1d8:	1c47c83a 	sub	r3,r3,r17
   2b1dc:	d8c02115 	stw	r3,132(sp)
   2b1e0:	003f2a06 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2b1e4:	dac02317 	ldw	r11,140(sp)
   2b1e8:	d8001d85 	stb	zero,118(sp)
   2b1ec:	5c400017 	ldw	r17,0(r11)
   2b1f0:	5f000104 	addi	fp,r11,4
   2b1f4:	88022f26 	beq	r17,zero,2bab4 <___svfiprintf_internal_r+0x1098>
   2b1f8:	80022516 	blt	r16,zero,2ba90 <___svfiprintf_internal_r+0x1074>
   2b1fc:	800d883a 	mov	r6,r16
   2b200:	000b883a 	mov	r5,zero
   2b204:	8809883a 	mov	r4,r17
   2b208:	da002c15 	stw	r8,176(sp)
   2b20c:	0028b5c0 	call	28b5c <memchr>
   2b210:	da002c17 	ldw	r8,176(sp)
   2b214:	10026426 	beq	r2,zero,2bba8 <___svfiprintf_internal_r+0x118c>
   2b218:	1445c83a 	sub	r2,r2,r17
   2b21c:	d8802115 	stw	r2,132(sp)
   2b220:	da801d83 	ldbu	r10,118(sp)
   2b224:	df002315 	stw	fp,140(sp)
   2b228:	0021883a 	mov	r16,zero
   2b22c:	003f1706 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2b230:	94800814 	ori	r18,r18,32
   2b234:	98c00007 	ldb	r3,0(r19)
   2b238:	003e4706 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2b23c:	21003fcc 	andi	r4,r4,255
   2b240:	2002701e 	bne	r4,zero,2bc04 <___svfiprintf_internal_r+0x11e8>
   2b244:	94800414 	ori	r18,r18,16
   2b248:	9080080c 	andi	r2,r18,32
   2b24c:	103fb71e 	bne	r2,zero,2b12c <___svfiprintf_internal_r+0x710>
   2b250:	9080040c 	andi	r2,r18,16
   2b254:	1001ab26 	beq	r2,zero,2b904 <___svfiprintf_internal_r+0xee8>
   2b258:	dac02317 	ldw	r11,140(sp)
   2b25c:	5f000017 	ldw	fp,0(r11)
   2b260:	5ac00104 	addi	r11,r11,4
   2b264:	dac02315 	stw	r11,140(sp)
   2b268:	e013d7fa 	srai	r9,fp,31
   2b26c:	4805883a 	mov	r2,r9
   2b270:	103fb50e 	bge	r2,zero,2b148 <___svfiprintf_internal_r+0x72c>
   2b274:	0739c83a 	sub	fp,zero,fp
   2b278:	02800b44 	movi	r10,45
   2b27c:	e004c03a 	cmpne	r2,fp,zero
   2b280:	0253c83a 	sub	r9,zero,r9
   2b284:	da801d85 	stb	r10,118(sp)
   2b288:	4893c83a 	sub	r9,r9,r2
   2b28c:	80023016 	blt	r16,zero,2bb50 <___svfiprintf_internal_r+0x1134>
   2b290:	00bfdfc4 	movi	r2,-129
   2b294:	90a4703a 	and	r18,r18,r2
   2b298:	483fb21e 	bne	r9,zero,2b164 <___svfiprintf_internal_r+0x748>
   2b29c:	00003d06 	br	2b394 <___svfiprintf_internal_r+0x978>
   2b2a0:	9817883a 	mov	r11,r19
   2b2a4:	d8002415 	stw	zero,144(sp)
   2b2a8:	18bff404 	addi	r2,r3,-48
   2b2ac:	0019883a 	mov	r12,zero
   2b2b0:	58c00007 	ldb	r3,0(r11)
   2b2b4:	630002a4 	muli	r12,r12,10
   2b2b8:	9cc00044 	addi	r19,r19,1
   2b2bc:	9817883a 	mov	r11,r19
   2b2c0:	1319883a 	add	r12,r2,r12
   2b2c4:	18bff404 	addi	r2,r3,-48
   2b2c8:	30bff92e 	bgeu	r6,r2,2b2b0 <___svfiprintf_internal_r+0x894>
   2b2cc:	db002415 	stw	r12,144(sp)
   2b2d0:	18bff804 	addi	r2,r3,-32
   2b2d4:	28be232e 	bgeu	r5,r2,2ab64 <___svfiprintf_internal_r+0x148>
   2b2d8:	21003fcc 	andi	r4,r4,255
   2b2dc:	20024b1e 	bne	r4,zero,2bc0c <___svfiprintf_internal_r+0x11f0>
   2b2e0:	1800d626 	beq	r3,zero,2b63c <___svfiprintf_internal_r+0xc20>
   2b2e4:	02c00044 	movi	r11,1
   2b2e8:	dac02015 	stw	r11,128(sp)
   2b2ec:	d8c01005 	stb	r3,64(sp)
   2b2f0:	d8001d85 	stb	zero,118(sp)
   2b2f4:	dac02115 	stw	r11,132(sp)
   2b2f8:	dc401004 	addi	r17,sp,64
   2b2fc:	003f2606 	br	2af98 <___svfiprintf_internal_r+0x57c>
   2b300:	94802014 	ori	r18,r18,128
   2b304:	98c00007 	ldb	r3,0(r19)
   2b308:	003e1306 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2b30c:	98c00007 	ldb	r3,0(r19)
   2b310:	9ac00044 	addi	r11,r19,1
   2b314:	1a822b26 	beq	r3,r10,2bbc4 <___svfiprintf_internal_r+0x11a8>
   2b318:	18bff404 	addi	r2,r3,-48
   2b31c:	0021883a 	mov	r16,zero
   2b320:	30821e36 	bltu	r6,r2,2bb9c <___svfiprintf_internal_r+0x1180>
   2b324:	58c00007 	ldb	r3,0(r11)
   2b328:	840002a4 	muli	r16,r16,10
   2b32c:	5cc00044 	addi	r19,r11,1
   2b330:	9817883a 	mov	r11,r19
   2b334:	80a1883a 	add	r16,r16,r2
   2b338:	18bff404 	addi	r2,r3,-48
   2b33c:	30bff92e 	bgeu	r6,r2,2b324 <___svfiprintf_internal_r+0x908>
   2b340:	803e060e 	bge	r16,zero,2ab5c <___svfiprintf_internal_r+0x140>
   2b344:	043fffc4 	movi	r16,-1
   2b348:	003e0406 	br	2ab5c <___svfiprintf_internal_r+0x140>
   2b34c:	21003fcc 	andi	r4,r4,255
   2b350:	2002371e 	bne	r4,zero,2bc30 <___svfiprintf_internal_r+0x1214>
   2b354:	94800414 	ori	r18,r18,16
   2b358:	9080080c 	andi	r2,r18,32
   2b35c:	103ebb1e 	bne	r2,zero,2ae4c <___svfiprintf_internal_r+0x430>
   2b360:	9080040c 	andi	r2,r18,16
   2b364:	10013b26 	beq	r2,zero,2b854 <___svfiprintf_internal_r+0xe38>
   2b368:	dac02317 	ldw	r11,140(sp)
   2b36c:	d8001d85 	stb	zero,118(sp)
   2b370:	0013883a 	mov	r9,zero
   2b374:	58800104 	addi	r2,r11,4
   2b378:	5f000017 	ldw	fp,0(r11)
   2b37c:	80013d16 	blt	r16,zero,2b874 <___svfiprintf_internal_r+0xe58>
   2b380:	00ffdfc4 	movi	r3,-129
   2b384:	d8802315 	stw	r2,140(sp)
   2b388:	90e4703a 	and	r18,r18,r3
   2b38c:	0015883a 	mov	r10,zero
   2b390:	e03eba26 	beq	fp,zero,2ae7c <___svfiprintf_internal_r+0x460>
   2b394:	00800244 	movi	r2,9
   2b398:	173f7236 	bltu	r2,fp,2b164 <___svfiprintf_internal_r+0x748>
   2b39c:	dac02b17 	ldw	r11,172(sp)
   2b3a0:	e7000c04 	addi	fp,fp,48
   2b3a4:	df0019c5 	stb	fp,103(sp)
   2b3a8:	dac02115 	stw	r11,132(sp)
   2b3ac:	dc4019c4 	addi	r17,sp,103
   2b3b0:	003eb606 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2b3b4:	21003fcc 	andi	r4,r4,255
   2b3b8:	20021f1e 	bne	r4,zero,2bc38 <___svfiprintf_internal_r+0x121c>
   2b3bc:	94800414 	ori	r18,r18,16
   2b3c0:	9080080c 	andi	r2,r18,32
   2b3c4:	103ec51e 	bne	r2,zero,2aedc <___svfiprintf_internal_r+0x4c0>
   2b3c8:	9080040c 	andi	r2,r18,16
   2b3cc:	10016926 	beq	r2,zero,2b974 <___svfiprintf_internal_r+0xf58>
   2b3d0:	dac02317 	ldw	r11,140(sp)
   2b3d4:	d8001d85 	stb	zero,118(sp)
   2b3d8:	0013883a 	mov	r9,zero
   2b3dc:	58800104 	addi	r2,r11,4
   2b3e0:	5f000017 	ldw	fp,0(r11)
   2b3e4:	80016b16 	blt	r16,zero,2b994 <___svfiprintf_internal_r+0xf78>
   2b3e8:	00ffdfc4 	movi	r3,-129
   2b3ec:	d8802315 	stw	r2,140(sp)
   2b3f0:	90e4703a 	and	r18,r18,r3
   2b3f4:	e03ec41e 	bne	fp,zero,2af08 <___svfiprintf_internal_r+0x4ec>
   2b3f8:	0015883a 	mov	r10,zero
   2b3fc:	8001c226 	beq	r16,zero,2bb08 <___svfiprintf_internal_r+0x10ec>
   2b400:	0039883a 	mov	fp,zero
   2b404:	0013883a 	mov	r9,zero
   2b408:	003ec006 	br	2af0c <___svfiprintf_internal_r+0x4f0>
   2b40c:	d8c01c17 	ldw	r3,112(sp)
   2b410:	d8801b17 	ldw	r2,108(sp)
   2b414:	d9001d87 	ldb	r4,118(sp)
   2b418:	20000b26 	beq	r4,zero,2b448 <___svfiprintf_internal_r+0xa2c>
   2b41c:	d9001d84 	addi	r4,sp,118
   2b420:	18c00044 	addi	r3,r3,1
   2b424:	10800044 	addi	r2,r2,1
   2b428:	41000015 	stw	r4,0(r8)
   2b42c:	01000044 	movi	r4,1
   2b430:	41000115 	stw	r4,4(r8)
   2b434:	d8c01c15 	stw	r3,112(sp)
   2b438:	d8801b15 	stw	r2,108(sp)
   2b43c:	010001c4 	movi	r4,7
   2b440:	2080e116 	blt	r4,r2,2b7c8 <___svfiprintf_internal_r+0xdac>
   2b444:	42000204 	addi	r8,r8,8
   2b448:	dac02217 	ldw	r11,136(sp)
   2b44c:	58000b26 	beq	r11,zero,2b47c <___svfiprintf_internal_r+0xa60>
   2b450:	d9001d04 	addi	r4,sp,116
   2b454:	18c00084 	addi	r3,r3,2
   2b458:	10800044 	addi	r2,r2,1
   2b45c:	41000015 	stw	r4,0(r8)
   2b460:	01000084 	movi	r4,2
   2b464:	41000115 	stw	r4,4(r8)
   2b468:	d8c01c15 	stw	r3,112(sp)
   2b46c:	d8801b15 	stw	r2,108(sp)
   2b470:	010001c4 	movi	r4,7
   2b474:	2080dd16 	blt	r4,r2,2b7ec <___svfiprintf_internal_r+0xdd0>
   2b478:	42000204 	addi	r8,r8,8
   2b47c:	dac02617 	ldw	r11,152(sp)
   2b480:	01002004 	movi	r4,128
   2b484:	59008426 	beq	r11,r4,2b698 <___svfiprintf_internal_r+0xc7c>
   2b488:	dac02117 	ldw	r11,132(sp)
   2b48c:	82e1c83a 	sub	r16,r16,r11
   2b490:	0400270e 	bge	zero,r16,2b530 <___svfiprintf_internal_r+0xb14>
   2b494:	01c00404 	movi	r7,16
   2b498:	3c016a0e 	bge	r7,r16,2ba44 <___svfiprintf_internal_r+0x1028>
   2b49c:	014000f4 	movhi	r5,3
   2b4a0:	294e9504 	addi	r5,r5,14932
   2b4a4:	d9402215 	stw	r5,136(sp)
   2b4a8:	070001c4 	movi	fp,7
   2b4ac:	00000306 	br	2b4bc <___svfiprintf_internal_r+0xaa0>
   2b4b0:	843ffc04 	addi	r16,r16,-16
   2b4b4:	42000204 	addi	r8,r8,8
   2b4b8:	3c00130e 	bge	r7,r16,2b508 <___svfiprintf_internal_r+0xaec>
   2b4bc:	18c00404 	addi	r3,r3,16
   2b4c0:	10800044 	addi	r2,r2,1
   2b4c4:	45000015 	stw	r20,0(r8)
   2b4c8:	41c00115 	stw	r7,4(r8)
   2b4cc:	d8c01c15 	stw	r3,112(sp)
   2b4d0:	d8801b15 	stw	r2,108(sp)
   2b4d4:	e0bff60e 	bge	fp,r2,2b4b0 <___svfiprintf_internal_r+0xa94>
   2b4d8:	d9801a04 	addi	r6,sp,104
   2b4dc:	b80b883a 	mov	r5,r23
   2b4e0:	a809883a 	mov	r4,r21
   2b4e4:	d9c02c15 	stw	r7,176(sp)
   2b4e8:	002a84c0 	call	2a84c <__ssprint_r>
   2b4ec:	d9c02c17 	ldw	r7,176(sp)
   2b4f0:	1000581e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b4f4:	843ffc04 	addi	r16,r16,-16
   2b4f8:	d8c01c17 	ldw	r3,112(sp)
   2b4fc:	d8801b17 	ldw	r2,108(sp)
   2b500:	d811883a 	mov	r8,sp
   2b504:	3c3fed16 	blt	r7,r16,2b4bc <___svfiprintf_internal_r+0xaa0>
   2b508:	dac02217 	ldw	r11,136(sp)
   2b50c:	1c07883a 	add	r3,r3,r16
   2b510:	10800044 	addi	r2,r2,1
   2b514:	42c00015 	stw	r11,0(r8)
   2b518:	44000115 	stw	r16,4(r8)
   2b51c:	d8c01c15 	stw	r3,112(sp)
   2b520:	d8801b15 	stw	r2,108(sp)
   2b524:	010001c4 	movi	r4,7
   2b528:	20809e16 	blt	r4,r2,2b7a4 <___svfiprintf_internal_r+0xd88>
   2b52c:	42000204 	addi	r8,r8,8
   2b530:	dac02117 	ldw	r11,132(sp)
   2b534:	10800044 	addi	r2,r2,1
   2b538:	44400015 	stw	r17,0(r8)
   2b53c:	58c7883a 	add	r3,r11,r3
   2b540:	42c00115 	stw	r11,4(r8)
   2b544:	d8c01c15 	stw	r3,112(sp)
   2b548:	d8801b15 	stw	r2,108(sp)
   2b54c:	010001c4 	movi	r4,7
   2b550:	20807f16 	blt	r4,r2,2b750 <___svfiprintf_internal_r+0xd34>
   2b554:	42000204 	addi	r8,r8,8
   2b558:	9480010c 	andi	r18,r18,4
   2b55c:	90002926 	beq	r18,zero,2b604 <___svfiprintf_internal_r+0xbe8>
   2b560:	dac02417 	ldw	r11,144(sp)
   2b564:	d8802017 	ldw	r2,128(sp)
   2b568:	58a1c83a 	sub	r16,r11,r2
   2b56c:	0400250e 	bge	zero,r16,2b604 <___svfiprintf_internal_r+0xbe8>
   2b570:	04400404 	movi	r17,16
   2b574:	d8801b17 	ldw	r2,108(sp)
   2b578:	8c017c0e 	bge	r17,r16,2bb6c <___svfiprintf_internal_r+0x1150>
   2b57c:	014000f4 	movhi	r5,3
   2b580:	294e9904 	addi	r5,r5,14948
   2b584:	d9402815 	stw	r5,160(sp)
   2b588:	048001c4 	movi	r18,7
   2b58c:	00000306 	br	2b59c <___svfiprintf_internal_r+0xb80>
   2b590:	843ffc04 	addi	r16,r16,-16
   2b594:	42000204 	addi	r8,r8,8
   2b598:	8c00110e 	bge	r17,r16,2b5e0 <___svfiprintf_internal_r+0xbc4>
   2b59c:	18c00404 	addi	r3,r3,16
   2b5a0:	10800044 	addi	r2,r2,1
   2b5a4:	45800015 	stw	r22,0(r8)
   2b5a8:	44400115 	stw	r17,4(r8)
   2b5ac:	d8c01c15 	stw	r3,112(sp)
   2b5b0:	d8801b15 	stw	r2,108(sp)
   2b5b4:	90bff60e 	bge	r18,r2,2b590 <___svfiprintf_internal_r+0xb74>
   2b5b8:	d9801a04 	addi	r6,sp,104
   2b5bc:	b80b883a 	mov	r5,r23
   2b5c0:	a809883a 	mov	r4,r21
   2b5c4:	002a84c0 	call	2a84c <__ssprint_r>
   2b5c8:	1000221e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b5cc:	843ffc04 	addi	r16,r16,-16
   2b5d0:	d8c01c17 	ldw	r3,112(sp)
   2b5d4:	d8801b17 	ldw	r2,108(sp)
   2b5d8:	d811883a 	mov	r8,sp
   2b5dc:	8c3fef16 	blt	r17,r16,2b59c <___svfiprintf_internal_r+0xb80>
   2b5e0:	dac02817 	ldw	r11,160(sp)
   2b5e4:	1c07883a 	add	r3,r3,r16
   2b5e8:	10800044 	addi	r2,r2,1
   2b5ec:	42c00015 	stw	r11,0(r8)
   2b5f0:	44000115 	stw	r16,4(r8)
   2b5f4:	d8c01c15 	stw	r3,112(sp)
   2b5f8:	d8801b15 	stw	r2,108(sp)
   2b5fc:	010001c4 	movi	r4,7
   2b600:	2080aa16 	blt	r4,r2,2b8ac <___svfiprintf_internal_r+0xe90>
   2b604:	d8802417 	ldw	r2,144(sp)
   2b608:	dac02017 	ldw	r11,128(sp)
   2b60c:	12c0010e 	bge	r2,r11,2b614 <___svfiprintf_internal_r+0xbf8>
   2b610:	5805883a 	mov	r2,r11
   2b614:	dac02517 	ldw	r11,148(sp)
   2b618:	5897883a 	add	r11,r11,r2
   2b61c:	dac02515 	stw	r11,148(sp)
   2b620:	1800531e 	bne	r3,zero,2b770 <___svfiprintf_internal_r+0xd54>
   2b624:	98800007 	ldb	r2,0(r19)
   2b628:	d8001b15 	stw	zero,108(sp)
   2b62c:	d811883a 	mov	r8,sp
   2b630:	103d231e 	bne	r2,zero,2aac0 <___svfiprintf_internal_r+0xa4>
   2b634:	9823883a 	mov	r17,r19
   2b638:	003d3906 	br	2ab20 <___svfiprintf_internal_r+0x104>
   2b63c:	d8801c17 	ldw	r2,112(sp)
   2b640:	10000426 	beq	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b644:	d9402717 	ldw	r5,156(sp)
   2b648:	d9002a17 	ldw	r4,168(sp)
   2b64c:	d9801a04 	addi	r6,sp,104
   2b650:	002a84c0 	call	2a84c <__ssprint_r>
   2b654:	dac02717 	ldw	r11,156(sp)
   2b658:	d8802517 	ldw	r2,148(sp)
   2b65c:	58c0030b 	ldhu	r3,12(r11)
   2b660:	18c0100c 	andi	r3,r3,64
   2b664:	1801381e 	bne	r3,zero,2bb48 <___svfiprintf_internal_r+0x112c>
   2b668:	dfc03717 	ldw	ra,220(sp)
   2b66c:	df003617 	ldw	fp,216(sp)
   2b670:	ddc03517 	ldw	r23,212(sp)
   2b674:	dd803417 	ldw	r22,208(sp)
   2b678:	dd403317 	ldw	r21,204(sp)
   2b67c:	dd003217 	ldw	r20,200(sp)
   2b680:	dcc03117 	ldw	r19,196(sp)
   2b684:	dc803017 	ldw	r18,192(sp)
   2b688:	dc402f17 	ldw	r17,188(sp)
   2b68c:	dc002e17 	ldw	r16,184(sp)
   2b690:	dec03804 	addi	sp,sp,224
   2b694:	f800283a 	ret
   2b698:	dac02417 	ldw	r11,144(sp)
   2b69c:	d9002017 	ldw	r4,128(sp)
   2b6a0:	5939c83a 	sub	fp,r11,r4
   2b6a4:	073f780e 	bge	zero,fp,2b488 <___svfiprintf_internal_r+0xa6c>
   2b6a8:	02400404 	movi	r9,16
   2b6ac:	4f01370e 	bge	r9,fp,2bb8c <___svfiprintf_internal_r+0x1170>
   2b6b0:	02c000f4 	movhi	r11,3
   2b6b4:	5ace9504 	addi	r11,r11,14932
   2b6b8:	dac02215 	stw	r11,136(sp)
   2b6bc:	028001c4 	movi	r10,7
   2b6c0:	00000306 	br	2b6d0 <___svfiprintf_internal_r+0xcb4>
   2b6c4:	e73ffc04 	addi	fp,fp,-16
   2b6c8:	42000204 	addi	r8,r8,8
   2b6cc:	4f00150e 	bge	r9,fp,2b724 <___svfiprintf_internal_r+0xd08>
   2b6d0:	18c00404 	addi	r3,r3,16
   2b6d4:	10800044 	addi	r2,r2,1
   2b6d8:	45000015 	stw	r20,0(r8)
   2b6dc:	42400115 	stw	r9,4(r8)
   2b6e0:	d8c01c15 	stw	r3,112(sp)
   2b6e4:	d8801b15 	stw	r2,108(sp)
   2b6e8:	50bff60e 	bge	r10,r2,2b6c4 <___svfiprintf_internal_r+0xca8>
   2b6ec:	d9801a04 	addi	r6,sp,104
   2b6f0:	b80b883a 	mov	r5,r23
   2b6f4:	a809883a 	mov	r4,r21
   2b6f8:	da402c15 	stw	r9,176(sp)
   2b6fc:	da802d15 	stw	r10,180(sp)
   2b700:	002a84c0 	call	2a84c <__ssprint_r>
   2b704:	da402c17 	ldw	r9,176(sp)
   2b708:	da802d17 	ldw	r10,180(sp)
   2b70c:	103fd11e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b710:	e73ffc04 	addi	fp,fp,-16
   2b714:	d8c01c17 	ldw	r3,112(sp)
   2b718:	d8801b17 	ldw	r2,108(sp)
   2b71c:	d811883a 	mov	r8,sp
   2b720:	4f3feb16 	blt	r9,fp,2b6d0 <___svfiprintf_internal_r+0xcb4>
   2b724:	dac02217 	ldw	r11,136(sp)
   2b728:	1f07883a 	add	r3,r3,fp
   2b72c:	10800044 	addi	r2,r2,1
   2b730:	42c00015 	stw	r11,0(r8)
   2b734:	47000115 	stw	fp,4(r8)
   2b738:	d8c01c15 	stw	r3,112(sp)
   2b73c:	d8801b15 	stw	r2,108(sp)
   2b740:	010001c4 	movi	r4,7
   2b744:	2080b616 	blt	r4,r2,2ba20 <___svfiprintf_internal_r+0x1004>
   2b748:	42000204 	addi	r8,r8,8
   2b74c:	003f4e06 	br	2b488 <___svfiprintf_internal_r+0xa6c>
   2b750:	d9801a04 	addi	r6,sp,104
   2b754:	b80b883a 	mov	r5,r23
   2b758:	a809883a 	mov	r4,r21
   2b75c:	002a84c0 	call	2a84c <__ssprint_r>
   2b760:	103fbc1e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b764:	d8c01c17 	ldw	r3,112(sp)
   2b768:	d811883a 	mov	r8,sp
   2b76c:	003f7a06 	br	2b558 <___svfiprintf_internal_r+0xb3c>
   2b770:	d9801a04 	addi	r6,sp,104
   2b774:	b80b883a 	mov	r5,r23
   2b778:	a809883a 	mov	r4,r21
   2b77c:	002a84c0 	call	2a84c <__ssprint_r>
   2b780:	103fa826 	beq	r2,zero,2b624 <___svfiprintf_internal_r+0xc08>
   2b784:	003fb306 	br	2b654 <___svfiprintf_internal_r+0xc38>
   2b788:	d9801a04 	addi	r6,sp,104
   2b78c:	b80b883a 	mov	r5,r23
   2b790:	a809883a 	mov	r4,r21
   2b794:	002a84c0 	call	2a84c <__ssprint_r>
   2b798:	103fae1e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b79c:	d811883a 	mov	r8,sp
   2b7a0:	003cdc06 	br	2ab14 <___svfiprintf_internal_r+0xf8>
   2b7a4:	d9801a04 	addi	r6,sp,104
   2b7a8:	b80b883a 	mov	r5,r23
   2b7ac:	a809883a 	mov	r4,r21
   2b7b0:	002a84c0 	call	2a84c <__ssprint_r>
   2b7b4:	103fa71e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b7b8:	d8c01c17 	ldw	r3,112(sp)
   2b7bc:	d8801b17 	ldw	r2,108(sp)
   2b7c0:	d811883a 	mov	r8,sp
   2b7c4:	003f5a06 	br	2b530 <___svfiprintf_internal_r+0xb14>
   2b7c8:	d9801a04 	addi	r6,sp,104
   2b7cc:	b80b883a 	mov	r5,r23
   2b7d0:	a809883a 	mov	r4,r21
   2b7d4:	002a84c0 	call	2a84c <__ssprint_r>
   2b7d8:	103f9e1e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b7dc:	d8c01c17 	ldw	r3,112(sp)
   2b7e0:	d8801b17 	ldw	r2,108(sp)
   2b7e4:	d811883a 	mov	r8,sp
   2b7e8:	003f1706 	br	2b448 <___svfiprintf_internal_r+0xa2c>
   2b7ec:	d9801a04 	addi	r6,sp,104
   2b7f0:	b80b883a 	mov	r5,r23
   2b7f4:	a809883a 	mov	r4,r21
   2b7f8:	002a84c0 	call	2a84c <__ssprint_r>
   2b7fc:	103f951e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b800:	d8c01c17 	ldw	r3,112(sp)
   2b804:	d8801b17 	ldw	r2,108(sp)
   2b808:	d811883a 	mov	r8,sp
   2b80c:	003f1b06 	br	2b47c <___svfiprintf_internal_r+0xa60>
   2b810:	d8001d85 	stb	zero,118(sp)
   2b814:	80007b16 	blt	r16,zero,2ba04 <___svfiprintf_internal_r+0xfe8>
   2b818:	00ffdfc4 	movi	r3,-129
   2b81c:	e244b03a 	or	r2,fp,r9
   2b820:	90e4703a 	and	r18,r18,r3
   2b824:	103d7026 	beq	r2,zero,2ade8 <___svfiprintf_internal_r+0x3cc>
   2b828:	0015883a 	mov	r10,zero
   2b82c:	003d7206 	br	2adf8 <___svfiprintf_internal_r+0x3dc>
   2b830:	d9801a04 	addi	r6,sp,104
   2b834:	b80b883a 	mov	r5,r23
   2b838:	a809883a 	mov	r4,r21
   2b83c:	002a84c0 	call	2a84c <__ssprint_r>
   2b840:	103f841e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b844:	d8c01c17 	ldw	r3,112(sp)
   2b848:	d8801b17 	ldw	r2,108(sp)
   2b84c:	d811883a 	mov	r8,sp
   2b850:	003ef006 	br	2b414 <___svfiprintf_internal_r+0x9f8>
   2b854:	9080100c 	andi	r2,r18,64
   2b858:	d8001d85 	stb	zero,118(sp)
   2b85c:	dac02317 	ldw	r11,140(sp)
   2b860:	10008126 	beq	r2,zero,2ba68 <___svfiprintf_internal_r+0x104c>
   2b864:	58800104 	addi	r2,r11,4
   2b868:	5f00000b 	ldhu	fp,0(r11)
   2b86c:	0013883a 	mov	r9,zero
   2b870:	803ec30e 	bge	r16,zero,2b380 <___svfiprintf_internal_r+0x964>
   2b874:	d8802315 	stw	r2,140(sp)
   2b878:	0015883a 	mov	r10,zero
   2b87c:	e244b03a 	or	r2,fp,r9
   2b880:	103e371e 	bne	r2,zero,2b160 <___svfiprintf_internal_r+0x744>
   2b884:	00800044 	movi	r2,1
   2b888:	10803fcc 	andi	r2,r2,255
   2b88c:	00c00044 	movi	r3,1
   2b890:	10c06126 	beq	r2,r3,2ba18 <___svfiprintf_internal_r+0xffc>
   2b894:	00c00084 	movi	r3,2
   2b898:	10fd5526 	beq	r2,r3,2adf0 <___svfiprintf_internal_r+0x3d4>
   2b89c:	003ed806 	br	2b400 <___svfiprintf_internal_r+0x9e4>
   2b8a0:	d8802315 	stw	r2,140(sp)
   2b8a4:	98c00007 	ldb	r3,0(r19)
   2b8a8:	003cab06 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2b8ac:	d9801a04 	addi	r6,sp,104
   2b8b0:	b80b883a 	mov	r5,r23
   2b8b4:	a809883a 	mov	r4,r21
   2b8b8:	002a84c0 	call	2a84c <__ssprint_r>
   2b8bc:	103f651e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2b8c0:	d8c01c17 	ldw	r3,112(sp)
   2b8c4:	003f4f06 	br	2b604 <___svfiprintf_internal_r+0xbe8>
   2b8c8:	008000f4 	movhi	r2,3
   2b8cc:	108e2c04 	addi	r2,r2,14512
   2b8d0:	d8802915 	stw	r2,164(sp)
   2b8d4:	003d4406 	br	2ade8 <___svfiprintf_internal_r+0x3cc>
   2b8d8:	dac02317 	ldw	r11,140(sp)
   2b8dc:	58800017 	ldw	r2,0(r11)
   2b8e0:	dac02517 	ldw	r11,148(sp)
   2b8e4:	5807d7fa 	srai	r3,r11,31
   2b8e8:	dac02317 	ldw	r11,140(sp)
   2b8ec:	10c00115 	stw	r3,4(r2)
   2b8f0:	5ac00104 	addi	r11,r11,4
   2b8f4:	dac02315 	stw	r11,140(sp)
   2b8f8:	dac02517 	ldw	r11,148(sp)
   2b8fc:	12c00015 	stw	r11,0(r2)
   2b900:	003c6d06 	br	2aab8 <___svfiprintf_internal_r+0x9c>
   2b904:	9080100c 	andi	r2,r18,64
   2b908:	dac02317 	ldw	r11,140(sp)
   2b90c:	103e5326 	beq	r2,zero,2b25c <___svfiprintf_internal_r+0x840>
   2b910:	5f00000f 	ldh	fp,0(r11)
   2b914:	5ac00104 	addi	r11,r11,4
   2b918:	dac02315 	stw	r11,140(sp)
   2b91c:	e013d7fa 	srai	r9,fp,31
   2b920:	4805883a 	mov	r2,r9
   2b924:	003e0706 	br	2b144 <___svfiprintf_internal_r+0x728>
   2b928:	00800c04 	movi	r2,48
   2b92c:	d8801d05 	stb	r2,116(sp)
   2b930:	d8c01d45 	stb	r3,117(sp)
   2b934:	d8001d85 	stb	zero,118(sp)
   2b938:	90800094 	ori	r2,r18,2
   2b93c:	80008f16 	blt	r16,zero,2bb7c <___svfiprintf_internal_r+0x1160>
   2b940:	00bfdfc4 	movi	r2,-129
   2b944:	90a4703a 	and	r18,r18,r2
   2b948:	94800094 	ori	r18,r18,2
   2b94c:	0015883a 	mov	r10,zero
   2b950:	003d2906 	br	2adf8 <___svfiprintf_internal_r+0x3dc>
   2b954:	98c00007 	ldb	r3,0(r19)
   2b958:	003c7f06 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2b95c:	dac02317 	ldw	r11,140(sp)
   2b960:	0013883a 	mov	r9,zero
   2b964:	5f000017 	ldw	fp,0(r11)
   2b968:	5ac00104 	addi	r11,r11,4
   2b96c:	dac02315 	stw	r11,140(sp)
   2b970:	003d1506 	br	2adc8 <___svfiprintf_internal_r+0x3ac>
   2b974:	9080100c 	andi	r2,r18,64
   2b978:	d8001d85 	stb	zero,118(sp)
   2b97c:	dac02317 	ldw	r11,140(sp)
   2b980:	10003426 	beq	r2,zero,2ba54 <___svfiprintf_internal_r+0x1038>
   2b984:	58800104 	addi	r2,r11,4
   2b988:	5f00000b 	ldhu	fp,0(r11)
   2b98c:	0013883a 	mov	r9,zero
   2b990:	803e950e 	bge	r16,zero,2b3e8 <___svfiprintf_internal_r+0x9cc>
   2b994:	e246b03a 	or	r3,fp,r9
   2b998:	d8802315 	stw	r2,140(sp)
   2b99c:	183d5a1e 	bne	r3,zero,2af08 <___svfiprintf_internal_r+0x4ec>
   2b9a0:	0015883a 	mov	r10,zero
   2b9a4:	0005883a 	mov	r2,zero
   2b9a8:	003fb706 	br	2b888 <___svfiprintf_internal_r+0xe6c>
   2b9ac:	98c00043 	ldbu	r3,1(r19)
   2b9b0:	94800814 	ori	r18,r18,32
   2b9b4:	9cc00044 	addi	r19,r19,1
   2b9b8:	18c03fcc 	andi	r3,r3,255
   2b9bc:	18c0201c 	xori	r3,r3,128
   2b9c0:	18ffe004 	addi	r3,r3,-128
   2b9c4:	003c6406 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2b9c8:	d8c02315 	stw	r3,140(sp)
   2b9cc:	0015883a 	mov	r10,zero
   2b9d0:	003faa06 	br	2b87c <___svfiprintf_internal_r+0xe60>
   2b9d4:	dac02317 	ldw	r11,140(sp)
   2b9d8:	58800017 	ldw	r2,0(r11)
   2b9dc:	5ac00104 	addi	r11,r11,4
   2b9e0:	dac02315 	stw	r11,140(sp)
   2b9e4:	dac02517 	ldw	r11,148(sp)
   2b9e8:	12c00015 	stw	r11,0(r2)
   2b9ec:	003c3206 	br	2aab8 <___svfiprintf_internal_r+0x9c>
   2b9f0:	010000f4 	movhi	r4,3
   2b9f4:	210e2c04 	addi	r4,r4,14512
   2b9f8:	d9002915 	stw	r4,164(sp)
   2b9fc:	d8c02315 	stw	r3,140(sp)
   2ba00:	1025883a 	mov	r18,r2
   2ba04:	e244b03a 	or	r2,fp,r9
   2ba08:	103f871e 	bne	r2,zero,2b828 <___svfiprintf_internal_r+0xe0c>
   2ba0c:	0015883a 	mov	r10,zero
   2ba10:	00800084 	movi	r2,2
   2ba14:	003f9c06 	br	2b888 <___svfiprintf_internal_r+0xe6c>
   2ba18:	0039883a 	mov	fp,zero
   2ba1c:	003e5f06 	br	2b39c <___svfiprintf_internal_r+0x980>
   2ba20:	d9801a04 	addi	r6,sp,104
   2ba24:	b80b883a 	mov	r5,r23
   2ba28:	a809883a 	mov	r4,r21
   2ba2c:	002a84c0 	call	2a84c <__ssprint_r>
   2ba30:	103f081e 	bne	r2,zero,2b654 <___svfiprintf_internal_r+0xc38>
   2ba34:	d8c01c17 	ldw	r3,112(sp)
   2ba38:	d8801b17 	ldw	r2,108(sp)
   2ba3c:	d811883a 	mov	r8,sp
   2ba40:	003e9106 	br	2b488 <___svfiprintf_internal_r+0xa6c>
   2ba44:	010000f4 	movhi	r4,3
   2ba48:	210e9504 	addi	r4,r4,14932
   2ba4c:	d9002215 	stw	r4,136(sp)
   2ba50:	003ead06 	br	2b508 <___svfiprintf_internal_r+0xaec>
   2ba54:	58800104 	addi	r2,r11,4
   2ba58:	5f000017 	ldw	fp,0(r11)
   2ba5c:	0013883a 	mov	r9,zero
   2ba60:	803e610e 	bge	r16,zero,2b3e8 <___svfiprintf_internal_r+0x9cc>
   2ba64:	003fcb06 	br	2b994 <___svfiprintf_internal_r+0xf78>
   2ba68:	58800104 	addi	r2,r11,4
   2ba6c:	5f000017 	ldw	fp,0(r11)
   2ba70:	0013883a 	mov	r9,zero
   2ba74:	803e420e 	bge	r16,zero,2b380 <___svfiprintf_internal_r+0x964>
   2ba78:	003f7e06 	br	2b874 <___svfiprintf_internal_r+0xe58>
   2ba7c:	5f000017 	ldw	fp,0(r11)
   2ba80:	5ac00104 	addi	r11,r11,4
   2ba84:	0013883a 	mov	r9,zero
   2ba88:	dac02315 	stw	r11,140(sp)
   2ba8c:	003cce06 	br	2adc8 <___svfiprintf_internal_r+0x3ac>
   2ba90:	8809883a 	mov	r4,r17
   2ba94:	da002c15 	stw	r8,176(sp)
   2ba98:	00210dc0 	call	210dc <strlen>
   2ba9c:	d8802115 	stw	r2,132(sp)
   2baa0:	da801d83 	ldbu	r10,118(sp)
   2baa4:	df002315 	stw	fp,140(sp)
   2baa8:	0021883a 	mov	r16,zero
   2baac:	da002c17 	ldw	r8,176(sp)
   2bab0:	003cf606 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2bab4:	00800184 	movi	r2,6
   2bab8:	1400012e 	bgeu	r2,r16,2bac0 <___svfiprintf_internal_r+0x10a4>
   2babc:	1021883a 	mov	r16,r2
   2bac0:	dc002115 	stw	r16,132(sp)
   2bac4:	8005883a 	mov	r2,r16
   2bac8:	80003c16 	blt	r16,zero,2bbbc <___svfiprintf_internal_r+0x11a0>
   2bacc:	044000f4 	movhi	r17,3
   2bad0:	d8802015 	stw	r2,128(sp)
   2bad4:	df002315 	stw	fp,140(sp)
   2bad8:	8c4e3104 	addi	r17,r17,14532
   2badc:	003d2e06 	br	2af98 <___svfiprintf_internal_r+0x57c>
   2bae0:	04001004 	movi	r16,64
   2bae4:	800b883a 	mov	r5,r16
   2bae8:	00283500 	call	28350 <_malloc_r>
   2baec:	dac02717 	ldw	r11,156(sp)
   2baf0:	58800015 	stw	r2,0(r11)
   2baf4:	58800415 	stw	r2,16(r11)
   2baf8:	10004826 	beq	r2,zero,2bc1c <___svfiprintf_internal_r+0x1200>
   2bafc:	dac02717 	ldw	r11,156(sp)
   2bb00:	5c000515 	stw	r16,20(r11)
   2bb04:	003bd906 	br	2aa6c <___svfiprintf_internal_r+0x50>
   2bb08:	9080004c 	andi	r2,r18,1
   2bb0c:	0015883a 	mov	r10,zero
   2bb10:	10000626 	beq	r2,zero,2bb2c <___svfiprintf_internal_r+0x1110>
   2bb14:	dac02b17 	ldw	r11,172(sp)
   2bb18:	00800c04 	movi	r2,48
   2bb1c:	d88019c5 	stb	r2,103(sp)
   2bb20:	dac02115 	stw	r11,132(sp)
   2bb24:	dc4019c4 	addi	r17,sp,103
   2bb28:	003cd806 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2bb2c:	d8002115 	stw	zero,132(sp)
   2bb30:	dc401a04 	addi	r17,sp,104
   2bb34:	003cd506 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2bb38:	010000f4 	movhi	r4,3
   2bb3c:	210e9904 	addi	r4,r4,14948
   2bb40:	d9002815 	stw	r4,160(sp)
   2bb44:	003d4306 	br	2b054 <___svfiprintf_internal_r+0x638>
   2bb48:	00bfffc4 	movi	r2,-1
   2bb4c:	003ec606 	br	2b668 <___svfiprintf_internal_r+0xc4c>
   2bb50:	00800044 	movi	r2,1
   2bb54:	10803fcc 	andi	r2,r2,255
   2bb58:	00c00044 	movi	r3,1
   2bb5c:	10fd8026 	beq	r2,r3,2b160 <___svfiprintf_internal_r+0x744>
   2bb60:	00c00084 	movi	r3,2
   2bb64:	10fca426 	beq	r2,r3,2adf8 <___svfiprintf_internal_r+0x3dc>
   2bb68:	003ce806 	br	2af0c <___svfiprintf_internal_r+0x4f0>
   2bb6c:	010000f4 	movhi	r4,3
   2bb70:	210e9904 	addi	r4,r4,14948
   2bb74:	d9002815 	stw	r4,160(sp)
   2bb78:	003e9906 	br	2b5e0 <___svfiprintf_internal_r+0xbc4>
   2bb7c:	1025883a 	mov	r18,r2
   2bb80:	0015883a 	mov	r10,zero
   2bb84:	00800084 	movi	r2,2
   2bb88:	003ff206 	br	2bb54 <___svfiprintf_internal_r+0x1138>
   2bb8c:	014000f4 	movhi	r5,3
   2bb90:	294e9504 	addi	r5,r5,14932
   2bb94:	d9402215 	stw	r5,136(sp)
   2bb98:	003ee206 	br	2b724 <___svfiprintf_internal_r+0xd08>
   2bb9c:	5827883a 	mov	r19,r11
   2bba0:	0021883a 	mov	r16,zero
   2bba4:	003bed06 	br	2ab5c <___svfiprintf_internal_r+0x140>
   2bba8:	dc002115 	stw	r16,132(sp)
   2bbac:	da801d83 	ldbu	r10,118(sp)
   2bbb0:	df002315 	stw	fp,140(sp)
   2bbb4:	0021883a 	mov	r16,zero
   2bbb8:	003cb406 	br	2ae8c <___svfiprintf_internal_r+0x470>
   2bbbc:	0005883a 	mov	r2,zero
   2bbc0:	003fc206 	br	2bacc <___svfiprintf_internal_r+0x10b0>
   2bbc4:	d8802317 	ldw	r2,140(sp)
   2bbc8:	98c00043 	ldbu	r3,1(r19)
   2bbcc:	5827883a 	mov	r19,r11
   2bbd0:	14000017 	ldw	r16,0(r2)
   2bbd4:	10800104 	addi	r2,r2,4
   2bbd8:	d8802315 	stw	r2,140(sp)
   2bbdc:	803f760e 	bge	r16,zero,2b9b8 <___svfiprintf_internal_r+0xf9c>
   2bbe0:	18c03fcc 	andi	r3,r3,255
   2bbe4:	18c0201c 	xori	r3,r3,128
   2bbe8:	043fffc4 	movi	r16,-1
   2bbec:	18ffe004 	addi	r3,r3,-128
   2bbf0:	003bd906 	br	2ab58 <___svfiprintf_internal_r+0x13c>
   2bbf4:	d9c01d85 	stb	r7,118(sp)
   2bbf8:	003cb606 	br	2aed4 <___svfiprintf_internal_r+0x4b8>
   2bbfc:	d9c01d85 	stb	r7,118(sp)
   2bc00:	003d2106 	br	2b088 <___svfiprintf_internal_r+0x66c>
   2bc04:	d9c01d85 	stb	r7,118(sp)
   2bc08:	003d8e06 	br	2b244 <___svfiprintf_internal_r+0x828>
   2bc0c:	d9c01d85 	stb	r7,118(sp)
   2bc10:	003db306 	br	2b2e0 <___svfiprintf_internal_r+0x8c4>
   2bc14:	d9c01d85 	stb	r7,118(sp)
   2bc18:	003c8a06 	br	2ae44 <___svfiprintf_internal_r+0x428>
   2bc1c:	dac02a17 	ldw	r11,168(sp)
   2bc20:	00800304 	movi	r2,12
   2bc24:	58800015 	stw	r2,0(r11)
   2bc28:	00bfffc4 	movi	r2,-1
   2bc2c:	003e8e06 	br	2b668 <___svfiprintf_internal_r+0xc4c>
   2bc30:	d9c01d85 	stb	r7,118(sp)
   2bc34:	003dc706 	br	2b354 <___svfiprintf_internal_r+0x938>
   2bc38:	d9c01d85 	stb	r7,118(sp)
   2bc3c:	003ddf06 	br	2b3bc <___svfiprintf_internal_r+0x9a0>
   2bc40:	d9c01d85 	stb	r7,118(sp)
   2bc44:	003d3706 	br	2b124 <___svfiprintf_internal_r+0x708>
   2bc48:	d9c01d85 	stb	r7,118(sp)
   2bc4c:	003c5406 	br	2ada0 <___svfiprintf_internal_r+0x384>
   2bc50:	d9c01d85 	stb	r7,118(sp)
   2bc54:	003d1d06 	br	2b0cc <___svfiprintf_internal_r+0x6b0>

0002bc58 <__sprint_r.part.0>:
   2bc58:	28801917 	ldw	r2,100(r5)
   2bc5c:	defff604 	addi	sp,sp,-40
   2bc60:	dd400515 	stw	r21,20(sp)
   2bc64:	dfc00915 	stw	ra,36(sp)
   2bc68:	df000815 	stw	fp,32(sp)
   2bc6c:	ddc00715 	stw	r23,28(sp)
   2bc70:	dd800615 	stw	r22,24(sp)
   2bc74:	dd000415 	stw	r20,16(sp)
   2bc78:	dcc00315 	stw	r19,12(sp)
   2bc7c:	dc800215 	stw	r18,8(sp)
   2bc80:	dc400115 	stw	r17,4(sp)
   2bc84:	dc000015 	stw	r16,0(sp)
   2bc88:	1088000c 	andi	r2,r2,8192
   2bc8c:	302b883a 	mov	r21,r6
   2bc90:	10002e26 	beq	r2,zero,2bd4c <__sprint_r.part.0+0xf4>
   2bc94:	30800217 	ldw	r2,8(r6)
   2bc98:	35800017 	ldw	r22,0(r6)
   2bc9c:	10002926 	beq	r2,zero,2bd44 <__sprint_r.part.0+0xec>
   2bca0:	2827883a 	mov	r19,r5
   2bca4:	2029883a 	mov	r20,r4
   2bca8:	b5c00104 	addi	r23,r22,4
   2bcac:	04bfffc4 	movi	r18,-1
   2bcb0:	bc400017 	ldw	r17,0(r23)
   2bcb4:	b4000017 	ldw	r16,0(r22)
   2bcb8:	0039883a 	mov	fp,zero
   2bcbc:	8822d0ba 	srli	r17,r17,2
   2bcc0:	8800031e 	bne	r17,zero,2bcd0 <__sprint_r.part.0+0x78>
   2bcc4:	00001806 	br	2bd28 <__sprint_r.part.0+0xd0>
   2bcc8:	84000104 	addi	r16,r16,4
   2bccc:	8f001526 	beq	r17,fp,2bd24 <__sprint_r.part.0+0xcc>
   2bcd0:	81400017 	ldw	r5,0(r16)
   2bcd4:	980d883a 	mov	r6,r19
   2bcd8:	a009883a 	mov	r4,r20
   2bcdc:	002d6800 	call	2d680 <_fputwc_r>
   2bce0:	e7000044 	addi	fp,fp,1
   2bce4:	14bff81e 	bne	r2,r18,2bcc8 <__sprint_r.part.0+0x70>
   2bce8:	9005883a 	mov	r2,r18
   2bcec:	a8000215 	stw	zero,8(r21)
   2bcf0:	a8000115 	stw	zero,4(r21)
   2bcf4:	dfc00917 	ldw	ra,36(sp)
   2bcf8:	df000817 	ldw	fp,32(sp)
   2bcfc:	ddc00717 	ldw	r23,28(sp)
   2bd00:	dd800617 	ldw	r22,24(sp)
   2bd04:	dd400517 	ldw	r21,20(sp)
   2bd08:	dd000417 	ldw	r20,16(sp)
   2bd0c:	dcc00317 	ldw	r19,12(sp)
   2bd10:	dc800217 	ldw	r18,8(sp)
   2bd14:	dc400117 	ldw	r17,4(sp)
   2bd18:	dc000017 	ldw	r16,0(sp)
   2bd1c:	dec00a04 	addi	sp,sp,40
   2bd20:	f800283a 	ret
   2bd24:	a8800217 	ldw	r2,8(r21)
   2bd28:	8c63883a 	add	r17,r17,r17
   2bd2c:	8c63883a 	add	r17,r17,r17
   2bd30:	1445c83a 	sub	r2,r2,r17
   2bd34:	a8800215 	stw	r2,8(r21)
   2bd38:	b5800204 	addi	r22,r22,8
   2bd3c:	bdc00204 	addi	r23,r23,8
   2bd40:	103fdb1e 	bne	r2,zero,2bcb0 <__sprint_r.part.0+0x58>
   2bd44:	0005883a 	mov	r2,zero
   2bd48:	003fe806 	br	2bcec <__sprint_r.part.0+0x94>
   2bd4c:	0027a740 	call	27a74 <__sfvwrite_r>
   2bd50:	003fe606 	br	2bcec <__sprint_r.part.0+0x94>

0002bd54 <__sprint_r>:
   2bd54:	30c00217 	ldw	r3,8(r6)
   2bd58:	18000126 	beq	r3,zero,2bd60 <__sprint_r+0xc>
   2bd5c:	002bc581 	jmpi	2bc58 <__sprint_r.part.0>
   2bd60:	30000115 	stw	zero,4(r6)
   2bd64:	0005883a 	mov	r2,zero
   2bd68:	f800283a 	ret

0002bd6c <___vfiprintf_internal_r>:
   2bd6c:	deffc904 	addi	sp,sp,-220
   2bd70:	df003515 	stw	fp,212(sp)
   2bd74:	dd003115 	stw	r20,196(sp)
   2bd78:	dfc03615 	stw	ra,216(sp)
   2bd7c:	ddc03415 	stw	r23,208(sp)
   2bd80:	dd803315 	stw	r22,204(sp)
   2bd84:	dd403215 	stw	r21,200(sp)
   2bd88:	dcc03015 	stw	r19,192(sp)
   2bd8c:	dc802f15 	stw	r18,188(sp)
   2bd90:	dc402e15 	stw	r17,184(sp)
   2bd94:	dc002d15 	stw	r16,180(sp)
   2bd98:	d9002015 	stw	r4,128(sp)
   2bd9c:	d9c02215 	stw	r7,136(sp)
   2bda0:	2829883a 	mov	r20,r5
   2bda4:	3039883a 	mov	fp,r6
   2bda8:	20000226 	beq	r4,zero,2bdb4 <___vfiprintf_internal_r+0x48>
   2bdac:	20800e17 	ldw	r2,56(r4)
   2bdb0:	1000cf26 	beq	r2,zero,2c0f0 <___vfiprintf_internal_r+0x384>
   2bdb4:	a080030b 	ldhu	r2,12(r20)
   2bdb8:	10c8000c 	andi	r3,r2,8192
   2bdbc:	1800061e 	bne	r3,zero,2bdd8 <___vfiprintf_internal_r+0x6c>
   2bdc0:	a1001917 	ldw	r4,100(r20)
   2bdc4:	00f7ffc4 	movi	r3,-8193
   2bdc8:	10880014 	ori	r2,r2,8192
   2bdcc:	20c6703a 	and	r3,r4,r3
   2bdd0:	a080030d 	sth	r2,12(r20)
   2bdd4:	a0c01915 	stw	r3,100(r20)
   2bdd8:	10c0020c 	andi	r3,r2,8
   2bddc:	1800a926 	beq	r3,zero,2c084 <___vfiprintf_internal_r+0x318>
   2bde0:	a0c00417 	ldw	r3,16(r20)
   2bde4:	1800a726 	beq	r3,zero,2c084 <___vfiprintf_internal_r+0x318>
   2bde8:	1080068c 	andi	r2,r2,26
   2bdec:	00c00284 	movi	r3,10
   2bdf0:	10c0ac26 	beq	r2,r3,2c0a4 <___vfiprintf_internal_r+0x338>
   2bdf4:	da801a04 	addi	r10,sp,104
   2bdf8:	da801e15 	stw	r10,120(sp)
   2bdfc:	d8801e17 	ldw	r2,120(sp)
   2be00:	da8019c4 	addi	r10,sp,103
   2be04:	058000f4 	movhi	r22,3
   2be08:	05c000f4 	movhi	r23,3
   2be0c:	da801f15 	stw	r10,124(sp)
   2be10:	1295c83a 	sub	r10,r2,r10
   2be14:	b58ea104 	addi	r22,r22,14980
   2be18:	bdce9d04 	addi	r23,r23,14964
   2be1c:	dec01a15 	stw	sp,104(sp)
   2be20:	d8001c15 	stw	zero,112(sp)
   2be24:	d8001b15 	stw	zero,108(sp)
   2be28:	d8002615 	stw	zero,152(sp)
   2be2c:	d8002315 	stw	zero,140(sp)
   2be30:	da802715 	stw	r10,156(sp)
   2be34:	d811883a 	mov	r8,sp
   2be38:	dd002115 	stw	r20,132(sp)
   2be3c:	e021883a 	mov	r16,fp
   2be40:	80800007 	ldb	r2,0(r16)
   2be44:	1003ea26 	beq	r2,zero,2cdf0 <___vfiprintf_internal_r+0x1084>
   2be48:	00c00944 	movi	r3,37
   2be4c:	8025883a 	mov	r18,r16
   2be50:	10c0021e 	bne	r2,r3,2be5c <___vfiprintf_internal_r+0xf0>
   2be54:	00001606 	br	2beb0 <___vfiprintf_internal_r+0x144>
   2be58:	10c00326 	beq	r2,r3,2be68 <___vfiprintf_internal_r+0xfc>
   2be5c:	94800044 	addi	r18,r18,1
   2be60:	90800007 	ldb	r2,0(r18)
   2be64:	103ffc1e 	bne	r2,zero,2be58 <___vfiprintf_internal_r+0xec>
   2be68:	9423c83a 	sub	r17,r18,r16
   2be6c:	88001026 	beq	r17,zero,2beb0 <___vfiprintf_internal_r+0x144>
   2be70:	d8c01c17 	ldw	r3,112(sp)
   2be74:	d8801b17 	ldw	r2,108(sp)
   2be78:	44000015 	stw	r16,0(r8)
   2be7c:	88c7883a 	add	r3,r17,r3
   2be80:	10800044 	addi	r2,r2,1
   2be84:	44400115 	stw	r17,4(r8)
   2be88:	d8c01c15 	stw	r3,112(sp)
   2be8c:	d8801b15 	stw	r2,108(sp)
   2be90:	010001c4 	movi	r4,7
   2be94:	2080760e 	bge	r4,r2,2c070 <___vfiprintf_internal_r+0x304>
   2be98:	1803821e 	bne	r3,zero,2cca4 <___vfiprintf_internal_r+0xf38>
   2be9c:	da802317 	ldw	r10,140(sp)
   2bea0:	d8001b15 	stw	zero,108(sp)
   2bea4:	d811883a 	mov	r8,sp
   2bea8:	5455883a 	add	r10,r10,r17
   2beac:	da802315 	stw	r10,140(sp)
   2beb0:	90800007 	ldb	r2,0(r18)
   2beb4:	10044626 	beq	r2,zero,2cfd0 <___vfiprintf_internal_r+0x1264>
   2beb8:	90c00047 	ldb	r3,1(r18)
   2bebc:	94000044 	addi	r16,r18,1
   2bec0:	d8001d85 	stb	zero,118(sp)
   2bec4:	0009883a 	mov	r4,zero
   2bec8:	000f883a 	mov	r7,zero
   2becc:	027fffc4 	movi	r9,-1
   2bed0:	0023883a 	mov	r17,zero
   2bed4:	0029883a 	mov	r20,zero
   2bed8:	01401604 	movi	r5,88
   2bedc:	01800244 	movi	r6,9
   2bee0:	03400a84 	movi	r13,42
   2bee4:	03001b04 	movi	r12,108
   2bee8:	84000044 	addi	r16,r16,1
   2beec:	18bff804 	addi	r2,r3,-32
   2bef0:	28827336 	bltu	r5,r2,2c8c0 <___vfiprintf_internal_r+0xb54>
   2bef4:	100490ba 	slli	r2,r2,2
   2bef8:	028000f4 	movhi	r10,3
   2befc:	52afc304 	addi	r10,r10,-16628
   2bf00:	1285883a 	add	r2,r2,r10
   2bf04:	10800017 	ldw	r2,0(r2)
   2bf08:	1000683a 	jmp	r2
   2bf0c:	0002c5f4 	movhi	zero,2839
   2bf10:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf14:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf18:	0002c614 	movui	zero,2840
   2bf1c:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf20:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf24:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf28:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf2c:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf30:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf34:	0002c7fc 	xorhi	zero,zero,2847
   2bf38:	0002c818 	cmpnei	zero,zero,2848
   2bf3c:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf40:	0002c100 	call	2c10 <__alt_mem_MEMOIRE_ONCHIP-0x1d3f0>
   2bf44:	0002c828 	cmpgeui	zero,zero,2848
   2bf48:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf4c:	0002c620 	cmpeqi	zero,zero,2840
   2bf50:	0002c62c 	andhi	zero,zero,2840
   2bf54:	0002c62c 	andhi	zero,zero,2840
   2bf58:	0002c62c 	andhi	zero,zero,2840
   2bf5c:	0002c62c 	andhi	zero,zero,2840
   2bf60:	0002c62c 	andhi	zero,zero,2840
   2bf64:	0002c62c 	andhi	zero,zero,2840
   2bf68:	0002c62c 	andhi	zero,zero,2840
   2bf6c:	0002c62c 	andhi	zero,zero,2840
   2bf70:	0002c62c 	andhi	zero,zero,2840
   2bf74:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf78:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf7c:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf80:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf84:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf88:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf8c:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf90:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf94:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf98:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bf9c:	0002c658 	cmpnei	zero,zero,2841
   2bfa0:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfa4:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfa8:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfac:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfb0:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfb4:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfb8:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfbc:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfc0:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfc4:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfc8:	0002c690 	cmplti	zero,zero,2842
   2bfcc:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfd0:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfd4:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfd8:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfdc:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfe0:	0002c6e8 	cmpgeui	zero,zero,2843
   2bfe4:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfe8:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bfec:	0002c758 	cmpnei	zero,zero,2845
   2bff0:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bff4:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bff8:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2bffc:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c000:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c004:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c008:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c00c:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c010:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c014:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c018:	0002c504 	movi	zero,2836
   2c01c:	0002c530 	cmpltui	zero,zero,2836
   2c020:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c024:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c028:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c02c:	0002c868 	cmpgeui	zero,zero,2849
   2c030:	0002c530 	cmpltui	zero,zero,2836
   2c034:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c038:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c03c:	0002c3c4 	movi	zero,2831
   2c040:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c044:	0002c3d4 	movui	zero,2831
   2c048:	0002c410 	cmplti	zero,zero,2832
   2c04c:	0002c10c 	andi	zero,zero,2820
   2c050:	0002c3b8 	rdprs	zero,zero,2830
   2c054:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c058:	0002c794 	movui	zero,2846
   2c05c:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c060:	0002c7ec 	andhi	zero,zero,2847
   2c064:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c068:	0002c8c0 	call	2c8c <__alt_mem_MEMOIRE_ONCHIP-0x1d374>
   2c06c:	0002c4b0 	cmpltui	zero,zero,2834
   2c070:	42000204 	addi	r8,r8,8
   2c074:	da802317 	ldw	r10,140(sp)
   2c078:	5455883a 	add	r10,r10,r17
   2c07c:	da802315 	stw	r10,140(sp)
   2c080:	003f8b06 	br	2beb0 <___vfiprintf_internal_r+0x144>
   2c084:	d9002017 	ldw	r4,128(sp)
   2c088:	a00b883a 	mov	r5,r20
   2c08c:	002561c0 	call	2561c <__swsetup_r>
   2c090:	1003b11e 	bne	r2,zero,2cf58 <___vfiprintf_internal_r+0x11ec>
   2c094:	a080030b 	ldhu	r2,12(r20)
   2c098:	00c00284 	movi	r3,10
   2c09c:	1080068c 	andi	r2,r2,26
   2c0a0:	10ff541e 	bne	r2,r3,2bdf4 <___vfiprintf_internal_r+0x88>
   2c0a4:	a080038f 	ldh	r2,14(r20)
   2c0a8:	103f5216 	blt	r2,zero,2bdf4 <___vfiprintf_internal_r+0x88>
   2c0ac:	d9c02217 	ldw	r7,136(sp)
   2c0b0:	d9002017 	ldw	r4,128(sp)
   2c0b4:	e00d883a 	mov	r6,fp
   2c0b8:	a00b883a 	mov	r5,r20
   2c0bc:	002d1e40 	call	2d1e4 <__sbprintf>
   2c0c0:	dfc03617 	ldw	ra,216(sp)
   2c0c4:	df003517 	ldw	fp,212(sp)
   2c0c8:	ddc03417 	ldw	r23,208(sp)
   2c0cc:	dd803317 	ldw	r22,204(sp)
   2c0d0:	dd403217 	ldw	r21,200(sp)
   2c0d4:	dd003117 	ldw	r20,196(sp)
   2c0d8:	dcc03017 	ldw	r19,192(sp)
   2c0dc:	dc802f17 	ldw	r18,188(sp)
   2c0e0:	dc402e17 	ldw	r17,184(sp)
   2c0e4:	dc002d17 	ldw	r16,180(sp)
   2c0e8:	dec03704 	addi	sp,sp,220
   2c0ec:	f800283a 	ret
   2c0f0:	00275f00 	call	275f0 <__sinit>
   2c0f4:	003f2f06 	br	2bdb4 <___vfiprintf_internal_r+0x48>
   2c0f8:	0463c83a 	sub	r17,zero,r17
   2c0fc:	d8802215 	stw	r2,136(sp)
   2c100:	a5000114 	ori	r20,r20,4
   2c104:	80c00007 	ldb	r3,0(r16)
   2c108:	003f7706 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c10c:	00800c04 	movi	r2,48
   2c110:	da802217 	ldw	r10,136(sp)
   2c114:	d8801d05 	stb	r2,116(sp)
   2c118:	00801e04 	movi	r2,120
   2c11c:	d8801d45 	stb	r2,117(sp)
   2c120:	d8001d85 	stb	zero,118(sp)
   2c124:	50c00104 	addi	r3,r10,4
   2c128:	54800017 	ldw	r18,0(r10)
   2c12c:	0027883a 	mov	r19,zero
   2c130:	a0800094 	ori	r2,r20,2
   2c134:	48030b16 	blt	r9,zero,2cd64 <___vfiprintf_internal_r+0xff8>
   2c138:	00bfdfc4 	movi	r2,-129
   2c13c:	a096703a 	and	r11,r20,r2
   2c140:	d8c02215 	stw	r3,136(sp)
   2c144:	5d000094 	ori	r20,r11,2
   2c148:	90032b1e 	bne	r18,zero,2cdf8 <___vfiprintf_internal_r+0x108c>
   2c14c:	008000f4 	movhi	r2,3
   2c150:	108e2c04 	addi	r2,r2,14512
   2c154:	d8802615 	stw	r2,152(sp)
   2c158:	0039883a 	mov	fp,zero
   2c15c:	48017b1e 	bne	r9,zero,2c74c <___vfiprintf_internal_r+0x9e0>
   2c160:	0013883a 	mov	r9,zero
   2c164:	0027883a 	mov	r19,zero
   2c168:	dd401a04 	addi	r21,sp,104
   2c16c:	4825883a 	mov	r18,r9
   2c170:	4cc0010e 	bge	r9,r19,2c178 <___vfiprintf_internal_r+0x40c>
   2c174:	9825883a 	mov	r18,r19
   2c178:	e7003fcc 	andi	fp,fp,255
   2c17c:	e700201c 	xori	fp,fp,128
   2c180:	e73fe004 	addi	fp,fp,-128
   2c184:	e0000126 	beq	fp,zero,2c18c <___vfiprintf_internal_r+0x420>
   2c188:	94800044 	addi	r18,r18,1
   2c18c:	a380008c 	andi	r14,r20,2
   2c190:	70000126 	beq	r14,zero,2c198 <___vfiprintf_internal_r+0x42c>
   2c194:	94800084 	addi	r18,r18,2
   2c198:	a700210c 	andi	fp,r20,132
   2c19c:	e001df1e 	bne	fp,zero,2c91c <___vfiprintf_internal_r+0xbb0>
   2c1a0:	8c87c83a 	sub	r3,r17,r18
   2c1a4:	00c1dd0e 	bge	zero,r3,2c91c <___vfiprintf_internal_r+0xbb0>
   2c1a8:	01c00404 	movi	r7,16
   2c1ac:	d8801c17 	ldw	r2,112(sp)
   2c1b0:	38c3ad0e 	bge	r7,r3,2d068 <___vfiprintf_internal_r+0x12fc>
   2c1b4:	028000f4 	movhi	r10,3
   2c1b8:	528ea104 	addi	r10,r10,14980
   2c1bc:	dc002915 	stw	r16,164(sp)
   2c1c0:	d9801b17 	ldw	r6,108(sp)
   2c1c4:	da802415 	stw	r10,144(sp)
   2c1c8:	03c001c4 	movi	r15,7
   2c1cc:	da402515 	stw	r9,148(sp)
   2c1d0:	db802815 	stw	r14,160(sp)
   2c1d4:	1821883a 	mov	r16,r3
   2c1d8:	00000506 	br	2c1f0 <___vfiprintf_internal_r+0x484>
   2c1dc:	31400084 	addi	r5,r6,2
   2c1e0:	42000204 	addi	r8,r8,8
   2c1e4:	200d883a 	mov	r6,r4
   2c1e8:	843ffc04 	addi	r16,r16,-16
   2c1ec:	3c000d0e 	bge	r7,r16,2c224 <___vfiprintf_internal_r+0x4b8>
   2c1f0:	10800404 	addi	r2,r2,16
   2c1f4:	31000044 	addi	r4,r6,1
   2c1f8:	45800015 	stw	r22,0(r8)
   2c1fc:	41c00115 	stw	r7,4(r8)
   2c200:	d8801c15 	stw	r2,112(sp)
   2c204:	d9001b15 	stw	r4,108(sp)
   2c208:	793ff40e 	bge	r15,r4,2c1dc <___vfiprintf_internal_r+0x470>
   2c20c:	1001b51e 	bne	r2,zero,2c8e4 <___vfiprintf_internal_r+0xb78>
   2c210:	843ffc04 	addi	r16,r16,-16
   2c214:	000d883a 	mov	r6,zero
   2c218:	01400044 	movi	r5,1
   2c21c:	d811883a 	mov	r8,sp
   2c220:	3c3ff316 	blt	r7,r16,2c1f0 <___vfiprintf_internal_r+0x484>
   2c224:	8007883a 	mov	r3,r16
   2c228:	da402517 	ldw	r9,148(sp)
   2c22c:	db802817 	ldw	r14,160(sp)
   2c230:	dc002917 	ldw	r16,164(sp)
   2c234:	da802417 	ldw	r10,144(sp)
   2c238:	1885883a 	add	r2,r3,r2
   2c23c:	40c00115 	stw	r3,4(r8)
   2c240:	42800015 	stw	r10,0(r8)
   2c244:	d8801c15 	stw	r2,112(sp)
   2c248:	d9401b15 	stw	r5,108(sp)
   2c24c:	00c001c4 	movi	r3,7
   2c250:	19426016 	blt	r3,r5,2cbd4 <___vfiprintf_internal_r+0xe68>
   2c254:	d8c01d87 	ldb	r3,118(sp)
   2c258:	42000204 	addi	r8,r8,8
   2c25c:	29000044 	addi	r4,r5,1
   2c260:	1801b31e 	bne	r3,zero,2c930 <___vfiprintf_internal_r+0xbc4>
   2c264:	7001c026 	beq	r14,zero,2c968 <___vfiprintf_internal_r+0xbfc>
   2c268:	d8c01d04 	addi	r3,sp,116
   2c26c:	10800084 	addi	r2,r2,2
   2c270:	40c00015 	stw	r3,0(r8)
   2c274:	00c00084 	movi	r3,2
   2c278:	40c00115 	stw	r3,4(r8)
   2c27c:	d8801c15 	stw	r2,112(sp)
   2c280:	d9001b15 	stw	r4,108(sp)
   2c284:	00c001c4 	movi	r3,7
   2c288:	1902650e 	bge	r3,r4,2cc20 <___vfiprintf_internal_r+0xeb4>
   2c28c:	10029a1e 	bne	r2,zero,2ccf8 <___vfiprintf_internal_r+0xf8c>
   2c290:	00c02004 	movi	r3,128
   2c294:	01000044 	movi	r4,1
   2c298:	000b883a 	mov	r5,zero
   2c29c:	d811883a 	mov	r8,sp
   2c2a0:	e0c1b31e 	bne	fp,r3,2c970 <___vfiprintf_internal_r+0xc04>
   2c2a4:	8cb9c83a 	sub	fp,r17,r18
   2c2a8:	0701b10e 	bge	zero,fp,2c970 <___vfiprintf_internal_r+0xc04>
   2c2ac:	01c00404 	movi	r7,16
   2c2b0:	3f03890e 	bge	r7,fp,2d0d8 <___vfiprintf_internal_r+0x136c>
   2c2b4:	00c000f4 	movhi	r3,3
   2c2b8:	18ce9d04 	addi	r3,r3,14964
   2c2bc:	d8c02415 	stw	r3,144(sp)
   2c2c0:	8007883a 	mov	r3,r16
   2c2c4:	034001c4 	movi	r13,7
   2c2c8:	e021883a 	mov	r16,fp
   2c2cc:	da402515 	stw	r9,148(sp)
   2c2d0:	1839883a 	mov	fp,r3
   2c2d4:	00000506 	br	2c2ec <___vfiprintf_internal_r+0x580>
   2c2d8:	29800084 	addi	r6,r5,2
   2c2dc:	42000204 	addi	r8,r8,8
   2c2e0:	180b883a 	mov	r5,r3
   2c2e4:	843ffc04 	addi	r16,r16,-16
   2c2e8:	3c000d0e 	bge	r7,r16,2c320 <___vfiprintf_internal_r+0x5b4>
   2c2ec:	10800404 	addi	r2,r2,16
   2c2f0:	28c00044 	addi	r3,r5,1
   2c2f4:	45c00015 	stw	r23,0(r8)
   2c2f8:	41c00115 	stw	r7,4(r8)
   2c2fc:	d8801c15 	stw	r2,112(sp)
   2c300:	d8c01b15 	stw	r3,108(sp)
   2c304:	68fff40e 	bge	r13,r3,2c2d8 <___vfiprintf_internal_r+0x56c>
   2c308:	1002241e 	bne	r2,zero,2cb9c <___vfiprintf_internal_r+0xe30>
   2c30c:	843ffc04 	addi	r16,r16,-16
   2c310:	01800044 	movi	r6,1
   2c314:	000b883a 	mov	r5,zero
   2c318:	d811883a 	mov	r8,sp
   2c31c:	3c3ff316 	blt	r7,r16,2c2ec <___vfiprintf_internal_r+0x580>
   2c320:	da402517 	ldw	r9,148(sp)
   2c324:	e007883a 	mov	r3,fp
   2c328:	8039883a 	mov	fp,r16
   2c32c:	1821883a 	mov	r16,r3
   2c330:	d8c02417 	ldw	r3,144(sp)
   2c334:	1705883a 	add	r2,r2,fp
   2c338:	47000115 	stw	fp,4(r8)
   2c33c:	40c00015 	stw	r3,0(r8)
   2c340:	d8801c15 	stw	r2,112(sp)
   2c344:	d9801b15 	stw	r6,108(sp)
   2c348:	00c001c4 	movi	r3,7
   2c34c:	19827616 	blt	r3,r6,2cd28 <___vfiprintf_internal_r+0xfbc>
   2c350:	4cf9c83a 	sub	fp,r9,r19
   2c354:	42000204 	addi	r8,r8,8
   2c358:	31000044 	addi	r4,r6,1
   2c35c:	300b883a 	mov	r5,r6
   2c360:	07018516 	blt	zero,fp,2c978 <___vfiprintf_internal_r+0xc0c>
   2c364:	9885883a 	add	r2,r19,r2
   2c368:	45400015 	stw	r21,0(r8)
   2c36c:	44c00115 	stw	r19,4(r8)
   2c370:	d8801c15 	stw	r2,112(sp)
   2c374:	d9001b15 	stw	r4,108(sp)
   2c378:	00c001c4 	movi	r3,7
   2c37c:	1901dd0e 	bge	r3,r4,2caf4 <___vfiprintf_internal_r+0xd88>
   2c380:	1002401e 	bne	r2,zero,2cc84 <___vfiprintf_internal_r+0xf18>
   2c384:	d8001b15 	stw	zero,108(sp)
   2c388:	a2c0010c 	andi	r11,r20,4
   2c38c:	58000226 	beq	r11,zero,2c398 <___vfiprintf_internal_r+0x62c>
   2c390:	8ca7c83a 	sub	r19,r17,r18
   2c394:	04c2f216 	blt	zero,r19,2cf60 <___vfiprintf_internal_r+0x11f4>
   2c398:	8c80010e 	bge	r17,r18,2c3a0 <___vfiprintf_internal_r+0x634>
   2c39c:	9023883a 	mov	r17,r18
   2c3a0:	da802317 	ldw	r10,140(sp)
   2c3a4:	5455883a 	add	r10,r10,r17
   2c3a8:	da802315 	stw	r10,140(sp)
   2c3ac:	d8001b15 	stw	zero,108(sp)
   2c3b0:	d811883a 	mov	r8,sp
   2c3b4:	003ea206 	br	2be40 <___vfiprintf_internal_r+0xd4>
   2c3b8:	a5000814 	ori	r20,r20,32
   2c3bc:	80c00007 	ldb	r3,0(r16)
   2c3c0:	003ec906 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c3c4:	80c00007 	ldb	r3,0(r16)
   2c3c8:	1b030926 	beq	r3,r12,2cff0 <___vfiprintf_internal_r+0x1284>
   2c3cc:	a5000414 	ori	r20,r20,16
   2c3d0:	003ec506 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c3d4:	21003fcc 	andi	r4,r4,255
   2c3d8:	20035e1e 	bne	r4,zero,2d154 <___vfiprintf_internal_r+0x13e8>
   2c3dc:	a080080c 	andi	r2,r20,32
   2c3e0:	1002a526 	beq	r2,zero,2ce78 <___vfiprintf_internal_r+0x110c>
   2c3e4:	da802217 	ldw	r10,136(sp)
   2c3e8:	50800017 	ldw	r2,0(r10)
   2c3ec:	da802317 	ldw	r10,140(sp)
   2c3f0:	5007d7fa 	srai	r3,r10,31
   2c3f4:	da802217 	ldw	r10,136(sp)
   2c3f8:	10c00115 	stw	r3,4(r2)
   2c3fc:	52800104 	addi	r10,r10,4
   2c400:	da802215 	stw	r10,136(sp)
   2c404:	da802317 	ldw	r10,140(sp)
   2c408:	12800015 	stw	r10,0(r2)
   2c40c:	003e8c06 	br	2be40 <___vfiprintf_internal_r+0xd4>
   2c410:	21003fcc 	andi	r4,r4,255
   2c414:	2003511e 	bne	r4,zero,2d15c <___vfiprintf_internal_r+0x13f0>
   2c418:	a080080c 	andi	r2,r20,32
   2c41c:	1000a126 	beq	r2,zero,2c6a4 <___vfiprintf_internal_r+0x938>
   2c420:	da802217 	ldw	r10,136(sp)
   2c424:	d8001d85 	stb	zero,118(sp)
   2c428:	50800204 	addi	r2,r10,8
   2c42c:	54800017 	ldw	r18,0(r10)
   2c430:	54c00117 	ldw	r19,4(r10)
   2c434:	4802b416 	blt	r9,zero,2cf08 <___vfiprintf_internal_r+0x119c>
   2c438:	013fdfc4 	movi	r4,-129
   2c43c:	94c6b03a 	or	r3,r18,r19
   2c440:	d8802215 	stw	r2,136(sp)
   2c444:	a128703a 	and	r20,r20,r4
   2c448:	1800a226 	beq	r3,zero,2c6d4 <___vfiprintf_internal_r+0x968>
   2c44c:	0039883a 	mov	fp,zero
   2c450:	dd401a04 	addi	r21,sp,104
   2c454:	9006d0fa 	srli	r3,r18,3
   2c458:	9808977a 	slli	r4,r19,29
   2c45c:	9826d0fa 	srli	r19,r19,3
   2c460:	948001cc 	andi	r18,r18,7
   2c464:	90800c04 	addi	r2,r18,48
   2c468:	ad7fffc4 	addi	r21,r21,-1
   2c46c:	20e4b03a 	or	r18,r4,r3
   2c470:	a8800005 	stb	r2,0(r21)
   2c474:	94c6b03a 	or	r3,r18,r19
   2c478:	183ff61e 	bne	r3,zero,2c454 <___vfiprintf_internal_r+0x6e8>
   2c47c:	a0c0004c 	andi	r3,r20,1
   2c480:	18005926 	beq	r3,zero,2c5e8 <___vfiprintf_internal_r+0x87c>
   2c484:	10803fcc 	andi	r2,r2,255
   2c488:	1080201c 	xori	r2,r2,128
   2c48c:	10bfe004 	addi	r2,r2,-128
   2c490:	00c00c04 	movi	r3,48
   2c494:	10c05426 	beq	r2,r3,2c5e8 <___vfiprintf_internal_r+0x87c>
   2c498:	da801e17 	ldw	r10,120(sp)
   2c49c:	a8bfffc4 	addi	r2,r21,-1
   2c4a0:	a8ffffc5 	stb	r3,-1(r21)
   2c4a4:	50a7c83a 	sub	r19,r10,r2
   2c4a8:	102b883a 	mov	r21,r2
   2c4ac:	003f2f06 	br	2c16c <___vfiprintf_internal_r+0x400>
   2c4b0:	21003fcc 	andi	r4,r4,255
   2c4b4:	2003421e 	bne	r4,zero,2d1c0 <___vfiprintf_internal_r+0x1454>
   2c4b8:	008000f4 	movhi	r2,3
   2c4bc:	108e2c04 	addi	r2,r2,14512
   2c4c0:	d8802615 	stw	r2,152(sp)
   2c4c4:	a080080c 	andi	r2,r20,32
   2c4c8:	1000aa26 	beq	r2,zero,2c774 <___vfiprintf_internal_r+0xa08>
   2c4cc:	da802217 	ldw	r10,136(sp)
   2c4d0:	54800017 	ldw	r18,0(r10)
   2c4d4:	54c00117 	ldw	r19,4(r10)
   2c4d8:	52800204 	addi	r10,r10,8
   2c4dc:	da802215 	stw	r10,136(sp)
   2c4e0:	a080004c 	andi	r2,r20,1
   2c4e4:	1001d226 	beq	r2,zero,2cc30 <___vfiprintf_internal_r+0xec4>
   2c4e8:	94c4b03a 	or	r2,r18,r19
   2c4ec:	1002351e 	bne	r2,zero,2cdc4 <___vfiprintf_internal_r+0x1058>
   2c4f0:	d8001d85 	stb	zero,118(sp)
   2c4f4:	48022216 	blt	r9,zero,2cd80 <___vfiprintf_internal_r+0x1014>
   2c4f8:	00bfdfc4 	movi	r2,-129
   2c4fc:	a0a8703a 	and	r20,r20,r2
   2c500:	003f1506 	br	2c158 <___vfiprintf_internal_r+0x3ec>
   2c504:	da802217 	ldw	r10,136(sp)
   2c508:	04800044 	movi	r18,1
   2c50c:	d8001d85 	stb	zero,118(sp)
   2c510:	50800017 	ldw	r2,0(r10)
   2c514:	52800104 	addi	r10,r10,4
   2c518:	da802215 	stw	r10,136(sp)
   2c51c:	d8801005 	stb	r2,64(sp)
   2c520:	9027883a 	mov	r19,r18
   2c524:	dd401004 	addi	r21,sp,64
   2c528:	0013883a 	mov	r9,zero
   2c52c:	003f1706 	br	2c18c <___vfiprintf_internal_r+0x420>
   2c530:	21003fcc 	andi	r4,r4,255
   2c534:	2003201e 	bne	r4,zero,2d1b8 <___vfiprintf_internal_r+0x144c>
   2c538:	a080080c 	andi	r2,r20,32
   2c53c:	10004b26 	beq	r2,zero,2c66c <___vfiprintf_internal_r+0x900>
   2c540:	da802217 	ldw	r10,136(sp)
   2c544:	50800117 	ldw	r2,4(r10)
   2c548:	54800017 	ldw	r18,0(r10)
   2c54c:	52800204 	addi	r10,r10,8
   2c550:	da802215 	stw	r10,136(sp)
   2c554:	1027883a 	mov	r19,r2
   2c558:	10022c16 	blt	r2,zero,2ce0c <___vfiprintf_internal_r+0x10a0>
   2c55c:	df001d83 	ldbu	fp,118(sp)
   2c560:	48007216 	blt	r9,zero,2c72c <___vfiprintf_internal_r+0x9c0>
   2c564:	00ffdfc4 	movi	r3,-129
   2c568:	94c4b03a 	or	r2,r18,r19
   2c56c:	a0e8703a 	and	r20,r20,r3
   2c570:	1000cc26 	beq	r2,zero,2c8a4 <___vfiprintf_internal_r+0xb38>
   2c574:	98021026 	beq	r19,zero,2cdb8 <___vfiprintf_internal_r+0x104c>
   2c578:	dc402415 	stw	r17,144(sp)
   2c57c:	dc002515 	stw	r16,148(sp)
   2c580:	9823883a 	mov	r17,r19
   2c584:	9021883a 	mov	r16,r18
   2c588:	dd401a04 	addi	r21,sp,104
   2c58c:	4825883a 	mov	r18,r9
   2c590:	4027883a 	mov	r19,r8
   2c594:	8009883a 	mov	r4,r16
   2c598:	880b883a 	mov	r5,r17
   2c59c:	01800284 	movi	r6,10
   2c5a0:	000f883a 	mov	r7,zero
   2c5a4:	002e14c0 	call	2e14c <__umoddi3>
   2c5a8:	10800c04 	addi	r2,r2,48
   2c5ac:	ad7fffc4 	addi	r21,r21,-1
   2c5b0:	8009883a 	mov	r4,r16
   2c5b4:	880b883a 	mov	r5,r17
   2c5b8:	a8800005 	stb	r2,0(r21)
   2c5bc:	01800284 	movi	r6,10
   2c5c0:	000f883a 	mov	r7,zero
   2c5c4:	002dbd40 	call	2dbd4 <__udivdi3>
   2c5c8:	1021883a 	mov	r16,r2
   2c5cc:	10c4b03a 	or	r2,r2,r3
   2c5d0:	1823883a 	mov	r17,r3
   2c5d4:	103fef1e 	bne	r2,zero,2c594 <___vfiprintf_internal_r+0x828>
   2c5d8:	dc402417 	ldw	r17,144(sp)
   2c5dc:	dc002517 	ldw	r16,148(sp)
   2c5e0:	9013883a 	mov	r9,r18
   2c5e4:	9811883a 	mov	r8,r19
   2c5e8:	da801e17 	ldw	r10,120(sp)
   2c5ec:	5567c83a 	sub	r19,r10,r21
   2c5f0:	003ede06 	br	2c16c <___vfiprintf_internal_r+0x400>
   2c5f4:	38803fcc 	andi	r2,r7,255
   2c5f8:	1080201c 	xori	r2,r2,128
   2c5fc:	10bfe004 	addi	r2,r2,-128
   2c600:	1002371e 	bne	r2,zero,2cee0 <___vfiprintf_internal_r+0x1174>
   2c604:	01000044 	movi	r4,1
   2c608:	01c00804 	movi	r7,32
   2c60c:	80c00007 	ldb	r3,0(r16)
   2c610:	003e3506 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c614:	a5000054 	ori	r20,r20,1
   2c618:	80c00007 	ldb	r3,0(r16)
   2c61c:	003e3206 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c620:	a5002014 	ori	r20,r20,128
   2c624:	80c00007 	ldb	r3,0(r16)
   2c628:	003e2f06 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c62c:	8015883a 	mov	r10,r16
   2c630:	0023883a 	mov	r17,zero
   2c634:	18bff404 	addi	r2,r3,-48
   2c638:	50c00007 	ldb	r3,0(r10)
   2c63c:	8c4002a4 	muli	r17,r17,10
   2c640:	84000044 	addi	r16,r16,1
   2c644:	8015883a 	mov	r10,r16
   2c648:	1463883a 	add	r17,r2,r17
   2c64c:	18bff404 	addi	r2,r3,-48
   2c650:	30bff92e 	bgeu	r6,r2,2c638 <___vfiprintf_internal_r+0x8cc>
   2c654:	003e2506 	br	2beec <___vfiprintf_internal_r+0x180>
   2c658:	21003fcc 	andi	r4,r4,255
   2c65c:	2002d41e 	bne	r4,zero,2d1b0 <___vfiprintf_internal_r+0x1444>
   2c660:	a5000414 	ori	r20,r20,16
   2c664:	a080080c 	andi	r2,r20,32
   2c668:	103fb51e 	bne	r2,zero,2c540 <___vfiprintf_internal_r+0x7d4>
   2c66c:	a080040c 	andi	r2,r20,16
   2c670:	1001f826 	beq	r2,zero,2ce54 <___vfiprintf_internal_r+0x10e8>
   2c674:	da802217 	ldw	r10,136(sp)
   2c678:	54800017 	ldw	r18,0(r10)
   2c67c:	52800104 	addi	r10,r10,4
   2c680:	da802215 	stw	r10,136(sp)
   2c684:	9027d7fa 	srai	r19,r18,31
   2c688:	9805883a 	mov	r2,r19
   2c68c:	003fb206 	br	2c558 <___vfiprintf_internal_r+0x7ec>
   2c690:	21003fcc 	andi	r4,r4,255
   2c694:	2002c41e 	bne	r4,zero,2d1a8 <___vfiprintf_internal_r+0x143c>
   2c698:	a5000414 	ori	r20,r20,16
   2c69c:	a080080c 	andi	r2,r20,32
   2c6a0:	103f5f1e 	bne	r2,zero,2c420 <___vfiprintf_internal_r+0x6b4>
   2c6a4:	a080040c 	andi	r2,r20,16
   2c6a8:	10020f26 	beq	r2,zero,2cee8 <___vfiprintf_internal_r+0x117c>
   2c6ac:	da802217 	ldw	r10,136(sp)
   2c6b0:	d8001d85 	stb	zero,118(sp)
   2c6b4:	0027883a 	mov	r19,zero
   2c6b8:	50800104 	addi	r2,r10,4
   2c6bc:	54800017 	ldw	r18,0(r10)
   2c6c0:	48021116 	blt	r9,zero,2cf08 <___vfiprintf_internal_r+0x119c>
   2c6c4:	00ffdfc4 	movi	r3,-129
   2c6c8:	d8802215 	stw	r2,136(sp)
   2c6cc:	a0e8703a 	and	r20,r20,r3
   2c6d0:	903f5e1e 	bne	r18,zero,2c44c <___vfiprintf_internal_r+0x6e0>
   2c6d4:	0039883a 	mov	fp,zero
   2c6d8:	4802a626 	beq	r9,zero,2d174 <___vfiprintf_internal_r+0x1408>
   2c6dc:	0025883a 	mov	r18,zero
   2c6e0:	0027883a 	mov	r19,zero
   2c6e4:	003f5a06 	br	2c450 <___vfiprintf_internal_r+0x6e4>
   2c6e8:	21003fcc 	andi	r4,r4,255
   2c6ec:	20029f1e 	bne	r4,zero,2d16c <___vfiprintf_internal_r+0x1400>
   2c6f0:	a5000414 	ori	r20,r20,16
   2c6f4:	a080080c 	andi	r2,r20,32
   2c6f8:	10005e1e 	bne	r2,zero,2c874 <___vfiprintf_internal_r+0xb08>
   2c6fc:	a080040c 	andi	r2,r20,16
   2c700:	1001a21e 	bne	r2,zero,2cd8c <___vfiprintf_internal_r+0x1020>
   2c704:	a080100c 	andi	r2,r20,64
   2c708:	d8001d85 	stb	zero,118(sp)
   2c70c:	da802217 	ldw	r10,136(sp)
   2c710:	1002231e 	bne	r2,zero,2cfa0 <___vfiprintf_internal_r+0x1234>
   2c714:	50800104 	addi	r2,r10,4
   2c718:	54800017 	ldw	r18,0(r10)
   2c71c:	0027883a 	mov	r19,zero
   2c720:	4801a00e 	bge	r9,zero,2cda4 <___vfiprintf_internal_r+0x1038>
   2c724:	d8802215 	stw	r2,136(sp)
   2c728:	0039883a 	mov	fp,zero
   2c72c:	94c4b03a 	or	r2,r18,r19
   2c730:	103f901e 	bne	r2,zero,2c574 <___vfiprintf_internal_r+0x808>
   2c734:	00800044 	movi	r2,1
   2c738:	10803fcc 	andi	r2,r2,255
   2c73c:	00c00044 	movi	r3,1
   2c740:	10c05926 	beq	r2,r3,2c8a8 <___vfiprintf_internal_r+0xb3c>
   2c744:	00c00084 	movi	r3,2
   2c748:	10ffe41e 	bne	r2,r3,2c6dc <___vfiprintf_internal_r+0x970>
   2c74c:	0025883a 	mov	r18,zero
   2c750:	0027883a 	mov	r19,zero
   2c754:	00013d06 	br	2cc4c <___vfiprintf_internal_r+0xee0>
   2c758:	21003fcc 	andi	r4,r4,255
   2c75c:	2002811e 	bne	r4,zero,2d164 <___vfiprintf_internal_r+0x13f8>
   2c760:	008000f4 	movhi	r2,3
   2c764:	108e2704 	addi	r2,r2,14492
   2c768:	d8802615 	stw	r2,152(sp)
   2c76c:	a080080c 	andi	r2,r20,32
   2c770:	103f561e 	bne	r2,zero,2c4cc <___vfiprintf_internal_r+0x760>
   2c774:	a080040c 	andi	r2,r20,16
   2c778:	1001d126 	beq	r2,zero,2cec0 <___vfiprintf_internal_r+0x1154>
   2c77c:	da802217 	ldw	r10,136(sp)
   2c780:	0027883a 	mov	r19,zero
   2c784:	54800017 	ldw	r18,0(r10)
   2c788:	52800104 	addi	r10,r10,4
   2c78c:	da802215 	stw	r10,136(sp)
   2c790:	003f5306 	br	2c4e0 <___vfiprintf_internal_r+0x774>
   2c794:	da802217 	ldw	r10,136(sp)
   2c798:	d8001d85 	stb	zero,118(sp)
   2c79c:	55400017 	ldw	r21,0(r10)
   2c7a0:	50c00104 	addi	r3,r10,4
   2c7a4:	a8024226 	beq	r21,zero,2d0b0 <___vfiprintf_internal_r+0x1344>
   2c7a8:	48021816 	blt	r9,zero,2d00c <___vfiprintf_internal_r+0x12a0>
   2c7ac:	480d883a 	mov	r6,r9
   2c7b0:	000b883a 	mov	r5,zero
   2c7b4:	a809883a 	mov	r4,r21
   2c7b8:	d8c02a15 	stw	r3,168(sp)
   2c7bc:	da002b15 	stw	r8,172(sp)
   2c7c0:	da402c15 	stw	r9,176(sp)
   2c7c4:	0028b5c0 	call	28b5c <memchr>
   2c7c8:	d8c02a17 	ldw	r3,168(sp)
   2c7cc:	da002b17 	ldw	r8,172(sp)
   2c7d0:	da402c17 	ldw	r9,176(sp)
   2c7d4:	10024826 	beq	r2,zero,2d0f8 <___vfiprintf_internal_r+0x138c>
   2c7d8:	1567c83a 	sub	r19,r2,r21
   2c7dc:	df001d83 	ldbu	fp,118(sp)
   2c7e0:	d8c02215 	stw	r3,136(sp)
   2c7e4:	0013883a 	mov	r9,zero
   2c7e8:	003e6006 	br	2c16c <___vfiprintf_internal_r+0x400>
   2c7ec:	21003fcc 	andi	r4,r4,255
   2c7f0:	203fc026 	beq	r4,zero,2c6f4 <___vfiprintf_internal_r+0x988>
   2c7f4:	d9c01d85 	stb	r7,118(sp)
   2c7f8:	003fbe06 	br	2c6f4 <___vfiprintf_internal_r+0x988>
   2c7fc:	da802217 	ldw	r10,136(sp)
   2c800:	54400017 	ldw	r17,0(r10)
   2c804:	50800104 	addi	r2,r10,4
   2c808:	883e3b16 	blt	r17,zero,2c0f8 <___vfiprintf_internal_r+0x38c>
   2c80c:	d8802215 	stw	r2,136(sp)
   2c810:	80c00007 	ldb	r3,0(r16)
   2c814:	003db406 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c818:	01000044 	movi	r4,1
   2c81c:	01c00ac4 	movi	r7,43
   2c820:	80c00007 	ldb	r3,0(r16)
   2c824:	003db006 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c828:	80c00007 	ldb	r3,0(r16)
   2c82c:	82800044 	addi	r10,r16,1
   2c830:	1b423c26 	beq	r3,r13,2d124 <___vfiprintf_internal_r+0x13b8>
   2c834:	18bff404 	addi	r2,r3,-48
   2c838:	0013883a 	mov	r9,zero
   2c83c:	30822b36 	bltu	r6,r2,2d0ec <___vfiprintf_internal_r+0x1380>
   2c840:	50c00007 	ldb	r3,0(r10)
   2c844:	4a4002a4 	muli	r9,r9,10
   2c848:	54000044 	addi	r16,r10,1
   2c84c:	8015883a 	mov	r10,r16
   2c850:	4893883a 	add	r9,r9,r2
   2c854:	18bff404 	addi	r2,r3,-48
   2c858:	30bff92e 	bgeu	r6,r2,2c840 <___vfiprintf_internal_r+0xad4>
   2c85c:	483da30e 	bge	r9,zero,2beec <___vfiprintf_internal_r+0x180>
   2c860:	027fffc4 	movi	r9,-1
   2c864:	003da106 	br	2beec <___vfiprintf_internal_r+0x180>
   2c868:	a5001014 	ori	r20,r20,64
   2c86c:	80c00007 	ldb	r3,0(r16)
   2c870:	003d9d06 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2c874:	da802217 	ldw	r10,136(sp)
   2c878:	d8001d85 	stb	zero,118(sp)
   2c87c:	50c00204 	addi	r3,r10,8
   2c880:	54800017 	ldw	r18,0(r10)
   2c884:	54c00117 	ldw	r19,4(r10)
   2c888:	4801ca16 	blt	r9,zero,2cfb4 <___vfiprintf_internal_r+0x1248>
   2c88c:	013fdfc4 	movi	r4,-129
   2c890:	94c4b03a 	or	r2,r18,r19
   2c894:	d8c02215 	stw	r3,136(sp)
   2c898:	a128703a 	and	r20,r20,r4
   2c89c:	0039883a 	mov	fp,zero
   2c8a0:	103f341e 	bne	r2,zero,2c574 <___vfiprintf_internal_r+0x808>
   2c8a4:	483e2e26 	beq	r9,zero,2c160 <___vfiprintf_internal_r+0x3f4>
   2c8a8:	0025883a 	mov	r18,zero
   2c8ac:	94800c04 	addi	r18,r18,48
   2c8b0:	dc8019c5 	stb	r18,103(sp)
   2c8b4:	dcc02717 	ldw	r19,156(sp)
   2c8b8:	dd4019c4 	addi	r21,sp,103
   2c8bc:	003e2b06 	br	2c16c <___vfiprintf_internal_r+0x400>
   2c8c0:	21003fcc 	andi	r4,r4,255
   2c8c4:	2002361e 	bne	r4,zero,2d1a0 <___vfiprintf_internal_r+0x1434>
   2c8c8:	1801c126 	beq	r3,zero,2cfd0 <___vfiprintf_internal_r+0x1264>
   2c8cc:	04800044 	movi	r18,1
   2c8d0:	d8c01005 	stb	r3,64(sp)
   2c8d4:	d8001d85 	stb	zero,118(sp)
   2c8d8:	9027883a 	mov	r19,r18
   2c8dc:	dd401004 	addi	r21,sp,64
   2c8e0:	003f1106 	br	2c528 <___vfiprintf_internal_r+0x7bc>
   2c8e4:	d9402117 	ldw	r5,132(sp)
   2c8e8:	d9002017 	ldw	r4,128(sp)
   2c8ec:	d9801a04 	addi	r6,sp,104
   2c8f0:	d9c02b15 	stw	r7,172(sp)
   2c8f4:	dbc02a15 	stw	r15,168(sp)
   2c8f8:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2c8fc:	d9c02b17 	ldw	r7,172(sp)
   2c900:	dbc02a17 	ldw	r15,168(sp)
   2c904:	10006d1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2c908:	d9801b17 	ldw	r6,108(sp)
   2c90c:	d8801c17 	ldw	r2,112(sp)
   2c910:	d811883a 	mov	r8,sp
   2c914:	31400044 	addi	r5,r6,1
   2c918:	003e3306 	br	2c1e8 <___vfiprintf_internal_r+0x47c>
   2c91c:	d9401b17 	ldw	r5,108(sp)
   2c920:	d8801c17 	ldw	r2,112(sp)
   2c924:	29000044 	addi	r4,r5,1
   2c928:	d8c01d87 	ldb	r3,118(sp)
   2c92c:	183e4d26 	beq	r3,zero,2c264 <___vfiprintf_internal_r+0x4f8>
   2c930:	00c00044 	movi	r3,1
   2c934:	d9401d84 	addi	r5,sp,118
   2c938:	10c5883a 	add	r2,r2,r3
   2c93c:	41400015 	stw	r5,0(r8)
   2c940:	40c00115 	stw	r3,4(r8)
   2c944:	d8801c15 	stw	r2,112(sp)
   2c948:	d9001b15 	stw	r4,108(sp)
   2c94c:	014001c4 	movi	r5,7
   2c950:	2900a90e 	bge	r5,r4,2cbf8 <___vfiprintf_internal_r+0xe8c>
   2c954:	1000da1e 	bne	r2,zero,2ccc0 <___vfiprintf_internal_r+0xf54>
   2c958:	7000ab1e 	bne	r14,zero,2cc08 <___vfiprintf_internal_r+0xe9c>
   2c95c:	000b883a 	mov	r5,zero
   2c960:	1809883a 	mov	r4,r3
   2c964:	d811883a 	mov	r8,sp
   2c968:	00c02004 	movi	r3,128
   2c96c:	e0fe4d26 	beq	fp,r3,2c2a4 <___vfiprintf_internal_r+0x538>
   2c970:	4cf9c83a 	sub	fp,r9,r19
   2c974:	073e7b0e 	bge	zero,fp,2c364 <___vfiprintf_internal_r+0x5f8>
   2c978:	01c00404 	movi	r7,16
   2c97c:	3f01900e 	bge	r7,fp,2cfc0 <___vfiprintf_internal_r+0x1254>
   2c980:	00c000f4 	movhi	r3,3
   2c984:	18ce9d04 	addi	r3,r3,14964
   2c988:	d8c02415 	stw	r3,144(sp)
   2c98c:	034001c4 	movi	r13,7
   2c990:	00000506 	br	2c9a8 <___vfiprintf_internal_r+0xc3c>
   2c994:	29000084 	addi	r4,r5,2
   2c998:	42000204 	addi	r8,r8,8
   2c99c:	180b883a 	mov	r5,r3
   2c9a0:	e73ffc04 	addi	fp,fp,-16
   2c9a4:	3f000d0e 	bge	r7,fp,2c9dc <___vfiprintf_internal_r+0xc70>
   2c9a8:	10800404 	addi	r2,r2,16
   2c9ac:	28c00044 	addi	r3,r5,1
   2c9b0:	45c00015 	stw	r23,0(r8)
   2c9b4:	41c00115 	stw	r7,4(r8)
   2c9b8:	d8801c15 	stw	r2,112(sp)
   2c9bc:	d8c01b15 	stw	r3,108(sp)
   2c9c0:	68fff40e 	bge	r13,r3,2c994 <___vfiprintf_internal_r+0xc28>
   2c9c4:	1000101e 	bne	r2,zero,2ca08 <___vfiprintf_internal_r+0xc9c>
   2c9c8:	e73ffc04 	addi	fp,fp,-16
   2c9cc:	01000044 	movi	r4,1
   2c9d0:	000b883a 	mov	r5,zero
   2c9d4:	d811883a 	mov	r8,sp
   2c9d8:	3f3ff316 	blt	r7,fp,2c9a8 <___vfiprintf_internal_r+0xc3c>
   2c9dc:	da802417 	ldw	r10,144(sp)
   2c9e0:	1705883a 	add	r2,r2,fp
   2c9e4:	47000115 	stw	fp,4(r8)
   2c9e8:	42800015 	stw	r10,0(r8)
   2c9ec:	d8801c15 	stw	r2,112(sp)
   2c9f0:	d9001b15 	stw	r4,108(sp)
   2c9f4:	00c001c4 	movi	r3,7
   2c9f8:	19003616 	blt	r3,r4,2cad4 <___vfiprintf_internal_r+0xd68>
   2c9fc:	42000204 	addi	r8,r8,8
   2ca00:	21000044 	addi	r4,r4,1
   2ca04:	003e5706 	br	2c364 <___vfiprintf_internal_r+0x5f8>
   2ca08:	d9402117 	ldw	r5,132(sp)
   2ca0c:	d9002017 	ldw	r4,128(sp)
   2ca10:	d9801a04 	addi	r6,sp,104
   2ca14:	d9c02b15 	stw	r7,172(sp)
   2ca18:	db402a15 	stw	r13,168(sp)
   2ca1c:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2ca20:	d9c02b17 	ldw	r7,172(sp)
   2ca24:	db402a17 	ldw	r13,168(sp)
   2ca28:	1000241e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2ca2c:	d9401b17 	ldw	r5,108(sp)
   2ca30:	d8801c17 	ldw	r2,112(sp)
   2ca34:	d811883a 	mov	r8,sp
   2ca38:	29000044 	addi	r4,r5,1
   2ca3c:	003fd806 	br	2c9a0 <___vfiprintf_internal_r+0xc34>
   2ca40:	d9401b17 	ldw	r5,108(sp)
   2ca44:	00c000f4 	movhi	r3,3
   2ca48:	18cea104 	addi	r3,r3,14980
   2ca4c:	d8c02415 	stw	r3,144(sp)
   2ca50:	29400044 	addi	r5,r5,1
   2ca54:	d8c02417 	ldw	r3,144(sp)
   2ca58:	14c5883a 	add	r2,r2,r19
   2ca5c:	44c00115 	stw	r19,4(r8)
   2ca60:	40c00015 	stw	r3,0(r8)
   2ca64:	d8801c15 	stw	r2,112(sp)
   2ca68:	d9401b15 	stw	r5,108(sp)
   2ca6c:	00c001c4 	movi	r3,7
   2ca70:	1940070e 	bge	r3,r5,2ca90 <___vfiprintf_internal_r+0xd24>
   2ca74:	103e4826 	beq	r2,zero,2c398 <___vfiprintf_internal_r+0x62c>
   2ca78:	d9402117 	ldw	r5,132(sp)
   2ca7c:	d9002017 	ldw	r4,128(sp)
   2ca80:	d9801a04 	addi	r6,sp,104
   2ca84:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2ca88:	10000c1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2ca8c:	d8801c17 	ldw	r2,112(sp)
   2ca90:	8c80010e 	bge	r17,r18,2ca98 <___vfiprintf_internal_r+0xd2c>
   2ca94:	9023883a 	mov	r17,r18
   2ca98:	da802317 	ldw	r10,140(sp)
   2ca9c:	5455883a 	add	r10,r10,r17
   2caa0:	da802315 	stw	r10,140(sp)
   2caa4:	103e4126 	beq	r2,zero,2c3ac <___vfiprintf_internal_r+0x640>
   2caa8:	d9402117 	ldw	r5,132(sp)
   2caac:	d9002017 	ldw	r4,128(sp)
   2cab0:	d9801a04 	addi	r6,sp,104
   2cab4:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cab8:	103e3c26 	beq	r2,zero,2c3ac <___vfiprintf_internal_r+0x640>
   2cabc:	dd002117 	ldw	r20,132(sp)
   2cac0:	a080030b 	ldhu	r2,12(r20)
   2cac4:	1080100c 	andi	r2,r2,64
   2cac8:	1001231e 	bne	r2,zero,2cf58 <___vfiprintf_internal_r+0x11ec>
   2cacc:	d8802317 	ldw	r2,140(sp)
   2cad0:	003d7b06 	br	2c0c0 <___vfiprintf_internal_r+0x354>
   2cad4:	1000991e 	bne	r2,zero,2cd3c <___vfiprintf_internal_r+0xfd0>
   2cad8:	00c00044 	movi	r3,1
   2cadc:	9805883a 	mov	r2,r19
   2cae0:	dd400015 	stw	r21,0(sp)
   2cae4:	dcc00115 	stw	r19,4(sp)
   2cae8:	dcc01c15 	stw	r19,112(sp)
   2caec:	d8c01b15 	stw	r3,108(sp)
   2caf0:	d811883a 	mov	r8,sp
   2caf4:	42000204 	addi	r8,r8,8
   2caf8:	a2c0010c 	andi	r11,r20,4
   2cafc:	583fe426 	beq	r11,zero,2ca90 <___vfiprintf_internal_r+0xd24>
   2cb00:	8ca7c83a 	sub	r19,r17,r18
   2cb04:	04ffe20e 	bge	zero,r19,2ca90 <___vfiprintf_internal_r+0xd24>
   2cb08:	01c00404 	movi	r7,16
   2cb0c:	3cffcc0e 	bge	r7,r19,2ca40 <___vfiprintf_internal_r+0xcd4>
   2cb10:	028000f4 	movhi	r10,3
   2cb14:	528ea104 	addi	r10,r10,14980
   2cb18:	d9001b17 	ldw	r4,108(sp)
   2cb1c:	da802415 	stw	r10,144(sp)
   2cb20:	382b883a 	mov	r21,r7
   2cb24:	050001c4 	movi	r20,7
   2cb28:	df002017 	ldw	fp,128(sp)
   2cb2c:	00000506 	br	2cb44 <___vfiprintf_internal_r+0xdd8>
   2cb30:	21400084 	addi	r5,r4,2
   2cb34:	42000204 	addi	r8,r8,8
   2cb38:	1809883a 	mov	r4,r3
   2cb3c:	9cfffc04 	addi	r19,r19,-16
   2cb40:	acffc40e 	bge	r21,r19,2ca54 <___vfiprintf_internal_r+0xce8>
   2cb44:	10800404 	addi	r2,r2,16
   2cb48:	20c00044 	addi	r3,r4,1
   2cb4c:	45800015 	stw	r22,0(r8)
   2cb50:	45400115 	stw	r21,4(r8)
   2cb54:	d8801c15 	stw	r2,112(sp)
   2cb58:	d8c01b15 	stw	r3,108(sp)
   2cb5c:	a0fff40e 	bge	r20,r3,2cb30 <___vfiprintf_internal_r+0xdc4>
   2cb60:	1000041e 	bne	r2,zero,2cb74 <___vfiprintf_internal_r+0xe08>
   2cb64:	01400044 	movi	r5,1
   2cb68:	0009883a 	mov	r4,zero
   2cb6c:	d811883a 	mov	r8,sp
   2cb70:	003ff206 	br	2cb3c <___vfiprintf_internal_r+0xdd0>
   2cb74:	d9402117 	ldw	r5,132(sp)
   2cb78:	d9801a04 	addi	r6,sp,104
   2cb7c:	e009883a 	mov	r4,fp
   2cb80:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cb84:	103fcd1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2cb88:	d9001b17 	ldw	r4,108(sp)
   2cb8c:	d8801c17 	ldw	r2,112(sp)
   2cb90:	d811883a 	mov	r8,sp
   2cb94:	21400044 	addi	r5,r4,1
   2cb98:	003fe806 	br	2cb3c <___vfiprintf_internal_r+0xdd0>
   2cb9c:	d9402117 	ldw	r5,132(sp)
   2cba0:	d9002017 	ldw	r4,128(sp)
   2cba4:	d9801a04 	addi	r6,sp,104
   2cba8:	d9c02b15 	stw	r7,172(sp)
   2cbac:	db402a15 	stw	r13,168(sp)
   2cbb0:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cbb4:	d9c02b17 	ldw	r7,172(sp)
   2cbb8:	db402a17 	ldw	r13,168(sp)
   2cbbc:	103fbf1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2cbc0:	d9401b17 	ldw	r5,108(sp)
   2cbc4:	d8801c17 	ldw	r2,112(sp)
   2cbc8:	d811883a 	mov	r8,sp
   2cbcc:	29800044 	addi	r6,r5,1
   2cbd0:	003dc406 	br	2c2e4 <___vfiprintf_internal_r+0x578>
   2cbd4:	1000d21e 	bne	r2,zero,2cf20 <___vfiprintf_internal_r+0x11b4>
   2cbd8:	d8c01d87 	ldb	r3,118(sp)
   2cbdc:	18009526 	beq	r3,zero,2ce34 <___vfiprintf_internal_r+0x10c8>
   2cbe0:	00800044 	movi	r2,1
   2cbe4:	d8c01d84 	addi	r3,sp,118
   2cbe8:	1009883a 	mov	r4,r2
   2cbec:	d8c00015 	stw	r3,0(sp)
   2cbf0:	d8800115 	stw	r2,4(sp)
   2cbf4:	d811883a 	mov	r8,sp
   2cbf8:	200b883a 	mov	r5,r4
   2cbfc:	42000204 	addi	r8,r8,8
   2cc00:	21000044 	addi	r4,r4,1
   2cc04:	003d9706 	br	2c264 <___vfiprintf_internal_r+0x4f8>
   2cc08:	d9001d04 	addi	r4,sp,116
   2cc0c:	00800084 	movi	r2,2
   2cc10:	d9000015 	stw	r4,0(sp)
   2cc14:	d8800115 	stw	r2,4(sp)
   2cc18:	1809883a 	mov	r4,r3
   2cc1c:	d811883a 	mov	r8,sp
   2cc20:	200b883a 	mov	r5,r4
   2cc24:	42000204 	addi	r8,r8,8
   2cc28:	21000044 	addi	r4,r4,1
   2cc2c:	003f4e06 	br	2c968 <___vfiprintf_internal_r+0xbfc>
   2cc30:	d8001d85 	stb	zero,118(sp)
   2cc34:	48005016 	blt	r9,zero,2cd78 <___vfiprintf_internal_r+0x100c>
   2cc38:	00ffdfc4 	movi	r3,-129
   2cc3c:	94c4b03a 	or	r2,r18,r19
   2cc40:	a0e8703a 	and	r20,r20,r3
   2cc44:	103d4426 	beq	r2,zero,2c158 <___vfiprintf_internal_r+0x3ec>
   2cc48:	0039883a 	mov	fp,zero
   2cc4c:	d9002617 	ldw	r4,152(sp)
   2cc50:	dd401a04 	addi	r21,sp,104
   2cc54:	908003cc 	andi	r2,r18,15
   2cc58:	9806973a 	slli	r3,r19,28
   2cc5c:	2085883a 	add	r2,r4,r2
   2cc60:	9024d13a 	srli	r18,r18,4
   2cc64:	10800003 	ldbu	r2,0(r2)
   2cc68:	9826d13a 	srli	r19,r19,4
   2cc6c:	ad7fffc4 	addi	r21,r21,-1
   2cc70:	1ca4b03a 	or	r18,r3,r18
   2cc74:	a8800005 	stb	r2,0(r21)
   2cc78:	94c4b03a 	or	r2,r18,r19
   2cc7c:	103ff51e 	bne	r2,zero,2cc54 <___vfiprintf_internal_r+0xee8>
   2cc80:	003e5906 	br	2c5e8 <___vfiprintf_internal_r+0x87c>
   2cc84:	d9402117 	ldw	r5,132(sp)
   2cc88:	d9002017 	ldw	r4,128(sp)
   2cc8c:	d9801a04 	addi	r6,sp,104
   2cc90:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cc94:	103f891e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2cc98:	d8801c17 	ldw	r2,112(sp)
   2cc9c:	d811883a 	mov	r8,sp
   2cca0:	003f9506 	br	2caf8 <___vfiprintf_internal_r+0xd8c>
   2cca4:	d9402117 	ldw	r5,132(sp)
   2cca8:	d9002017 	ldw	r4,128(sp)
   2ccac:	d9801a04 	addi	r6,sp,104
   2ccb0:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2ccb4:	103f811e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2ccb8:	d811883a 	mov	r8,sp
   2ccbc:	003ced06 	br	2c074 <___vfiprintf_internal_r+0x308>
   2ccc0:	d9402117 	ldw	r5,132(sp)
   2ccc4:	d9002017 	ldw	r4,128(sp)
   2ccc8:	d9801a04 	addi	r6,sp,104
   2cccc:	da402c15 	stw	r9,176(sp)
   2ccd0:	db802a15 	stw	r14,168(sp)
   2ccd4:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2ccd8:	da402c17 	ldw	r9,176(sp)
   2ccdc:	db802a17 	ldw	r14,168(sp)
   2cce0:	103f761e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2cce4:	d9401b17 	ldw	r5,108(sp)
   2cce8:	d8801c17 	ldw	r2,112(sp)
   2ccec:	d811883a 	mov	r8,sp
   2ccf0:	29000044 	addi	r4,r5,1
   2ccf4:	003d5b06 	br	2c264 <___vfiprintf_internal_r+0x4f8>
   2ccf8:	d9402117 	ldw	r5,132(sp)
   2ccfc:	d9002017 	ldw	r4,128(sp)
   2cd00:	d9801a04 	addi	r6,sp,104
   2cd04:	da402c15 	stw	r9,176(sp)
   2cd08:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cd0c:	da402c17 	ldw	r9,176(sp)
   2cd10:	103f6a1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2cd14:	d9401b17 	ldw	r5,108(sp)
   2cd18:	d8801c17 	ldw	r2,112(sp)
   2cd1c:	d811883a 	mov	r8,sp
   2cd20:	29000044 	addi	r4,r5,1
   2cd24:	003f1006 	br	2c968 <___vfiprintf_internal_r+0xbfc>
   2cd28:	1000c31e 	bne	r2,zero,2d038 <___vfiprintf_internal_r+0x12cc>
   2cd2c:	01000044 	movi	r4,1
   2cd30:	000b883a 	mov	r5,zero
   2cd34:	d811883a 	mov	r8,sp
   2cd38:	003f0d06 	br	2c970 <___vfiprintf_internal_r+0xc04>
   2cd3c:	d9402117 	ldw	r5,132(sp)
   2cd40:	d9002017 	ldw	r4,128(sp)
   2cd44:	d9801a04 	addi	r6,sp,104
   2cd48:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cd4c:	103f5b1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2cd50:	d9001b17 	ldw	r4,108(sp)
   2cd54:	d8801c17 	ldw	r2,112(sp)
   2cd58:	d811883a 	mov	r8,sp
   2cd5c:	21000044 	addi	r4,r4,1
   2cd60:	003d8006 	br	2c364 <___vfiprintf_internal_r+0x5f8>
   2cd64:	010000f4 	movhi	r4,3
   2cd68:	210e2c04 	addi	r4,r4,14512
   2cd6c:	d9002615 	stw	r4,152(sp)
   2cd70:	d8c02215 	stw	r3,136(sp)
   2cd74:	1029883a 	mov	r20,r2
   2cd78:	94c4b03a 	or	r2,r18,r19
   2cd7c:	103fb21e 	bne	r2,zero,2cc48 <___vfiprintf_internal_r+0xedc>
   2cd80:	0039883a 	mov	fp,zero
   2cd84:	00800084 	movi	r2,2
   2cd88:	003e6b06 	br	2c738 <___vfiprintf_internal_r+0x9cc>
   2cd8c:	da802217 	ldw	r10,136(sp)
   2cd90:	d8001d85 	stb	zero,118(sp)
   2cd94:	0027883a 	mov	r19,zero
   2cd98:	50800104 	addi	r2,r10,4
   2cd9c:	54800017 	ldw	r18,0(r10)
   2cda0:	483e6016 	blt	r9,zero,2c724 <___vfiprintf_internal_r+0x9b8>
   2cda4:	00ffdfc4 	movi	r3,-129
   2cda8:	d8802215 	stw	r2,136(sp)
   2cdac:	a0e8703a 	and	r20,r20,r3
   2cdb0:	0039883a 	mov	fp,zero
   2cdb4:	903ebb26 	beq	r18,zero,2c8a4 <___vfiprintf_internal_r+0xb38>
   2cdb8:	00800244 	movi	r2,9
   2cdbc:	14bdee36 	bltu	r2,r18,2c578 <___vfiprintf_internal_r+0x80c>
   2cdc0:	003eba06 	br	2c8ac <___vfiprintf_internal_r+0xb40>
   2cdc4:	00800c04 	movi	r2,48
   2cdc8:	d8c01d45 	stb	r3,117(sp)
   2cdcc:	d8801d05 	stb	r2,116(sp)
   2cdd0:	d8001d85 	stb	zero,118(sp)
   2cdd4:	a0c00094 	ori	r3,r20,2
   2cdd8:	4800a916 	blt	r9,zero,2d080 <___vfiprintf_internal_r+0x1314>
   2cddc:	00bfdfc4 	movi	r2,-129
   2cde0:	a096703a 	and	r11,r20,r2
   2cde4:	5d000094 	ori	r20,r11,2
   2cde8:	0039883a 	mov	fp,zero
   2cdec:	003f9706 	br	2cc4c <___vfiprintf_internal_r+0xee0>
   2cdf0:	8025883a 	mov	r18,r16
   2cdf4:	003c2e06 	br	2beb0 <___vfiprintf_internal_r+0x144>
   2cdf8:	008000f4 	movhi	r2,3
   2cdfc:	108e2c04 	addi	r2,r2,14512
   2ce00:	0039883a 	mov	fp,zero
   2ce04:	d8802615 	stw	r2,152(sp)
   2ce08:	003f9006 	br	2cc4c <___vfiprintf_internal_r+0xee0>
   2ce0c:	04a5c83a 	sub	r18,zero,r18
   2ce10:	07000b44 	movi	fp,45
   2ce14:	9004c03a 	cmpne	r2,r18,zero
   2ce18:	04e7c83a 	sub	r19,zero,r19
   2ce1c:	df001d85 	stb	fp,118(sp)
   2ce20:	98a7c83a 	sub	r19,r19,r2
   2ce24:	48009f16 	blt	r9,zero,2d0a4 <___vfiprintf_internal_r+0x1338>
   2ce28:	00bfdfc4 	movi	r2,-129
   2ce2c:	a0a8703a 	and	r20,r20,r2
   2ce30:	003dd006 	br	2c574 <___vfiprintf_internal_r+0x808>
   2ce34:	70004c26 	beq	r14,zero,2cf68 <___vfiprintf_internal_r+0x11fc>
   2ce38:	00800084 	movi	r2,2
   2ce3c:	d8c01d04 	addi	r3,sp,116
   2ce40:	d8c00015 	stw	r3,0(sp)
   2ce44:	d8800115 	stw	r2,4(sp)
   2ce48:	01000044 	movi	r4,1
   2ce4c:	d811883a 	mov	r8,sp
   2ce50:	003f7306 	br	2cc20 <___vfiprintf_internal_r+0xeb4>
   2ce54:	a080100c 	andi	r2,r20,64
   2ce58:	da802217 	ldw	r10,136(sp)
   2ce5c:	103e0626 	beq	r2,zero,2c678 <___vfiprintf_internal_r+0x90c>
   2ce60:	5480000f 	ldh	r18,0(r10)
   2ce64:	52800104 	addi	r10,r10,4
   2ce68:	da802215 	stw	r10,136(sp)
   2ce6c:	9027d7fa 	srai	r19,r18,31
   2ce70:	9805883a 	mov	r2,r19
   2ce74:	003db806 	br	2c558 <___vfiprintf_internal_r+0x7ec>
   2ce78:	a080040c 	andi	r2,r20,16
   2ce7c:	1000091e 	bne	r2,zero,2cea4 <___vfiprintf_internal_r+0x1138>
   2ce80:	a2c0100c 	andi	r11,r20,64
   2ce84:	58000726 	beq	r11,zero,2cea4 <___vfiprintf_internal_r+0x1138>
   2ce88:	da802217 	ldw	r10,136(sp)
   2ce8c:	50800017 	ldw	r2,0(r10)
   2ce90:	52800104 	addi	r10,r10,4
   2ce94:	da802215 	stw	r10,136(sp)
   2ce98:	da802317 	ldw	r10,140(sp)
   2ce9c:	1280000d 	sth	r10,0(r2)
   2cea0:	003be706 	br	2be40 <___vfiprintf_internal_r+0xd4>
   2cea4:	da802217 	ldw	r10,136(sp)
   2cea8:	50800017 	ldw	r2,0(r10)
   2ceac:	52800104 	addi	r10,r10,4
   2ceb0:	da802215 	stw	r10,136(sp)
   2ceb4:	da802317 	ldw	r10,140(sp)
   2ceb8:	12800015 	stw	r10,0(r2)
   2cebc:	003be006 	br	2be40 <___vfiprintf_internal_r+0xd4>
   2cec0:	a080100c 	andi	r2,r20,64
   2cec4:	da802217 	ldw	r10,136(sp)
   2cec8:	10003026 	beq	r2,zero,2cf8c <___vfiprintf_internal_r+0x1220>
   2cecc:	5480000b 	ldhu	r18,0(r10)
   2ced0:	52800104 	addi	r10,r10,4
   2ced4:	0027883a 	mov	r19,zero
   2ced8:	da802215 	stw	r10,136(sp)
   2cedc:	003d8006 	br	2c4e0 <___vfiprintf_internal_r+0x774>
   2cee0:	80c00007 	ldb	r3,0(r16)
   2cee4:	003c0006 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2cee8:	a080100c 	andi	r2,r20,64
   2ceec:	d8001d85 	stb	zero,118(sp)
   2cef0:	da802217 	ldw	r10,136(sp)
   2cef4:	1000201e 	bne	r2,zero,2cf78 <___vfiprintf_internal_r+0x120c>
   2cef8:	50800104 	addi	r2,r10,4
   2cefc:	54800017 	ldw	r18,0(r10)
   2cf00:	0027883a 	mov	r19,zero
   2cf04:	483def0e 	bge	r9,zero,2c6c4 <___vfiprintf_internal_r+0x958>
   2cf08:	94c6b03a 	or	r3,r18,r19
   2cf0c:	d8802215 	stw	r2,136(sp)
   2cf10:	183d4e1e 	bne	r3,zero,2c44c <___vfiprintf_internal_r+0x6e0>
   2cf14:	0039883a 	mov	fp,zero
   2cf18:	0005883a 	mov	r2,zero
   2cf1c:	003e0606 	br	2c738 <___vfiprintf_internal_r+0x9cc>
   2cf20:	d9402117 	ldw	r5,132(sp)
   2cf24:	d9002017 	ldw	r4,128(sp)
   2cf28:	d9801a04 	addi	r6,sp,104
   2cf2c:	da402c15 	stw	r9,176(sp)
   2cf30:	db802a15 	stw	r14,168(sp)
   2cf34:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cf38:	da402c17 	ldw	r9,176(sp)
   2cf3c:	db802a17 	ldw	r14,168(sp)
   2cf40:	103ede1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2cf44:	d9401b17 	ldw	r5,108(sp)
   2cf48:	d8801c17 	ldw	r2,112(sp)
   2cf4c:	d811883a 	mov	r8,sp
   2cf50:	29000044 	addi	r4,r5,1
   2cf54:	003e7406 	br	2c928 <___vfiprintf_internal_r+0xbbc>
   2cf58:	00bfffc4 	movi	r2,-1
   2cf5c:	003c5806 	br	2c0c0 <___vfiprintf_internal_r+0x354>
   2cf60:	d811883a 	mov	r8,sp
   2cf64:	003ee806 	br	2cb08 <___vfiprintf_internal_r+0xd9c>
   2cf68:	000b883a 	mov	r5,zero
   2cf6c:	01000044 	movi	r4,1
   2cf70:	d811883a 	mov	r8,sp
   2cf74:	003e7c06 	br	2c968 <___vfiprintf_internal_r+0xbfc>
   2cf78:	50800104 	addi	r2,r10,4
   2cf7c:	5480000b 	ldhu	r18,0(r10)
   2cf80:	0027883a 	mov	r19,zero
   2cf84:	483dcf0e 	bge	r9,zero,2c6c4 <___vfiprintf_internal_r+0x958>
   2cf88:	003fdf06 	br	2cf08 <___vfiprintf_internal_r+0x119c>
   2cf8c:	54800017 	ldw	r18,0(r10)
   2cf90:	52800104 	addi	r10,r10,4
   2cf94:	0027883a 	mov	r19,zero
   2cf98:	da802215 	stw	r10,136(sp)
   2cf9c:	003d5006 	br	2c4e0 <___vfiprintf_internal_r+0x774>
   2cfa0:	50800104 	addi	r2,r10,4
   2cfa4:	5480000b 	ldhu	r18,0(r10)
   2cfa8:	0027883a 	mov	r19,zero
   2cfac:	483f7d0e 	bge	r9,zero,2cda4 <___vfiprintf_internal_r+0x1038>
   2cfb0:	003ddc06 	br	2c724 <___vfiprintf_internal_r+0x9b8>
   2cfb4:	d8c02215 	stw	r3,136(sp)
   2cfb8:	0039883a 	mov	fp,zero
   2cfbc:	003ddb06 	br	2c72c <___vfiprintf_internal_r+0x9c0>
   2cfc0:	028000f4 	movhi	r10,3
   2cfc4:	528e9d04 	addi	r10,r10,14964
   2cfc8:	da802415 	stw	r10,144(sp)
   2cfcc:	003e8306 	br	2c9dc <___vfiprintf_internal_r+0xc70>
   2cfd0:	d8801c17 	ldw	r2,112(sp)
   2cfd4:	dd002117 	ldw	r20,132(sp)
   2cfd8:	103eb926 	beq	r2,zero,2cac0 <___vfiprintf_internal_r+0xd54>
   2cfdc:	d9002017 	ldw	r4,128(sp)
   2cfe0:	d9801a04 	addi	r6,sp,104
   2cfe4:	a00b883a 	mov	r5,r20
   2cfe8:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2cfec:	003eb406 	br	2cac0 <___vfiprintf_internal_r+0xd54>
   2cff0:	80c00043 	ldbu	r3,1(r16)
   2cff4:	a5000814 	ori	r20,r20,32
   2cff8:	84000044 	addi	r16,r16,1
   2cffc:	18c03fcc 	andi	r3,r3,255
   2d000:	18c0201c 	xori	r3,r3,128
   2d004:	18ffe004 	addi	r3,r3,-128
   2d008:	003bb706 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2d00c:	a809883a 	mov	r4,r21
   2d010:	d8c02a15 	stw	r3,168(sp)
   2d014:	da002b15 	stw	r8,172(sp)
   2d018:	00210dc0 	call	210dc <strlen>
   2d01c:	d8c02a17 	ldw	r3,168(sp)
   2d020:	1027883a 	mov	r19,r2
   2d024:	df001d83 	ldbu	fp,118(sp)
   2d028:	d8c02215 	stw	r3,136(sp)
   2d02c:	0013883a 	mov	r9,zero
   2d030:	da002b17 	ldw	r8,172(sp)
   2d034:	003c4d06 	br	2c16c <___vfiprintf_internal_r+0x400>
   2d038:	d9402117 	ldw	r5,132(sp)
   2d03c:	d9002017 	ldw	r4,128(sp)
   2d040:	d9801a04 	addi	r6,sp,104
   2d044:	da402c15 	stw	r9,176(sp)
   2d048:	002bc580 	call	2bc58 <__sprint_r.part.0>
   2d04c:	da402c17 	ldw	r9,176(sp)
   2d050:	103e9a1e 	bne	r2,zero,2cabc <___vfiprintf_internal_r+0xd50>
   2d054:	d9401b17 	ldw	r5,108(sp)
   2d058:	d8801c17 	ldw	r2,112(sp)
   2d05c:	d811883a 	mov	r8,sp
   2d060:	29000044 	addi	r4,r5,1
   2d064:	003e4206 	br	2c970 <___vfiprintf_internal_r+0xc04>
   2d068:	d9401b17 	ldw	r5,108(sp)
   2d06c:	010000f4 	movhi	r4,3
   2d070:	210ea104 	addi	r4,r4,14980
   2d074:	d9002415 	stw	r4,144(sp)
   2d078:	29400044 	addi	r5,r5,1
   2d07c:	003c6d06 	br	2c234 <___vfiprintf_internal_r+0x4c8>
   2d080:	0039883a 	mov	fp,zero
   2d084:	00800084 	movi	r2,2
   2d088:	10803fcc 	andi	r2,r2,255
   2d08c:	01000044 	movi	r4,1
   2d090:	11001e26 	beq	r2,r4,2d10c <___vfiprintf_internal_r+0x13a0>
   2d094:	01000084 	movi	r4,2
   2d098:	11001e1e 	bne	r2,r4,2d114 <___vfiprintf_internal_r+0x13a8>
   2d09c:	1829883a 	mov	r20,r3
   2d0a0:	003eea06 	br	2cc4c <___vfiprintf_internal_r+0xee0>
   2d0a4:	a007883a 	mov	r3,r20
   2d0a8:	00800044 	movi	r2,1
   2d0ac:	003ff606 	br	2d088 <___vfiprintf_internal_r+0x131c>
   2d0b0:	00800184 	movi	r2,6
   2d0b4:	1240012e 	bgeu	r2,r9,2d0bc <___vfiprintf_internal_r+0x1350>
   2d0b8:	1013883a 	mov	r9,r2
   2d0bc:	4827883a 	mov	r19,r9
   2d0c0:	4825883a 	mov	r18,r9
   2d0c4:	48001516 	blt	r9,zero,2d11c <___vfiprintf_internal_r+0x13b0>
   2d0c8:	054000f4 	movhi	r21,3
   2d0cc:	d8c02215 	stw	r3,136(sp)
   2d0d0:	ad4e3104 	addi	r21,r21,14532
   2d0d4:	003d1406 	br	2c528 <___vfiprintf_internal_r+0x7bc>
   2d0d8:	028000f4 	movhi	r10,3
   2d0dc:	528e9d04 	addi	r10,r10,14964
   2d0e0:	da802415 	stw	r10,144(sp)
   2d0e4:	200d883a 	mov	r6,r4
   2d0e8:	003c9106 	br	2c330 <___vfiprintf_internal_r+0x5c4>
   2d0ec:	5021883a 	mov	r16,r10
   2d0f0:	0013883a 	mov	r9,zero
   2d0f4:	003b7d06 	br	2beec <___vfiprintf_internal_r+0x180>
   2d0f8:	4827883a 	mov	r19,r9
   2d0fc:	df001d83 	ldbu	fp,118(sp)
   2d100:	d8c02215 	stw	r3,136(sp)
   2d104:	0013883a 	mov	r9,zero
   2d108:	003c1806 	br	2c16c <___vfiprintf_internal_r+0x400>
   2d10c:	1829883a 	mov	r20,r3
   2d110:	003d1806 	br	2c574 <___vfiprintf_internal_r+0x808>
   2d114:	1829883a 	mov	r20,r3
   2d118:	003ccd06 	br	2c450 <___vfiprintf_internal_r+0x6e4>
   2d11c:	0025883a 	mov	r18,zero
   2d120:	003fe906 	br	2d0c8 <___vfiprintf_internal_r+0x135c>
   2d124:	d8802217 	ldw	r2,136(sp)
   2d128:	80c00043 	ldbu	r3,1(r16)
   2d12c:	5021883a 	mov	r16,r10
   2d130:	12400017 	ldw	r9,0(r2)
   2d134:	10800104 	addi	r2,r2,4
   2d138:	d8802215 	stw	r2,136(sp)
   2d13c:	483faf0e 	bge	r9,zero,2cffc <___vfiprintf_internal_r+0x1290>
   2d140:	18c03fcc 	andi	r3,r3,255
   2d144:	18c0201c 	xori	r3,r3,128
   2d148:	027fffc4 	movi	r9,-1
   2d14c:	18ffe004 	addi	r3,r3,-128
   2d150:	003b6506 	br	2bee8 <___vfiprintf_internal_r+0x17c>
   2d154:	d9c01d85 	stb	r7,118(sp)
   2d158:	003ca006 	br	2c3dc <___vfiprintf_internal_r+0x670>
   2d15c:	d9c01d85 	stb	r7,118(sp)
   2d160:	003cad06 	br	2c418 <___vfiprintf_internal_r+0x6ac>
   2d164:	d9c01d85 	stb	r7,118(sp)
   2d168:	003d7d06 	br	2c760 <___vfiprintf_internal_r+0x9f4>
   2d16c:	d9c01d85 	stb	r7,118(sp)
   2d170:	003d5f06 	br	2c6f0 <___vfiprintf_internal_r+0x984>
   2d174:	a080004c 	andi	r2,r20,1
   2d178:	0039883a 	mov	fp,zero
   2d17c:	10000526 	beq	r2,zero,2d194 <___vfiprintf_internal_r+0x1428>
   2d180:	00800c04 	movi	r2,48
   2d184:	d88019c5 	stb	r2,103(sp)
   2d188:	dcc02717 	ldw	r19,156(sp)
   2d18c:	dd4019c4 	addi	r21,sp,103
   2d190:	003bf606 	br	2c16c <___vfiprintf_internal_r+0x400>
   2d194:	0027883a 	mov	r19,zero
   2d198:	dd401a04 	addi	r21,sp,104
   2d19c:	003bf306 	br	2c16c <___vfiprintf_internal_r+0x400>
   2d1a0:	d9c01d85 	stb	r7,118(sp)
   2d1a4:	003dc806 	br	2c8c8 <___vfiprintf_internal_r+0xb5c>
   2d1a8:	d9c01d85 	stb	r7,118(sp)
   2d1ac:	003d3a06 	br	2c698 <___vfiprintf_internal_r+0x92c>
   2d1b0:	d9c01d85 	stb	r7,118(sp)
   2d1b4:	003d2a06 	br	2c660 <___vfiprintf_internal_r+0x8f4>
   2d1b8:	d9c01d85 	stb	r7,118(sp)
   2d1bc:	003cde06 	br	2c538 <___vfiprintf_internal_r+0x7cc>
   2d1c0:	d9c01d85 	stb	r7,118(sp)
   2d1c4:	003cbc06 	br	2c4b8 <___vfiprintf_internal_r+0x74c>

0002d1c8 <__vfiprintf_internal>:
   2d1c8:	008000f4 	movhi	r2,3
   2d1cc:	1095a004 	addi	r2,r2,22144
   2d1d0:	300f883a 	mov	r7,r6
   2d1d4:	280d883a 	mov	r6,r5
   2d1d8:	200b883a 	mov	r5,r4
   2d1dc:	11000017 	ldw	r4,0(r2)
   2d1e0:	002bd6c1 	jmpi	2bd6c <___vfiprintf_internal_r>

0002d1e4 <__sbprintf>:
   2d1e4:	2880030b 	ldhu	r2,12(r5)
   2d1e8:	2ac01917 	ldw	r11,100(r5)
   2d1ec:	2a80038b 	ldhu	r10,14(r5)
   2d1f0:	2a400717 	ldw	r9,28(r5)
   2d1f4:	2a000917 	ldw	r8,36(r5)
   2d1f8:	defee204 	addi	sp,sp,-1144
   2d1fc:	00c10004 	movi	r3,1024
   2d200:	dc011a15 	stw	r16,1128(sp)
   2d204:	10bfff4c 	andi	r2,r2,65533
   2d208:	2821883a 	mov	r16,r5
   2d20c:	d8cb883a 	add	r5,sp,r3
   2d210:	dc811c15 	stw	r18,1136(sp)
   2d214:	dc411b15 	stw	r17,1132(sp)
   2d218:	dfc11d15 	stw	ra,1140(sp)
   2d21c:	2025883a 	mov	r18,r4
   2d220:	d881030d 	sth	r2,1036(sp)
   2d224:	dac11915 	stw	r11,1124(sp)
   2d228:	da81038d 	sth	r10,1038(sp)
   2d22c:	da410715 	stw	r9,1052(sp)
   2d230:	da010915 	stw	r8,1060(sp)
   2d234:	dec10015 	stw	sp,1024(sp)
   2d238:	dec10415 	stw	sp,1040(sp)
   2d23c:	d8c10215 	stw	r3,1032(sp)
   2d240:	d8c10515 	stw	r3,1044(sp)
   2d244:	d8010615 	stw	zero,1048(sp)
   2d248:	002bd6c0 	call	2bd6c <___vfiprintf_internal_r>
   2d24c:	1023883a 	mov	r17,r2
   2d250:	10000416 	blt	r2,zero,2d264 <__sbprintf+0x80>
   2d254:	d9410004 	addi	r5,sp,1024
   2d258:	9009883a 	mov	r4,r18
   2d25c:	00272140 	call	27214 <_fflush_r>
   2d260:	10000d1e 	bne	r2,zero,2d298 <__sbprintf+0xb4>
   2d264:	d881030b 	ldhu	r2,1036(sp)
   2d268:	1080100c 	andi	r2,r2,64
   2d26c:	10000326 	beq	r2,zero,2d27c <__sbprintf+0x98>
   2d270:	8080030b 	ldhu	r2,12(r16)
   2d274:	10801014 	ori	r2,r2,64
   2d278:	8080030d 	sth	r2,12(r16)
   2d27c:	8805883a 	mov	r2,r17
   2d280:	dfc11d17 	ldw	ra,1140(sp)
   2d284:	dc811c17 	ldw	r18,1136(sp)
   2d288:	dc411b17 	ldw	r17,1132(sp)
   2d28c:	dc011a17 	ldw	r16,1128(sp)
   2d290:	dec11e04 	addi	sp,sp,1144
   2d294:	f800283a 	ret
   2d298:	047fffc4 	movi	r17,-1
   2d29c:	003ff106 	br	2d264 <__sbprintf+0x80>

0002d2a0 <_write_r>:
   2d2a0:	defffd04 	addi	sp,sp,-12
   2d2a4:	2805883a 	mov	r2,r5
   2d2a8:	dc000015 	stw	r16,0(sp)
   2d2ac:	040000f4 	movhi	r16,3
   2d2b0:	dc400115 	stw	r17,4(sp)
   2d2b4:	300b883a 	mov	r5,r6
   2d2b8:	841c7204 	addi	r16,r16,29128
   2d2bc:	2023883a 	mov	r17,r4
   2d2c0:	380d883a 	mov	r6,r7
   2d2c4:	1009883a 	mov	r4,r2
   2d2c8:	dfc00215 	stw	ra,8(sp)
   2d2cc:	80000015 	stw	zero,0(r16)
   2d2d0:	00319bc0 	call	319bc <write>
   2d2d4:	00ffffc4 	movi	r3,-1
   2d2d8:	10c00526 	beq	r2,r3,2d2f0 <_write_r+0x50>
   2d2dc:	dfc00217 	ldw	ra,8(sp)
   2d2e0:	dc400117 	ldw	r17,4(sp)
   2d2e4:	dc000017 	ldw	r16,0(sp)
   2d2e8:	dec00304 	addi	sp,sp,12
   2d2ec:	f800283a 	ret
   2d2f0:	80c00017 	ldw	r3,0(r16)
   2d2f4:	183ff926 	beq	r3,zero,2d2dc <_write_r+0x3c>
   2d2f8:	88c00015 	stw	r3,0(r17)
   2d2fc:	003ff706 	br	2d2dc <_write_r+0x3c>

0002d300 <_close_r>:
   2d300:	defffd04 	addi	sp,sp,-12
   2d304:	dc000015 	stw	r16,0(sp)
   2d308:	040000f4 	movhi	r16,3
   2d30c:	dc400115 	stw	r17,4(sp)
   2d310:	841c7204 	addi	r16,r16,29128
   2d314:	2023883a 	mov	r17,r4
   2d318:	2809883a 	mov	r4,r5
   2d31c:	dfc00215 	stw	ra,8(sp)
   2d320:	80000015 	stw	zero,0(r16)
   2d324:	0030edc0 	call	30edc <close>
   2d328:	00ffffc4 	movi	r3,-1
   2d32c:	10c00526 	beq	r2,r3,2d344 <_close_r+0x44>
   2d330:	dfc00217 	ldw	ra,8(sp)
   2d334:	dc400117 	ldw	r17,4(sp)
   2d338:	dc000017 	ldw	r16,0(sp)
   2d33c:	dec00304 	addi	sp,sp,12
   2d340:	f800283a 	ret
   2d344:	80c00017 	ldw	r3,0(r16)
   2d348:	183ff926 	beq	r3,zero,2d330 <_close_r+0x30>
   2d34c:	88c00015 	stw	r3,0(r17)
   2d350:	003ff706 	br	2d330 <_close_r+0x30>

0002d354 <_calloc_r>:
   2d354:	298b383a 	mul	r5,r5,r6
   2d358:	defffe04 	addi	sp,sp,-8
   2d35c:	dfc00115 	stw	ra,4(sp)
   2d360:	dc000015 	stw	r16,0(sp)
   2d364:	00283500 	call	28350 <_malloc_r>
   2d368:	10002926 	beq	r2,zero,2d410 <_calloc_r+0xbc>
   2d36c:	11bfff17 	ldw	r6,-4(r2)
   2d370:	1021883a 	mov	r16,r2
   2d374:	00bfff04 	movi	r2,-4
   2d378:	308c703a 	and	r6,r6,r2
   2d37c:	00c00904 	movi	r3,36
   2d380:	308d883a 	add	r6,r6,r2
   2d384:	19801636 	bltu	r3,r6,2d3e0 <_calloc_r+0x8c>
   2d388:	008004c4 	movi	r2,19
   2d38c:	11800b2e 	bgeu	r2,r6,2d3bc <_calloc_r+0x68>
   2d390:	80000015 	stw	zero,0(r16)
   2d394:	80000115 	stw	zero,4(r16)
   2d398:	008006c4 	movi	r2,27
   2d39c:	11801a2e 	bgeu	r2,r6,2d408 <_calloc_r+0xb4>
   2d3a0:	80000215 	stw	zero,8(r16)
   2d3a4:	80000315 	stw	zero,12(r16)
   2d3a8:	30c0151e 	bne	r6,r3,2d400 <_calloc_r+0xac>
   2d3ac:	80000415 	stw	zero,16(r16)
   2d3b0:	80800604 	addi	r2,r16,24
   2d3b4:	80000515 	stw	zero,20(r16)
   2d3b8:	00000106 	br	2d3c0 <_calloc_r+0x6c>
   2d3bc:	8005883a 	mov	r2,r16
   2d3c0:	10000015 	stw	zero,0(r2)
   2d3c4:	10000115 	stw	zero,4(r2)
   2d3c8:	10000215 	stw	zero,8(r2)
   2d3cc:	8005883a 	mov	r2,r16
   2d3d0:	dfc00117 	ldw	ra,4(sp)
   2d3d4:	dc000017 	ldw	r16,0(sp)
   2d3d8:	dec00204 	addi	sp,sp,8
   2d3dc:	f800283a 	ret
   2d3e0:	000b883a 	mov	r5,zero
   2d3e4:	8009883a 	mov	r4,r16
   2d3e8:	0028ee40 	call	28ee4 <memset>
   2d3ec:	8005883a 	mov	r2,r16
   2d3f0:	dfc00117 	ldw	ra,4(sp)
   2d3f4:	dc000017 	ldw	r16,0(sp)
   2d3f8:	dec00204 	addi	sp,sp,8
   2d3fc:	f800283a 	ret
   2d400:	80800404 	addi	r2,r16,16
   2d404:	003fee06 	br	2d3c0 <_calloc_r+0x6c>
   2d408:	80800204 	addi	r2,r16,8
   2d40c:	003fec06 	br	2d3c0 <_calloc_r+0x6c>
   2d410:	0005883a 	mov	r2,zero
   2d414:	003fee06 	br	2d3d0 <_calloc_r+0x7c>

0002d418 <_fclose_r>:
   2d418:	28003926 	beq	r5,zero,2d500 <_fclose_r+0xe8>
   2d41c:	defffc04 	addi	sp,sp,-16
   2d420:	dc400115 	stw	r17,4(sp)
   2d424:	dc000015 	stw	r16,0(sp)
   2d428:	dfc00315 	stw	ra,12(sp)
   2d42c:	dc800215 	stw	r18,8(sp)
   2d430:	2023883a 	mov	r17,r4
   2d434:	2821883a 	mov	r16,r5
   2d438:	20000226 	beq	r4,zero,2d444 <_fclose_r+0x2c>
   2d43c:	20800e17 	ldw	r2,56(r4)
   2d440:	10002726 	beq	r2,zero,2d4e0 <_fclose_r+0xc8>
   2d444:	8080030f 	ldh	r2,12(r16)
   2d448:	1000071e 	bne	r2,zero,2d468 <_fclose_r+0x50>
   2d44c:	0005883a 	mov	r2,zero
   2d450:	dfc00317 	ldw	ra,12(sp)
   2d454:	dc800217 	ldw	r18,8(sp)
   2d458:	dc400117 	ldw	r17,4(sp)
   2d45c:	dc000017 	ldw	r16,0(sp)
   2d460:	dec00404 	addi	sp,sp,16
   2d464:	f800283a 	ret
   2d468:	800b883a 	mov	r5,r16
   2d46c:	8809883a 	mov	r4,r17
   2d470:	0026ff80 	call	26ff8 <__sflush_r>
   2d474:	1025883a 	mov	r18,r2
   2d478:	80800b17 	ldw	r2,44(r16)
   2d47c:	10000426 	beq	r2,zero,2d490 <_fclose_r+0x78>
   2d480:	81400717 	ldw	r5,28(r16)
   2d484:	8809883a 	mov	r4,r17
   2d488:	103ee83a 	callr	r2
   2d48c:	10001616 	blt	r2,zero,2d4e8 <_fclose_r+0xd0>
   2d490:	8080030b 	ldhu	r2,12(r16)
   2d494:	1080200c 	andi	r2,r2,128
   2d498:	1000151e 	bne	r2,zero,2d4f0 <_fclose_r+0xd8>
   2d49c:	81400c17 	ldw	r5,48(r16)
   2d4a0:	28000526 	beq	r5,zero,2d4b8 <_fclose_r+0xa0>
   2d4a4:	80801004 	addi	r2,r16,64
   2d4a8:	28800226 	beq	r5,r2,2d4b4 <_fclose_r+0x9c>
   2d4ac:	8809883a 	mov	r4,r17
   2d4b0:	00277640 	call	27764 <_free_r>
   2d4b4:	80000c15 	stw	zero,48(r16)
   2d4b8:	81401117 	ldw	r5,68(r16)
   2d4bc:	28000326 	beq	r5,zero,2d4cc <_fclose_r+0xb4>
   2d4c0:	8809883a 	mov	r4,r17
   2d4c4:	00277640 	call	27764 <_free_r>
   2d4c8:	80001115 	stw	zero,68(r16)
   2d4cc:	00276000 	call	27600 <__sfp_lock_acquire>
   2d4d0:	8000030d 	sth	zero,12(r16)
   2d4d4:	00276040 	call	27604 <__sfp_lock_release>
   2d4d8:	9005883a 	mov	r2,r18
   2d4dc:	003fdc06 	br	2d450 <_fclose_r+0x38>
   2d4e0:	00275f00 	call	275f0 <__sinit>
   2d4e4:	003fd706 	br	2d444 <_fclose_r+0x2c>
   2d4e8:	04bfffc4 	movi	r18,-1
   2d4ec:	003fe806 	br	2d490 <_fclose_r+0x78>
   2d4f0:	81400417 	ldw	r5,16(r16)
   2d4f4:	8809883a 	mov	r4,r17
   2d4f8:	00277640 	call	27764 <_free_r>
   2d4fc:	003fe706 	br	2d49c <_fclose_r+0x84>
   2d500:	0005883a 	mov	r2,zero
   2d504:	f800283a 	ret

0002d508 <fclose>:
   2d508:	008000f4 	movhi	r2,3
   2d50c:	1095a004 	addi	r2,r2,22144
   2d510:	200b883a 	mov	r5,r4
   2d514:	11000017 	ldw	r4,0(r2)
   2d518:	002d4181 	jmpi	2d418 <_fclose_r>

0002d51c <__fputwc>:
   2d51c:	defff804 	addi	sp,sp,-32
   2d520:	dcc00415 	stw	r19,16(sp)
   2d524:	dc800315 	stw	r18,12(sp)
   2d528:	dc000115 	stw	r16,4(sp)
   2d52c:	dfc00715 	stw	ra,28(sp)
   2d530:	dd400615 	stw	r21,24(sp)
   2d534:	dd000515 	stw	r20,20(sp)
   2d538:	dc400215 	stw	r17,8(sp)
   2d53c:	2027883a 	mov	r19,r4
   2d540:	2825883a 	mov	r18,r5
   2d544:	3021883a 	mov	r16,r6
   2d548:	00281400 	call	28140 <__locale_mb_cur_max>
   2d54c:	00c00044 	movi	r3,1
   2d550:	10c03e26 	beq	r2,r3,2d64c <__fputwc+0x130>
   2d554:	81c01704 	addi	r7,r16,92
   2d558:	900d883a 	mov	r6,r18
   2d55c:	d80b883a 	mov	r5,sp
   2d560:	9809883a 	mov	r4,r19
   2d564:	002d9ec0 	call	2d9ec <_wcrtomb_r>
   2d568:	1029883a 	mov	r20,r2
   2d56c:	00bfffc4 	movi	r2,-1
   2d570:	a0802026 	beq	r20,r2,2d5f4 <__fputwc+0xd8>
   2d574:	d9400003 	ldbu	r5,0(sp)
   2d578:	a0001c26 	beq	r20,zero,2d5ec <__fputwc+0xd0>
   2d57c:	0023883a 	mov	r17,zero
   2d580:	05400284 	movi	r21,10
   2d584:	00000906 	br	2d5ac <__fputwc+0x90>
   2d588:	80800017 	ldw	r2,0(r16)
   2d58c:	11400005 	stb	r5,0(r2)
   2d590:	80c00017 	ldw	r3,0(r16)
   2d594:	18c00044 	addi	r3,r3,1
   2d598:	80c00015 	stw	r3,0(r16)
   2d59c:	8c400044 	addi	r17,r17,1
   2d5a0:	dc45883a 	add	r2,sp,r17
   2d5a4:	8d00112e 	bgeu	r17,r20,2d5ec <__fputwc+0xd0>
   2d5a8:	11400003 	ldbu	r5,0(r2)
   2d5ac:	80c00217 	ldw	r3,8(r16)
   2d5b0:	18ffffc4 	addi	r3,r3,-1
   2d5b4:	80c00215 	stw	r3,8(r16)
   2d5b8:	183ff30e 	bge	r3,zero,2d588 <__fputwc+0x6c>
   2d5bc:	80800617 	ldw	r2,24(r16)
   2d5c0:	18801916 	blt	r3,r2,2d628 <__fputwc+0x10c>
   2d5c4:	80800017 	ldw	r2,0(r16)
   2d5c8:	11400005 	stb	r5,0(r2)
   2d5cc:	80800017 	ldw	r2,0(r16)
   2d5d0:	10c00003 	ldbu	r3,0(r2)
   2d5d4:	10800044 	addi	r2,r2,1
   2d5d8:	1d402326 	beq	r3,r21,2d668 <__fputwc+0x14c>
   2d5dc:	80800015 	stw	r2,0(r16)
   2d5e0:	8c400044 	addi	r17,r17,1
   2d5e4:	dc45883a 	add	r2,sp,r17
   2d5e8:	8d3fef36 	bltu	r17,r20,2d5a8 <__fputwc+0x8c>
   2d5ec:	9005883a 	mov	r2,r18
   2d5f0:	00000406 	br	2d604 <__fputwc+0xe8>
   2d5f4:	80c0030b 	ldhu	r3,12(r16)
   2d5f8:	a005883a 	mov	r2,r20
   2d5fc:	18c01014 	ori	r3,r3,64
   2d600:	80c0030d 	sth	r3,12(r16)
   2d604:	dfc00717 	ldw	ra,28(sp)
   2d608:	dd400617 	ldw	r21,24(sp)
   2d60c:	dd000517 	ldw	r20,20(sp)
   2d610:	dcc00417 	ldw	r19,16(sp)
   2d614:	dc800317 	ldw	r18,12(sp)
   2d618:	dc400217 	ldw	r17,8(sp)
   2d61c:	dc000117 	ldw	r16,4(sp)
   2d620:	dec00804 	addi	sp,sp,32
   2d624:	f800283a 	ret
   2d628:	800d883a 	mov	r6,r16
   2d62c:	29403fcc 	andi	r5,r5,255
   2d630:	9809883a 	mov	r4,r19
   2d634:	002d8940 	call	2d894 <__swbuf_r>
   2d638:	10bfffe0 	cmpeqi	r2,r2,-1
   2d63c:	10803fcc 	andi	r2,r2,255
   2d640:	103fd626 	beq	r2,zero,2d59c <__fputwc+0x80>
   2d644:	00bfffc4 	movi	r2,-1
   2d648:	003fee06 	br	2d604 <__fputwc+0xe8>
   2d64c:	90ffffc4 	addi	r3,r18,-1
   2d650:	01003f84 	movi	r4,254
   2d654:	20ffbf36 	bltu	r4,r3,2d554 <__fputwc+0x38>
   2d658:	900b883a 	mov	r5,r18
   2d65c:	dc800005 	stb	r18,0(sp)
   2d660:	1029883a 	mov	r20,r2
   2d664:	003fc506 	br	2d57c <__fputwc+0x60>
   2d668:	800d883a 	mov	r6,r16
   2d66c:	a80b883a 	mov	r5,r21
   2d670:	9809883a 	mov	r4,r19
   2d674:	002d8940 	call	2d894 <__swbuf_r>
   2d678:	10bfffe0 	cmpeqi	r2,r2,-1
   2d67c:	003fef06 	br	2d63c <__fputwc+0x120>

0002d680 <_fputwc_r>:
   2d680:	3080030b 	ldhu	r2,12(r6)
   2d684:	10c8000c 	andi	r3,r2,8192
   2d688:	1800051e 	bne	r3,zero,2d6a0 <_fputwc_r+0x20>
   2d68c:	30c01917 	ldw	r3,100(r6)
   2d690:	10880014 	ori	r2,r2,8192
   2d694:	3080030d 	sth	r2,12(r6)
   2d698:	18880014 	ori	r2,r3,8192
   2d69c:	30801915 	stw	r2,100(r6)
   2d6a0:	002d51c1 	jmpi	2d51c <__fputwc>

0002d6a4 <fputwc>:
   2d6a4:	008000f4 	movhi	r2,3
   2d6a8:	defffc04 	addi	sp,sp,-16
   2d6ac:	1095a004 	addi	r2,r2,22144
   2d6b0:	dc000115 	stw	r16,4(sp)
   2d6b4:	14000017 	ldw	r16,0(r2)
   2d6b8:	dc400215 	stw	r17,8(sp)
   2d6bc:	dfc00315 	stw	ra,12(sp)
   2d6c0:	2023883a 	mov	r17,r4
   2d6c4:	80000226 	beq	r16,zero,2d6d0 <fputwc+0x2c>
   2d6c8:	80800e17 	ldw	r2,56(r16)
   2d6cc:	10001026 	beq	r2,zero,2d710 <fputwc+0x6c>
   2d6d0:	2880030b 	ldhu	r2,12(r5)
   2d6d4:	10c8000c 	andi	r3,r2,8192
   2d6d8:	1800051e 	bne	r3,zero,2d6f0 <fputwc+0x4c>
   2d6dc:	28c01917 	ldw	r3,100(r5)
   2d6e0:	10880014 	ori	r2,r2,8192
   2d6e4:	2880030d 	sth	r2,12(r5)
   2d6e8:	18880014 	ori	r2,r3,8192
   2d6ec:	28801915 	stw	r2,100(r5)
   2d6f0:	280d883a 	mov	r6,r5
   2d6f4:	8009883a 	mov	r4,r16
   2d6f8:	880b883a 	mov	r5,r17
   2d6fc:	dfc00317 	ldw	ra,12(sp)
   2d700:	dc400217 	ldw	r17,8(sp)
   2d704:	dc000117 	ldw	r16,4(sp)
   2d708:	dec00404 	addi	sp,sp,16
   2d70c:	002d51c1 	jmpi	2d51c <__fputwc>
   2d710:	8009883a 	mov	r4,r16
   2d714:	d9400015 	stw	r5,0(sp)
   2d718:	00275f00 	call	275f0 <__sinit>
   2d71c:	d9400017 	ldw	r5,0(sp)
   2d720:	003feb06 	br	2d6d0 <fputwc+0x2c>

0002d724 <_fstat_r>:
   2d724:	defffd04 	addi	sp,sp,-12
   2d728:	2805883a 	mov	r2,r5
   2d72c:	dc000015 	stw	r16,0(sp)
   2d730:	040000f4 	movhi	r16,3
   2d734:	dc400115 	stw	r17,4(sp)
   2d738:	841c7204 	addi	r16,r16,29128
   2d73c:	2023883a 	mov	r17,r4
   2d740:	300b883a 	mov	r5,r6
   2d744:	1009883a 	mov	r4,r2
   2d748:	dfc00215 	stw	ra,8(sp)
   2d74c:	80000015 	stw	zero,0(r16)
   2d750:	00310140 	call	31014 <fstat>
   2d754:	00ffffc4 	movi	r3,-1
   2d758:	10c00526 	beq	r2,r3,2d770 <_fstat_r+0x4c>
   2d75c:	dfc00217 	ldw	ra,8(sp)
   2d760:	dc400117 	ldw	r17,4(sp)
   2d764:	dc000017 	ldw	r16,0(sp)
   2d768:	dec00304 	addi	sp,sp,12
   2d76c:	f800283a 	ret
   2d770:	80c00017 	ldw	r3,0(r16)
   2d774:	183ff926 	beq	r3,zero,2d75c <_fstat_r+0x38>
   2d778:	88c00015 	stw	r3,0(r17)
   2d77c:	003ff706 	br	2d75c <_fstat_r+0x38>

0002d780 <_isatty_r>:
   2d780:	defffd04 	addi	sp,sp,-12
   2d784:	dc000015 	stw	r16,0(sp)
   2d788:	040000f4 	movhi	r16,3
   2d78c:	dc400115 	stw	r17,4(sp)
   2d790:	841c7204 	addi	r16,r16,29128
   2d794:	2023883a 	mov	r17,r4
   2d798:	2809883a 	mov	r4,r5
   2d79c:	dfc00215 	stw	ra,8(sp)
   2d7a0:	80000015 	stw	zero,0(r16)
   2d7a4:	00313a00 	call	313a0 <isatty>
   2d7a8:	00ffffc4 	movi	r3,-1
   2d7ac:	10c00526 	beq	r2,r3,2d7c4 <_isatty_r+0x44>
   2d7b0:	dfc00217 	ldw	ra,8(sp)
   2d7b4:	dc400117 	ldw	r17,4(sp)
   2d7b8:	dc000017 	ldw	r16,0(sp)
   2d7bc:	dec00304 	addi	sp,sp,12
   2d7c0:	f800283a 	ret
   2d7c4:	80c00017 	ldw	r3,0(r16)
   2d7c8:	183ff926 	beq	r3,zero,2d7b0 <_isatty_r+0x30>
   2d7cc:	88c00015 	stw	r3,0(r17)
   2d7d0:	003ff706 	br	2d7b0 <_isatty_r+0x30>

0002d7d4 <_lseek_r>:
   2d7d4:	defffd04 	addi	sp,sp,-12
   2d7d8:	2805883a 	mov	r2,r5
   2d7dc:	dc000015 	stw	r16,0(sp)
   2d7e0:	040000f4 	movhi	r16,3
   2d7e4:	dc400115 	stw	r17,4(sp)
   2d7e8:	300b883a 	mov	r5,r6
   2d7ec:	841c7204 	addi	r16,r16,29128
   2d7f0:	2023883a 	mov	r17,r4
   2d7f4:	380d883a 	mov	r6,r7
   2d7f8:	1009883a 	mov	r4,r2
   2d7fc:	dfc00215 	stw	ra,8(sp)
   2d800:	80000015 	stw	zero,0(r16)
   2d804:	003156c0 	call	3156c <lseek>
   2d808:	00ffffc4 	movi	r3,-1
   2d80c:	10c00526 	beq	r2,r3,2d824 <_lseek_r+0x50>
   2d810:	dfc00217 	ldw	ra,8(sp)
   2d814:	dc400117 	ldw	r17,4(sp)
   2d818:	dc000017 	ldw	r16,0(sp)
   2d81c:	dec00304 	addi	sp,sp,12
   2d820:	f800283a 	ret
   2d824:	80c00017 	ldw	r3,0(r16)
   2d828:	183ff926 	beq	r3,zero,2d810 <_lseek_r+0x3c>
   2d82c:	88c00015 	stw	r3,0(r17)
   2d830:	003ff706 	br	2d810 <_lseek_r+0x3c>

0002d834 <_read_r>:
   2d834:	defffd04 	addi	sp,sp,-12
   2d838:	2805883a 	mov	r2,r5
   2d83c:	dc000015 	stw	r16,0(sp)
   2d840:	040000f4 	movhi	r16,3
   2d844:	dc400115 	stw	r17,4(sp)
   2d848:	300b883a 	mov	r5,r6
   2d84c:	841c7204 	addi	r16,r16,29128
   2d850:	2023883a 	mov	r17,r4
   2d854:	380d883a 	mov	r6,r7
   2d858:	1009883a 	mov	r4,r2
   2d85c:	dfc00215 	stw	ra,8(sp)
   2d860:	80000015 	stw	zero,0(r16)
   2d864:	00317400 	call	31740 <read>
   2d868:	00ffffc4 	movi	r3,-1
   2d86c:	10c00526 	beq	r2,r3,2d884 <_read_r+0x50>
   2d870:	dfc00217 	ldw	ra,8(sp)
   2d874:	dc400117 	ldw	r17,4(sp)
   2d878:	dc000017 	ldw	r16,0(sp)
   2d87c:	dec00304 	addi	sp,sp,12
   2d880:	f800283a 	ret
   2d884:	80c00017 	ldw	r3,0(r16)
   2d888:	183ff926 	beq	r3,zero,2d870 <_read_r+0x3c>
   2d88c:	88c00015 	stw	r3,0(r17)
   2d890:	003ff706 	br	2d870 <_read_r+0x3c>

0002d894 <__swbuf_r>:
   2d894:	defffb04 	addi	sp,sp,-20
   2d898:	dcc00315 	stw	r19,12(sp)
   2d89c:	dc800215 	stw	r18,8(sp)
   2d8a0:	dc000015 	stw	r16,0(sp)
   2d8a4:	dfc00415 	stw	ra,16(sp)
   2d8a8:	dc400115 	stw	r17,4(sp)
   2d8ac:	2025883a 	mov	r18,r4
   2d8b0:	2827883a 	mov	r19,r5
   2d8b4:	3021883a 	mov	r16,r6
   2d8b8:	20000226 	beq	r4,zero,2d8c4 <__swbuf_r+0x30>
   2d8bc:	20800e17 	ldw	r2,56(r4)
   2d8c0:	10004226 	beq	r2,zero,2d9cc <__swbuf_r+0x138>
   2d8c4:	80800617 	ldw	r2,24(r16)
   2d8c8:	8100030b 	ldhu	r4,12(r16)
   2d8cc:	80800215 	stw	r2,8(r16)
   2d8d0:	2080020c 	andi	r2,r4,8
   2d8d4:	10003626 	beq	r2,zero,2d9b0 <__swbuf_r+0x11c>
   2d8d8:	80c00417 	ldw	r3,16(r16)
   2d8dc:	18003426 	beq	r3,zero,2d9b0 <__swbuf_r+0x11c>
   2d8e0:	2088000c 	andi	r2,r4,8192
   2d8e4:	9c403fcc 	andi	r17,r19,255
   2d8e8:	10001a26 	beq	r2,zero,2d954 <__swbuf_r+0xc0>
   2d8ec:	80800017 	ldw	r2,0(r16)
   2d8f0:	81000517 	ldw	r4,20(r16)
   2d8f4:	10c7c83a 	sub	r3,r2,r3
   2d8f8:	1900200e 	bge	r3,r4,2d97c <__swbuf_r+0xe8>
   2d8fc:	18c00044 	addi	r3,r3,1
   2d900:	81000217 	ldw	r4,8(r16)
   2d904:	11400044 	addi	r5,r2,1
   2d908:	81400015 	stw	r5,0(r16)
   2d90c:	213fffc4 	addi	r4,r4,-1
   2d910:	81000215 	stw	r4,8(r16)
   2d914:	14c00005 	stb	r19,0(r2)
   2d918:	80800517 	ldw	r2,20(r16)
   2d91c:	10c01e26 	beq	r2,r3,2d998 <__swbuf_r+0x104>
   2d920:	8080030b 	ldhu	r2,12(r16)
   2d924:	1080004c 	andi	r2,r2,1
   2d928:	10000226 	beq	r2,zero,2d934 <__swbuf_r+0xa0>
   2d92c:	00800284 	movi	r2,10
   2d930:	88801926 	beq	r17,r2,2d998 <__swbuf_r+0x104>
   2d934:	8805883a 	mov	r2,r17
   2d938:	dfc00417 	ldw	ra,16(sp)
   2d93c:	dcc00317 	ldw	r19,12(sp)
   2d940:	dc800217 	ldw	r18,8(sp)
   2d944:	dc400117 	ldw	r17,4(sp)
   2d948:	dc000017 	ldw	r16,0(sp)
   2d94c:	dec00504 	addi	sp,sp,20
   2d950:	f800283a 	ret
   2d954:	81401917 	ldw	r5,100(r16)
   2d958:	00b7ffc4 	movi	r2,-8193
   2d95c:	21080014 	ori	r4,r4,8192
   2d960:	2884703a 	and	r2,r5,r2
   2d964:	80801915 	stw	r2,100(r16)
   2d968:	80800017 	ldw	r2,0(r16)
   2d96c:	8100030d 	sth	r4,12(r16)
   2d970:	81000517 	ldw	r4,20(r16)
   2d974:	10c7c83a 	sub	r3,r2,r3
   2d978:	193fe016 	blt	r3,r4,2d8fc <__swbuf_r+0x68>
   2d97c:	800b883a 	mov	r5,r16
   2d980:	9009883a 	mov	r4,r18
   2d984:	00272140 	call	27214 <_fflush_r>
   2d988:	1000071e 	bne	r2,zero,2d9a8 <__swbuf_r+0x114>
   2d98c:	80800017 	ldw	r2,0(r16)
   2d990:	00c00044 	movi	r3,1
   2d994:	003fda06 	br	2d900 <__swbuf_r+0x6c>
   2d998:	800b883a 	mov	r5,r16
   2d99c:	9009883a 	mov	r4,r18
   2d9a0:	00272140 	call	27214 <_fflush_r>
   2d9a4:	103fe326 	beq	r2,zero,2d934 <__swbuf_r+0xa0>
   2d9a8:	00bfffc4 	movi	r2,-1
   2d9ac:	003fe206 	br	2d938 <__swbuf_r+0xa4>
   2d9b0:	800b883a 	mov	r5,r16
   2d9b4:	9009883a 	mov	r4,r18
   2d9b8:	002561c0 	call	2561c <__swsetup_r>
   2d9bc:	103ffa1e 	bne	r2,zero,2d9a8 <__swbuf_r+0x114>
   2d9c0:	8100030b 	ldhu	r4,12(r16)
   2d9c4:	80c00417 	ldw	r3,16(r16)
   2d9c8:	003fc506 	br	2d8e0 <__swbuf_r+0x4c>
   2d9cc:	00275f00 	call	275f0 <__sinit>
   2d9d0:	003fbc06 	br	2d8c4 <__swbuf_r+0x30>

0002d9d4 <__swbuf>:
   2d9d4:	008000f4 	movhi	r2,3
   2d9d8:	1095a004 	addi	r2,r2,22144
   2d9dc:	280d883a 	mov	r6,r5
   2d9e0:	200b883a 	mov	r5,r4
   2d9e4:	11000017 	ldw	r4,0(r2)
   2d9e8:	002d8941 	jmpi	2d894 <__swbuf_r>

0002d9ec <_wcrtomb_r>:
   2d9ec:	defff604 	addi	sp,sp,-40
   2d9f0:	008000f4 	movhi	r2,3
   2d9f4:	dc800815 	stw	r18,32(sp)
   2d9f8:	dc400715 	stw	r17,28(sp)
   2d9fc:	dc000615 	stw	r16,24(sp)
   2da00:	1095a404 	addi	r2,r2,22160
   2da04:	dfc00915 	stw	ra,36(sp)
   2da08:	2021883a 	mov	r16,r4
   2da0c:	3823883a 	mov	r17,r7
   2da10:	14800017 	ldw	r18,0(r2)
   2da14:	28001426 	beq	r5,zero,2da68 <_wcrtomb_r+0x7c>
   2da18:	d9400415 	stw	r5,16(sp)
   2da1c:	d9800515 	stw	r6,20(sp)
   2da20:	00281340 	call	28134 <__locale_charset>
   2da24:	d9800517 	ldw	r6,20(sp)
   2da28:	d9400417 	ldw	r5,16(sp)
   2da2c:	100f883a 	mov	r7,r2
   2da30:	dc400015 	stw	r17,0(sp)
   2da34:	8009883a 	mov	r4,r16
   2da38:	903ee83a 	callr	r18
   2da3c:	00ffffc4 	movi	r3,-1
   2da40:	10c0031e 	bne	r2,r3,2da50 <_wcrtomb_r+0x64>
   2da44:	88000015 	stw	zero,0(r17)
   2da48:	00c02284 	movi	r3,138
   2da4c:	80c00015 	stw	r3,0(r16)
   2da50:	dfc00917 	ldw	ra,36(sp)
   2da54:	dc800817 	ldw	r18,32(sp)
   2da58:	dc400717 	ldw	r17,28(sp)
   2da5c:	dc000617 	ldw	r16,24(sp)
   2da60:	dec00a04 	addi	sp,sp,40
   2da64:	f800283a 	ret
   2da68:	00281340 	call	28134 <__locale_charset>
   2da6c:	100f883a 	mov	r7,r2
   2da70:	dc400015 	stw	r17,0(sp)
   2da74:	000d883a 	mov	r6,zero
   2da78:	d9400104 	addi	r5,sp,4
   2da7c:	8009883a 	mov	r4,r16
   2da80:	903ee83a 	callr	r18
   2da84:	003fed06 	br	2da3c <_wcrtomb_r+0x50>

0002da88 <wcrtomb>:
   2da88:	defff604 	addi	sp,sp,-40
   2da8c:	008000f4 	movhi	r2,3
   2da90:	dc800615 	stw	r18,24(sp)
   2da94:	dc400515 	stw	r17,20(sp)
   2da98:	1095a004 	addi	r2,r2,22144
   2da9c:	dfc00915 	stw	ra,36(sp)
   2daa0:	dd000815 	stw	r20,32(sp)
   2daa4:	dcc00715 	stw	r19,28(sp)
   2daa8:	dc000415 	stw	r16,16(sp)
   2daac:	3025883a 	mov	r18,r6
   2dab0:	14400017 	ldw	r17,0(r2)
   2dab4:	20001926 	beq	r4,zero,2db1c <wcrtomb+0x94>
   2dab8:	008000f4 	movhi	r2,3
   2dabc:	1095a404 	addi	r2,r2,22160
   2dac0:	15000017 	ldw	r20,0(r2)
   2dac4:	2021883a 	mov	r16,r4
   2dac8:	2827883a 	mov	r19,r5
   2dacc:	00281340 	call	28134 <__locale_charset>
   2dad0:	100f883a 	mov	r7,r2
   2dad4:	dc800015 	stw	r18,0(sp)
   2dad8:	980d883a 	mov	r6,r19
   2dadc:	800b883a 	mov	r5,r16
   2dae0:	8809883a 	mov	r4,r17
   2dae4:	a03ee83a 	callr	r20
   2dae8:	00ffffc4 	movi	r3,-1
   2daec:	10c0031e 	bne	r2,r3,2dafc <wcrtomb+0x74>
   2daf0:	90000015 	stw	zero,0(r18)
   2daf4:	00c02284 	movi	r3,138
   2daf8:	88c00015 	stw	r3,0(r17)
   2dafc:	dfc00917 	ldw	ra,36(sp)
   2db00:	dd000817 	ldw	r20,32(sp)
   2db04:	dcc00717 	ldw	r19,28(sp)
   2db08:	dc800617 	ldw	r18,24(sp)
   2db0c:	dc400517 	ldw	r17,20(sp)
   2db10:	dc000417 	ldw	r16,16(sp)
   2db14:	dec00a04 	addi	sp,sp,40
   2db18:	f800283a 	ret
   2db1c:	008000f4 	movhi	r2,3
   2db20:	1095a404 	addi	r2,r2,22160
   2db24:	14000017 	ldw	r16,0(r2)
   2db28:	00281340 	call	28134 <__locale_charset>
   2db2c:	100f883a 	mov	r7,r2
   2db30:	dc800015 	stw	r18,0(sp)
   2db34:	000d883a 	mov	r6,zero
   2db38:	d9400104 	addi	r5,sp,4
   2db3c:	8809883a 	mov	r4,r17
   2db40:	803ee83a 	callr	r16
   2db44:	003fe806 	br	2dae8 <wcrtomb+0x60>

0002db48 <__ascii_wctomb>:
   2db48:	28000526 	beq	r5,zero,2db60 <__ascii_wctomb+0x18>
   2db4c:	00803fc4 	movi	r2,255
   2db50:	11800536 	bltu	r2,r6,2db68 <__ascii_wctomb+0x20>
   2db54:	29800005 	stb	r6,0(r5)
   2db58:	00800044 	movi	r2,1
   2db5c:	f800283a 	ret
   2db60:	0005883a 	mov	r2,zero
   2db64:	f800283a 	ret
   2db68:	00802284 	movi	r2,138
   2db6c:	20800015 	stw	r2,0(r4)
   2db70:	00bfffc4 	movi	r2,-1
   2db74:	f800283a 	ret

0002db78 <_wctomb_r>:
   2db78:	008000f4 	movhi	r2,3
   2db7c:	defff904 	addi	sp,sp,-28
   2db80:	1095a404 	addi	r2,r2,22160
   2db84:	dfc00615 	stw	ra,24(sp)
   2db88:	dc400515 	stw	r17,20(sp)
   2db8c:	dc000415 	stw	r16,16(sp)
   2db90:	3823883a 	mov	r17,r7
   2db94:	14000017 	ldw	r16,0(r2)
   2db98:	d9000115 	stw	r4,4(sp)
   2db9c:	d9400215 	stw	r5,8(sp)
   2dba0:	d9800315 	stw	r6,12(sp)
   2dba4:	00281340 	call	28134 <__locale_charset>
   2dba8:	d9800317 	ldw	r6,12(sp)
   2dbac:	d9400217 	ldw	r5,8(sp)
   2dbb0:	d9000117 	ldw	r4,4(sp)
   2dbb4:	100f883a 	mov	r7,r2
   2dbb8:	dc400015 	stw	r17,0(sp)
   2dbbc:	803ee83a 	callr	r16
   2dbc0:	dfc00617 	ldw	ra,24(sp)
   2dbc4:	dc400517 	ldw	r17,20(sp)
   2dbc8:	dc000417 	ldw	r16,16(sp)
   2dbcc:	dec00704 	addi	sp,sp,28
   2dbd0:	f800283a 	ret

0002dbd4 <__udivdi3>:
   2dbd4:	defff504 	addi	sp,sp,-44
   2dbd8:	dcc00415 	stw	r19,16(sp)
   2dbdc:	dc000115 	stw	r16,4(sp)
   2dbe0:	dfc00a15 	stw	ra,40(sp)
   2dbe4:	df000915 	stw	fp,36(sp)
   2dbe8:	ddc00815 	stw	r23,32(sp)
   2dbec:	dd800715 	stw	r22,28(sp)
   2dbf0:	dd400615 	stw	r21,24(sp)
   2dbf4:	dd000515 	stw	r20,20(sp)
   2dbf8:	dc800315 	stw	r18,12(sp)
   2dbfc:	dc400215 	stw	r17,8(sp)
   2dc00:	2027883a 	mov	r19,r4
   2dc04:	2821883a 	mov	r16,r5
   2dc08:	3800411e 	bne	r7,zero,2dd10 <__udivdi3+0x13c>
   2dc0c:	3023883a 	mov	r17,r6
   2dc10:	2025883a 	mov	r18,r4
   2dc14:	2980522e 	bgeu	r5,r6,2dd60 <__udivdi3+0x18c>
   2dc18:	00bfffd4 	movui	r2,65535
   2dc1c:	282d883a 	mov	r22,r5
   2dc20:	1180a836 	bltu	r2,r6,2dec4 <__udivdi3+0x2f0>
   2dc24:	00803fc4 	movi	r2,255
   2dc28:	1185803a 	cmpltu	r2,r2,r6
   2dc2c:	100490fa 	slli	r2,r2,3
   2dc30:	3086d83a 	srl	r3,r6,r2
   2dc34:	010000f4 	movhi	r4,3
   2dc38:	210ea504 	addi	r4,r4,14996
   2dc3c:	20c7883a 	add	r3,r4,r3
   2dc40:	18c00003 	ldbu	r3,0(r3)
   2dc44:	1885883a 	add	r2,r3,r2
   2dc48:	00c00804 	movi	r3,32
   2dc4c:	1887c83a 	sub	r3,r3,r2
   2dc50:	18000526 	beq	r3,zero,2dc68 <__udivdi3+0x94>
   2dc54:	80e0983a 	sll	r16,r16,r3
   2dc58:	9884d83a 	srl	r2,r19,r2
   2dc5c:	30e2983a 	sll	r17,r6,r3
   2dc60:	98e4983a 	sll	r18,r19,r3
   2dc64:	142cb03a 	or	r22,r2,r16
   2dc68:	882ad43a 	srli	r21,r17,16
   2dc6c:	b009883a 	mov	r4,r22
   2dc70:	8d3fffcc 	andi	r20,r17,65535
   2dc74:	a80b883a 	mov	r5,r21
   2dc78:	002e7e00 	call	2e7e0 <__umodsi3>
   2dc7c:	b009883a 	mov	r4,r22
   2dc80:	a80b883a 	mov	r5,r21
   2dc84:	1027883a 	mov	r19,r2
   2dc88:	002e77c0 	call	2e77c <__udivsi3>
   2dc8c:	102d883a 	mov	r22,r2
   2dc90:	9826943a 	slli	r19,r19,16
   2dc94:	9004d43a 	srli	r2,r18,16
   2dc98:	a5a1383a 	mul	r16,r20,r22
   2dc9c:	14c4b03a 	or	r2,r2,r19
   2dca0:	1400052e 	bgeu	r2,r16,2dcb8 <__udivdi3+0xe4>
   2dca4:	1445883a 	add	r2,r2,r17
   2dca8:	b0ffffc4 	addi	r3,r22,-1
   2dcac:	14400136 	bltu	r2,r17,2dcb4 <__udivdi3+0xe0>
   2dcb0:	14012336 	bltu	r2,r16,2e140 <__udivdi3+0x56c>
   2dcb4:	182d883a 	mov	r22,r3
   2dcb8:	1421c83a 	sub	r16,r2,r16
   2dcbc:	a80b883a 	mov	r5,r21
   2dcc0:	8009883a 	mov	r4,r16
   2dcc4:	002e7e00 	call	2e7e0 <__umodsi3>
   2dcc8:	1027883a 	mov	r19,r2
   2dccc:	a80b883a 	mov	r5,r21
   2dcd0:	8009883a 	mov	r4,r16
   2dcd4:	002e77c0 	call	2e77c <__udivsi3>
   2dcd8:	9826943a 	slli	r19,r19,16
   2dcdc:	a0a9383a 	mul	r20,r20,r2
   2dce0:	94bfffcc 	andi	r18,r18,65535
   2dce4:	94e4b03a 	or	r18,r18,r19
   2dce8:	9500052e 	bgeu	r18,r20,2dd00 <__udivdi3+0x12c>
   2dcec:	8ca5883a 	add	r18,r17,r18
   2dcf0:	10ffffc4 	addi	r3,r2,-1
   2dcf4:	9440f136 	bltu	r18,r17,2e0bc <__udivdi3+0x4e8>
   2dcf8:	9500f02e 	bgeu	r18,r20,2e0bc <__udivdi3+0x4e8>
   2dcfc:	10bfff84 	addi	r2,r2,-2
   2dd00:	b00c943a 	slli	r6,r22,16
   2dd04:	0007883a 	mov	r3,zero
   2dd08:	3084b03a 	or	r2,r6,r2
   2dd0c:	00005906 	br	2de74 <__udivdi3+0x2a0>
   2dd10:	29c05636 	bltu	r5,r7,2de6c <__udivdi3+0x298>
   2dd14:	00bfffd4 	movui	r2,65535
   2dd18:	11c0622e 	bgeu	r2,r7,2dea4 <__udivdi3+0x2d0>
   2dd1c:	00804034 	movhi	r2,256
   2dd20:	10bfffc4 	addi	r2,r2,-1
   2dd24:	11c0ee36 	bltu	r2,r7,2e0e0 <__udivdi3+0x50c>
   2dd28:	00800404 	movi	r2,16
   2dd2c:	3886d83a 	srl	r3,r7,r2
   2dd30:	010000f4 	movhi	r4,3
   2dd34:	210ea504 	addi	r4,r4,14996
   2dd38:	20c7883a 	add	r3,r4,r3
   2dd3c:	18c00003 	ldbu	r3,0(r3)
   2dd40:	05400804 	movi	r21,32
   2dd44:	1885883a 	add	r2,r3,r2
   2dd48:	a8abc83a 	sub	r21,r21,r2
   2dd4c:	a800621e 	bne	r21,zero,2ded8 <__udivdi3+0x304>
   2dd50:	3c00e936 	bltu	r7,r16,2e0f8 <__udivdi3+0x524>
   2dd54:	9985403a 	cmpgeu	r2,r19,r6
   2dd58:	0007883a 	mov	r3,zero
   2dd5c:	00004506 	br	2de74 <__udivdi3+0x2a0>
   2dd60:	3000041e 	bne	r6,zero,2dd74 <__udivdi3+0x1a0>
   2dd64:	000b883a 	mov	r5,zero
   2dd68:	01000044 	movi	r4,1
   2dd6c:	002e77c0 	call	2e77c <__udivsi3>
   2dd70:	1023883a 	mov	r17,r2
   2dd74:	00bfffd4 	movui	r2,65535
   2dd78:	14404e2e 	bgeu	r2,r17,2deb4 <__udivdi3+0x2e0>
   2dd7c:	00804034 	movhi	r2,256
   2dd80:	10bfffc4 	addi	r2,r2,-1
   2dd84:	1440d836 	bltu	r2,r17,2e0e8 <__udivdi3+0x514>
   2dd88:	00800404 	movi	r2,16
   2dd8c:	8886d83a 	srl	r3,r17,r2
   2dd90:	010000f4 	movhi	r4,3
   2dd94:	210ea504 	addi	r4,r4,14996
   2dd98:	20c7883a 	add	r3,r4,r3
   2dd9c:	18c00003 	ldbu	r3,0(r3)
   2dda0:	1885883a 	add	r2,r3,r2
   2dda4:	00c00804 	movi	r3,32
   2dda8:	1887c83a 	sub	r3,r3,r2
   2ddac:	18008f1e 	bne	r3,zero,2dfec <__udivdi3+0x418>
   2ddb0:	882ad43a 	srli	r21,r17,16
   2ddb4:	8461c83a 	sub	r16,r16,r17
   2ddb8:	8d3fffcc 	andi	r20,r17,65535
   2ddbc:	00c00044 	movi	r3,1
   2ddc0:	8009883a 	mov	r4,r16
   2ddc4:	a80b883a 	mov	r5,r21
   2ddc8:	d8c00015 	stw	r3,0(sp)
   2ddcc:	002e7e00 	call	2e7e0 <__umodsi3>
   2ddd0:	8009883a 	mov	r4,r16
   2ddd4:	a80b883a 	mov	r5,r21
   2ddd8:	1027883a 	mov	r19,r2
   2dddc:	002e77c0 	call	2e77c <__udivsi3>
   2dde0:	9826943a 	slli	r19,r19,16
   2dde4:	9008d43a 	srli	r4,r18,16
   2dde8:	1521383a 	mul	r16,r2,r20
   2ddec:	102d883a 	mov	r22,r2
   2ddf0:	24c8b03a 	or	r4,r4,r19
   2ddf4:	d8c00017 	ldw	r3,0(sp)
   2ddf8:	2400052e 	bgeu	r4,r16,2de10 <__udivdi3+0x23c>
   2ddfc:	2449883a 	add	r4,r4,r17
   2de00:	b0bfffc4 	addi	r2,r22,-1
   2de04:	24400136 	bltu	r4,r17,2de0c <__udivdi3+0x238>
   2de08:	2400ca36 	bltu	r4,r16,2e134 <__udivdi3+0x560>
   2de0c:	102d883a 	mov	r22,r2
   2de10:	2421c83a 	sub	r16,r4,r16
   2de14:	a80b883a 	mov	r5,r21
   2de18:	8009883a 	mov	r4,r16
   2de1c:	d8c00015 	stw	r3,0(sp)
   2de20:	002e7e00 	call	2e7e0 <__umodsi3>
   2de24:	1027883a 	mov	r19,r2
   2de28:	a80b883a 	mov	r5,r21
   2de2c:	8009883a 	mov	r4,r16
   2de30:	002e77c0 	call	2e77c <__udivsi3>
   2de34:	9826943a 	slli	r19,r19,16
   2de38:	1529383a 	mul	r20,r2,r20
   2de3c:	94bfffcc 	andi	r18,r18,65535
   2de40:	94e4b03a 	or	r18,r18,r19
   2de44:	d8c00017 	ldw	r3,0(sp)
   2de48:	9500052e 	bgeu	r18,r20,2de60 <__udivdi3+0x28c>
   2de4c:	8ca5883a 	add	r18,r17,r18
   2de50:	113fffc4 	addi	r4,r2,-1
   2de54:	94409736 	bltu	r18,r17,2e0b4 <__udivdi3+0x4e0>
   2de58:	9500962e 	bgeu	r18,r20,2e0b4 <__udivdi3+0x4e0>
   2de5c:	10bfff84 	addi	r2,r2,-2
   2de60:	b00c943a 	slli	r6,r22,16
   2de64:	3084b03a 	or	r2,r6,r2
   2de68:	00000206 	br	2de74 <__udivdi3+0x2a0>
   2de6c:	0007883a 	mov	r3,zero
   2de70:	0005883a 	mov	r2,zero
   2de74:	dfc00a17 	ldw	ra,40(sp)
   2de78:	df000917 	ldw	fp,36(sp)
   2de7c:	ddc00817 	ldw	r23,32(sp)
   2de80:	dd800717 	ldw	r22,28(sp)
   2de84:	dd400617 	ldw	r21,24(sp)
   2de88:	dd000517 	ldw	r20,20(sp)
   2de8c:	dcc00417 	ldw	r19,16(sp)
   2de90:	dc800317 	ldw	r18,12(sp)
   2de94:	dc400217 	ldw	r17,8(sp)
   2de98:	dc000117 	ldw	r16,4(sp)
   2de9c:	dec00b04 	addi	sp,sp,44
   2dea0:	f800283a 	ret
   2dea4:	00803fc4 	movi	r2,255
   2dea8:	11c5803a 	cmpltu	r2,r2,r7
   2deac:	100490fa 	slli	r2,r2,3
   2deb0:	003f9e06 	br	2dd2c <__udivdi3+0x158>
   2deb4:	00803fc4 	movi	r2,255
   2deb8:	1445803a 	cmpltu	r2,r2,r17
   2debc:	100490fa 	slli	r2,r2,3
   2dec0:	003fb206 	br	2dd8c <__udivdi3+0x1b8>
   2dec4:	00804034 	movhi	r2,256
   2dec8:	10bfffc4 	addi	r2,r2,-1
   2decc:	11808836 	bltu	r2,r6,2e0f0 <__udivdi3+0x51c>
   2ded0:	00800404 	movi	r2,16
   2ded4:	003f5606 	br	2dc30 <__udivdi3+0x5c>
   2ded8:	30aed83a 	srl	r23,r6,r2
   2dedc:	3d4e983a 	sll	r7,r7,r21
   2dee0:	80acd83a 	srl	r22,r16,r2
   2dee4:	9884d83a 	srl	r2,r19,r2
   2dee8:	3deeb03a 	or	r23,r7,r23
   2deec:	b824d43a 	srli	r18,r23,16
   2def0:	8560983a 	sll	r16,r16,r21
   2def4:	b009883a 	mov	r4,r22
   2def8:	900b883a 	mov	r5,r18
   2defc:	3568983a 	sll	r20,r6,r21
   2df00:	1420b03a 	or	r16,r2,r16
   2df04:	002e7e00 	call	2e7e0 <__umodsi3>
   2df08:	b009883a 	mov	r4,r22
   2df0c:	900b883a 	mov	r5,r18
   2df10:	1023883a 	mov	r17,r2
   2df14:	002e77c0 	call	2e77c <__udivsi3>
   2df18:	8808943a 	slli	r4,r17,16
   2df1c:	bf3fffcc 	andi	fp,r23,65535
   2df20:	8006d43a 	srli	r3,r16,16
   2df24:	e0a3383a 	mul	r17,fp,r2
   2df28:	100d883a 	mov	r6,r2
   2df2c:	1906b03a 	or	r3,r3,r4
   2df30:	1c40042e 	bgeu	r3,r17,2df44 <__udivdi3+0x370>
   2df34:	1dc7883a 	add	r3,r3,r23
   2df38:	10bfffc4 	addi	r2,r2,-1
   2df3c:	1dc0752e 	bgeu	r3,r23,2e114 <__udivdi3+0x540>
   2df40:	100d883a 	mov	r6,r2
   2df44:	1c63c83a 	sub	r17,r3,r17
   2df48:	900b883a 	mov	r5,r18
   2df4c:	8809883a 	mov	r4,r17
   2df50:	d9800015 	stw	r6,0(sp)
   2df54:	002e7e00 	call	2e7e0 <__umodsi3>
   2df58:	102d883a 	mov	r22,r2
   2df5c:	8809883a 	mov	r4,r17
   2df60:	900b883a 	mov	r5,r18
   2df64:	002e77c0 	call	2e77c <__udivsi3>
   2df68:	b02c943a 	slli	r22,r22,16
   2df6c:	e089383a 	mul	r4,fp,r2
   2df70:	843fffcc 	andi	r16,r16,65535
   2df74:	85a0b03a 	or	r16,r16,r22
   2df78:	d9800017 	ldw	r6,0(sp)
   2df7c:	8100042e 	bgeu	r16,r4,2df90 <__udivdi3+0x3bc>
   2df80:	85e1883a 	add	r16,r16,r23
   2df84:	10ffffc4 	addi	r3,r2,-1
   2df88:	85c05e2e 	bgeu	r16,r23,2e104 <__udivdi3+0x530>
   2df8c:	1805883a 	mov	r2,r3
   2df90:	300c943a 	slli	r6,r6,16
   2df94:	a17fffcc 	andi	r5,r20,65535
   2df98:	a028d43a 	srli	r20,r20,16
   2df9c:	3084b03a 	or	r2,r6,r2
   2dfa0:	10ffffcc 	andi	r3,r2,65535
   2dfa4:	100cd43a 	srli	r6,r2,16
   2dfa8:	194f383a 	mul	r7,r3,r5
   2dfac:	1d07383a 	mul	r3,r3,r20
   2dfb0:	314b383a 	mul	r5,r6,r5
   2dfb4:	3810d43a 	srli	r8,r7,16
   2dfb8:	8121c83a 	sub	r16,r16,r4
   2dfbc:	1947883a 	add	r3,r3,r5
   2dfc0:	40c7883a 	add	r3,r8,r3
   2dfc4:	350d383a 	mul	r6,r6,r20
   2dfc8:	1940022e 	bgeu	r3,r5,2dfd4 <__udivdi3+0x400>
   2dfcc:	01000074 	movhi	r4,1
   2dfd0:	310d883a 	add	r6,r6,r4
   2dfd4:	1828d43a 	srli	r20,r3,16
   2dfd8:	a18d883a 	add	r6,r20,r6
   2dfdc:	81803e36 	bltu	r16,r6,2e0d8 <__udivdi3+0x504>
   2dfe0:	81803826 	beq	r16,r6,2e0c4 <__udivdi3+0x4f0>
   2dfe4:	0007883a 	mov	r3,zero
   2dfe8:	003fa206 	br	2de74 <__udivdi3+0x2a0>
   2dfec:	88e2983a 	sll	r17,r17,r3
   2dff0:	80a8d83a 	srl	r20,r16,r2
   2dff4:	80e0983a 	sll	r16,r16,r3
   2dff8:	882ad43a 	srli	r21,r17,16
   2dffc:	9884d83a 	srl	r2,r19,r2
   2e000:	a009883a 	mov	r4,r20
   2e004:	a80b883a 	mov	r5,r21
   2e008:	142eb03a 	or	r23,r2,r16
   2e00c:	98e4983a 	sll	r18,r19,r3
   2e010:	002e7e00 	call	2e7e0 <__umodsi3>
   2e014:	a009883a 	mov	r4,r20
   2e018:	a80b883a 	mov	r5,r21
   2e01c:	1021883a 	mov	r16,r2
   2e020:	002e77c0 	call	2e77c <__udivsi3>
   2e024:	1039883a 	mov	fp,r2
   2e028:	8d3fffcc 	andi	r20,r17,65535
   2e02c:	8020943a 	slli	r16,r16,16
   2e030:	b804d43a 	srli	r2,r23,16
   2e034:	a72d383a 	mul	r22,r20,fp
   2e038:	1404b03a 	or	r2,r2,r16
   2e03c:	1580062e 	bgeu	r2,r22,2e058 <__udivdi3+0x484>
   2e040:	1445883a 	add	r2,r2,r17
   2e044:	e0ffffc4 	addi	r3,fp,-1
   2e048:	14403836 	bltu	r2,r17,2e12c <__udivdi3+0x558>
   2e04c:	1580372e 	bgeu	r2,r22,2e12c <__udivdi3+0x558>
   2e050:	e73fff84 	addi	fp,fp,-2
   2e054:	1445883a 	add	r2,r2,r17
   2e058:	15adc83a 	sub	r22,r2,r22
   2e05c:	a80b883a 	mov	r5,r21
   2e060:	b009883a 	mov	r4,r22
   2e064:	002e7e00 	call	2e7e0 <__umodsi3>
   2e068:	1027883a 	mov	r19,r2
   2e06c:	b009883a 	mov	r4,r22
   2e070:	a80b883a 	mov	r5,r21
   2e074:	002e77c0 	call	2e77c <__udivsi3>
   2e078:	9826943a 	slli	r19,r19,16
   2e07c:	a0a1383a 	mul	r16,r20,r2
   2e080:	b93fffcc 	andi	r4,r23,65535
   2e084:	24c8b03a 	or	r4,r4,r19
   2e088:	2400062e 	bgeu	r4,r16,2e0a4 <__udivdi3+0x4d0>
   2e08c:	2449883a 	add	r4,r4,r17
   2e090:	10ffffc4 	addi	r3,r2,-1
   2e094:	24402336 	bltu	r4,r17,2e124 <__udivdi3+0x550>
   2e098:	2400222e 	bgeu	r4,r16,2e124 <__udivdi3+0x550>
   2e09c:	10bfff84 	addi	r2,r2,-2
   2e0a0:	2449883a 	add	r4,r4,r17
   2e0a4:	e038943a 	slli	fp,fp,16
   2e0a8:	2421c83a 	sub	r16,r4,r16
   2e0ac:	e086b03a 	or	r3,fp,r2
   2e0b0:	003f4306 	br	2ddc0 <__udivdi3+0x1ec>
   2e0b4:	2005883a 	mov	r2,r4
   2e0b8:	003f6906 	br	2de60 <__udivdi3+0x28c>
   2e0bc:	1805883a 	mov	r2,r3
   2e0c0:	003f0f06 	br	2dd00 <__udivdi3+0x12c>
   2e0c4:	1806943a 	slli	r3,r3,16
   2e0c8:	9d66983a 	sll	r19,r19,r21
   2e0cc:	39ffffcc 	andi	r7,r7,65535
   2e0d0:	19c7883a 	add	r3,r3,r7
   2e0d4:	98ffc32e 	bgeu	r19,r3,2dfe4 <__udivdi3+0x410>
   2e0d8:	10bfffc4 	addi	r2,r2,-1
   2e0dc:	003fc106 	br	2dfe4 <__udivdi3+0x410>
   2e0e0:	00800604 	movi	r2,24
   2e0e4:	003f1106 	br	2dd2c <__udivdi3+0x158>
   2e0e8:	00800604 	movi	r2,24
   2e0ec:	003f2706 	br	2dd8c <__udivdi3+0x1b8>
   2e0f0:	00800604 	movi	r2,24
   2e0f4:	003ece06 	br	2dc30 <__udivdi3+0x5c>
   2e0f8:	0007883a 	mov	r3,zero
   2e0fc:	00800044 	movi	r2,1
   2e100:	003f5c06 	br	2de74 <__udivdi3+0x2a0>
   2e104:	813fa12e 	bgeu	r16,r4,2df8c <__udivdi3+0x3b8>
   2e108:	10bfff84 	addi	r2,r2,-2
   2e10c:	85e1883a 	add	r16,r16,r23
   2e110:	003f9f06 	br	2df90 <__udivdi3+0x3bc>
   2e114:	1c7f8a2e 	bgeu	r3,r17,2df40 <__udivdi3+0x36c>
   2e118:	31bfff84 	addi	r6,r6,-2
   2e11c:	1dc7883a 	add	r3,r3,r23
   2e120:	003f8806 	br	2df44 <__udivdi3+0x370>
   2e124:	1805883a 	mov	r2,r3
   2e128:	003fde06 	br	2e0a4 <__udivdi3+0x4d0>
   2e12c:	1839883a 	mov	fp,r3
   2e130:	003fc906 	br	2e058 <__udivdi3+0x484>
   2e134:	b5bfff84 	addi	r22,r22,-2
   2e138:	2449883a 	add	r4,r4,r17
   2e13c:	003f3406 	br	2de10 <__udivdi3+0x23c>
   2e140:	b5bfff84 	addi	r22,r22,-2
   2e144:	1445883a 	add	r2,r2,r17
   2e148:	003edb06 	br	2dcb8 <__udivdi3+0xe4>

0002e14c <__umoddi3>:
   2e14c:	defff404 	addi	sp,sp,-48
   2e150:	df000a15 	stw	fp,40(sp)
   2e154:	dc400315 	stw	r17,12(sp)
   2e158:	dc000215 	stw	r16,8(sp)
   2e15c:	dfc00b15 	stw	ra,44(sp)
   2e160:	ddc00915 	stw	r23,36(sp)
   2e164:	dd800815 	stw	r22,32(sp)
   2e168:	dd400715 	stw	r21,28(sp)
   2e16c:	dd000615 	stw	r20,24(sp)
   2e170:	dcc00515 	stw	r19,20(sp)
   2e174:	dc800415 	stw	r18,16(sp)
   2e178:	2021883a 	mov	r16,r4
   2e17c:	2823883a 	mov	r17,r5
   2e180:	2839883a 	mov	fp,r5
   2e184:	38003c1e 	bne	r7,zero,2e278 <__umoddi3+0x12c>
   2e188:	3027883a 	mov	r19,r6
   2e18c:	2029883a 	mov	r20,r4
   2e190:	2980512e 	bgeu	r5,r6,2e2d8 <__umoddi3+0x18c>
   2e194:	00bfffd4 	movui	r2,65535
   2e198:	11809a36 	bltu	r2,r6,2e404 <__umoddi3+0x2b8>
   2e19c:	01003fc4 	movi	r4,255
   2e1a0:	2189803a 	cmpltu	r4,r4,r6
   2e1a4:	200890fa 	slli	r4,r4,3
   2e1a8:	3104d83a 	srl	r2,r6,r4
   2e1ac:	00c000f4 	movhi	r3,3
   2e1b0:	18cea504 	addi	r3,r3,14996
   2e1b4:	1885883a 	add	r2,r3,r2
   2e1b8:	10c00003 	ldbu	r3,0(r2)
   2e1bc:	00800804 	movi	r2,32
   2e1c0:	1909883a 	add	r4,r3,r4
   2e1c4:	1125c83a 	sub	r18,r2,r4
   2e1c8:	90000526 	beq	r18,zero,2e1e0 <__umoddi3+0x94>
   2e1cc:	8ca2983a 	sll	r17,r17,r18
   2e1d0:	8108d83a 	srl	r4,r16,r4
   2e1d4:	34a6983a 	sll	r19,r6,r18
   2e1d8:	84a8983a 	sll	r20,r16,r18
   2e1dc:	2478b03a 	or	fp,r4,r17
   2e1e0:	982ed43a 	srli	r23,r19,16
   2e1e4:	e009883a 	mov	r4,fp
   2e1e8:	9dbfffcc 	andi	r22,r19,65535
   2e1ec:	b80b883a 	mov	r5,r23
   2e1f0:	002e7e00 	call	2e7e0 <__umodsi3>
   2e1f4:	e009883a 	mov	r4,fp
   2e1f8:	b80b883a 	mov	r5,r23
   2e1fc:	102b883a 	mov	r21,r2
   2e200:	002e77c0 	call	2e77c <__udivsi3>
   2e204:	a806943a 	slli	r3,r21,16
   2e208:	a008d43a 	srli	r4,r20,16
   2e20c:	b085383a 	mul	r2,r22,r2
   2e210:	20c8b03a 	or	r4,r4,r3
   2e214:	2080032e 	bgeu	r4,r2,2e224 <__umoddi3+0xd8>
   2e218:	24c9883a 	add	r4,r4,r19
   2e21c:	24c00136 	bltu	r4,r19,2e224 <__umoddi3+0xd8>
   2e220:	20811036 	bltu	r4,r2,2e664 <__umoddi3+0x518>
   2e224:	20abc83a 	sub	r21,r4,r2
   2e228:	b80b883a 	mov	r5,r23
   2e22c:	a809883a 	mov	r4,r21
   2e230:	002e7e00 	call	2e7e0 <__umodsi3>
   2e234:	1023883a 	mov	r17,r2
   2e238:	b80b883a 	mov	r5,r23
   2e23c:	a809883a 	mov	r4,r21
   2e240:	002e77c0 	call	2e77c <__udivsi3>
   2e244:	8822943a 	slli	r17,r17,16
   2e248:	b085383a 	mul	r2,r22,r2
   2e24c:	a0ffffcc 	andi	r3,r20,65535
   2e250:	1c46b03a 	or	r3,r3,r17
   2e254:	1880042e 	bgeu	r3,r2,2e268 <__umoddi3+0x11c>
   2e258:	1cc7883a 	add	r3,r3,r19
   2e25c:	1cc00236 	bltu	r3,r19,2e268 <__umoddi3+0x11c>
   2e260:	1880012e 	bgeu	r3,r2,2e268 <__umoddi3+0x11c>
   2e264:	1cc7883a 	add	r3,r3,r19
   2e268:	1885c83a 	sub	r2,r3,r2
   2e26c:	1484d83a 	srl	r2,r2,r18
   2e270:	0007883a 	mov	r3,zero
   2e274:	00004f06 	br	2e3b4 <__umoddi3+0x268>
   2e278:	29c04c36 	bltu	r5,r7,2e3ac <__umoddi3+0x260>
   2e27c:	00bfffd4 	movui	r2,65535
   2e280:	11c0582e 	bgeu	r2,r7,2e3e4 <__umoddi3+0x298>
   2e284:	00804034 	movhi	r2,256
   2e288:	10bfffc4 	addi	r2,r2,-1
   2e28c:	11c0e736 	bltu	r2,r7,2e62c <__umoddi3+0x4e0>
   2e290:	01000404 	movi	r4,16
   2e294:	3904d83a 	srl	r2,r7,r4
   2e298:	00c000f4 	movhi	r3,3
   2e29c:	18cea504 	addi	r3,r3,14996
   2e2a0:	1885883a 	add	r2,r3,r2
   2e2a4:	14c00003 	ldbu	r19,0(r2)
   2e2a8:	00c00804 	movi	r3,32
   2e2ac:	9927883a 	add	r19,r19,r4
   2e2b0:	1ce9c83a 	sub	r20,r3,r19
   2e2b4:	a000581e 	bne	r20,zero,2e418 <__umoddi3+0x2cc>
   2e2b8:	3c400136 	bltu	r7,r17,2e2c0 <__umoddi3+0x174>
   2e2bc:	8180eb36 	bltu	r16,r6,2e66c <__umoddi3+0x520>
   2e2c0:	8185c83a 	sub	r2,r16,r6
   2e2c4:	89e3c83a 	sub	r17,r17,r7
   2e2c8:	8089803a 	cmpltu	r4,r16,r2
   2e2cc:	8939c83a 	sub	fp,r17,r4
   2e2d0:	e007883a 	mov	r3,fp
   2e2d4:	00003706 	br	2e3b4 <__umoddi3+0x268>
   2e2d8:	3000041e 	bne	r6,zero,2e2ec <__umoddi3+0x1a0>
   2e2dc:	000b883a 	mov	r5,zero
   2e2e0:	01000044 	movi	r4,1
   2e2e4:	002e77c0 	call	2e77c <__udivsi3>
   2e2e8:	1027883a 	mov	r19,r2
   2e2ec:	00bfffd4 	movui	r2,65535
   2e2f0:	14c0402e 	bgeu	r2,r19,2e3f4 <__umoddi3+0x2a8>
   2e2f4:	00804034 	movhi	r2,256
   2e2f8:	10bfffc4 	addi	r2,r2,-1
   2e2fc:	14c0cd36 	bltu	r2,r19,2e634 <__umoddi3+0x4e8>
   2e300:	00800404 	movi	r2,16
   2e304:	9886d83a 	srl	r3,r19,r2
   2e308:	010000f4 	movhi	r4,3
   2e30c:	210ea504 	addi	r4,r4,14996
   2e310:	20c7883a 	add	r3,r4,r3
   2e314:	18c00003 	ldbu	r3,0(r3)
   2e318:	1887883a 	add	r3,r3,r2
   2e31c:	00800804 	movi	r2,32
   2e320:	10e5c83a 	sub	r18,r2,r3
   2e324:	9000901e 	bne	r18,zero,2e568 <__umoddi3+0x41c>
   2e328:	982cd43a 	srli	r22,r19,16
   2e32c:	8ce3c83a 	sub	r17,r17,r19
   2e330:	9d7fffcc 	andi	r21,r19,65535
   2e334:	b00b883a 	mov	r5,r22
   2e338:	8809883a 	mov	r4,r17
   2e33c:	002e7e00 	call	2e7e0 <__umodsi3>
   2e340:	8809883a 	mov	r4,r17
   2e344:	b00b883a 	mov	r5,r22
   2e348:	1021883a 	mov	r16,r2
   2e34c:	002e77c0 	call	2e77c <__udivsi3>
   2e350:	8006943a 	slli	r3,r16,16
   2e354:	a008d43a 	srli	r4,r20,16
   2e358:	1545383a 	mul	r2,r2,r21
   2e35c:	20c8b03a 	or	r4,r4,r3
   2e360:	2080042e 	bgeu	r4,r2,2e374 <__umoddi3+0x228>
   2e364:	24c9883a 	add	r4,r4,r19
   2e368:	24c00236 	bltu	r4,r19,2e374 <__umoddi3+0x228>
   2e36c:	2080012e 	bgeu	r4,r2,2e374 <__umoddi3+0x228>
   2e370:	24c9883a 	add	r4,r4,r19
   2e374:	20a1c83a 	sub	r16,r4,r2
   2e378:	b00b883a 	mov	r5,r22
   2e37c:	8009883a 	mov	r4,r16
   2e380:	002e7e00 	call	2e7e0 <__umodsi3>
   2e384:	1023883a 	mov	r17,r2
   2e388:	b00b883a 	mov	r5,r22
   2e38c:	8009883a 	mov	r4,r16
   2e390:	002e77c0 	call	2e77c <__udivsi3>
   2e394:	8822943a 	slli	r17,r17,16
   2e398:	1545383a 	mul	r2,r2,r21
   2e39c:	a53fffcc 	andi	r20,r20,65535
   2e3a0:	a446b03a 	or	r3,r20,r17
   2e3a4:	18bfb02e 	bgeu	r3,r2,2e268 <__umoddi3+0x11c>
   2e3a8:	003fab06 	br	2e258 <__umoddi3+0x10c>
   2e3ac:	2005883a 	mov	r2,r4
   2e3b0:	2807883a 	mov	r3,r5
   2e3b4:	dfc00b17 	ldw	ra,44(sp)
   2e3b8:	df000a17 	ldw	fp,40(sp)
   2e3bc:	ddc00917 	ldw	r23,36(sp)
   2e3c0:	dd800817 	ldw	r22,32(sp)
   2e3c4:	dd400717 	ldw	r21,28(sp)
   2e3c8:	dd000617 	ldw	r20,24(sp)
   2e3cc:	dcc00517 	ldw	r19,20(sp)
   2e3d0:	dc800417 	ldw	r18,16(sp)
   2e3d4:	dc400317 	ldw	r17,12(sp)
   2e3d8:	dc000217 	ldw	r16,8(sp)
   2e3dc:	dec00c04 	addi	sp,sp,48
   2e3e0:	f800283a 	ret
   2e3e4:	04c03fc4 	movi	r19,255
   2e3e8:	99c9803a 	cmpltu	r4,r19,r7
   2e3ec:	200890fa 	slli	r4,r4,3
   2e3f0:	003fa806 	br	2e294 <__umoddi3+0x148>
   2e3f4:	00803fc4 	movi	r2,255
   2e3f8:	14c5803a 	cmpltu	r2,r2,r19
   2e3fc:	100490fa 	slli	r2,r2,3
   2e400:	003fc006 	br	2e304 <__umoddi3+0x1b8>
   2e404:	00804034 	movhi	r2,256
   2e408:	10bfffc4 	addi	r2,r2,-1
   2e40c:	11808b36 	bltu	r2,r6,2e63c <__umoddi3+0x4f0>
   2e410:	01000404 	movi	r4,16
   2e414:	003f6406 	br	2e1a8 <__umoddi3+0x5c>
   2e418:	34c4d83a 	srl	r2,r6,r19
   2e41c:	3d0e983a 	sll	r7,r7,r20
   2e420:	8cf8d83a 	srl	fp,r17,r19
   2e424:	8d10983a 	sll	r8,r17,r20
   2e428:	38aab03a 	or	r21,r7,r2
   2e42c:	a82cd43a 	srli	r22,r21,16
   2e430:	84e2d83a 	srl	r17,r16,r19
   2e434:	e009883a 	mov	r4,fp
   2e438:	b00b883a 	mov	r5,r22
   2e43c:	8a22b03a 	or	r17,r17,r8
   2e440:	3524983a 	sll	r18,r6,r20
   2e444:	002e7e00 	call	2e7e0 <__umodsi3>
   2e448:	e009883a 	mov	r4,fp
   2e44c:	b00b883a 	mov	r5,r22
   2e450:	102f883a 	mov	r23,r2
   2e454:	002e77c0 	call	2e77c <__udivsi3>
   2e458:	100d883a 	mov	r6,r2
   2e45c:	b808943a 	slli	r4,r23,16
   2e460:	aa3fffcc 	andi	r8,r21,65535
   2e464:	8804d43a 	srli	r2,r17,16
   2e468:	41af383a 	mul	r23,r8,r6
   2e46c:	8520983a 	sll	r16,r16,r20
   2e470:	1104b03a 	or	r2,r2,r4
   2e474:	15c0042e 	bgeu	r2,r23,2e488 <__umoddi3+0x33c>
   2e478:	1545883a 	add	r2,r2,r21
   2e47c:	30ffffc4 	addi	r3,r6,-1
   2e480:	1540742e 	bgeu	r2,r21,2e654 <__umoddi3+0x508>
   2e484:	180d883a 	mov	r6,r3
   2e488:	15efc83a 	sub	r23,r2,r23
   2e48c:	b00b883a 	mov	r5,r22
   2e490:	b809883a 	mov	r4,r23
   2e494:	d9800115 	stw	r6,4(sp)
   2e498:	da000015 	stw	r8,0(sp)
   2e49c:	002e7e00 	call	2e7e0 <__umodsi3>
   2e4a0:	b00b883a 	mov	r5,r22
   2e4a4:	b809883a 	mov	r4,r23
   2e4a8:	1039883a 	mov	fp,r2
   2e4ac:	002e77c0 	call	2e77c <__udivsi3>
   2e4b0:	da000017 	ldw	r8,0(sp)
   2e4b4:	e038943a 	slli	fp,fp,16
   2e4b8:	100b883a 	mov	r5,r2
   2e4bc:	4089383a 	mul	r4,r8,r2
   2e4c0:	8a3fffcc 	andi	r8,r17,65535
   2e4c4:	4710b03a 	or	r8,r8,fp
   2e4c8:	d9800117 	ldw	r6,4(sp)
   2e4cc:	4100042e 	bgeu	r8,r4,2e4e0 <__umoddi3+0x394>
   2e4d0:	4551883a 	add	r8,r8,r21
   2e4d4:	10bfffc4 	addi	r2,r2,-1
   2e4d8:	45405a2e 	bgeu	r8,r21,2e644 <__umoddi3+0x4f8>
   2e4dc:	100b883a 	mov	r5,r2
   2e4e0:	300c943a 	slli	r6,r6,16
   2e4e4:	91ffffcc 	andi	r7,r18,65535
   2e4e8:	9004d43a 	srli	r2,r18,16
   2e4ec:	314cb03a 	or	r6,r6,r5
   2e4f0:	317fffcc 	andi	r5,r6,65535
   2e4f4:	300cd43a 	srli	r6,r6,16
   2e4f8:	29d3383a 	mul	r9,r5,r7
   2e4fc:	288b383a 	mul	r5,r5,r2
   2e500:	31cf383a 	mul	r7,r6,r7
   2e504:	4806d43a 	srli	r3,r9,16
   2e508:	4111c83a 	sub	r8,r8,r4
   2e50c:	29cb883a 	add	r5,r5,r7
   2e510:	194b883a 	add	r5,r3,r5
   2e514:	3085383a 	mul	r2,r6,r2
   2e518:	29c0022e 	bgeu	r5,r7,2e524 <__umoddi3+0x3d8>
   2e51c:	00c00074 	movhi	r3,1
   2e520:	10c5883a 	add	r2,r2,r3
   2e524:	2808d43a 	srli	r4,r5,16
   2e528:	280a943a 	slli	r5,r5,16
   2e52c:	4a7fffcc 	andi	r9,r9,65535
   2e530:	2085883a 	add	r2,r4,r2
   2e534:	2a4b883a 	add	r5,r5,r9
   2e538:	40803636 	bltu	r8,r2,2e614 <__umoddi3+0x4c8>
   2e53c:	40804d26 	beq	r8,r2,2e674 <__umoddi3+0x528>
   2e540:	4089c83a 	sub	r4,r8,r2
   2e544:	280f883a 	mov	r7,r5
   2e548:	81cfc83a 	sub	r7,r16,r7
   2e54c:	81c7803a 	cmpltu	r3,r16,r7
   2e550:	20c7c83a 	sub	r3,r4,r3
   2e554:	1cc4983a 	sll	r2,r3,r19
   2e558:	3d0ed83a 	srl	r7,r7,r20
   2e55c:	1d06d83a 	srl	r3,r3,r20
   2e560:	11c4b03a 	or	r2,r2,r7
   2e564:	003f9306 	br	2e3b4 <__umoddi3+0x268>
   2e568:	9ca6983a 	sll	r19,r19,r18
   2e56c:	88e8d83a 	srl	r20,r17,r3
   2e570:	80c4d83a 	srl	r2,r16,r3
   2e574:	982cd43a 	srli	r22,r19,16
   2e578:	8ca2983a 	sll	r17,r17,r18
   2e57c:	a009883a 	mov	r4,r20
   2e580:	b00b883a 	mov	r5,r22
   2e584:	1478b03a 	or	fp,r2,r17
   2e588:	002e7e00 	call	2e7e0 <__umodsi3>
   2e58c:	a009883a 	mov	r4,r20
   2e590:	b00b883a 	mov	r5,r22
   2e594:	1023883a 	mov	r17,r2
   2e598:	002e77c0 	call	2e77c <__udivsi3>
   2e59c:	9d7fffcc 	andi	r21,r19,65535
   2e5a0:	880a943a 	slli	r5,r17,16
   2e5a4:	e008d43a 	srli	r4,fp,16
   2e5a8:	a885383a 	mul	r2,r21,r2
   2e5ac:	84a8983a 	sll	r20,r16,r18
   2e5b0:	2148b03a 	or	r4,r4,r5
   2e5b4:	2080042e 	bgeu	r4,r2,2e5c8 <__umoddi3+0x47c>
   2e5b8:	24c9883a 	add	r4,r4,r19
   2e5bc:	24c00236 	bltu	r4,r19,2e5c8 <__umoddi3+0x47c>
   2e5c0:	2080012e 	bgeu	r4,r2,2e5c8 <__umoddi3+0x47c>
   2e5c4:	24c9883a 	add	r4,r4,r19
   2e5c8:	20a3c83a 	sub	r17,r4,r2
   2e5cc:	b00b883a 	mov	r5,r22
   2e5d0:	8809883a 	mov	r4,r17
   2e5d4:	002e7e00 	call	2e7e0 <__umodsi3>
   2e5d8:	102f883a 	mov	r23,r2
   2e5dc:	8809883a 	mov	r4,r17
   2e5e0:	b00b883a 	mov	r5,r22
   2e5e4:	002e77c0 	call	2e77c <__udivsi3>
   2e5e8:	b82e943a 	slli	r23,r23,16
   2e5ec:	a885383a 	mul	r2,r21,r2
   2e5f0:	e13fffcc 	andi	r4,fp,65535
   2e5f4:	25c8b03a 	or	r4,r4,r23
   2e5f8:	2080042e 	bgeu	r4,r2,2e60c <__umoddi3+0x4c0>
   2e5fc:	24c9883a 	add	r4,r4,r19
   2e600:	24c00236 	bltu	r4,r19,2e60c <__umoddi3+0x4c0>
   2e604:	2080012e 	bgeu	r4,r2,2e60c <__umoddi3+0x4c0>
   2e608:	24c9883a 	add	r4,r4,r19
   2e60c:	20a3c83a 	sub	r17,r4,r2
   2e610:	003f4806 	br	2e334 <__umoddi3+0x1e8>
   2e614:	2c8fc83a 	sub	r7,r5,r18
   2e618:	1545c83a 	sub	r2,r2,r21
   2e61c:	29cb803a 	cmpltu	r5,r5,r7
   2e620:	1145c83a 	sub	r2,r2,r5
   2e624:	4089c83a 	sub	r4,r8,r2
   2e628:	003fc706 	br	2e548 <__umoddi3+0x3fc>
   2e62c:	01000604 	movi	r4,24
   2e630:	003f1806 	br	2e294 <__umoddi3+0x148>
   2e634:	00800604 	movi	r2,24
   2e638:	003f3206 	br	2e304 <__umoddi3+0x1b8>
   2e63c:	01000604 	movi	r4,24
   2e640:	003ed906 	br	2e1a8 <__umoddi3+0x5c>
   2e644:	413fa52e 	bgeu	r8,r4,2e4dc <__umoddi3+0x390>
   2e648:	297fff84 	addi	r5,r5,-2
   2e64c:	4551883a 	add	r8,r8,r21
   2e650:	003fa306 	br	2e4e0 <__umoddi3+0x394>
   2e654:	15ff8b2e 	bgeu	r2,r23,2e484 <__umoddi3+0x338>
   2e658:	31bfff84 	addi	r6,r6,-2
   2e65c:	1545883a 	add	r2,r2,r21
   2e660:	003f8906 	br	2e488 <__umoddi3+0x33c>
   2e664:	24c9883a 	add	r4,r4,r19
   2e668:	003eee06 	br	2e224 <__umoddi3+0xd8>
   2e66c:	8005883a 	mov	r2,r16
   2e670:	003f1706 	br	2e2d0 <__umoddi3+0x184>
   2e674:	817fe736 	bltu	r16,r5,2e614 <__umoddi3+0x4c8>
   2e678:	280f883a 	mov	r7,r5
   2e67c:	0009883a 	mov	r4,zero
   2e680:	003fb106 	br	2e548 <__umoddi3+0x3fc>

0002e684 <__divsi3>:
   2e684:	20001b16 	blt	r4,zero,2e6f4 <__divsi3+0x70>
   2e688:	000f883a 	mov	r7,zero
   2e68c:	28001616 	blt	r5,zero,2e6e8 <__divsi3+0x64>
   2e690:	200d883a 	mov	r6,r4
   2e694:	29001a2e 	bgeu	r5,r4,2e700 <__divsi3+0x7c>
   2e698:	00800804 	movi	r2,32
   2e69c:	00c00044 	movi	r3,1
   2e6a0:	00000106 	br	2e6a8 <__divsi3+0x24>
   2e6a4:	10000d26 	beq	r2,zero,2e6dc <__divsi3+0x58>
   2e6a8:	294b883a 	add	r5,r5,r5
   2e6ac:	10bfffc4 	addi	r2,r2,-1
   2e6b0:	18c7883a 	add	r3,r3,r3
   2e6b4:	293ffb36 	bltu	r5,r4,2e6a4 <__divsi3+0x20>
   2e6b8:	0005883a 	mov	r2,zero
   2e6bc:	18000726 	beq	r3,zero,2e6dc <__divsi3+0x58>
   2e6c0:	0005883a 	mov	r2,zero
   2e6c4:	31400236 	bltu	r6,r5,2e6d0 <__divsi3+0x4c>
   2e6c8:	314dc83a 	sub	r6,r6,r5
   2e6cc:	10c4b03a 	or	r2,r2,r3
   2e6d0:	1806d07a 	srli	r3,r3,1
   2e6d4:	280ad07a 	srli	r5,r5,1
   2e6d8:	183ffa1e 	bne	r3,zero,2e6c4 <__divsi3+0x40>
   2e6dc:	38000126 	beq	r7,zero,2e6e4 <__divsi3+0x60>
   2e6e0:	0085c83a 	sub	r2,zero,r2
   2e6e4:	f800283a 	ret
   2e6e8:	014bc83a 	sub	r5,zero,r5
   2e6ec:	39c0005c 	xori	r7,r7,1
   2e6f0:	003fe706 	br	2e690 <__divsi3+0xc>
   2e6f4:	0109c83a 	sub	r4,zero,r4
   2e6f8:	01c00044 	movi	r7,1
   2e6fc:	003fe306 	br	2e68c <__divsi3+0x8>
   2e700:	00c00044 	movi	r3,1
   2e704:	003fee06 	br	2e6c0 <__divsi3+0x3c>

0002e708 <__modsi3>:
   2e708:	20001716 	blt	r4,zero,2e768 <__modsi3+0x60>
   2e70c:	000f883a 	mov	r7,zero
   2e710:	2005883a 	mov	r2,r4
   2e714:	28001216 	blt	r5,zero,2e760 <__modsi3+0x58>
   2e718:	2900162e 	bgeu	r5,r4,2e774 <__modsi3+0x6c>
   2e71c:	01800804 	movi	r6,32
   2e720:	00c00044 	movi	r3,1
   2e724:	00000106 	br	2e72c <__modsi3+0x24>
   2e728:	30000a26 	beq	r6,zero,2e754 <__modsi3+0x4c>
   2e72c:	294b883a 	add	r5,r5,r5
   2e730:	31bfffc4 	addi	r6,r6,-1
   2e734:	18c7883a 	add	r3,r3,r3
   2e738:	293ffb36 	bltu	r5,r4,2e728 <__modsi3+0x20>
   2e73c:	18000526 	beq	r3,zero,2e754 <__modsi3+0x4c>
   2e740:	1806d07a 	srli	r3,r3,1
   2e744:	11400136 	bltu	r2,r5,2e74c <__modsi3+0x44>
   2e748:	1145c83a 	sub	r2,r2,r5
   2e74c:	280ad07a 	srli	r5,r5,1
   2e750:	183ffb1e 	bne	r3,zero,2e740 <__modsi3+0x38>
   2e754:	38000126 	beq	r7,zero,2e75c <__modsi3+0x54>
   2e758:	0085c83a 	sub	r2,zero,r2
   2e75c:	f800283a 	ret
   2e760:	014bc83a 	sub	r5,zero,r5
   2e764:	003fec06 	br	2e718 <__modsi3+0x10>
   2e768:	0109c83a 	sub	r4,zero,r4
   2e76c:	01c00044 	movi	r7,1
   2e770:	003fe706 	br	2e710 <__modsi3+0x8>
   2e774:	00c00044 	movi	r3,1
   2e778:	003ff106 	br	2e740 <__modsi3+0x38>

0002e77c <__udivsi3>:
   2e77c:	200d883a 	mov	r6,r4
   2e780:	2900152e 	bgeu	r5,r4,2e7d8 <__udivsi3+0x5c>
   2e784:	28001416 	blt	r5,zero,2e7d8 <__udivsi3+0x5c>
   2e788:	00800804 	movi	r2,32
   2e78c:	00c00044 	movi	r3,1
   2e790:	00000206 	br	2e79c <__udivsi3+0x20>
   2e794:	10000e26 	beq	r2,zero,2e7d0 <__udivsi3+0x54>
   2e798:	28000516 	blt	r5,zero,2e7b0 <__udivsi3+0x34>
   2e79c:	294b883a 	add	r5,r5,r5
   2e7a0:	10bfffc4 	addi	r2,r2,-1
   2e7a4:	18c7883a 	add	r3,r3,r3
   2e7a8:	293ffa36 	bltu	r5,r4,2e794 <__udivsi3+0x18>
   2e7ac:	18000826 	beq	r3,zero,2e7d0 <__udivsi3+0x54>
   2e7b0:	0005883a 	mov	r2,zero
   2e7b4:	31400236 	bltu	r6,r5,2e7c0 <__udivsi3+0x44>
   2e7b8:	314dc83a 	sub	r6,r6,r5
   2e7bc:	10c4b03a 	or	r2,r2,r3
   2e7c0:	1806d07a 	srli	r3,r3,1
   2e7c4:	280ad07a 	srli	r5,r5,1
   2e7c8:	183ffa1e 	bne	r3,zero,2e7b4 <__udivsi3+0x38>
   2e7cc:	f800283a 	ret
   2e7d0:	0005883a 	mov	r2,zero
   2e7d4:	f800283a 	ret
   2e7d8:	00c00044 	movi	r3,1
   2e7dc:	003ff406 	br	2e7b0 <__udivsi3+0x34>

0002e7e0 <__umodsi3>:
   2e7e0:	2005883a 	mov	r2,r4
   2e7e4:	2900122e 	bgeu	r5,r4,2e830 <__umodsi3+0x50>
   2e7e8:	28001116 	blt	r5,zero,2e830 <__umodsi3+0x50>
   2e7ec:	01800804 	movi	r6,32
   2e7f0:	00c00044 	movi	r3,1
   2e7f4:	00000206 	br	2e800 <__umodsi3+0x20>
   2e7f8:	30000c26 	beq	r6,zero,2e82c <__umodsi3+0x4c>
   2e7fc:	28000516 	blt	r5,zero,2e814 <__umodsi3+0x34>
   2e800:	294b883a 	add	r5,r5,r5
   2e804:	31bfffc4 	addi	r6,r6,-1
   2e808:	18c7883a 	add	r3,r3,r3
   2e80c:	293ffa36 	bltu	r5,r4,2e7f8 <__umodsi3+0x18>
   2e810:	18000626 	beq	r3,zero,2e82c <__umodsi3+0x4c>
   2e814:	1806d07a 	srli	r3,r3,1
   2e818:	11400136 	bltu	r2,r5,2e820 <__umodsi3+0x40>
   2e81c:	1145c83a 	sub	r2,r2,r5
   2e820:	280ad07a 	srli	r5,r5,1
   2e824:	183ffb1e 	bne	r3,zero,2e814 <__umodsi3+0x34>
   2e828:	f800283a 	ret
   2e82c:	f800283a 	ret
   2e830:	00c00044 	movi	r3,1
   2e834:	003ff706 	br	2e814 <__umodsi3+0x34>

0002e838 <__adddf3>:
   2e838:	02c00434 	movhi	r11,16
   2e83c:	5affffc4 	addi	r11,r11,-1
   2e840:	2806d7fa 	srli	r3,r5,31
   2e844:	2ad4703a 	and	r10,r5,r11
   2e848:	3ad2703a 	and	r9,r7,r11
   2e84c:	3804d53a 	srli	r2,r7,20
   2e850:	3018d77a 	srli	r12,r6,29
   2e854:	280ad53a 	srli	r5,r5,20
   2e858:	501490fa 	slli	r10,r10,3
   2e85c:	2010d77a 	srli	r8,r4,29
   2e860:	481290fa 	slli	r9,r9,3
   2e864:	380ed7fa 	srli	r7,r7,31
   2e868:	defffb04 	addi	sp,sp,-20
   2e86c:	dc800215 	stw	r18,8(sp)
   2e870:	dc400115 	stw	r17,4(sp)
   2e874:	dc000015 	stw	r16,0(sp)
   2e878:	dfc00415 	stw	ra,16(sp)
   2e87c:	dcc00315 	stw	r19,12(sp)
   2e880:	1c803fcc 	andi	r18,r3,255
   2e884:	2c01ffcc 	andi	r16,r5,2047
   2e888:	5210b03a 	or	r8,r10,r8
   2e88c:	202290fa 	slli	r17,r4,3
   2e890:	1081ffcc 	andi	r2,r2,2047
   2e894:	4b12b03a 	or	r9,r9,r12
   2e898:	300c90fa 	slli	r6,r6,3
   2e89c:	91c07526 	beq	r18,r7,2ea74 <__adddf3+0x23c>
   2e8a0:	8087c83a 	sub	r3,r16,r2
   2e8a4:	00c0ab0e 	bge	zero,r3,2eb54 <__adddf3+0x31c>
   2e8a8:	10002a1e 	bne	r2,zero,2e954 <__adddf3+0x11c>
   2e8ac:	4984b03a 	or	r2,r9,r6
   2e8b0:	1000961e 	bne	r2,zero,2eb0c <__adddf3+0x2d4>
   2e8b4:	888001cc 	andi	r2,r17,7
   2e8b8:	10000726 	beq	r2,zero,2e8d8 <__adddf3+0xa0>
   2e8bc:	888003cc 	andi	r2,r17,15
   2e8c0:	00c00104 	movi	r3,4
   2e8c4:	10c00426 	beq	r2,r3,2e8d8 <__adddf3+0xa0>
   2e8c8:	88c7883a 	add	r3,r17,r3
   2e8cc:	1c63803a 	cmpltu	r17,r3,r17
   2e8d0:	4451883a 	add	r8,r8,r17
   2e8d4:	1823883a 	mov	r17,r3
   2e8d8:	4080202c 	andhi	r2,r8,128
   2e8dc:	10005926 	beq	r2,zero,2ea44 <__adddf3+0x20c>
   2e8e0:	84000044 	addi	r16,r16,1
   2e8e4:	0081ffc4 	movi	r2,2047
   2e8e8:	8080ba26 	beq	r16,r2,2ebd4 <__adddf3+0x39c>
   2e8ec:	00bfe034 	movhi	r2,65408
   2e8f0:	10bfffc4 	addi	r2,r2,-1
   2e8f4:	4090703a 	and	r8,r8,r2
   2e8f8:	4004977a 	slli	r2,r8,29
   2e8fc:	4010927a 	slli	r8,r8,9
   2e900:	8822d0fa 	srli	r17,r17,3
   2e904:	8401ffcc 	andi	r16,r16,2047
   2e908:	4010d33a 	srli	r8,r8,12
   2e90c:	9007883a 	mov	r3,r18
   2e910:	1444b03a 	or	r2,r2,r17
   2e914:	8401ffcc 	andi	r16,r16,2047
   2e918:	8020953a 	slli	r16,r16,20
   2e91c:	18c03fcc 	andi	r3,r3,255
   2e920:	01000434 	movhi	r4,16
   2e924:	213fffc4 	addi	r4,r4,-1
   2e928:	180697fa 	slli	r3,r3,31
   2e92c:	4110703a 	and	r8,r8,r4
   2e930:	4410b03a 	or	r8,r8,r16
   2e934:	40c6b03a 	or	r3,r8,r3
   2e938:	dfc00417 	ldw	ra,16(sp)
   2e93c:	dcc00317 	ldw	r19,12(sp)
   2e940:	dc800217 	ldw	r18,8(sp)
   2e944:	dc400117 	ldw	r17,4(sp)
   2e948:	dc000017 	ldw	r16,0(sp)
   2e94c:	dec00504 	addi	sp,sp,20
   2e950:	f800283a 	ret
   2e954:	0081ffc4 	movi	r2,2047
   2e958:	80bfd626 	beq	r16,r2,2e8b4 <__adddf3+0x7c>
   2e95c:	4a402034 	orhi	r9,r9,128
   2e960:	00800e04 	movi	r2,56
   2e964:	10c09f16 	blt	r2,r3,2ebe4 <__adddf3+0x3ac>
   2e968:	008007c4 	movi	r2,31
   2e96c:	10c0c216 	blt	r2,r3,2ec78 <__adddf3+0x440>
   2e970:	00800804 	movi	r2,32
   2e974:	10c5c83a 	sub	r2,r2,r3
   2e978:	488a983a 	sll	r5,r9,r2
   2e97c:	30c8d83a 	srl	r4,r6,r3
   2e980:	3084983a 	sll	r2,r6,r2
   2e984:	48c6d83a 	srl	r3,r9,r3
   2e988:	290cb03a 	or	r6,r5,r4
   2e98c:	1004c03a 	cmpne	r2,r2,zero
   2e990:	308cb03a 	or	r6,r6,r2
   2e994:	898dc83a 	sub	r6,r17,r6
   2e998:	89a3803a 	cmpltu	r17,r17,r6
   2e99c:	40d1c83a 	sub	r8,r8,r3
   2e9a0:	4451c83a 	sub	r8,r8,r17
   2e9a4:	3023883a 	mov	r17,r6
   2e9a8:	4080202c 	andhi	r2,r8,128
   2e9ac:	10002326 	beq	r2,zero,2ea3c <__adddf3+0x204>
   2e9b0:	04c02034 	movhi	r19,128
   2e9b4:	9cffffc4 	addi	r19,r19,-1
   2e9b8:	44e6703a 	and	r19,r8,r19
   2e9bc:	98007626 	beq	r19,zero,2eb98 <__adddf3+0x360>
   2e9c0:	9809883a 	mov	r4,r19
   2e9c4:	0030e3c0 	call	30e3c <__clzsi2>
   2e9c8:	10fffe04 	addi	r3,r2,-8
   2e9cc:	010007c4 	movi	r4,31
   2e9d0:	20c07716 	blt	r4,r3,2ebb0 <__adddf3+0x378>
   2e9d4:	00800804 	movi	r2,32
   2e9d8:	10c5c83a 	sub	r2,r2,r3
   2e9dc:	8884d83a 	srl	r2,r17,r2
   2e9e0:	98d0983a 	sll	r8,r19,r3
   2e9e4:	88e2983a 	sll	r17,r17,r3
   2e9e8:	1204b03a 	or	r2,r2,r8
   2e9ec:	1c007416 	blt	r3,r16,2ebc0 <__adddf3+0x388>
   2e9f0:	1c21c83a 	sub	r16,r3,r16
   2e9f4:	82000044 	addi	r8,r16,1
   2e9f8:	00c007c4 	movi	r3,31
   2e9fc:	1a009116 	blt	r3,r8,2ec44 <__adddf3+0x40c>
   2ea00:	00c00804 	movi	r3,32
   2ea04:	1a07c83a 	sub	r3,r3,r8
   2ea08:	8a08d83a 	srl	r4,r17,r8
   2ea0c:	88e2983a 	sll	r17,r17,r3
   2ea10:	10c6983a 	sll	r3,r2,r3
   2ea14:	1210d83a 	srl	r8,r2,r8
   2ea18:	8804c03a 	cmpne	r2,r17,zero
   2ea1c:	1906b03a 	or	r3,r3,r4
   2ea20:	18a2b03a 	or	r17,r3,r2
   2ea24:	0021883a 	mov	r16,zero
   2ea28:	003fa206 	br	2e8b4 <__adddf3+0x7c>
   2ea2c:	1890b03a 	or	r8,r3,r2
   2ea30:	40017d26 	beq	r8,zero,2f028 <__adddf3+0x7f0>
   2ea34:	1011883a 	mov	r8,r2
   2ea38:	1823883a 	mov	r17,r3
   2ea3c:	888001cc 	andi	r2,r17,7
   2ea40:	103f9e1e 	bne	r2,zero,2e8bc <__adddf3+0x84>
   2ea44:	4004977a 	slli	r2,r8,29
   2ea48:	8822d0fa 	srli	r17,r17,3
   2ea4c:	4010d0fa 	srli	r8,r8,3
   2ea50:	9007883a 	mov	r3,r18
   2ea54:	1444b03a 	or	r2,r2,r17
   2ea58:	0101ffc4 	movi	r4,2047
   2ea5c:	81002426 	beq	r16,r4,2eaf0 <__adddf3+0x2b8>
   2ea60:	8120703a 	and	r16,r16,r4
   2ea64:	01000434 	movhi	r4,16
   2ea68:	213fffc4 	addi	r4,r4,-1
   2ea6c:	4110703a 	and	r8,r8,r4
   2ea70:	003fa806 	br	2e914 <__adddf3+0xdc>
   2ea74:	8089c83a 	sub	r4,r16,r2
   2ea78:	01005e0e 	bge	zero,r4,2ebf4 <__adddf3+0x3bc>
   2ea7c:	10002b26 	beq	r2,zero,2eb2c <__adddf3+0x2f4>
   2ea80:	0081ffc4 	movi	r2,2047
   2ea84:	80bf8b26 	beq	r16,r2,2e8b4 <__adddf3+0x7c>
   2ea88:	4a402034 	orhi	r9,r9,128
   2ea8c:	00800e04 	movi	r2,56
   2ea90:	1100a40e 	bge	r2,r4,2ed24 <__adddf3+0x4ec>
   2ea94:	498cb03a 	or	r6,r9,r6
   2ea98:	300ac03a 	cmpne	r5,r6,zero
   2ea9c:	0013883a 	mov	r9,zero
   2eaa0:	2c4b883a 	add	r5,r5,r17
   2eaa4:	2c63803a 	cmpltu	r17,r5,r17
   2eaa8:	4a11883a 	add	r8,r9,r8
   2eaac:	8a11883a 	add	r8,r17,r8
   2eab0:	2823883a 	mov	r17,r5
   2eab4:	4080202c 	andhi	r2,r8,128
   2eab8:	103fe026 	beq	r2,zero,2ea3c <__adddf3+0x204>
   2eabc:	84000044 	addi	r16,r16,1
   2eac0:	0081ffc4 	movi	r2,2047
   2eac4:	8080d226 	beq	r16,r2,2ee10 <__adddf3+0x5d8>
   2eac8:	00bfe034 	movhi	r2,65408
   2eacc:	10bfffc4 	addi	r2,r2,-1
   2ead0:	4090703a 	and	r8,r8,r2
   2ead4:	880ad07a 	srli	r5,r17,1
   2ead8:	400897fa 	slli	r4,r8,31
   2eadc:	88c0004c 	andi	r3,r17,1
   2eae0:	28e2b03a 	or	r17,r5,r3
   2eae4:	4010d07a 	srli	r8,r8,1
   2eae8:	2462b03a 	or	r17,r4,r17
   2eaec:	003f7106 	br	2e8b4 <__adddf3+0x7c>
   2eaf0:	4088b03a 	or	r4,r8,r2
   2eaf4:	20014526 	beq	r4,zero,2f00c <__adddf3+0x7d4>
   2eaf8:	01000434 	movhi	r4,16
   2eafc:	42000234 	orhi	r8,r8,8
   2eb00:	213fffc4 	addi	r4,r4,-1
   2eb04:	4110703a 	and	r8,r8,r4
   2eb08:	003f8206 	br	2e914 <__adddf3+0xdc>
   2eb0c:	18ffffc4 	addi	r3,r3,-1
   2eb10:	1800491e 	bne	r3,zero,2ec38 <__adddf3+0x400>
   2eb14:	898bc83a 	sub	r5,r17,r6
   2eb18:	8963803a 	cmpltu	r17,r17,r5
   2eb1c:	4251c83a 	sub	r8,r8,r9
   2eb20:	4451c83a 	sub	r8,r8,r17
   2eb24:	2823883a 	mov	r17,r5
   2eb28:	003f9f06 	br	2e9a8 <__adddf3+0x170>
   2eb2c:	4984b03a 	or	r2,r9,r6
   2eb30:	103f6026 	beq	r2,zero,2e8b4 <__adddf3+0x7c>
   2eb34:	213fffc4 	addi	r4,r4,-1
   2eb38:	2000931e 	bne	r4,zero,2ed88 <__adddf3+0x550>
   2eb3c:	898d883a 	add	r6,r17,r6
   2eb40:	3463803a 	cmpltu	r17,r6,r17
   2eb44:	4251883a 	add	r8,r8,r9
   2eb48:	8a11883a 	add	r8,r17,r8
   2eb4c:	3023883a 	mov	r17,r6
   2eb50:	003fd806 	br	2eab4 <__adddf3+0x27c>
   2eb54:	1800541e 	bne	r3,zero,2eca8 <__adddf3+0x470>
   2eb58:	80800044 	addi	r2,r16,1
   2eb5c:	1081ffcc 	andi	r2,r2,2047
   2eb60:	00c00044 	movi	r3,1
   2eb64:	1880a00e 	bge	r3,r2,2ede8 <__adddf3+0x5b0>
   2eb68:	8989c83a 	sub	r4,r17,r6
   2eb6c:	8905803a 	cmpltu	r2,r17,r4
   2eb70:	4267c83a 	sub	r19,r8,r9
   2eb74:	98a7c83a 	sub	r19,r19,r2
   2eb78:	9880202c 	andhi	r2,r19,128
   2eb7c:	10006326 	beq	r2,zero,2ed0c <__adddf3+0x4d4>
   2eb80:	3463c83a 	sub	r17,r6,r17
   2eb84:	4a07c83a 	sub	r3,r9,r8
   2eb88:	344d803a 	cmpltu	r6,r6,r17
   2eb8c:	19a7c83a 	sub	r19,r3,r6
   2eb90:	3825883a 	mov	r18,r7
   2eb94:	983f8a1e 	bne	r19,zero,2e9c0 <__adddf3+0x188>
   2eb98:	8809883a 	mov	r4,r17
   2eb9c:	0030e3c0 	call	30e3c <__clzsi2>
   2eba0:	10800804 	addi	r2,r2,32
   2eba4:	10fffe04 	addi	r3,r2,-8
   2eba8:	010007c4 	movi	r4,31
   2ebac:	20ff890e 	bge	r4,r3,2e9d4 <__adddf3+0x19c>
   2ebb0:	10bff604 	addi	r2,r2,-40
   2ebb4:	8884983a 	sll	r2,r17,r2
   2ebb8:	0023883a 	mov	r17,zero
   2ebbc:	1c3f8c0e 	bge	r3,r16,2e9f0 <__adddf3+0x1b8>
   2ebc0:	023fe034 	movhi	r8,65408
   2ebc4:	423fffc4 	addi	r8,r8,-1
   2ebc8:	80e1c83a 	sub	r16,r16,r3
   2ebcc:	1210703a 	and	r8,r2,r8
   2ebd0:	003f3806 	br	2e8b4 <__adddf3+0x7c>
   2ebd4:	9007883a 	mov	r3,r18
   2ebd8:	0011883a 	mov	r8,zero
   2ebdc:	0005883a 	mov	r2,zero
   2ebe0:	003f4c06 	br	2e914 <__adddf3+0xdc>
   2ebe4:	498cb03a 	or	r6,r9,r6
   2ebe8:	300cc03a 	cmpne	r6,r6,zero
   2ebec:	0007883a 	mov	r3,zero
   2ebf0:	003f6806 	br	2e994 <__adddf3+0x15c>
   2ebf4:	20009c1e 	bne	r4,zero,2ee68 <__adddf3+0x630>
   2ebf8:	80800044 	addi	r2,r16,1
   2ebfc:	1141ffcc 	andi	r5,r2,2047
   2ec00:	01000044 	movi	r4,1
   2ec04:	2140670e 	bge	r4,r5,2eda4 <__adddf3+0x56c>
   2ec08:	0101ffc4 	movi	r4,2047
   2ec0c:	11007f26 	beq	r2,r4,2ee0c <__adddf3+0x5d4>
   2ec10:	898d883a 	add	r6,r17,r6
   2ec14:	4247883a 	add	r3,r8,r9
   2ec18:	3451803a 	cmpltu	r8,r6,r17
   2ec1c:	40d1883a 	add	r8,r8,r3
   2ec20:	402297fa 	slli	r17,r8,31
   2ec24:	300cd07a 	srli	r6,r6,1
   2ec28:	4010d07a 	srli	r8,r8,1
   2ec2c:	1021883a 	mov	r16,r2
   2ec30:	89a2b03a 	or	r17,r17,r6
   2ec34:	003f1f06 	br	2e8b4 <__adddf3+0x7c>
   2ec38:	0081ffc4 	movi	r2,2047
   2ec3c:	80bf481e 	bne	r16,r2,2e960 <__adddf3+0x128>
   2ec40:	003f1c06 	br	2e8b4 <__adddf3+0x7c>
   2ec44:	843ff844 	addi	r16,r16,-31
   2ec48:	01000804 	movi	r4,32
   2ec4c:	1406d83a 	srl	r3,r2,r16
   2ec50:	41005026 	beq	r8,r4,2ed94 <__adddf3+0x55c>
   2ec54:	01001004 	movi	r4,64
   2ec58:	2211c83a 	sub	r8,r4,r8
   2ec5c:	1204983a 	sll	r2,r2,r8
   2ec60:	88a2b03a 	or	r17,r17,r2
   2ec64:	8822c03a 	cmpne	r17,r17,zero
   2ec68:	1c62b03a 	or	r17,r3,r17
   2ec6c:	0011883a 	mov	r8,zero
   2ec70:	0021883a 	mov	r16,zero
   2ec74:	003f7106 	br	2ea3c <__adddf3+0x204>
   2ec78:	193ff804 	addi	r4,r3,-32
   2ec7c:	00800804 	movi	r2,32
   2ec80:	4908d83a 	srl	r4,r9,r4
   2ec84:	18804526 	beq	r3,r2,2ed9c <__adddf3+0x564>
   2ec88:	00801004 	movi	r2,64
   2ec8c:	10c5c83a 	sub	r2,r2,r3
   2ec90:	4886983a 	sll	r3,r9,r2
   2ec94:	198cb03a 	or	r6,r3,r6
   2ec98:	300cc03a 	cmpne	r6,r6,zero
   2ec9c:	218cb03a 	or	r6,r4,r6
   2eca0:	0007883a 	mov	r3,zero
   2eca4:	003f3b06 	br	2e994 <__adddf3+0x15c>
   2eca8:	80002a26 	beq	r16,zero,2ed54 <__adddf3+0x51c>
   2ecac:	0101ffc4 	movi	r4,2047
   2ecb0:	11006826 	beq	r2,r4,2ee54 <__adddf3+0x61c>
   2ecb4:	00c7c83a 	sub	r3,zero,r3
   2ecb8:	42002034 	orhi	r8,r8,128
   2ecbc:	01000e04 	movi	r4,56
   2ecc0:	20c07c16 	blt	r4,r3,2eeb4 <__adddf3+0x67c>
   2ecc4:	010007c4 	movi	r4,31
   2ecc8:	20c0da16 	blt	r4,r3,2f034 <__adddf3+0x7fc>
   2eccc:	01000804 	movi	r4,32
   2ecd0:	20c9c83a 	sub	r4,r4,r3
   2ecd4:	4114983a 	sll	r10,r8,r4
   2ecd8:	88cad83a 	srl	r5,r17,r3
   2ecdc:	8908983a 	sll	r4,r17,r4
   2ece0:	40c6d83a 	srl	r3,r8,r3
   2ece4:	5162b03a 	or	r17,r10,r5
   2ece8:	2008c03a 	cmpne	r4,r4,zero
   2ecec:	8922b03a 	or	r17,r17,r4
   2ecf0:	3463c83a 	sub	r17,r6,r17
   2ecf4:	48c7c83a 	sub	r3,r9,r3
   2ecf8:	344d803a 	cmpltu	r6,r6,r17
   2ecfc:	1991c83a 	sub	r8,r3,r6
   2ed00:	1021883a 	mov	r16,r2
   2ed04:	3825883a 	mov	r18,r7
   2ed08:	003f2706 	br	2e9a8 <__adddf3+0x170>
   2ed0c:	24d0b03a 	or	r8,r4,r19
   2ed10:	40001b1e 	bne	r8,zero,2ed80 <__adddf3+0x548>
   2ed14:	0005883a 	mov	r2,zero
   2ed18:	0007883a 	mov	r3,zero
   2ed1c:	0021883a 	mov	r16,zero
   2ed20:	003f4d06 	br	2ea58 <__adddf3+0x220>
   2ed24:	008007c4 	movi	r2,31
   2ed28:	11003c16 	blt	r2,r4,2ee1c <__adddf3+0x5e4>
   2ed2c:	00800804 	movi	r2,32
   2ed30:	1105c83a 	sub	r2,r2,r4
   2ed34:	488e983a 	sll	r7,r9,r2
   2ed38:	310ad83a 	srl	r5,r6,r4
   2ed3c:	3084983a 	sll	r2,r6,r2
   2ed40:	4912d83a 	srl	r9,r9,r4
   2ed44:	394ab03a 	or	r5,r7,r5
   2ed48:	1004c03a 	cmpne	r2,r2,zero
   2ed4c:	288ab03a 	or	r5,r5,r2
   2ed50:	003f5306 	br	2eaa0 <__adddf3+0x268>
   2ed54:	4448b03a 	or	r4,r8,r17
   2ed58:	20003e26 	beq	r4,zero,2ee54 <__adddf3+0x61c>
   2ed5c:	00c6303a 	nor	r3,zero,r3
   2ed60:	18003a1e 	bne	r3,zero,2ee4c <__adddf3+0x614>
   2ed64:	3463c83a 	sub	r17,r6,r17
   2ed68:	4a07c83a 	sub	r3,r9,r8
   2ed6c:	344d803a 	cmpltu	r6,r6,r17
   2ed70:	1991c83a 	sub	r8,r3,r6
   2ed74:	1021883a 	mov	r16,r2
   2ed78:	3825883a 	mov	r18,r7
   2ed7c:	003f0a06 	br	2e9a8 <__adddf3+0x170>
   2ed80:	2023883a 	mov	r17,r4
   2ed84:	003f0d06 	br	2e9bc <__adddf3+0x184>
   2ed88:	0081ffc4 	movi	r2,2047
   2ed8c:	80bf3f1e 	bne	r16,r2,2ea8c <__adddf3+0x254>
   2ed90:	003ec806 	br	2e8b4 <__adddf3+0x7c>
   2ed94:	0005883a 	mov	r2,zero
   2ed98:	003fb106 	br	2ec60 <__adddf3+0x428>
   2ed9c:	0007883a 	mov	r3,zero
   2eda0:	003fbc06 	br	2ec94 <__adddf3+0x45c>
   2eda4:	4444b03a 	or	r2,r8,r17
   2eda8:	8000871e 	bne	r16,zero,2efc8 <__adddf3+0x790>
   2edac:	1000ba26 	beq	r2,zero,2f098 <__adddf3+0x860>
   2edb0:	4984b03a 	or	r2,r9,r6
   2edb4:	103ebf26 	beq	r2,zero,2e8b4 <__adddf3+0x7c>
   2edb8:	8985883a 	add	r2,r17,r6
   2edbc:	4247883a 	add	r3,r8,r9
   2edc0:	1451803a 	cmpltu	r8,r2,r17
   2edc4:	40d1883a 	add	r8,r8,r3
   2edc8:	40c0202c 	andhi	r3,r8,128
   2edcc:	1023883a 	mov	r17,r2
   2edd0:	183f1a26 	beq	r3,zero,2ea3c <__adddf3+0x204>
   2edd4:	00bfe034 	movhi	r2,65408
   2edd8:	10bfffc4 	addi	r2,r2,-1
   2eddc:	2021883a 	mov	r16,r4
   2ede0:	4090703a 	and	r8,r8,r2
   2ede4:	003eb306 	br	2e8b4 <__adddf3+0x7c>
   2ede8:	4444b03a 	or	r2,r8,r17
   2edec:	8000291e 	bne	r16,zero,2ee94 <__adddf3+0x65c>
   2edf0:	10004b1e 	bne	r2,zero,2ef20 <__adddf3+0x6e8>
   2edf4:	4990b03a 	or	r8,r9,r6
   2edf8:	40008b26 	beq	r8,zero,2f028 <__adddf3+0x7f0>
   2edfc:	4811883a 	mov	r8,r9
   2ee00:	3023883a 	mov	r17,r6
   2ee04:	3825883a 	mov	r18,r7
   2ee08:	003eaa06 	br	2e8b4 <__adddf3+0x7c>
   2ee0c:	1021883a 	mov	r16,r2
   2ee10:	0011883a 	mov	r8,zero
   2ee14:	0005883a 	mov	r2,zero
   2ee18:	003f0f06 	br	2ea58 <__adddf3+0x220>
   2ee1c:	217ff804 	addi	r5,r4,-32
   2ee20:	00800804 	movi	r2,32
   2ee24:	494ad83a 	srl	r5,r9,r5
   2ee28:	20807d26 	beq	r4,r2,2f020 <__adddf3+0x7e8>
   2ee2c:	00801004 	movi	r2,64
   2ee30:	1109c83a 	sub	r4,r2,r4
   2ee34:	4912983a 	sll	r9,r9,r4
   2ee38:	498cb03a 	or	r6,r9,r6
   2ee3c:	300cc03a 	cmpne	r6,r6,zero
   2ee40:	298ab03a 	or	r5,r5,r6
   2ee44:	0013883a 	mov	r9,zero
   2ee48:	003f1506 	br	2eaa0 <__adddf3+0x268>
   2ee4c:	0101ffc4 	movi	r4,2047
   2ee50:	113f9a1e 	bne	r2,r4,2ecbc <__adddf3+0x484>
   2ee54:	4811883a 	mov	r8,r9
   2ee58:	3023883a 	mov	r17,r6
   2ee5c:	1021883a 	mov	r16,r2
   2ee60:	3825883a 	mov	r18,r7
   2ee64:	003e9306 	br	2e8b4 <__adddf3+0x7c>
   2ee68:	8000161e 	bne	r16,zero,2eec4 <__adddf3+0x68c>
   2ee6c:	444ab03a 	or	r5,r8,r17
   2ee70:	28005126 	beq	r5,zero,2efb8 <__adddf3+0x780>
   2ee74:	0108303a 	nor	r4,zero,r4
   2ee78:	20004d1e 	bne	r4,zero,2efb0 <__adddf3+0x778>
   2ee7c:	89a3883a 	add	r17,r17,r6
   2ee80:	4253883a 	add	r9,r8,r9
   2ee84:	898d803a 	cmpltu	r6,r17,r6
   2ee88:	3251883a 	add	r8,r6,r9
   2ee8c:	1021883a 	mov	r16,r2
   2ee90:	003f0806 	br	2eab4 <__adddf3+0x27c>
   2ee94:	1000301e 	bne	r2,zero,2ef58 <__adddf3+0x720>
   2ee98:	4984b03a 	or	r2,r9,r6
   2ee9c:	10007126 	beq	r2,zero,2f064 <__adddf3+0x82c>
   2eea0:	4811883a 	mov	r8,r9
   2eea4:	3023883a 	mov	r17,r6
   2eea8:	3825883a 	mov	r18,r7
   2eeac:	0401ffc4 	movi	r16,2047
   2eeb0:	003e8006 	br	2e8b4 <__adddf3+0x7c>
   2eeb4:	4462b03a 	or	r17,r8,r17
   2eeb8:	8822c03a 	cmpne	r17,r17,zero
   2eebc:	0007883a 	mov	r3,zero
   2eec0:	003f8b06 	br	2ecf0 <__adddf3+0x4b8>
   2eec4:	0141ffc4 	movi	r5,2047
   2eec8:	11403b26 	beq	r2,r5,2efb8 <__adddf3+0x780>
   2eecc:	0109c83a 	sub	r4,zero,r4
   2eed0:	42002034 	orhi	r8,r8,128
   2eed4:	01400e04 	movi	r5,56
   2eed8:	29006716 	blt	r5,r4,2f078 <__adddf3+0x840>
   2eedc:	014007c4 	movi	r5,31
   2eee0:	29007016 	blt	r5,r4,2f0a4 <__adddf3+0x86c>
   2eee4:	01400804 	movi	r5,32
   2eee8:	290bc83a 	sub	r5,r5,r4
   2eeec:	4154983a 	sll	r10,r8,r5
   2eef0:	890ed83a 	srl	r7,r17,r4
   2eef4:	894a983a 	sll	r5,r17,r5
   2eef8:	4108d83a 	srl	r4,r8,r4
   2eefc:	51e2b03a 	or	r17,r10,r7
   2ef00:	280ac03a 	cmpne	r5,r5,zero
   2ef04:	8962b03a 	or	r17,r17,r5
   2ef08:	89a3883a 	add	r17,r17,r6
   2ef0c:	2253883a 	add	r9,r4,r9
   2ef10:	898d803a 	cmpltu	r6,r17,r6
   2ef14:	3251883a 	add	r8,r6,r9
   2ef18:	1021883a 	mov	r16,r2
   2ef1c:	003ee506 	br	2eab4 <__adddf3+0x27c>
   2ef20:	4984b03a 	or	r2,r9,r6
   2ef24:	103e6326 	beq	r2,zero,2e8b4 <__adddf3+0x7c>
   2ef28:	8987c83a 	sub	r3,r17,r6
   2ef2c:	88c9803a 	cmpltu	r4,r17,r3
   2ef30:	4245c83a 	sub	r2,r8,r9
   2ef34:	1105c83a 	sub	r2,r2,r4
   2ef38:	1100202c 	andhi	r4,r2,128
   2ef3c:	203ebb26 	beq	r4,zero,2ea2c <__adddf3+0x1f4>
   2ef40:	3463c83a 	sub	r17,r6,r17
   2ef44:	4a07c83a 	sub	r3,r9,r8
   2ef48:	344d803a 	cmpltu	r6,r6,r17
   2ef4c:	1991c83a 	sub	r8,r3,r6
   2ef50:	3825883a 	mov	r18,r7
   2ef54:	003e5706 	br	2e8b4 <__adddf3+0x7c>
   2ef58:	4984b03a 	or	r2,r9,r6
   2ef5c:	10002e26 	beq	r2,zero,2f018 <__adddf3+0x7e0>
   2ef60:	4004d0fa 	srli	r2,r8,3
   2ef64:	8822d0fa 	srli	r17,r17,3
   2ef68:	4010977a 	slli	r8,r8,29
   2ef6c:	10c0022c 	andhi	r3,r2,8
   2ef70:	4462b03a 	or	r17,r8,r17
   2ef74:	18000826 	beq	r3,zero,2ef98 <__adddf3+0x760>
   2ef78:	4808d0fa 	srli	r4,r9,3
   2ef7c:	20c0022c 	andhi	r3,r4,8
   2ef80:	1800051e 	bne	r3,zero,2ef98 <__adddf3+0x760>
   2ef84:	300cd0fa 	srli	r6,r6,3
   2ef88:	4806977a 	slli	r3,r9,29
   2ef8c:	2005883a 	mov	r2,r4
   2ef90:	3825883a 	mov	r18,r7
   2ef94:	19a2b03a 	or	r17,r3,r6
   2ef98:	8810d77a 	srli	r8,r17,29
   2ef9c:	100490fa 	slli	r2,r2,3
   2efa0:	882290fa 	slli	r17,r17,3
   2efa4:	0401ffc4 	movi	r16,2047
   2efa8:	4090b03a 	or	r8,r8,r2
   2efac:	003e4106 	br	2e8b4 <__adddf3+0x7c>
   2efb0:	0141ffc4 	movi	r5,2047
   2efb4:	117fc71e 	bne	r2,r5,2eed4 <__adddf3+0x69c>
   2efb8:	4811883a 	mov	r8,r9
   2efbc:	3023883a 	mov	r17,r6
   2efc0:	1021883a 	mov	r16,r2
   2efc4:	003e3b06 	br	2e8b4 <__adddf3+0x7c>
   2efc8:	10002f26 	beq	r2,zero,2f088 <__adddf3+0x850>
   2efcc:	4984b03a 	or	r2,r9,r6
   2efd0:	10001126 	beq	r2,zero,2f018 <__adddf3+0x7e0>
   2efd4:	4004d0fa 	srli	r2,r8,3
   2efd8:	8822d0fa 	srli	r17,r17,3
   2efdc:	4010977a 	slli	r8,r8,29
   2efe0:	10c0022c 	andhi	r3,r2,8
   2efe4:	4462b03a 	or	r17,r8,r17
   2efe8:	183feb26 	beq	r3,zero,2ef98 <__adddf3+0x760>
   2efec:	4808d0fa 	srli	r4,r9,3
   2eff0:	20c0022c 	andhi	r3,r4,8
   2eff4:	183fe81e 	bne	r3,zero,2ef98 <__adddf3+0x760>
   2eff8:	300cd0fa 	srli	r6,r6,3
   2effc:	4806977a 	slli	r3,r9,29
   2f000:	2005883a 	mov	r2,r4
   2f004:	19a2b03a 	or	r17,r3,r6
   2f008:	003fe306 	br	2ef98 <__adddf3+0x760>
   2f00c:	0011883a 	mov	r8,zero
   2f010:	0005883a 	mov	r2,zero
   2f014:	003e3f06 	br	2e914 <__adddf3+0xdc>
   2f018:	0401ffc4 	movi	r16,2047
   2f01c:	003e2506 	br	2e8b4 <__adddf3+0x7c>
   2f020:	0013883a 	mov	r9,zero
   2f024:	003f8406 	br	2ee38 <__adddf3+0x600>
   2f028:	0005883a 	mov	r2,zero
   2f02c:	0007883a 	mov	r3,zero
   2f030:	003e8906 	br	2ea58 <__adddf3+0x220>
   2f034:	197ff804 	addi	r5,r3,-32
   2f038:	01000804 	movi	r4,32
   2f03c:	414ad83a 	srl	r5,r8,r5
   2f040:	19002426 	beq	r3,r4,2f0d4 <__adddf3+0x89c>
   2f044:	01001004 	movi	r4,64
   2f048:	20c7c83a 	sub	r3,r4,r3
   2f04c:	40c6983a 	sll	r3,r8,r3
   2f050:	1c46b03a 	or	r3,r3,r17
   2f054:	1806c03a 	cmpne	r3,r3,zero
   2f058:	28e2b03a 	or	r17,r5,r3
   2f05c:	0007883a 	mov	r3,zero
   2f060:	003f2306 	br	2ecf0 <__adddf3+0x4b8>
   2f064:	0007883a 	mov	r3,zero
   2f068:	5811883a 	mov	r8,r11
   2f06c:	00bfffc4 	movi	r2,-1
   2f070:	0401ffc4 	movi	r16,2047
   2f074:	003e7806 	br	2ea58 <__adddf3+0x220>
   2f078:	4462b03a 	or	r17,r8,r17
   2f07c:	8822c03a 	cmpne	r17,r17,zero
   2f080:	0009883a 	mov	r4,zero
   2f084:	003fa006 	br	2ef08 <__adddf3+0x6d0>
   2f088:	4811883a 	mov	r8,r9
   2f08c:	3023883a 	mov	r17,r6
   2f090:	0401ffc4 	movi	r16,2047
   2f094:	003e0706 	br	2e8b4 <__adddf3+0x7c>
   2f098:	4811883a 	mov	r8,r9
   2f09c:	3023883a 	mov	r17,r6
   2f0a0:	003e0406 	br	2e8b4 <__adddf3+0x7c>
   2f0a4:	21fff804 	addi	r7,r4,-32
   2f0a8:	01400804 	movi	r5,32
   2f0ac:	41ced83a 	srl	r7,r8,r7
   2f0b0:	21400a26 	beq	r4,r5,2f0dc <__adddf3+0x8a4>
   2f0b4:	01401004 	movi	r5,64
   2f0b8:	2909c83a 	sub	r4,r5,r4
   2f0bc:	4108983a 	sll	r4,r8,r4
   2f0c0:	2448b03a 	or	r4,r4,r17
   2f0c4:	2008c03a 	cmpne	r4,r4,zero
   2f0c8:	3922b03a 	or	r17,r7,r4
   2f0cc:	0009883a 	mov	r4,zero
   2f0d0:	003f8d06 	br	2ef08 <__adddf3+0x6d0>
   2f0d4:	0007883a 	mov	r3,zero
   2f0d8:	003fdd06 	br	2f050 <__adddf3+0x818>
   2f0dc:	0009883a 	mov	r4,zero
   2f0e0:	003ff706 	br	2f0c0 <__adddf3+0x888>

0002f0e4 <__divdf3>:
   2f0e4:	defff204 	addi	sp,sp,-56
   2f0e8:	dd400915 	stw	r21,36(sp)
   2f0ec:	282ad53a 	srli	r21,r5,20
   2f0f0:	dd000815 	stw	r20,32(sp)
   2f0f4:	2828d7fa 	srli	r20,r5,31
   2f0f8:	dc000415 	stw	r16,16(sp)
   2f0fc:	04000434 	movhi	r16,16
   2f100:	df000c15 	stw	fp,48(sp)
   2f104:	843fffc4 	addi	r16,r16,-1
   2f108:	dfc00d15 	stw	ra,52(sp)
   2f10c:	ddc00b15 	stw	r23,44(sp)
   2f110:	dd800a15 	stw	r22,40(sp)
   2f114:	dcc00715 	stw	r19,28(sp)
   2f118:	dc800615 	stw	r18,24(sp)
   2f11c:	dc400515 	stw	r17,20(sp)
   2f120:	ad41ffcc 	andi	r21,r21,2047
   2f124:	2c20703a 	and	r16,r5,r16
   2f128:	a7003fcc 	andi	fp,r20,255
   2f12c:	a8006126 	beq	r21,zero,2f2b4 <__divdf3+0x1d0>
   2f130:	0081ffc4 	movi	r2,2047
   2f134:	2025883a 	mov	r18,r4
   2f138:	a8803726 	beq	r21,r2,2f218 <__divdf3+0x134>
   2f13c:	80800434 	orhi	r2,r16,16
   2f140:	100490fa 	slli	r2,r2,3
   2f144:	2020d77a 	srli	r16,r4,29
   2f148:	202490fa 	slli	r18,r4,3
   2f14c:	ad7f0044 	addi	r21,r21,-1023
   2f150:	80a0b03a 	or	r16,r16,r2
   2f154:	0027883a 	mov	r19,zero
   2f158:	0013883a 	mov	r9,zero
   2f15c:	3804d53a 	srli	r2,r7,20
   2f160:	382cd7fa 	srli	r22,r7,31
   2f164:	04400434 	movhi	r17,16
   2f168:	8c7fffc4 	addi	r17,r17,-1
   2f16c:	1081ffcc 	andi	r2,r2,2047
   2f170:	3011883a 	mov	r8,r6
   2f174:	3c62703a 	and	r17,r7,r17
   2f178:	b5c03fcc 	andi	r23,r22,255
   2f17c:	10006c26 	beq	r2,zero,2f330 <__divdf3+0x24c>
   2f180:	00c1ffc4 	movi	r3,2047
   2f184:	10c06426 	beq	r2,r3,2f318 <__divdf3+0x234>
   2f188:	88c00434 	orhi	r3,r17,16
   2f18c:	180690fa 	slli	r3,r3,3
   2f190:	3022d77a 	srli	r17,r6,29
   2f194:	301090fa 	slli	r8,r6,3
   2f198:	10bf0044 	addi	r2,r2,-1023
   2f19c:	88e2b03a 	or	r17,r17,r3
   2f1a0:	000f883a 	mov	r7,zero
   2f1a4:	a58cf03a 	xor	r6,r20,r22
   2f1a8:	3cc8b03a 	or	r4,r7,r19
   2f1ac:	a8abc83a 	sub	r21,r21,r2
   2f1b0:	008003c4 	movi	r2,15
   2f1b4:	3007883a 	mov	r3,r6
   2f1b8:	34c03fcc 	andi	r19,r6,255
   2f1bc:	11009036 	bltu	r2,r4,2f400 <__divdf3+0x31c>
   2f1c0:	200890ba 	slli	r4,r4,2
   2f1c4:	008000f4 	movhi	r2,3
   2f1c8:	10bc7604 	addi	r2,r2,-3624
   2f1cc:	2089883a 	add	r4,r4,r2
   2f1d0:	20800017 	ldw	r2,0(r4)
   2f1d4:	1000683a 	jmp	r2
   2f1d8:	0002f400 	call	2f40 <__alt_mem_MEMOIRE_ONCHIP-0x1d0c0>
   2f1dc:	0002f250 	cmplti	zero,zero,3017
   2f1e0:	0002f3f0 	cmpltui	zero,zero,3023
   2f1e4:	0002f244 	movi	zero,3017
   2f1e8:	0002f3f0 	cmpltui	zero,zero,3023
   2f1ec:	0002f3c4 	movi	zero,3023
   2f1f0:	0002f3f0 	cmpltui	zero,zero,3023
   2f1f4:	0002f244 	movi	zero,3017
   2f1f8:	0002f250 	cmplti	zero,zero,3017
   2f1fc:	0002f250 	cmplti	zero,zero,3017
   2f200:	0002f3c4 	movi	zero,3023
   2f204:	0002f244 	movi	zero,3017
   2f208:	0002f234 	movhi	zero,3016
   2f20c:	0002f234 	movhi	zero,3016
   2f210:	0002f234 	movhi	zero,3016
   2f214:	0002f6e4 	muli	zero,zero,3035
   2f218:	2404b03a 	or	r2,r4,r16
   2f21c:	1000661e 	bne	r2,zero,2f3b8 <__divdf3+0x2d4>
   2f220:	04c00204 	movi	r19,8
   2f224:	0021883a 	mov	r16,zero
   2f228:	0025883a 	mov	r18,zero
   2f22c:	02400084 	movi	r9,2
   2f230:	003fca06 	br	2f15c <__divdf3+0x78>
   2f234:	8023883a 	mov	r17,r16
   2f238:	9011883a 	mov	r8,r18
   2f23c:	e02f883a 	mov	r23,fp
   2f240:	480f883a 	mov	r7,r9
   2f244:	00800084 	movi	r2,2
   2f248:	3881311e 	bne	r7,r2,2f710 <__divdf3+0x62c>
   2f24c:	b827883a 	mov	r19,r23
   2f250:	98c0004c 	andi	r3,r19,1
   2f254:	0081ffc4 	movi	r2,2047
   2f258:	000b883a 	mov	r5,zero
   2f25c:	0025883a 	mov	r18,zero
   2f260:	1004953a 	slli	r2,r2,20
   2f264:	18c03fcc 	andi	r3,r3,255
   2f268:	04400434 	movhi	r17,16
   2f26c:	8c7fffc4 	addi	r17,r17,-1
   2f270:	180697fa 	slli	r3,r3,31
   2f274:	2c4a703a 	and	r5,r5,r17
   2f278:	288ab03a 	or	r5,r5,r2
   2f27c:	28c6b03a 	or	r3,r5,r3
   2f280:	9005883a 	mov	r2,r18
   2f284:	dfc00d17 	ldw	ra,52(sp)
   2f288:	df000c17 	ldw	fp,48(sp)
   2f28c:	ddc00b17 	ldw	r23,44(sp)
   2f290:	dd800a17 	ldw	r22,40(sp)
   2f294:	dd400917 	ldw	r21,36(sp)
   2f298:	dd000817 	ldw	r20,32(sp)
   2f29c:	dcc00717 	ldw	r19,28(sp)
   2f2a0:	dc800617 	ldw	r18,24(sp)
   2f2a4:	dc400517 	ldw	r17,20(sp)
   2f2a8:	dc000417 	ldw	r16,16(sp)
   2f2ac:	dec00e04 	addi	sp,sp,56
   2f2b0:	f800283a 	ret
   2f2b4:	2404b03a 	or	r2,r4,r16
   2f2b8:	2027883a 	mov	r19,r4
   2f2bc:	10003926 	beq	r2,zero,2f3a4 <__divdf3+0x2c0>
   2f2c0:	80012e26 	beq	r16,zero,2f77c <__divdf3+0x698>
   2f2c4:	8009883a 	mov	r4,r16
   2f2c8:	d9800315 	stw	r6,12(sp)
   2f2cc:	d9c00215 	stw	r7,8(sp)
   2f2d0:	0030e3c0 	call	30e3c <__clzsi2>
   2f2d4:	d9800317 	ldw	r6,12(sp)
   2f2d8:	d9c00217 	ldw	r7,8(sp)
   2f2dc:	113ffd44 	addi	r4,r2,-11
   2f2e0:	00c00704 	movi	r3,28
   2f2e4:	19012116 	blt	r3,r4,2f76c <__divdf3+0x688>
   2f2e8:	00c00744 	movi	r3,29
   2f2ec:	147ffe04 	addi	r17,r2,-8
   2f2f0:	1907c83a 	sub	r3,r3,r4
   2f2f4:	8460983a 	sll	r16,r16,r17
   2f2f8:	98c6d83a 	srl	r3,r19,r3
   2f2fc:	9c64983a 	sll	r18,r19,r17
   2f300:	1c20b03a 	or	r16,r3,r16
   2f304:	1080fcc4 	addi	r2,r2,1011
   2f308:	00abc83a 	sub	r21,zero,r2
   2f30c:	0027883a 	mov	r19,zero
   2f310:	0013883a 	mov	r9,zero
   2f314:	003f9106 	br	2f15c <__divdf3+0x78>
   2f318:	3446b03a 	or	r3,r6,r17
   2f31c:	18001f1e 	bne	r3,zero,2f39c <__divdf3+0x2b8>
   2f320:	0023883a 	mov	r17,zero
   2f324:	0011883a 	mov	r8,zero
   2f328:	01c00084 	movi	r7,2
   2f32c:	003f9d06 	br	2f1a4 <__divdf3+0xc0>
   2f330:	3446b03a 	or	r3,r6,r17
   2f334:	18001526 	beq	r3,zero,2f38c <__divdf3+0x2a8>
   2f338:	88011b26 	beq	r17,zero,2f7a8 <__divdf3+0x6c4>
   2f33c:	8809883a 	mov	r4,r17
   2f340:	d9800315 	stw	r6,12(sp)
   2f344:	da400115 	stw	r9,4(sp)
   2f348:	0030e3c0 	call	30e3c <__clzsi2>
   2f34c:	d9800317 	ldw	r6,12(sp)
   2f350:	da400117 	ldw	r9,4(sp)
   2f354:	113ffd44 	addi	r4,r2,-11
   2f358:	00c00704 	movi	r3,28
   2f35c:	19010e16 	blt	r3,r4,2f798 <__divdf3+0x6b4>
   2f360:	00c00744 	movi	r3,29
   2f364:	123ffe04 	addi	r8,r2,-8
   2f368:	1907c83a 	sub	r3,r3,r4
   2f36c:	8a22983a 	sll	r17,r17,r8
   2f370:	30c6d83a 	srl	r3,r6,r3
   2f374:	3210983a 	sll	r8,r6,r8
   2f378:	1c62b03a 	or	r17,r3,r17
   2f37c:	1080fcc4 	addi	r2,r2,1011
   2f380:	0085c83a 	sub	r2,zero,r2
   2f384:	000f883a 	mov	r7,zero
   2f388:	003f8606 	br	2f1a4 <__divdf3+0xc0>
   2f38c:	0023883a 	mov	r17,zero
   2f390:	0011883a 	mov	r8,zero
   2f394:	01c00044 	movi	r7,1
   2f398:	003f8206 	br	2f1a4 <__divdf3+0xc0>
   2f39c:	01c000c4 	movi	r7,3
   2f3a0:	003f8006 	br	2f1a4 <__divdf3+0xc0>
   2f3a4:	04c00104 	movi	r19,4
   2f3a8:	0021883a 	mov	r16,zero
   2f3ac:	0025883a 	mov	r18,zero
   2f3b0:	02400044 	movi	r9,1
   2f3b4:	003f6906 	br	2f15c <__divdf3+0x78>
   2f3b8:	04c00304 	movi	r19,12
   2f3bc:	024000c4 	movi	r9,3
   2f3c0:	003f6606 	br	2f15c <__divdf3+0x78>
   2f3c4:	01400434 	movhi	r5,16
   2f3c8:	0007883a 	mov	r3,zero
   2f3cc:	297fffc4 	addi	r5,r5,-1
   2f3d0:	04bfffc4 	movi	r18,-1
   2f3d4:	0081ffc4 	movi	r2,2047
   2f3d8:	003fa106 	br	2f260 <__divdf3+0x17c>
   2f3dc:	00c00044 	movi	r3,1
   2f3e0:	1887c83a 	sub	r3,r3,r2
   2f3e4:	01000e04 	movi	r4,56
   2f3e8:	20c1210e 	bge	r4,r3,2f870 <__divdf3+0x78c>
   2f3ec:	98c0004c 	andi	r3,r19,1
   2f3f0:	0005883a 	mov	r2,zero
   2f3f4:	000b883a 	mov	r5,zero
   2f3f8:	0025883a 	mov	r18,zero
   2f3fc:	003f9806 	br	2f260 <__divdf3+0x17c>
   2f400:	8c00fd36 	bltu	r17,r16,2f7f8 <__divdf3+0x714>
   2f404:	8440fb26 	beq	r16,r17,2f7f4 <__divdf3+0x710>
   2f408:	8007883a 	mov	r3,r16
   2f40c:	ad7fffc4 	addi	r21,r21,-1
   2f410:	0021883a 	mov	r16,zero
   2f414:	4004d63a 	srli	r2,r8,24
   2f418:	8822923a 	slli	r17,r17,8
   2f41c:	1809883a 	mov	r4,r3
   2f420:	402c923a 	slli	r22,r8,8
   2f424:	88b8b03a 	or	fp,r17,r2
   2f428:	e028d43a 	srli	r20,fp,16
   2f42c:	d8c00015 	stw	r3,0(sp)
   2f430:	e5ffffcc 	andi	r23,fp,65535
   2f434:	a00b883a 	mov	r5,r20
   2f438:	002e77c0 	call	2e77c <__udivsi3>
   2f43c:	d8c00017 	ldw	r3,0(sp)
   2f440:	a00b883a 	mov	r5,r20
   2f444:	d8800315 	stw	r2,12(sp)
   2f448:	1809883a 	mov	r4,r3
   2f44c:	002e7e00 	call	2e7e0 <__umodsi3>
   2f450:	d9800317 	ldw	r6,12(sp)
   2f454:	1006943a 	slli	r3,r2,16
   2f458:	9004d43a 	srli	r2,r18,16
   2f45c:	b9a3383a 	mul	r17,r23,r6
   2f460:	10c4b03a 	or	r2,r2,r3
   2f464:	1440062e 	bgeu	r2,r17,2f480 <__divdf3+0x39c>
   2f468:	1705883a 	add	r2,r2,fp
   2f46c:	30ffffc4 	addi	r3,r6,-1
   2f470:	1700ee36 	bltu	r2,fp,2f82c <__divdf3+0x748>
   2f474:	1440ed2e 	bgeu	r2,r17,2f82c <__divdf3+0x748>
   2f478:	31bfff84 	addi	r6,r6,-2
   2f47c:	1705883a 	add	r2,r2,fp
   2f480:	1463c83a 	sub	r17,r2,r17
   2f484:	a00b883a 	mov	r5,r20
   2f488:	8809883a 	mov	r4,r17
   2f48c:	d9800315 	stw	r6,12(sp)
   2f490:	002e77c0 	call	2e77c <__udivsi3>
   2f494:	a00b883a 	mov	r5,r20
   2f498:	8809883a 	mov	r4,r17
   2f49c:	d8800215 	stw	r2,8(sp)
   2f4a0:	002e7e00 	call	2e7e0 <__umodsi3>
   2f4a4:	d9c00217 	ldw	r7,8(sp)
   2f4a8:	1004943a 	slli	r2,r2,16
   2f4ac:	94bfffcc 	andi	r18,r18,65535
   2f4b0:	b9d1383a 	mul	r8,r23,r7
   2f4b4:	90a4b03a 	or	r18,r18,r2
   2f4b8:	d9800317 	ldw	r6,12(sp)
   2f4bc:	9200062e 	bgeu	r18,r8,2f4d8 <__divdf3+0x3f4>
   2f4c0:	9725883a 	add	r18,r18,fp
   2f4c4:	38bfffc4 	addi	r2,r7,-1
   2f4c8:	9700d636 	bltu	r18,fp,2f824 <__divdf3+0x740>
   2f4cc:	9200d52e 	bgeu	r18,r8,2f824 <__divdf3+0x740>
   2f4d0:	39ffff84 	addi	r7,r7,-2
   2f4d4:	9725883a 	add	r18,r18,fp
   2f4d8:	3004943a 	slli	r2,r6,16
   2f4dc:	b012d43a 	srli	r9,r22,16
   2f4e0:	b1bfffcc 	andi	r6,r22,65535
   2f4e4:	11e2b03a 	or	r17,r2,r7
   2f4e8:	8806d43a 	srli	r3,r17,16
   2f4ec:	893fffcc 	andi	r4,r17,65535
   2f4f0:	218b383a 	mul	r5,r4,r6
   2f4f4:	30c5383a 	mul	r2,r6,r3
   2f4f8:	2249383a 	mul	r4,r4,r9
   2f4fc:	280ed43a 	srli	r7,r5,16
   2f500:	9225c83a 	sub	r18,r18,r8
   2f504:	2089883a 	add	r4,r4,r2
   2f508:	3909883a 	add	r4,r7,r4
   2f50c:	1a47383a 	mul	r3,r3,r9
   2f510:	2080022e 	bgeu	r4,r2,2f51c <__divdf3+0x438>
   2f514:	00800074 	movhi	r2,1
   2f518:	1887883a 	add	r3,r3,r2
   2f51c:	2004d43a 	srli	r2,r4,16
   2f520:	2008943a 	slli	r4,r4,16
   2f524:	297fffcc 	andi	r5,r5,65535
   2f528:	10c7883a 	add	r3,r2,r3
   2f52c:	2149883a 	add	r4,r4,r5
   2f530:	90c0a536 	bltu	r18,r3,2f7c8 <__divdf3+0x6e4>
   2f534:	90c0bf26 	beq	r18,r3,2f834 <__divdf3+0x750>
   2f538:	90c7c83a 	sub	r3,r18,r3
   2f53c:	810fc83a 	sub	r7,r16,r4
   2f540:	81e5803a 	cmpltu	r18,r16,r7
   2f544:	1ca5c83a 	sub	r18,r3,r18
   2f548:	e480c126 	beq	fp,r18,2f850 <__divdf3+0x76c>
   2f54c:	a00b883a 	mov	r5,r20
   2f550:	9009883a 	mov	r4,r18
   2f554:	d9800315 	stw	r6,12(sp)
   2f558:	d9c00215 	stw	r7,8(sp)
   2f55c:	da400115 	stw	r9,4(sp)
   2f560:	002e77c0 	call	2e77c <__udivsi3>
   2f564:	a00b883a 	mov	r5,r20
   2f568:	9009883a 	mov	r4,r18
   2f56c:	d8800015 	stw	r2,0(sp)
   2f570:	002e7e00 	call	2e7e0 <__umodsi3>
   2f574:	d9c00217 	ldw	r7,8(sp)
   2f578:	da000017 	ldw	r8,0(sp)
   2f57c:	1006943a 	slli	r3,r2,16
   2f580:	3804d43a 	srli	r2,r7,16
   2f584:	ba21383a 	mul	r16,r23,r8
   2f588:	d9800317 	ldw	r6,12(sp)
   2f58c:	10c4b03a 	or	r2,r2,r3
   2f590:	da400117 	ldw	r9,4(sp)
   2f594:	1400062e 	bgeu	r2,r16,2f5b0 <__divdf3+0x4cc>
   2f598:	1705883a 	add	r2,r2,fp
   2f59c:	40ffffc4 	addi	r3,r8,-1
   2f5a0:	1700ad36 	bltu	r2,fp,2f858 <__divdf3+0x774>
   2f5a4:	1400ac2e 	bgeu	r2,r16,2f858 <__divdf3+0x774>
   2f5a8:	423fff84 	addi	r8,r8,-2
   2f5ac:	1705883a 	add	r2,r2,fp
   2f5b0:	1421c83a 	sub	r16,r2,r16
   2f5b4:	a00b883a 	mov	r5,r20
   2f5b8:	8009883a 	mov	r4,r16
   2f5bc:	d9800315 	stw	r6,12(sp)
   2f5c0:	d9c00215 	stw	r7,8(sp)
   2f5c4:	da000015 	stw	r8,0(sp)
   2f5c8:	da400115 	stw	r9,4(sp)
   2f5cc:	002e77c0 	call	2e77c <__udivsi3>
   2f5d0:	8009883a 	mov	r4,r16
   2f5d4:	a00b883a 	mov	r5,r20
   2f5d8:	1025883a 	mov	r18,r2
   2f5dc:	002e7e00 	call	2e7e0 <__umodsi3>
   2f5e0:	d9c00217 	ldw	r7,8(sp)
   2f5e4:	1004943a 	slli	r2,r2,16
   2f5e8:	bcaf383a 	mul	r23,r23,r18
   2f5ec:	393fffcc 	andi	r4,r7,65535
   2f5f0:	2088b03a 	or	r4,r4,r2
   2f5f4:	d9800317 	ldw	r6,12(sp)
   2f5f8:	da000017 	ldw	r8,0(sp)
   2f5fc:	da400117 	ldw	r9,4(sp)
   2f600:	25c0062e 	bgeu	r4,r23,2f61c <__divdf3+0x538>
   2f604:	2709883a 	add	r4,r4,fp
   2f608:	90bfffc4 	addi	r2,r18,-1
   2f60c:	27009436 	bltu	r4,fp,2f860 <__divdf3+0x77c>
   2f610:	25c0932e 	bgeu	r4,r23,2f860 <__divdf3+0x77c>
   2f614:	94bfff84 	addi	r18,r18,-2
   2f618:	2709883a 	add	r4,r4,fp
   2f61c:	4004943a 	slli	r2,r8,16
   2f620:	25efc83a 	sub	r23,r4,r23
   2f624:	1490b03a 	or	r8,r2,r18
   2f628:	4008d43a 	srli	r4,r8,16
   2f62c:	40ffffcc 	andi	r3,r8,65535
   2f630:	30c5383a 	mul	r2,r6,r3
   2f634:	1a47383a 	mul	r3,r3,r9
   2f638:	310d383a 	mul	r6,r6,r4
   2f63c:	100ad43a 	srli	r5,r2,16
   2f640:	4913383a 	mul	r9,r9,r4
   2f644:	1987883a 	add	r3,r3,r6
   2f648:	28c7883a 	add	r3,r5,r3
   2f64c:	1980022e 	bgeu	r3,r6,2f658 <__divdf3+0x574>
   2f650:	01000074 	movhi	r4,1
   2f654:	4913883a 	add	r9,r9,r4
   2f658:	1808d43a 	srli	r4,r3,16
   2f65c:	1806943a 	slli	r3,r3,16
   2f660:	10bfffcc 	andi	r2,r2,65535
   2f664:	2253883a 	add	r9,r4,r9
   2f668:	1887883a 	add	r3,r3,r2
   2f66c:	ba403836 	bltu	r23,r9,2f750 <__divdf3+0x66c>
   2f670:	ba403626 	beq	r23,r9,2f74c <__divdf3+0x668>
   2f674:	42000054 	ori	r8,r8,1
   2f678:	a880ffc4 	addi	r2,r21,1023
   2f67c:	00bf570e 	bge	zero,r2,2f3dc <__divdf3+0x2f8>
   2f680:	40c001cc 	andi	r3,r8,7
   2f684:	18000726 	beq	r3,zero,2f6a4 <__divdf3+0x5c0>
   2f688:	40c003cc 	andi	r3,r8,15
   2f68c:	01000104 	movi	r4,4
   2f690:	19000426 	beq	r3,r4,2f6a4 <__divdf3+0x5c0>
   2f694:	4107883a 	add	r3,r8,r4
   2f698:	1a11803a 	cmpltu	r8,r3,r8
   2f69c:	8a23883a 	add	r17,r17,r8
   2f6a0:	1811883a 	mov	r8,r3
   2f6a4:	88c0402c 	andhi	r3,r17,256
   2f6a8:	18000426 	beq	r3,zero,2f6bc <__divdf3+0x5d8>
   2f6ac:	00ffc034 	movhi	r3,65280
   2f6b0:	18ffffc4 	addi	r3,r3,-1
   2f6b4:	a8810004 	addi	r2,r21,1024
   2f6b8:	88e2703a 	and	r17,r17,r3
   2f6bc:	00c1ff84 	movi	r3,2046
   2f6c0:	18bee316 	blt	r3,r2,2f250 <__divdf3+0x16c>
   2f6c4:	8824977a 	slli	r18,r17,29
   2f6c8:	4010d0fa 	srli	r8,r8,3
   2f6cc:	8822927a 	slli	r17,r17,9
   2f6d0:	1081ffcc 	andi	r2,r2,2047
   2f6d4:	9224b03a 	or	r18,r18,r8
   2f6d8:	880ad33a 	srli	r5,r17,12
   2f6dc:	98c0004c 	andi	r3,r19,1
   2f6e0:	003edf06 	br	2f260 <__divdf3+0x17c>
   2f6e4:	8080022c 	andhi	r2,r16,8
   2f6e8:	10001226 	beq	r2,zero,2f734 <__divdf3+0x650>
   2f6ec:	8880022c 	andhi	r2,r17,8
   2f6f0:	1000101e 	bne	r2,zero,2f734 <__divdf3+0x650>
   2f6f4:	00800434 	movhi	r2,16
   2f6f8:	89400234 	orhi	r5,r17,8
   2f6fc:	10bfffc4 	addi	r2,r2,-1
   2f700:	b007883a 	mov	r3,r22
   2f704:	288a703a 	and	r5,r5,r2
   2f708:	4025883a 	mov	r18,r8
   2f70c:	003f3106 	br	2f3d4 <__divdf3+0x2f0>
   2f710:	008000c4 	movi	r2,3
   2f714:	3880a626 	beq	r7,r2,2f9b0 <__divdf3+0x8cc>
   2f718:	00800044 	movi	r2,1
   2f71c:	3880521e 	bne	r7,r2,2f868 <__divdf3+0x784>
   2f720:	b807883a 	mov	r3,r23
   2f724:	0005883a 	mov	r2,zero
   2f728:	000b883a 	mov	r5,zero
   2f72c:	0025883a 	mov	r18,zero
   2f730:	003ecb06 	br	2f260 <__divdf3+0x17c>
   2f734:	00800434 	movhi	r2,16
   2f738:	81400234 	orhi	r5,r16,8
   2f73c:	10bfffc4 	addi	r2,r2,-1
   2f740:	a007883a 	mov	r3,r20
   2f744:	288a703a 	and	r5,r5,r2
   2f748:	003f2206 	br	2f3d4 <__divdf3+0x2f0>
   2f74c:	183fca26 	beq	r3,zero,2f678 <__divdf3+0x594>
   2f750:	e5ef883a 	add	r23,fp,r23
   2f754:	40bfffc4 	addi	r2,r8,-1
   2f758:	bf00392e 	bgeu	r23,fp,2f840 <__divdf3+0x75c>
   2f75c:	1011883a 	mov	r8,r2
   2f760:	ba7fc41e 	bne	r23,r9,2f674 <__divdf3+0x590>
   2f764:	b0ffc31e 	bne	r22,r3,2f674 <__divdf3+0x590>
   2f768:	003fc306 	br	2f678 <__divdf3+0x594>
   2f76c:	143ff604 	addi	r16,r2,-40
   2f770:	9c20983a 	sll	r16,r19,r16
   2f774:	0025883a 	mov	r18,zero
   2f778:	003ee206 	br	2f304 <__divdf3+0x220>
   2f77c:	d9800315 	stw	r6,12(sp)
   2f780:	d9c00215 	stw	r7,8(sp)
   2f784:	0030e3c0 	call	30e3c <__clzsi2>
   2f788:	10800804 	addi	r2,r2,32
   2f78c:	d9c00217 	ldw	r7,8(sp)
   2f790:	d9800317 	ldw	r6,12(sp)
   2f794:	003ed106 	br	2f2dc <__divdf3+0x1f8>
   2f798:	147ff604 	addi	r17,r2,-40
   2f79c:	3462983a 	sll	r17,r6,r17
   2f7a0:	0011883a 	mov	r8,zero
   2f7a4:	003ef506 	br	2f37c <__divdf3+0x298>
   2f7a8:	3009883a 	mov	r4,r6
   2f7ac:	d9800315 	stw	r6,12(sp)
   2f7b0:	da400115 	stw	r9,4(sp)
   2f7b4:	0030e3c0 	call	30e3c <__clzsi2>
   2f7b8:	10800804 	addi	r2,r2,32
   2f7bc:	da400117 	ldw	r9,4(sp)
   2f7c0:	d9800317 	ldw	r6,12(sp)
   2f7c4:	003ee306 	br	2f354 <__divdf3+0x270>
   2f7c8:	85a1883a 	add	r16,r16,r22
   2f7cc:	8585803a 	cmpltu	r2,r16,r22
   2f7d0:	1705883a 	add	r2,r2,fp
   2f7d4:	14a5883a 	add	r18,r2,r18
   2f7d8:	88bfffc4 	addi	r2,r17,-1
   2f7dc:	e4800c2e 	bgeu	fp,r18,2f810 <__divdf3+0x72c>
   2f7e0:	90c03e36 	bltu	r18,r3,2f8dc <__divdf3+0x7f8>
   2f7e4:	1c806926 	beq	r3,r18,2f98c <__divdf3+0x8a8>
   2f7e8:	90c7c83a 	sub	r3,r18,r3
   2f7ec:	1023883a 	mov	r17,r2
   2f7f0:	003f5206 	br	2f53c <__divdf3+0x458>
   2f7f4:	923f0436 	bltu	r18,r8,2f408 <__divdf3+0x324>
   2f7f8:	800897fa 	slli	r4,r16,31
   2f7fc:	9004d07a 	srli	r2,r18,1
   2f800:	8006d07a 	srli	r3,r16,1
   2f804:	902097fa 	slli	r16,r18,31
   2f808:	20a4b03a 	or	r18,r4,r2
   2f80c:	003f0106 	br	2f414 <__divdf3+0x330>
   2f810:	e4bff51e 	bne	fp,r18,2f7e8 <__divdf3+0x704>
   2f814:	85bff22e 	bgeu	r16,r22,2f7e0 <__divdf3+0x6fc>
   2f818:	e0c7c83a 	sub	r3,fp,r3
   2f81c:	1023883a 	mov	r17,r2
   2f820:	003f4606 	br	2f53c <__divdf3+0x458>
   2f824:	100f883a 	mov	r7,r2
   2f828:	003f2b06 	br	2f4d8 <__divdf3+0x3f4>
   2f82c:	180d883a 	mov	r6,r3
   2f830:	003f1306 	br	2f480 <__divdf3+0x39c>
   2f834:	813fe436 	bltu	r16,r4,2f7c8 <__divdf3+0x6e4>
   2f838:	0007883a 	mov	r3,zero
   2f83c:	003f3f06 	br	2f53c <__divdf3+0x458>
   2f840:	ba402c36 	bltu	r23,r9,2f8f4 <__divdf3+0x810>
   2f844:	4dc05426 	beq	r9,r23,2f998 <__divdf3+0x8b4>
   2f848:	1011883a 	mov	r8,r2
   2f84c:	003f8906 	br	2f674 <__divdf3+0x590>
   2f850:	023fffc4 	movi	r8,-1
   2f854:	003f8806 	br	2f678 <__divdf3+0x594>
   2f858:	1811883a 	mov	r8,r3
   2f85c:	003f5406 	br	2f5b0 <__divdf3+0x4cc>
   2f860:	1025883a 	mov	r18,r2
   2f864:	003f6d06 	br	2f61c <__divdf3+0x538>
   2f868:	b827883a 	mov	r19,r23
   2f86c:	003f8206 	br	2f678 <__divdf3+0x594>
   2f870:	010007c4 	movi	r4,31
   2f874:	20c02616 	blt	r4,r3,2f910 <__divdf3+0x82c>
   2f878:	00800804 	movi	r2,32
   2f87c:	10c5c83a 	sub	r2,r2,r3
   2f880:	888a983a 	sll	r5,r17,r2
   2f884:	40c8d83a 	srl	r4,r8,r3
   2f888:	4084983a 	sll	r2,r8,r2
   2f88c:	88e2d83a 	srl	r17,r17,r3
   2f890:	2906b03a 	or	r3,r5,r4
   2f894:	1004c03a 	cmpne	r2,r2,zero
   2f898:	1886b03a 	or	r3,r3,r2
   2f89c:	188001cc 	andi	r2,r3,7
   2f8a0:	10000726 	beq	r2,zero,2f8c0 <__divdf3+0x7dc>
   2f8a4:	188003cc 	andi	r2,r3,15
   2f8a8:	01000104 	movi	r4,4
   2f8ac:	11000426 	beq	r2,r4,2f8c0 <__divdf3+0x7dc>
   2f8b0:	1805883a 	mov	r2,r3
   2f8b4:	10c00104 	addi	r3,r2,4
   2f8b8:	1885803a 	cmpltu	r2,r3,r2
   2f8bc:	88a3883a 	add	r17,r17,r2
   2f8c0:	8880202c 	andhi	r2,r17,128
   2f8c4:	10002726 	beq	r2,zero,2f964 <__divdf3+0x880>
   2f8c8:	98c0004c 	andi	r3,r19,1
   2f8cc:	00800044 	movi	r2,1
   2f8d0:	000b883a 	mov	r5,zero
   2f8d4:	0025883a 	mov	r18,zero
   2f8d8:	003e6106 	br	2f260 <__divdf3+0x17c>
   2f8dc:	85a1883a 	add	r16,r16,r22
   2f8e0:	8585803a 	cmpltu	r2,r16,r22
   2f8e4:	1705883a 	add	r2,r2,fp
   2f8e8:	14a5883a 	add	r18,r2,r18
   2f8ec:	8c7fff84 	addi	r17,r17,-2
   2f8f0:	003f1106 	br	2f538 <__divdf3+0x454>
   2f8f4:	b589883a 	add	r4,r22,r22
   2f8f8:	25ad803a 	cmpltu	r22,r4,r22
   2f8fc:	b739883a 	add	fp,r22,fp
   2f900:	40bfff84 	addi	r2,r8,-2
   2f904:	bf2f883a 	add	r23,r23,fp
   2f908:	202d883a 	mov	r22,r4
   2f90c:	003f9306 	br	2f75c <__divdf3+0x678>
   2f910:	013ff844 	movi	r4,-31
   2f914:	2085c83a 	sub	r2,r4,r2
   2f918:	8888d83a 	srl	r4,r17,r2
   2f91c:	00800804 	movi	r2,32
   2f920:	18802126 	beq	r3,r2,2f9a8 <__divdf3+0x8c4>
   2f924:	00801004 	movi	r2,64
   2f928:	10c5c83a 	sub	r2,r2,r3
   2f92c:	8884983a 	sll	r2,r17,r2
   2f930:	1204b03a 	or	r2,r2,r8
   2f934:	1004c03a 	cmpne	r2,r2,zero
   2f938:	2084b03a 	or	r2,r4,r2
   2f93c:	144001cc 	andi	r17,r2,7
   2f940:	88000d1e 	bne	r17,zero,2f978 <__divdf3+0x894>
   2f944:	000b883a 	mov	r5,zero
   2f948:	1024d0fa 	srli	r18,r2,3
   2f94c:	98c0004c 	andi	r3,r19,1
   2f950:	0005883a 	mov	r2,zero
   2f954:	9464b03a 	or	r18,r18,r17
   2f958:	003e4106 	br	2f260 <__divdf3+0x17c>
   2f95c:	1007883a 	mov	r3,r2
   2f960:	0023883a 	mov	r17,zero
   2f964:	880a927a 	slli	r5,r17,9
   2f968:	1805883a 	mov	r2,r3
   2f96c:	8822977a 	slli	r17,r17,29
   2f970:	280ad33a 	srli	r5,r5,12
   2f974:	003ff406 	br	2f948 <__divdf3+0x864>
   2f978:	10c003cc 	andi	r3,r2,15
   2f97c:	01000104 	movi	r4,4
   2f980:	193ff626 	beq	r3,r4,2f95c <__divdf3+0x878>
   2f984:	0023883a 	mov	r17,zero
   2f988:	003fca06 	br	2f8b4 <__divdf3+0x7d0>
   2f98c:	813fd336 	bltu	r16,r4,2f8dc <__divdf3+0x7f8>
   2f990:	1023883a 	mov	r17,r2
   2f994:	003fa806 	br	2f838 <__divdf3+0x754>
   2f998:	b0ffd636 	bltu	r22,r3,2f8f4 <__divdf3+0x810>
   2f99c:	1011883a 	mov	r8,r2
   2f9a0:	b0ff341e 	bne	r22,r3,2f674 <__divdf3+0x590>
   2f9a4:	003f3406 	br	2f678 <__divdf3+0x594>
   2f9a8:	0005883a 	mov	r2,zero
   2f9ac:	003fe006 	br	2f930 <__divdf3+0x84c>
   2f9b0:	00800434 	movhi	r2,16
   2f9b4:	89400234 	orhi	r5,r17,8
   2f9b8:	10bfffc4 	addi	r2,r2,-1
   2f9bc:	b807883a 	mov	r3,r23
   2f9c0:	288a703a 	and	r5,r5,r2
   2f9c4:	4025883a 	mov	r18,r8
   2f9c8:	003e8206 	br	2f3d4 <__divdf3+0x2f0>

0002f9cc <__eqdf2>:
   2f9cc:	2804d53a 	srli	r2,r5,20
   2f9d0:	3806d53a 	srli	r3,r7,20
   2f9d4:	02000434 	movhi	r8,16
   2f9d8:	423fffc4 	addi	r8,r8,-1
   2f9dc:	1081ffcc 	andi	r2,r2,2047
   2f9e0:	0281ffc4 	movi	r10,2047
   2f9e4:	2a12703a 	and	r9,r5,r8
   2f9e8:	18c1ffcc 	andi	r3,r3,2047
   2f9ec:	3a10703a 	and	r8,r7,r8
   2f9f0:	280ad7fa 	srli	r5,r5,31
   2f9f4:	380ed7fa 	srli	r7,r7,31
   2f9f8:	12801026 	beq	r2,r10,2fa3c <__eqdf2+0x70>
   2f9fc:	0281ffc4 	movi	r10,2047
   2fa00:	1a800a26 	beq	r3,r10,2fa2c <__eqdf2+0x60>
   2fa04:	10c00226 	beq	r2,r3,2fa10 <__eqdf2+0x44>
   2fa08:	00800044 	movi	r2,1
   2fa0c:	f800283a 	ret
   2fa10:	4a3ffd1e 	bne	r9,r8,2fa08 <__eqdf2+0x3c>
   2fa14:	21bffc1e 	bne	r4,r6,2fa08 <__eqdf2+0x3c>
   2fa18:	29c00c26 	beq	r5,r7,2fa4c <__eqdf2+0x80>
   2fa1c:	103ffa1e 	bne	r2,zero,2fa08 <__eqdf2+0x3c>
   2fa20:	2244b03a 	or	r2,r4,r9
   2fa24:	1004c03a 	cmpne	r2,r2,zero
   2fa28:	f800283a 	ret
   2fa2c:	3214b03a 	or	r10,r6,r8
   2fa30:	503ff426 	beq	r10,zero,2fa04 <__eqdf2+0x38>
   2fa34:	00800044 	movi	r2,1
   2fa38:	f800283a 	ret
   2fa3c:	2254b03a 	or	r10,r4,r9
   2fa40:	503fee26 	beq	r10,zero,2f9fc <__eqdf2+0x30>
   2fa44:	00800044 	movi	r2,1
   2fa48:	f800283a 	ret
   2fa4c:	0005883a 	mov	r2,zero
   2fa50:	f800283a 	ret

0002fa54 <__gedf2>:
   2fa54:	2804d53a 	srli	r2,r5,20
   2fa58:	3806d53a 	srli	r3,r7,20
   2fa5c:	02000434 	movhi	r8,16
   2fa60:	423fffc4 	addi	r8,r8,-1
   2fa64:	1081ffcc 	andi	r2,r2,2047
   2fa68:	0241ffc4 	movi	r9,2047
   2fa6c:	2a14703a 	and	r10,r5,r8
   2fa70:	18c1ffcc 	andi	r3,r3,2047
   2fa74:	3a10703a 	and	r8,r7,r8
   2fa78:	280ad7fa 	srli	r5,r5,31
   2fa7c:	380ed7fa 	srli	r7,r7,31
   2fa80:	12401d26 	beq	r2,r9,2faf8 <__gedf2+0xa4>
   2fa84:	0241ffc4 	movi	r9,2047
   2fa88:	1a401226 	beq	r3,r9,2fad4 <__gedf2+0x80>
   2fa8c:	1000081e 	bne	r2,zero,2fab0 <__gedf2+0x5c>
   2fa90:	2296b03a 	or	r11,r4,r10
   2fa94:	5813003a 	cmpeq	r9,r11,zero
   2fa98:	1800091e 	bne	r3,zero,2fac0 <__gedf2+0x6c>
   2fa9c:	3218b03a 	or	r12,r6,r8
   2faa0:	6000071e 	bne	r12,zero,2fac0 <__gedf2+0x6c>
   2faa4:	0005883a 	mov	r2,zero
   2faa8:	5800101e 	bne	r11,zero,2faec <__gedf2+0x98>
   2faac:	f800283a 	ret
   2fab0:	18000c1e 	bne	r3,zero,2fae4 <__gedf2+0x90>
   2fab4:	3212b03a 	or	r9,r6,r8
   2fab8:	48000c26 	beq	r9,zero,2faec <__gedf2+0x98>
   2fabc:	0013883a 	mov	r9,zero
   2fac0:	39c03fcc 	andi	r7,r7,255
   2fac4:	48000826 	beq	r9,zero,2fae8 <__gedf2+0x94>
   2fac8:	38000926 	beq	r7,zero,2faf0 <__gedf2+0x9c>
   2facc:	00800044 	movi	r2,1
   2fad0:	f800283a 	ret
   2fad4:	3212b03a 	or	r9,r6,r8
   2fad8:	483fec26 	beq	r9,zero,2fa8c <__gedf2+0x38>
   2fadc:	00bfff84 	movi	r2,-2
   2fae0:	f800283a 	ret
   2fae4:	39c03fcc 	andi	r7,r7,255
   2fae8:	29c00626 	beq	r5,r7,2fb04 <__gedf2+0xb0>
   2faec:	283ff726 	beq	r5,zero,2facc <__gedf2+0x78>
   2faf0:	00bfffc4 	movi	r2,-1
   2faf4:	f800283a 	ret
   2faf8:	2292b03a 	or	r9,r4,r10
   2fafc:	483fe126 	beq	r9,zero,2fa84 <__gedf2+0x30>
   2fb00:	003ff606 	br	2fadc <__gedf2+0x88>
   2fb04:	18bff916 	blt	r3,r2,2faec <__gedf2+0x98>
   2fb08:	10c00316 	blt	r2,r3,2fb18 <__gedf2+0xc4>
   2fb0c:	42bff736 	bltu	r8,r10,2faec <__gedf2+0x98>
   2fb10:	52000326 	beq	r10,r8,2fb20 <__gedf2+0xcc>
   2fb14:	5200042e 	bgeu	r10,r8,2fb28 <__gedf2+0xd4>
   2fb18:	283fec1e 	bne	r5,zero,2facc <__gedf2+0x78>
   2fb1c:	003ff406 	br	2faf0 <__gedf2+0x9c>
   2fb20:	313ff236 	bltu	r6,r4,2faec <__gedf2+0x98>
   2fb24:	21bffc36 	bltu	r4,r6,2fb18 <__gedf2+0xc4>
   2fb28:	0005883a 	mov	r2,zero
   2fb2c:	f800283a 	ret

0002fb30 <__ledf2>:
   2fb30:	2804d53a 	srli	r2,r5,20
   2fb34:	3810d53a 	srli	r8,r7,20
   2fb38:	00c00434 	movhi	r3,16
   2fb3c:	18ffffc4 	addi	r3,r3,-1
   2fb40:	1081ffcc 	andi	r2,r2,2047
   2fb44:	0241ffc4 	movi	r9,2047
   2fb48:	28d4703a 	and	r10,r5,r3
   2fb4c:	4201ffcc 	andi	r8,r8,2047
   2fb50:	38c6703a 	and	r3,r7,r3
   2fb54:	280ad7fa 	srli	r5,r5,31
   2fb58:	380ed7fa 	srli	r7,r7,31
   2fb5c:	12401f26 	beq	r2,r9,2fbdc <__ledf2+0xac>
   2fb60:	0241ffc4 	movi	r9,2047
   2fb64:	42401426 	beq	r8,r9,2fbb8 <__ledf2+0x88>
   2fb68:	1000091e 	bne	r2,zero,2fb90 <__ledf2+0x60>
   2fb6c:	2296b03a 	or	r11,r4,r10
   2fb70:	5813003a 	cmpeq	r9,r11,zero
   2fb74:	29403fcc 	andi	r5,r5,255
   2fb78:	40000a1e 	bne	r8,zero,2fba4 <__ledf2+0x74>
   2fb7c:	30d8b03a 	or	r12,r6,r3
   2fb80:	6000081e 	bne	r12,zero,2fba4 <__ledf2+0x74>
   2fb84:	0005883a 	mov	r2,zero
   2fb88:	5800111e 	bne	r11,zero,2fbd0 <__ledf2+0xa0>
   2fb8c:	f800283a 	ret
   2fb90:	29403fcc 	andi	r5,r5,255
   2fb94:	40000c1e 	bne	r8,zero,2fbc8 <__ledf2+0x98>
   2fb98:	30d2b03a 	or	r9,r6,r3
   2fb9c:	48000c26 	beq	r9,zero,2fbd0 <__ledf2+0xa0>
   2fba0:	0013883a 	mov	r9,zero
   2fba4:	39c03fcc 	andi	r7,r7,255
   2fba8:	48000826 	beq	r9,zero,2fbcc <__ledf2+0x9c>
   2fbac:	38001126 	beq	r7,zero,2fbf4 <__ledf2+0xc4>
   2fbb0:	00800044 	movi	r2,1
   2fbb4:	f800283a 	ret
   2fbb8:	30d2b03a 	or	r9,r6,r3
   2fbbc:	483fea26 	beq	r9,zero,2fb68 <__ledf2+0x38>
   2fbc0:	00800084 	movi	r2,2
   2fbc4:	f800283a 	ret
   2fbc8:	39c03fcc 	andi	r7,r7,255
   2fbcc:	39400726 	beq	r7,r5,2fbec <__ledf2+0xbc>
   2fbd0:	2800081e 	bne	r5,zero,2fbf4 <__ledf2+0xc4>
   2fbd4:	00800044 	movi	r2,1
   2fbd8:	f800283a 	ret
   2fbdc:	2292b03a 	or	r9,r4,r10
   2fbe0:	483fdf26 	beq	r9,zero,2fb60 <__ledf2+0x30>
   2fbe4:	00800084 	movi	r2,2
   2fbe8:	f800283a 	ret
   2fbec:	4080030e 	bge	r8,r2,2fbfc <__ledf2+0xcc>
   2fbf0:	383fef26 	beq	r7,zero,2fbb0 <__ledf2+0x80>
   2fbf4:	00bfffc4 	movi	r2,-1
   2fbf8:	f800283a 	ret
   2fbfc:	123feb16 	blt	r2,r8,2fbac <__ledf2+0x7c>
   2fc00:	1abff336 	bltu	r3,r10,2fbd0 <__ledf2+0xa0>
   2fc04:	50c00326 	beq	r10,r3,2fc14 <__ledf2+0xe4>
   2fc08:	50c0042e 	bgeu	r10,r3,2fc1c <__ledf2+0xec>
   2fc0c:	283fe81e 	bne	r5,zero,2fbb0 <__ledf2+0x80>
   2fc10:	003ff806 	br	2fbf4 <__ledf2+0xc4>
   2fc14:	313fee36 	bltu	r6,r4,2fbd0 <__ledf2+0xa0>
   2fc18:	21bffc36 	bltu	r4,r6,2fc0c <__ledf2+0xdc>
   2fc1c:	0005883a 	mov	r2,zero
   2fc20:	f800283a 	ret

0002fc24 <__muldf3>:
   2fc24:	defff304 	addi	sp,sp,-52
   2fc28:	2804d53a 	srli	r2,r5,20
   2fc2c:	dd800915 	stw	r22,36(sp)
   2fc30:	282cd7fa 	srli	r22,r5,31
   2fc34:	dc000315 	stw	r16,12(sp)
   2fc38:	04000434 	movhi	r16,16
   2fc3c:	dd400815 	stw	r21,32(sp)
   2fc40:	dc800515 	stw	r18,20(sp)
   2fc44:	843fffc4 	addi	r16,r16,-1
   2fc48:	dfc00c15 	stw	ra,48(sp)
   2fc4c:	df000b15 	stw	fp,44(sp)
   2fc50:	ddc00a15 	stw	r23,40(sp)
   2fc54:	dd000715 	stw	r20,28(sp)
   2fc58:	dcc00615 	stw	r19,24(sp)
   2fc5c:	dc400415 	stw	r17,16(sp)
   2fc60:	1481ffcc 	andi	r18,r2,2047
   2fc64:	2c20703a 	and	r16,r5,r16
   2fc68:	b02b883a 	mov	r21,r22
   2fc6c:	b2403fcc 	andi	r9,r22,255
   2fc70:	90006026 	beq	r18,zero,2fdf4 <__muldf3+0x1d0>
   2fc74:	0081ffc4 	movi	r2,2047
   2fc78:	2029883a 	mov	r20,r4
   2fc7c:	90803626 	beq	r18,r2,2fd58 <__muldf3+0x134>
   2fc80:	80800434 	orhi	r2,r16,16
   2fc84:	100490fa 	slli	r2,r2,3
   2fc88:	2020d77a 	srli	r16,r4,29
   2fc8c:	202890fa 	slli	r20,r4,3
   2fc90:	94bf0044 	addi	r18,r18,-1023
   2fc94:	80a0b03a 	or	r16,r16,r2
   2fc98:	0027883a 	mov	r19,zero
   2fc9c:	0039883a 	mov	fp,zero
   2fca0:	3804d53a 	srli	r2,r7,20
   2fca4:	382ed7fa 	srli	r23,r7,31
   2fca8:	04400434 	movhi	r17,16
   2fcac:	8c7fffc4 	addi	r17,r17,-1
   2fcb0:	1081ffcc 	andi	r2,r2,2047
   2fcb4:	3011883a 	mov	r8,r6
   2fcb8:	3c62703a 	and	r17,r7,r17
   2fcbc:	ba803fcc 	andi	r10,r23,255
   2fcc0:	10006d26 	beq	r2,zero,2fe78 <__muldf3+0x254>
   2fcc4:	00c1ffc4 	movi	r3,2047
   2fcc8:	10c06526 	beq	r2,r3,2fe60 <__muldf3+0x23c>
   2fccc:	88c00434 	orhi	r3,r17,16
   2fcd0:	180690fa 	slli	r3,r3,3
   2fcd4:	3022d77a 	srli	r17,r6,29
   2fcd8:	301090fa 	slli	r8,r6,3
   2fcdc:	10bf0044 	addi	r2,r2,-1023
   2fce0:	88e2b03a 	or	r17,r17,r3
   2fce4:	000b883a 	mov	r5,zero
   2fce8:	9085883a 	add	r2,r18,r2
   2fcec:	2cc8b03a 	or	r4,r5,r19
   2fcf0:	00c003c4 	movi	r3,15
   2fcf4:	bdacf03a 	xor	r22,r23,r22
   2fcf8:	12c00044 	addi	r11,r2,1
   2fcfc:	19009936 	bltu	r3,r4,2ff64 <__muldf3+0x340>
   2fd00:	200890ba 	slli	r4,r4,2
   2fd04:	00c000f4 	movhi	r3,3
   2fd08:	18ff4604 	addi	r3,r3,-744
   2fd0c:	20c9883a 	add	r4,r4,r3
   2fd10:	20c00017 	ldw	r3,0(r4)
   2fd14:	1800683a 	jmp	r3
   2fd18:	0002ff64 	muli	zero,zero,3069
   2fd1c:	0002fd78 	rdprs	zero,zero,3061
   2fd20:	0002fd78 	rdprs	zero,zero,3061
   2fd24:	0002fd74 	movhi	zero,3061
   2fd28:	0002ff40 	call	2ff4 <__alt_mem_MEMOIRE_ONCHIP-0x1d00c>
   2fd2c:	0002ff40 	call	2ff4 <__alt_mem_MEMOIRE_ONCHIP-0x1d00c>
   2fd30:	0002ff28 	cmpgeui	zero,zero,3068
   2fd34:	0002fd74 	movhi	zero,3061
   2fd38:	0002ff40 	call	2ff4 <__alt_mem_MEMOIRE_ONCHIP-0x1d00c>
   2fd3c:	0002ff28 	cmpgeui	zero,zero,3068
   2fd40:	0002ff40 	call	2ff4 <__alt_mem_MEMOIRE_ONCHIP-0x1d00c>
   2fd44:	0002fd74 	movhi	zero,3061
   2fd48:	0002ff50 	cmplti	zero,zero,3069
   2fd4c:	0002ff50 	cmplti	zero,zero,3069
   2fd50:	0002ff50 	cmplti	zero,zero,3069
   2fd54:	0003016c 	andhi	zero,zero,3077
   2fd58:	2404b03a 	or	r2,r4,r16
   2fd5c:	10006f1e 	bne	r2,zero,2ff1c <__muldf3+0x2f8>
   2fd60:	04c00204 	movi	r19,8
   2fd64:	0021883a 	mov	r16,zero
   2fd68:	0029883a 	mov	r20,zero
   2fd6c:	07000084 	movi	fp,2
   2fd70:	003fcb06 	br	2fca0 <__muldf3+0x7c>
   2fd74:	502d883a 	mov	r22,r10
   2fd78:	00800084 	movi	r2,2
   2fd7c:	28805726 	beq	r5,r2,2fedc <__muldf3+0x2b8>
   2fd80:	008000c4 	movi	r2,3
   2fd84:	28816626 	beq	r5,r2,30320 <__muldf3+0x6fc>
   2fd88:	00800044 	movi	r2,1
   2fd8c:	2881411e 	bne	r5,r2,30294 <__muldf3+0x670>
   2fd90:	b02b883a 	mov	r21,r22
   2fd94:	0005883a 	mov	r2,zero
   2fd98:	000b883a 	mov	r5,zero
   2fd9c:	0029883a 	mov	r20,zero
   2fda0:	1004953a 	slli	r2,r2,20
   2fda4:	a8c03fcc 	andi	r3,r21,255
   2fda8:	04400434 	movhi	r17,16
   2fdac:	8c7fffc4 	addi	r17,r17,-1
   2fdb0:	180697fa 	slli	r3,r3,31
   2fdb4:	2c4a703a 	and	r5,r5,r17
   2fdb8:	288ab03a 	or	r5,r5,r2
   2fdbc:	28c6b03a 	or	r3,r5,r3
   2fdc0:	a005883a 	mov	r2,r20
   2fdc4:	dfc00c17 	ldw	ra,48(sp)
   2fdc8:	df000b17 	ldw	fp,44(sp)
   2fdcc:	ddc00a17 	ldw	r23,40(sp)
   2fdd0:	dd800917 	ldw	r22,36(sp)
   2fdd4:	dd400817 	ldw	r21,32(sp)
   2fdd8:	dd000717 	ldw	r20,28(sp)
   2fddc:	dcc00617 	ldw	r19,24(sp)
   2fde0:	dc800517 	ldw	r18,20(sp)
   2fde4:	dc400417 	ldw	r17,16(sp)
   2fde8:	dc000317 	ldw	r16,12(sp)
   2fdec:	dec00d04 	addi	sp,sp,52
   2fdf0:	f800283a 	ret
   2fdf4:	2404b03a 	or	r2,r4,r16
   2fdf8:	2027883a 	mov	r19,r4
   2fdfc:	10004226 	beq	r2,zero,2ff08 <__muldf3+0x2e4>
   2fe00:	8000fc26 	beq	r16,zero,301f4 <__muldf3+0x5d0>
   2fe04:	8009883a 	mov	r4,r16
   2fe08:	d9800215 	stw	r6,8(sp)
   2fe0c:	d9c00015 	stw	r7,0(sp)
   2fe10:	da400115 	stw	r9,4(sp)
   2fe14:	0030e3c0 	call	30e3c <__clzsi2>
   2fe18:	d9800217 	ldw	r6,8(sp)
   2fe1c:	d9c00017 	ldw	r7,0(sp)
   2fe20:	da400117 	ldw	r9,4(sp)
   2fe24:	113ffd44 	addi	r4,r2,-11
   2fe28:	00c00704 	movi	r3,28
   2fe2c:	1900ed16 	blt	r3,r4,301e4 <__muldf3+0x5c0>
   2fe30:	00c00744 	movi	r3,29
   2fe34:	147ffe04 	addi	r17,r2,-8
   2fe38:	1907c83a 	sub	r3,r3,r4
   2fe3c:	8460983a 	sll	r16,r16,r17
   2fe40:	98c6d83a 	srl	r3,r19,r3
   2fe44:	9c68983a 	sll	r20,r19,r17
   2fe48:	1c20b03a 	or	r16,r3,r16
   2fe4c:	1080fcc4 	addi	r2,r2,1011
   2fe50:	00a5c83a 	sub	r18,zero,r2
   2fe54:	0027883a 	mov	r19,zero
   2fe58:	0039883a 	mov	fp,zero
   2fe5c:	003f9006 	br	2fca0 <__muldf3+0x7c>
   2fe60:	3446b03a 	or	r3,r6,r17
   2fe64:	1800261e 	bne	r3,zero,2ff00 <__muldf3+0x2dc>
   2fe68:	0023883a 	mov	r17,zero
   2fe6c:	0011883a 	mov	r8,zero
   2fe70:	01400084 	movi	r5,2
   2fe74:	003f9c06 	br	2fce8 <__muldf3+0xc4>
   2fe78:	3446b03a 	or	r3,r6,r17
   2fe7c:	18001c26 	beq	r3,zero,2fef0 <__muldf3+0x2cc>
   2fe80:	8800ce26 	beq	r17,zero,301bc <__muldf3+0x598>
   2fe84:	8809883a 	mov	r4,r17
   2fe88:	d9800215 	stw	r6,8(sp)
   2fe8c:	da400115 	stw	r9,4(sp)
   2fe90:	da800015 	stw	r10,0(sp)
   2fe94:	0030e3c0 	call	30e3c <__clzsi2>
   2fe98:	d9800217 	ldw	r6,8(sp)
   2fe9c:	da400117 	ldw	r9,4(sp)
   2fea0:	da800017 	ldw	r10,0(sp)
   2fea4:	113ffd44 	addi	r4,r2,-11
   2fea8:	00c00704 	movi	r3,28
   2feac:	1900bf16 	blt	r3,r4,301ac <__muldf3+0x588>
   2feb0:	00c00744 	movi	r3,29
   2feb4:	123ffe04 	addi	r8,r2,-8
   2feb8:	1907c83a 	sub	r3,r3,r4
   2febc:	8a22983a 	sll	r17,r17,r8
   2fec0:	30c6d83a 	srl	r3,r6,r3
   2fec4:	3210983a 	sll	r8,r6,r8
   2fec8:	1c62b03a 	or	r17,r3,r17
   2fecc:	1080fcc4 	addi	r2,r2,1011
   2fed0:	0085c83a 	sub	r2,zero,r2
   2fed4:	000b883a 	mov	r5,zero
   2fed8:	003f8306 	br	2fce8 <__muldf3+0xc4>
   2fedc:	b02b883a 	mov	r21,r22
   2fee0:	0081ffc4 	movi	r2,2047
   2fee4:	000b883a 	mov	r5,zero
   2fee8:	0029883a 	mov	r20,zero
   2feec:	003fac06 	br	2fda0 <__muldf3+0x17c>
   2fef0:	0023883a 	mov	r17,zero
   2fef4:	0011883a 	mov	r8,zero
   2fef8:	01400044 	movi	r5,1
   2fefc:	003f7a06 	br	2fce8 <__muldf3+0xc4>
   2ff00:	014000c4 	movi	r5,3
   2ff04:	003f7806 	br	2fce8 <__muldf3+0xc4>
   2ff08:	04c00104 	movi	r19,4
   2ff0c:	0021883a 	mov	r16,zero
   2ff10:	0029883a 	mov	r20,zero
   2ff14:	07000044 	movi	fp,1
   2ff18:	003f6106 	br	2fca0 <__muldf3+0x7c>
   2ff1c:	04c00304 	movi	r19,12
   2ff20:	070000c4 	movi	fp,3
   2ff24:	003f5e06 	br	2fca0 <__muldf3+0x7c>
   2ff28:	01400434 	movhi	r5,16
   2ff2c:	002b883a 	mov	r21,zero
   2ff30:	297fffc4 	addi	r5,r5,-1
   2ff34:	053fffc4 	movi	r20,-1
   2ff38:	0081ffc4 	movi	r2,2047
   2ff3c:	003f9806 	br	2fda0 <__muldf3+0x17c>
   2ff40:	8023883a 	mov	r17,r16
   2ff44:	a011883a 	mov	r8,r20
   2ff48:	e00b883a 	mov	r5,fp
   2ff4c:	003f8a06 	br	2fd78 <__muldf3+0x154>
   2ff50:	8023883a 	mov	r17,r16
   2ff54:	a011883a 	mov	r8,r20
   2ff58:	482d883a 	mov	r22,r9
   2ff5c:	e00b883a 	mov	r5,fp
   2ff60:	003f8506 	br	2fd78 <__muldf3+0x154>
   2ff64:	a00ad43a 	srli	r5,r20,16
   2ff68:	401ad43a 	srli	r13,r8,16
   2ff6c:	a53fffcc 	andi	r20,r20,65535
   2ff70:	423fffcc 	andi	r8,r8,65535
   2ff74:	4519383a 	mul	r12,r8,r20
   2ff78:	4147383a 	mul	r3,r8,r5
   2ff7c:	6d09383a 	mul	r4,r13,r20
   2ff80:	600cd43a 	srli	r6,r12,16
   2ff84:	2b5d383a 	mul	r14,r5,r13
   2ff88:	20c9883a 	add	r4,r4,r3
   2ff8c:	310d883a 	add	r6,r6,r4
   2ff90:	30c0022e 	bgeu	r6,r3,2ff9c <__muldf3+0x378>
   2ff94:	00c00074 	movhi	r3,1
   2ff98:	70dd883a 	add	r14,r14,r3
   2ff9c:	8826d43a 	srli	r19,r17,16
   2ffa0:	8bffffcc 	andi	r15,r17,65535
   2ffa4:	7d23383a 	mul	r17,r15,r20
   2ffa8:	7949383a 	mul	r4,r15,r5
   2ffac:	9d29383a 	mul	r20,r19,r20
   2ffb0:	8814d43a 	srli	r10,r17,16
   2ffb4:	3012943a 	slli	r9,r6,16
   2ffb8:	a129883a 	add	r20,r20,r4
   2ffbc:	633fffcc 	andi	r12,r12,65535
   2ffc0:	5515883a 	add	r10,r10,r20
   2ffc4:	3006d43a 	srli	r3,r6,16
   2ffc8:	4b13883a 	add	r9,r9,r12
   2ffcc:	2ccb383a 	mul	r5,r5,r19
   2ffd0:	5100022e 	bgeu	r10,r4,2ffdc <__muldf3+0x3b8>
   2ffd4:	01000074 	movhi	r4,1
   2ffd8:	290b883a 	add	r5,r5,r4
   2ffdc:	802ad43a 	srli	r21,r16,16
   2ffe0:	843fffcc 	andi	r16,r16,65535
   2ffe4:	440d383a 	mul	r6,r8,r16
   2ffe8:	4565383a 	mul	r18,r8,r21
   2ffec:	8349383a 	mul	r4,r16,r13
   2fff0:	500e943a 	slli	r7,r10,16
   2fff4:	3010d43a 	srli	r8,r6,16
   2fff8:	5028d43a 	srli	r20,r10,16
   2fffc:	2489883a 	add	r4,r4,r18
   30000:	8abfffcc 	andi	r10,r17,65535
   30004:	3a95883a 	add	r10,r7,r10
   30008:	4119883a 	add	r12,r8,r4
   3000c:	a169883a 	add	r20,r20,r5
   30010:	1a87883a 	add	r3,r3,r10
   30014:	6d5b383a 	mul	r13,r13,r21
   30018:	6480022e 	bgeu	r12,r18,30024 <__muldf3+0x400>
   3001c:	01000074 	movhi	r4,1
   30020:	691b883a 	add	r13,r13,r4
   30024:	7c25383a 	mul	r18,r15,r16
   30028:	7d4b383a 	mul	r5,r15,r21
   3002c:	84cf383a 	mul	r7,r16,r19
   30030:	901ed43a 	srli	r15,r18,16
   30034:	6008d43a 	srli	r4,r12,16
   30038:	6010943a 	slli	r8,r12,16
   3003c:	394f883a 	add	r7,r7,r5
   30040:	333fffcc 	andi	r12,r6,65535
   30044:	79df883a 	add	r15,r15,r7
   30048:	235b883a 	add	r13,r4,r13
   3004c:	9d63383a 	mul	r17,r19,r21
   30050:	4309883a 	add	r4,r8,r12
   30054:	7940022e 	bgeu	r15,r5,30060 <__muldf3+0x43c>
   30058:	01400074 	movhi	r5,1
   3005c:	8963883a 	add	r17,r17,r5
   30060:	780a943a 	slli	r5,r15,16
   30064:	91bfffcc 	andi	r6,r18,65535
   30068:	70c7883a 	add	r3,r14,r3
   3006c:	298d883a 	add	r6,r5,r6
   30070:	1a8f803a 	cmpltu	r7,r3,r10
   30074:	350b883a 	add	r5,r6,r20
   30078:	20c7883a 	add	r3,r4,r3
   3007c:	3955883a 	add	r10,r7,r5
   30080:	1909803a 	cmpltu	r4,r3,r4
   30084:	6a91883a 	add	r8,r13,r10
   30088:	780cd43a 	srli	r6,r15,16
   3008c:	2219883a 	add	r12,r4,r8
   30090:	2d0b803a 	cmpltu	r5,r5,r20
   30094:	51cf803a 	cmpltu	r7,r10,r7
   30098:	29ceb03a 	or	r7,r5,r7
   3009c:	4351803a 	cmpltu	r8,r8,r13
   300a0:	610b803a 	cmpltu	r5,r12,r4
   300a4:	4148b03a 	or	r4,r8,r5
   300a8:	398f883a 	add	r7,r7,r6
   300ac:	3909883a 	add	r4,r7,r4
   300b0:	1810927a 	slli	r8,r3,9
   300b4:	2449883a 	add	r4,r4,r17
   300b8:	2008927a 	slli	r4,r4,9
   300bc:	6022d5fa 	srli	r17,r12,23
   300c0:	1806d5fa 	srli	r3,r3,23
   300c4:	4252b03a 	or	r9,r8,r9
   300c8:	600a927a 	slli	r5,r12,9
   300cc:	4810c03a 	cmpne	r8,r9,zero
   300d0:	2462b03a 	or	r17,r4,r17
   300d4:	40c6b03a 	or	r3,r8,r3
   300d8:	8900402c 	andhi	r4,r17,256
   300dc:	1950b03a 	or	r8,r3,r5
   300e0:	20000726 	beq	r4,zero,30100 <__muldf3+0x4dc>
   300e4:	4006d07a 	srli	r3,r8,1
   300e8:	880497fa 	slli	r2,r17,31
   300ec:	4200004c 	andi	r8,r8,1
   300f0:	8822d07a 	srli	r17,r17,1
   300f4:	1a10b03a 	or	r8,r3,r8
   300f8:	1210b03a 	or	r8,r2,r8
   300fc:	5805883a 	mov	r2,r11
   30100:	1140ffc4 	addi	r5,r2,1023
   30104:	0140440e 	bge	zero,r5,30218 <__muldf3+0x5f4>
   30108:	40c001cc 	andi	r3,r8,7
   3010c:	18000726 	beq	r3,zero,3012c <__muldf3+0x508>
   30110:	40c003cc 	andi	r3,r8,15
   30114:	01000104 	movi	r4,4
   30118:	19000426 	beq	r3,r4,3012c <__muldf3+0x508>
   3011c:	4107883a 	add	r3,r8,r4
   30120:	1a11803a 	cmpltu	r8,r3,r8
   30124:	8a23883a 	add	r17,r17,r8
   30128:	1811883a 	mov	r8,r3
   3012c:	88c0402c 	andhi	r3,r17,256
   30130:	18000426 	beq	r3,zero,30144 <__muldf3+0x520>
   30134:	11410004 	addi	r5,r2,1024
   30138:	00bfc034 	movhi	r2,65280
   3013c:	10bfffc4 	addi	r2,r2,-1
   30140:	88a2703a 	and	r17,r17,r2
   30144:	0081ff84 	movi	r2,2046
   30148:	117f6416 	blt	r2,r5,2fedc <__muldf3+0x2b8>
   3014c:	8828977a 	slli	r20,r17,29
   30150:	4010d0fa 	srli	r8,r8,3
   30154:	8822927a 	slli	r17,r17,9
   30158:	2881ffcc 	andi	r2,r5,2047
   3015c:	a228b03a 	or	r20,r20,r8
   30160:	880ad33a 	srli	r5,r17,12
   30164:	b02b883a 	mov	r21,r22
   30168:	003f0d06 	br	2fda0 <__muldf3+0x17c>
   3016c:	8080022c 	andhi	r2,r16,8
   30170:	10000926 	beq	r2,zero,30198 <__muldf3+0x574>
   30174:	8880022c 	andhi	r2,r17,8
   30178:	1000071e 	bne	r2,zero,30198 <__muldf3+0x574>
   3017c:	00800434 	movhi	r2,16
   30180:	89400234 	orhi	r5,r17,8
   30184:	10bfffc4 	addi	r2,r2,-1
   30188:	b82b883a 	mov	r21,r23
   3018c:	288a703a 	and	r5,r5,r2
   30190:	4029883a 	mov	r20,r8
   30194:	003f6806 	br	2ff38 <__muldf3+0x314>
   30198:	00800434 	movhi	r2,16
   3019c:	81400234 	orhi	r5,r16,8
   301a0:	10bfffc4 	addi	r2,r2,-1
   301a4:	288a703a 	and	r5,r5,r2
   301a8:	003f6306 	br	2ff38 <__muldf3+0x314>
   301ac:	147ff604 	addi	r17,r2,-40
   301b0:	3462983a 	sll	r17,r6,r17
   301b4:	0011883a 	mov	r8,zero
   301b8:	003f4406 	br	2fecc <__muldf3+0x2a8>
   301bc:	3009883a 	mov	r4,r6
   301c0:	d9800215 	stw	r6,8(sp)
   301c4:	da400115 	stw	r9,4(sp)
   301c8:	da800015 	stw	r10,0(sp)
   301cc:	0030e3c0 	call	30e3c <__clzsi2>
   301d0:	10800804 	addi	r2,r2,32
   301d4:	da800017 	ldw	r10,0(sp)
   301d8:	da400117 	ldw	r9,4(sp)
   301dc:	d9800217 	ldw	r6,8(sp)
   301e0:	003f3006 	br	2fea4 <__muldf3+0x280>
   301e4:	143ff604 	addi	r16,r2,-40
   301e8:	9c20983a 	sll	r16,r19,r16
   301ec:	0029883a 	mov	r20,zero
   301f0:	003f1606 	br	2fe4c <__muldf3+0x228>
   301f4:	d9800215 	stw	r6,8(sp)
   301f8:	d9c00015 	stw	r7,0(sp)
   301fc:	da400115 	stw	r9,4(sp)
   30200:	0030e3c0 	call	30e3c <__clzsi2>
   30204:	10800804 	addi	r2,r2,32
   30208:	da400117 	ldw	r9,4(sp)
   3020c:	d9c00017 	ldw	r7,0(sp)
   30210:	d9800217 	ldw	r6,8(sp)
   30214:	003f0306 	br	2fe24 <__muldf3+0x200>
   30218:	00c00044 	movi	r3,1
   3021c:	1947c83a 	sub	r3,r3,r5
   30220:	00800e04 	movi	r2,56
   30224:	10feda16 	blt	r2,r3,2fd90 <__muldf3+0x16c>
   30228:	008007c4 	movi	r2,31
   3022c:	10c01b16 	blt	r2,r3,3029c <__muldf3+0x678>
   30230:	00800804 	movi	r2,32
   30234:	10c5c83a 	sub	r2,r2,r3
   30238:	888a983a 	sll	r5,r17,r2
   3023c:	40c8d83a 	srl	r4,r8,r3
   30240:	4084983a 	sll	r2,r8,r2
   30244:	88e2d83a 	srl	r17,r17,r3
   30248:	2906b03a 	or	r3,r5,r4
   3024c:	1004c03a 	cmpne	r2,r2,zero
   30250:	1886b03a 	or	r3,r3,r2
   30254:	188001cc 	andi	r2,r3,7
   30258:	10000726 	beq	r2,zero,30278 <__muldf3+0x654>
   3025c:	188003cc 	andi	r2,r3,15
   30260:	01000104 	movi	r4,4
   30264:	11000426 	beq	r2,r4,30278 <__muldf3+0x654>
   30268:	1805883a 	mov	r2,r3
   3026c:	10c00104 	addi	r3,r2,4
   30270:	1885803a 	cmpltu	r2,r3,r2
   30274:	88a3883a 	add	r17,r17,r2
   30278:	8880202c 	andhi	r2,r17,128
   3027c:	10001c26 	beq	r2,zero,302f0 <__muldf3+0x6cc>
   30280:	b02b883a 	mov	r21,r22
   30284:	00800044 	movi	r2,1
   30288:	000b883a 	mov	r5,zero
   3028c:	0029883a 	mov	r20,zero
   30290:	003ec306 	br	2fda0 <__muldf3+0x17c>
   30294:	5805883a 	mov	r2,r11
   30298:	003f9906 	br	30100 <__muldf3+0x4dc>
   3029c:	00bff844 	movi	r2,-31
   302a0:	1145c83a 	sub	r2,r2,r5
   302a4:	8888d83a 	srl	r4,r17,r2
   302a8:	00800804 	movi	r2,32
   302ac:	18801a26 	beq	r3,r2,30318 <__muldf3+0x6f4>
   302b0:	00801004 	movi	r2,64
   302b4:	10c5c83a 	sub	r2,r2,r3
   302b8:	8884983a 	sll	r2,r17,r2
   302bc:	1204b03a 	or	r2,r2,r8
   302c0:	1004c03a 	cmpne	r2,r2,zero
   302c4:	2084b03a 	or	r2,r4,r2
   302c8:	144001cc 	andi	r17,r2,7
   302cc:	88000d1e 	bne	r17,zero,30304 <__muldf3+0x6e0>
   302d0:	000b883a 	mov	r5,zero
   302d4:	1028d0fa 	srli	r20,r2,3
   302d8:	b02b883a 	mov	r21,r22
   302dc:	0005883a 	mov	r2,zero
   302e0:	a468b03a 	or	r20,r20,r17
   302e4:	003eae06 	br	2fda0 <__muldf3+0x17c>
   302e8:	1007883a 	mov	r3,r2
   302ec:	0023883a 	mov	r17,zero
   302f0:	880a927a 	slli	r5,r17,9
   302f4:	1805883a 	mov	r2,r3
   302f8:	8822977a 	slli	r17,r17,29
   302fc:	280ad33a 	srli	r5,r5,12
   30300:	003ff406 	br	302d4 <__muldf3+0x6b0>
   30304:	10c003cc 	andi	r3,r2,15
   30308:	01000104 	movi	r4,4
   3030c:	193ff626 	beq	r3,r4,302e8 <__muldf3+0x6c4>
   30310:	0023883a 	mov	r17,zero
   30314:	003fd506 	br	3026c <__muldf3+0x648>
   30318:	0005883a 	mov	r2,zero
   3031c:	003fe706 	br	302bc <__muldf3+0x698>
   30320:	00800434 	movhi	r2,16
   30324:	89400234 	orhi	r5,r17,8
   30328:	10bfffc4 	addi	r2,r2,-1
   3032c:	b02b883a 	mov	r21,r22
   30330:	288a703a 	and	r5,r5,r2
   30334:	4029883a 	mov	r20,r8
   30338:	003eff06 	br	2ff38 <__muldf3+0x314>

0003033c <__subdf3>:
   3033c:	02000434 	movhi	r8,16
   30340:	423fffc4 	addi	r8,r8,-1
   30344:	defffb04 	addi	sp,sp,-20
   30348:	2a14703a 	and	r10,r5,r8
   3034c:	3812d53a 	srli	r9,r7,20
   30350:	3a10703a 	and	r8,r7,r8
   30354:	2006d77a 	srli	r3,r4,29
   30358:	3004d77a 	srli	r2,r6,29
   3035c:	dc000015 	stw	r16,0(sp)
   30360:	501490fa 	slli	r10,r10,3
   30364:	2820d53a 	srli	r16,r5,20
   30368:	401090fa 	slli	r8,r8,3
   3036c:	dc800215 	stw	r18,8(sp)
   30370:	dc400115 	stw	r17,4(sp)
   30374:	dfc00415 	stw	ra,16(sp)
   30378:	202290fa 	slli	r17,r4,3
   3037c:	dcc00315 	stw	r19,12(sp)
   30380:	4a41ffcc 	andi	r9,r9,2047
   30384:	0101ffc4 	movi	r4,2047
   30388:	2824d7fa 	srli	r18,r5,31
   3038c:	8401ffcc 	andi	r16,r16,2047
   30390:	50c6b03a 	or	r3,r10,r3
   30394:	380ed7fa 	srli	r7,r7,31
   30398:	408ab03a 	or	r5,r8,r2
   3039c:	300c90fa 	slli	r6,r6,3
   303a0:	49009626 	beq	r9,r4,305fc <__subdf3+0x2c0>
   303a4:	39c0005c 	xori	r7,r7,1
   303a8:	8245c83a 	sub	r2,r16,r9
   303ac:	3c807426 	beq	r7,r18,30580 <__subdf3+0x244>
   303b0:	0080af0e 	bge	zero,r2,30670 <__subdf3+0x334>
   303b4:	48002a1e 	bne	r9,zero,30460 <__subdf3+0x124>
   303b8:	2988b03a 	or	r4,r5,r6
   303bc:	20009a1e 	bne	r4,zero,30628 <__subdf3+0x2ec>
   303c0:	888001cc 	andi	r2,r17,7
   303c4:	10000726 	beq	r2,zero,303e4 <__subdf3+0xa8>
   303c8:	888003cc 	andi	r2,r17,15
   303cc:	01000104 	movi	r4,4
   303d0:	11000426 	beq	r2,r4,303e4 <__subdf3+0xa8>
   303d4:	890b883a 	add	r5,r17,r4
   303d8:	2c63803a 	cmpltu	r17,r5,r17
   303dc:	1c47883a 	add	r3,r3,r17
   303e0:	2823883a 	mov	r17,r5
   303e4:	1880202c 	andhi	r2,r3,128
   303e8:	10005926 	beq	r2,zero,30550 <__subdf3+0x214>
   303ec:	84000044 	addi	r16,r16,1
   303f0:	0081ffc4 	movi	r2,2047
   303f4:	8080be26 	beq	r16,r2,306f0 <__subdf3+0x3b4>
   303f8:	017fe034 	movhi	r5,65408
   303fc:	297fffc4 	addi	r5,r5,-1
   30400:	1946703a 	and	r3,r3,r5
   30404:	1804977a 	slli	r2,r3,29
   30408:	1806927a 	slli	r3,r3,9
   3040c:	8822d0fa 	srli	r17,r17,3
   30410:	8401ffcc 	andi	r16,r16,2047
   30414:	180ad33a 	srli	r5,r3,12
   30418:	9100004c 	andi	r4,r18,1
   3041c:	1444b03a 	or	r2,r2,r17
   30420:	80c1ffcc 	andi	r3,r16,2047
   30424:	1820953a 	slli	r16,r3,20
   30428:	20c03fcc 	andi	r3,r4,255
   3042c:	180897fa 	slli	r4,r3,31
   30430:	00c00434 	movhi	r3,16
   30434:	18ffffc4 	addi	r3,r3,-1
   30438:	28c6703a 	and	r3,r5,r3
   3043c:	1c06b03a 	or	r3,r3,r16
   30440:	1906b03a 	or	r3,r3,r4
   30444:	dfc00417 	ldw	ra,16(sp)
   30448:	dcc00317 	ldw	r19,12(sp)
   3044c:	dc800217 	ldw	r18,8(sp)
   30450:	dc400117 	ldw	r17,4(sp)
   30454:	dc000017 	ldw	r16,0(sp)
   30458:	dec00504 	addi	sp,sp,20
   3045c:	f800283a 	ret
   30460:	0101ffc4 	movi	r4,2047
   30464:	813fd626 	beq	r16,r4,303c0 <__subdf3+0x84>
   30468:	29402034 	orhi	r5,r5,128
   3046c:	01000e04 	movi	r4,56
   30470:	2080a316 	blt	r4,r2,30700 <__subdf3+0x3c4>
   30474:	010007c4 	movi	r4,31
   30478:	2080c616 	blt	r4,r2,30794 <__subdf3+0x458>
   3047c:	01000804 	movi	r4,32
   30480:	2089c83a 	sub	r4,r4,r2
   30484:	2910983a 	sll	r8,r5,r4
   30488:	308ed83a 	srl	r7,r6,r2
   3048c:	3108983a 	sll	r4,r6,r4
   30490:	2884d83a 	srl	r2,r5,r2
   30494:	41ccb03a 	or	r6,r8,r7
   30498:	2008c03a 	cmpne	r4,r4,zero
   3049c:	310cb03a 	or	r6,r6,r4
   304a0:	898dc83a 	sub	r6,r17,r6
   304a4:	89a3803a 	cmpltu	r17,r17,r6
   304a8:	1887c83a 	sub	r3,r3,r2
   304ac:	1c47c83a 	sub	r3,r3,r17
   304b0:	3023883a 	mov	r17,r6
   304b4:	1880202c 	andhi	r2,r3,128
   304b8:	10002326 	beq	r2,zero,30548 <__subdf3+0x20c>
   304bc:	04c02034 	movhi	r19,128
   304c0:	9cffffc4 	addi	r19,r19,-1
   304c4:	1ce6703a 	and	r19,r3,r19
   304c8:	98007a26 	beq	r19,zero,306b4 <__subdf3+0x378>
   304cc:	9809883a 	mov	r4,r19
   304d0:	0030e3c0 	call	30e3c <__clzsi2>
   304d4:	113ffe04 	addi	r4,r2,-8
   304d8:	00c007c4 	movi	r3,31
   304dc:	19007b16 	blt	r3,r4,306cc <__subdf3+0x390>
   304e0:	00800804 	movi	r2,32
   304e4:	1105c83a 	sub	r2,r2,r4
   304e8:	8884d83a 	srl	r2,r17,r2
   304ec:	9906983a 	sll	r3,r19,r4
   304f0:	8922983a 	sll	r17,r17,r4
   304f4:	10c4b03a 	or	r2,r2,r3
   304f8:	24007816 	blt	r4,r16,306dc <__subdf3+0x3a0>
   304fc:	2421c83a 	sub	r16,r4,r16
   30500:	80c00044 	addi	r3,r16,1
   30504:	010007c4 	movi	r4,31
   30508:	20c09516 	blt	r4,r3,30760 <__subdf3+0x424>
   3050c:	01400804 	movi	r5,32
   30510:	28cbc83a 	sub	r5,r5,r3
   30514:	88c8d83a 	srl	r4,r17,r3
   30518:	8962983a 	sll	r17,r17,r5
   3051c:	114a983a 	sll	r5,r2,r5
   30520:	10c6d83a 	srl	r3,r2,r3
   30524:	8804c03a 	cmpne	r2,r17,zero
   30528:	290ab03a 	or	r5,r5,r4
   3052c:	28a2b03a 	or	r17,r5,r2
   30530:	0021883a 	mov	r16,zero
   30534:	003fa206 	br	303c0 <__subdf3+0x84>
   30538:	2090b03a 	or	r8,r4,r2
   3053c:	40018e26 	beq	r8,zero,30b78 <__subdf3+0x83c>
   30540:	1007883a 	mov	r3,r2
   30544:	2023883a 	mov	r17,r4
   30548:	888001cc 	andi	r2,r17,7
   3054c:	103f9e1e 	bne	r2,zero,303c8 <__subdf3+0x8c>
   30550:	1804977a 	slli	r2,r3,29
   30554:	8822d0fa 	srli	r17,r17,3
   30558:	1810d0fa 	srli	r8,r3,3
   3055c:	9100004c 	andi	r4,r18,1
   30560:	1444b03a 	or	r2,r2,r17
   30564:	00c1ffc4 	movi	r3,2047
   30568:	80c02826 	beq	r16,r3,3060c <__subdf3+0x2d0>
   3056c:	01400434 	movhi	r5,16
   30570:	297fffc4 	addi	r5,r5,-1
   30574:	80e0703a 	and	r16,r16,r3
   30578:	414a703a 	and	r5,r8,r5
   3057c:	003fa806 	br	30420 <__subdf3+0xe4>
   30580:	0080630e 	bge	zero,r2,30710 <__subdf3+0x3d4>
   30584:	48003026 	beq	r9,zero,30648 <__subdf3+0x30c>
   30588:	0101ffc4 	movi	r4,2047
   3058c:	813f8c26 	beq	r16,r4,303c0 <__subdf3+0x84>
   30590:	29402034 	orhi	r5,r5,128
   30594:	01000e04 	movi	r4,56
   30598:	2080a90e 	bge	r4,r2,30840 <__subdf3+0x504>
   3059c:	298cb03a 	or	r6,r5,r6
   305a0:	3012c03a 	cmpne	r9,r6,zero
   305a4:	0005883a 	mov	r2,zero
   305a8:	4c53883a 	add	r9,r9,r17
   305ac:	4c63803a 	cmpltu	r17,r9,r17
   305b0:	10c7883a 	add	r3,r2,r3
   305b4:	88c7883a 	add	r3,r17,r3
   305b8:	4823883a 	mov	r17,r9
   305bc:	1880202c 	andhi	r2,r3,128
   305c0:	1000d026 	beq	r2,zero,30904 <__subdf3+0x5c8>
   305c4:	84000044 	addi	r16,r16,1
   305c8:	0081ffc4 	movi	r2,2047
   305cc:	8080fe26 	beq	r16,r2,309c8 <__subdf3+0x68c>
   305d0:	00bfe034 	movhi	r2,65408
   305d4:	10bfffc4 	addi	r2,r2,-1
   305d8:	1886703a 	and	r3,r3,r2
   305dc:	880ad07a 	srli	r5,r17,1
   305e0:	180497fa 	slli	r2,r3,31
   305e4:	8900004c 	andi	r4,r17,1
   305e8:	2922b03a 	or	r17,r5,r4
   305ec:	1806d07a 	srli	r3,r3,1
   305f0:	1462b03a 	or	r17,r2,r17
   305f4:	3825883a 	mov	r18,r7
   305f8:	003f7106 	br	303c0 <__subdf3+0x84>
   305fc:	2984b03a 	or	r2,r5,r6
   30600:	103f6826 	beq	r2,zero,303a4 <__subdf3+0x68>
   30604:	39c03fcc 	andi	r7,r7,255
   30608:	003f6706 	br	303a8 <__subdf3+0x6c>
   3060c:	4086b03a 	or	r3,r8,r2
   30610:	18015226 	beq	r3,zero,30b5c <__subdf3+0x820>
   30614:	00c00434 	movhi	r3,16
   30618:	41400234 	orhi	r5,r8,8
   3061c:	18ffffc4 	addi	r3,r3,-1
   30620:	28ca703a 	and	r5,r5,r3
   30624:	003f7e06 	br	30420 <__subdf3+0xe4>
   30628:	10bfffc4 	addi	r2,r2,-1
   3062c:	1000491e 	bne	r2,zero,30754 <__subdf3+0x418>
   30630:	898fc83a 	sub	r7,r17,r6
   30634:	89e3803a 	cmpltu	r17,r17,r7
   30638:	1947c83a 	sub	r3,r3,r5
   3063c:	1c47c83a 	sub	r3,r3,r17
   30640:	3823883a 	mov	r17,r7
   30644:	003f9b06 	br	304b4 <__subdf3+0x178>
   30648:	2988b03a 	or	r4,r5,r6
   3064c:	203f5c26 	beq	r4,zero,303c0 <__subdf3+0x84>
   30650:	10bfffc4 	addi	r2,r2,-1
   30654:	1000931e 	bne	r2,zero,308a4 <__subdf3+0x568>
   30658:	898d883a 	add	r6,r17,r6
   3065c:	3463803a 	cmpltu	r17,r6,r17
   30660:	1947883a 	add	r3,r3,r5
   30664:	88c7883a 	add	r3,r17,r3
   30668:	3023883a 	mov	r17,r6
   3066c:	003fd306 	br	305bc <__subdf3+0x280>
   30670:	1000541e 	bne	r2,zero,307c4 <__subdf3+0x488>
   30674:	80800044 	addi	r2,r16,1
   30678:	1081ffcc 	andi	r2,r2,2047
   3067c:	01000044 	movi	r4,1
   30680:	2080a20e 	bge	r4,r2,3090c <__subdf3+0x5d0>
   30684:	8989c83a 	sub	r4,r17,r6
   30688:	8905803a 	cmpltu	r2,r17,r4
   3068c:	1967c83a 	sub	r19,r3,r5
   30690:	98a7c83a 	sub	r19,r19,r2
   30694:	9880202c 	andhi	r2,r19,128
   30698:	10006326 	beq	r2,zero,30828 <__subdf3+0x4ec>
   3069c:	3463c83a 	sub	r17,r6,r17
   306a0:	28c7c83a 	sub	r3,r5,r3
   306a4:	344d803a 	cmpltu	r6,r6,r17
   306a8:	19a7c83a 	sub	r19,r3,r6
   306ac:	3825883a 	mov	r18,r7
   306b0:	983f861e 	bne	r19,zero,304cc <__subdf3+0x190>
   306b4:	8809883a 	mov	r4,r17
   306b8:	0030e3c0 	call	30e3c <__clzsi2>
   306bc:	10800804 	addi	r2,r2,32
   306c0:	113ffe04 	addi	r4,r2,-8
   306c4:	00c007c4 	movi	r3,31
   306c8:	193f850e 	bge	r3,r4,304e0 <__subdf3+0x1a4>
   306cc:	10bff604 	addi	r2,r2,-40
   306d0:	8884983a 	sll	r2,r17,r2
   306d4:	0023883a 	mov	r17,zero
   306d8:	243f880e 	bge	r4,r16,304fc <__subdf3+0x1c0>
   306dc:	00ffe034 	movhi	r3,65408
   306e0:	18ffffc4 	addi	r3,r3,-1
   306e4:	8121c83a 	sub	r16,r16,r4
   306e8:	10c6703a 	and	r3,r2,r3
   306ec:	003f3406 	br	303c0 <__subdf3+0x84>
   306f0:	9100004c 	andi	r4,r18,1
   306f4:	000b883a 	mov	r5,zero
   306f8:	0005883a 	mov	r2,zero
   306fc:	003f4806 	br	30420 <__subdf3+0xe4>
   30700:	298cb03a 	or	r6,r5,r6
   30704:	300cc03a 	cmpne	r6,r6,zero
   30708:	0005883a 	mov	r2,zero
   3070c:	003f6406 	br	304a0 <__subdf3+0x164>
   30710:	10009a1e 	bne	r2,zero,3097c <__subdf3+0x640>
   30714:	82400044 	addi	r9,r16,1
   30718:	4881ffcc 	andi	r2,r9,2047
   3071c:	02800044 	movi	r10,1
   30720:	5080670e 	bge	r10,r2,308c0 <__subdf3+0x584>
   30724:	0081ffc4 	movi	r2,2047
   30728:	4880af26 	beq	r9,r2,309e8 <__subdf3+0x6ac>
   3072c:	898d883a 	add	r6,r17,r6
   30730:	1945883a 	add	r2,r3,r5
   30734:	3447803a 	cmpltu	r3,r6,r17
   30738:	1887883a 	add	r3,r3,r2
   3073c:	182297fa 	slli	r17,r3,31
   30740:	300cd07a 	srli	r6,r6,1
   30744:	1806d07a 	srli	r3,r3,1
   30748:	4821883a 	mov	r16,r9
   3074c:	89a2b03a 	or	r17,r17,r6
   30750:	003f1b06 	br	303c0 <__subdf3+0x84>
   30754:	0101ffc4 	movi	r4,2047
   30758:	813f441e 	bne	r16,r4,3046c <__subdf3+0x130>
   3075c:	003f1806 	br	303c0 <__subdf3+0x84>
   30760:	843ff844 	addi	r16,r16,-31
   30764:	01400804 	movi	r5,32
   30768:	1408d83a 	srl	r4,r2,r16
   3076c:	19405026 	beq	r3,r5,308b0 <__subdf3+0x574>
   30770:	01401004 	movi	r5,64
   30774:	28c7c83a 	sub	r3,r5,r3
   30778:	10c4983a 	sll	r2,r2,r3
   3077c:	88a2b03a 	or	r17,r17,r2
   30780:	8822c03a 	cmpne	r17,r17,zero
   30784:	2462b03a 	or	r17,r4,r17
   30788:	0007883a 	mov	r3,zero
   3078c:	0021883a 	mov	r16,zero
   30790:	003f6d06 	br	30548 <__subdf3+0x20c>
   30794:	11fff804 	addi	r7,r2,-32
   30798:	01000804 	movi	r4,32
   3079c:	29ced83a 	srl	r7,r5,r7
   307a0:	11004526 	beq	r2,r4,308b8 <__subdf3+0x57c>
   307a4:	01001004 	movi	r4,64
   307a8:	2089c83a 	sub	r4,r4,r2
   307ac:	2904983a 	sll	r2,r5,r4
   307b0:	118cb03a 	or	r6,r2,r6
   307b4:	300cc03a 	cmpne	r6,r6,zero
   307b8:	398cb03a 	or	r6,r7,r6
   307bc:	0005883a 	mov	r2,zero
   307c0:	003f3706 	br	304a0 <__subdf3+0x164>
   307c4:	80002a26 	beq	r16,zero,30870 <__subdf3+0x534>
   307c8:	0101ffc4 	movi	r4,2047
   307cc:	49006626 	beq	r9,r4,30968 <__subdf3+0x62c>
   307d0:	0085c83a 	sub	r2,zero,r2
   307d4:	18c02034 	orhi	r3,r3,128
   307d8:	01000e04 	movi	r4,56
   307dc:	20807e16 	blt	r4,r2,309d8 <__subdf3+0x69c>
   307e0:	010007c4 	movi	r4,31
   307e4:	2080e716 	blt	r4,r2,30b84 <__subdf3+0x848>
   307e8:	01000804 	movi	r4,32
   307ec:	2089c83a 	sub	r4,r4,r2
   307f0:	1914983a 	sll	r10,r3,r4
   307f4:	8890d83a 	srl	r8,r17,r2
   307f8:	8908983a 	sll	r4,r17,r4
   307fc:	1884d83a 	srl	r2,r3,r2
   30800:	5222b03a 	or	r17,r10,r8
   30804:	2006c03a 	cmpne	r3,r4,zero
   30808:	88e2b03a 	or	r17,r17,r3
   3080c:	3463c83a 	sub	r17,r6,r17
   30810:	2885c83a 	sub	r2,r5,r2
   30814:	344d803a 	cmpltu	r6,r6,r17
   30818:	1187c83a 	sub	r3,r2,r6
   3081c:	4821883a 	mov	r16,r9
   30820:	3825883a 	mov	r18,r7
   30824:	003f2306 	br	304b4 <__subdf3+0x178>
   30828:	24d0b03a 	or	r8,r4,r19
   3082c:	40001b1e 	bne	r8,zero,3089c <__subdf3+0x560>
   30830:	0005883a 	mov	r2,zero
   30834:	0009883a 	mov	r4,zero
   30838:	0021883a 	mov	r16,zero
   3083c:	003f4906 	br	30564 <__subdf3+0x228>
   30840:	010007c4 	movi	r4,31
   30844:	20803a16 	blt	r4,r2,30930 <__subdf3+0x5f4>
   30848:	01000804 	movi	r4,32
   3084c:	2089c83a 	sub	r4,r4,r2
   30850:	2912983a 	sll	r9,r5,r4
   30854:	3090d83a 	srl	r8,r6,r2
   30858:	3108983a 	sll	r4,r6,r4
   3085c:	2884d83a 	srl	r2,r5,r2
   30860:	4a12b03a 	or	r9,r9,r8
   30864:	2008c03a 	cmpne	r4,r4,zero
   30868:	4912b03a 	or	r9,r9,r4
   3086c:	003f4e06 	br	305a8 <__subdf3+0x26c>
   30870:	1c48b03a 	or	r4,r3,r17
   30874:	20003c26 	beq	r4,zero,30968 <__subdf3+0x62c>
   30878:	0084303a 	nor	r2,zero,r2
   3087c:	1000381e 	bne	r2,zero,30960 <__subdf3+0x624>
   30880:	3463c83a 	sub	r17,r6,r17
   30884:	28c5c83a 	sub	r2,r5,r3
   30888:	344d803a 	cmpltu	r6,r6,r17
   3088c:	1187c83a 	sub	r3,r2,r6
   30890:	4821883a 	mov	r16,r9
   30894:	3825883a 	mov	r18,r7
   30898:	003f0606 	br	304b4 <__subdf3+0x178>
   3089c:	2023883a 	mov	r17,r4
   308a0:	003f0906 	br	304c8 <__subdf3+0x18c>
   308a4:	0101ffc4 	movi	r4,2047
   308a8:	813f3a1e 	bne	r16,r4,30594 <__subdf3+0x258>
   308ac:	003ec406 	br	303c0 <__subdf3+0x84>
   308b0:	0005883a 	mov	r2,zero
   308b4:	003fb106 	br	3077c <__subdf3+0x440>
   308b8:	0005883a 	mov	r2,zero
   308bc:	003fbc06 	br	307b0 <__subdf3+0x474>
   308c0:	1c44b03a 	or	r2,r3,r17
   308c4:	80008e1e 	bne	r16,zero,30b00 <__subdf3+0x7c4>
   308c8:	1000c826 	beq	r2,zero,30bec <__subdf3+0x8b0>
   308cc:	2984b03a 	or	r2,r5,r6
   308d0:	103ebb26 	beq	r2,zero,303c0 <__subdf3+0x84>
   308d4:	8989883a 	add	r4,r17,r6
   308d8:	1945883a 	add	r2,r3,r5
   308dc:	2447803a 	cmpltu	r3,r4,r17
   308e0:	1887883a 	add	r3,r3,r2
   308e4:	1880202c 	andhi	r2,r3,128
   308e8:	2023883a 	mov	r17,r4
   308ec:	103f1626 	beq	r2,zero,30548 <__subdf3+0x20c>
   308f0:	00bfe034 	movhi	r2,65408
   308f4:	10bfffc4 	addi	r2,r2,-1
   308f8:	5021883a 	mov	r16,r10
   308fc:	1886703a 	and	r3,r3,r2
   30900:	003eaf06 	br	303c0 <__subdf3+0x84>
   30904:	3825883a 	mov	r18,r7
   30908:	003f0f06 	br	30548 <__subdf3+0x20c>
   3090c:	1c44b03a 	or	r2,r3,r17
   30910:	8000251e 	bne	r16,zero,309a8 <__subdf3+0x66c>
   30914:	1000661e 	bne	r2,zero,30ab0 <__subdf3+0x774>
   30918:	2990b03a 	or	r8,r5,r6
   3091c:	40009626 	beq	r8,zero,30b78 <__subdf3+0x83c>
   30920:	2807883a 	mov	r3,r5
   30924:	3023883a 	mov	r17,r6
   30928:	3825883a 	mov	r18,r7
   3092c:	003ea406 	br	303c0 <__subdf3+0x84>
   30930:	127ff804 	addi	r9,r2,-32
   30934:	01000804 	movi	r4,32
   30938:	2a52d83a 	srl	r9,r5,r9
   3093c:	11008c26 	beq	r2,r4,30b70 <__subdf3+0x834>
   30940:	01001004 	movi	r4,64
   30944:	2085c83a 	sub	r2,r4,r2
   30948:	2884983a 	sll	r2,r5,r2
   3094c:	118cb03a 	or	r6,r2,r6
   30950:	300cc03a 	cmpne	r6,r6,zero
   30954:	4992b03a 	or	r9,r9,r6
   30958:	0005883a 	mov	r2,zero
   3095c:	003f1206 	br	305a8 <__subdf3+0x26c>
   30960:	0101ffc4 	movi	r4,2047
   30964:	493f9c1e 	bne	r9,r4,307d8 <__subdf3+0x49c>
   30968:	2807883a 	mov	r3,r5
   3096c:	3023883a 	mov	r17,r6
   30970:	4821883a 	mov	r16,r9
   30974:	3825883a 	mov	r18,r7
   30978:	003e9106 	br	303c0 <__subdf3+0x84>
   3097c:	80001f1e 	bne	r16,zero,309fc <__subdf3+0x6c0>
   30980:	1c48b03a 	or	r4,r3,r17
   30984:	20005a26 	beq	r4,zero,30af0 <__subdf3+0x7b4>
   30988:	0084303a 	nor	r2,zero,r2
   3098c:	1000561e 	bne	r2,zero,30ae8 <__subdf3+0x7ac>
   30990:	89a3883a 	add	r17,r17,r6
   30994:	1945883a 	add	r2,r3,r5
   30998:	898d803a 	cmpltu	r6,r17,r6
   3099c:	3087883a 	add	r3,r6,r2
   309a0:	4821883a 	mov	r16,r9
   309a4:	003f0506 	br	305bc <__subdf3+0x280>
   309a8:	10002b1e 	bne	r2,zero,30a58 <__subdf3+0x71c>
   309ac:	2984b03a 	or	r2,r5,r6
   309b0:	10008026 	beq	r2,zero,30bb4 <__subdf3+0x878>
   309b4:	2807883a 	mov	r3,r5
   309b8:	3023883a 	mov	r17,r6
   309bc:	3825883a 	mov	r18,r7
   309c0:	0401ffc4 	movi	r16,2047
   309c4:	003e7e06 	br	303c0 <__subdf3+0x84>
   309c8:	3809883a 	mov	r4,r7
   309cc:	0011883a 	mov	r8,zero
   309d0:	0005883a 	mov	r2,zero
   309d4:	003ee306 	br	30564 <__subdf3+0x228>
   309d8:	1c62b03a 	or	r17,r3,r17
   309dc:	8822c03a 	cmpne	r17,r17,zero
   309e0:	0005883a 	mov	r2,zero
   309e4:	003f8906 	br	3080c <__subdf3+0x4d0>
   309e8:	3809883a 	mov	r4,r7
   309ec:	4821883a 	mov	r16,r9
   309f0:	0011883a 	mov	r8,zero
   309f4:	0005883a 	mov	r2,zero
   309f8:	003eda06 	br	30564 <__subdf3+0x228>
   309fc:	0101ffc4 	movi	r4,2047
   30a00:	49003b26 	beq	r9,r4,30af0 <__subdf3+0x7b4>
   30a04:	0085c83a 	sub	r2,zero,r2
   30a08:	18c02034 	orhi	r3,r3,128
   30a0c:	01000e04 	movi	r4,56
   30a10:	20806e16 	blt	r4,r2,30bcc <__subdf3+0x890>
   30a14:	010007c4 	movi	r4,31
   30a18:	20807716 	blt	r4,r2,30bf8 <__subdf3+0x8bc>
   30a1c:	01000804 	movi	r4,32
   30a20:	2089c83a 	sub	r4,r4,r2
   30a24:	1914983a 	sll	r10,r3,r4
   30a28:	8890d83a 	srl	r8,r17,r2
   30a2c:	8908983a 	sll	r4,r17,r4
   30a30:	1884d83a 	srl	r2,r3,r2
   30a34:	5222b03a 	or	r17,r10,r8
   30a38:	2006c03a 	cmpne	r3,r4,zero
   30a3c:	88e2b03a 	or	r17,r17,r3
   30a40:	89a3883a 	add	r17,r17,r6
   30a44:	1145883a 	add	r2,r2,r5
   30a48:	898d803a 	cmpltu	r6,r17,r6
   30a4c:	3087883a 	add	r3,r6,r2
   30a50:	4821883a 	mov	r16,r9
   30a54:	003ed906 	br	305bc <__subdf3+0x280>
   30a58:	2984b03a 	or	r2,r5,r6
   30a5c:	10004226 	beq	r2,zero,30b68 <__subdf3+0x82c>
   30a60:	1808d0fa 	srli	r4,r3,3
   30a64:	8822d0fa 	srli	r17,r17,3
   30a68:	1806977a 	slli	r3,r3,29
   30a6c:	2080022c 	andhi	r2,r4,8
   30a70:	1c62b03a 	or	r17,r3,r17
   30a74:	10000826 	beq	r2,zero,30a98 <__subdf3+0x75c>
   30a78:	2812d0fa 	srli	r9,r5,3
   30a7c:	4880022c 	andhi	r2,r9,8
   30a80:	1000051e 	bne	r2,zero,30a98 <__subdf3+0x75c>
   30a84:	300cd0fa 	srli	r6,r6,3
   30a88:	2804977a 	slli	r2,r5,29
   30a8c:	4809883a 	mov	r4,r9
   30a90:	3825883a 	mov	r18,r7
   30a94:	11a2b03a 	or	r17,r2,r6
   30a98:	8806d77a 	srli	r3,r17,29
   30a9c:	200890fa 	slli	r4,r4,3
   30aa0:	882290fa 	slli	r17,r17,3
   30aa4:	0401ffc4 	movi	r16,2047
   30aa8:	1906b03a 	or	r3,r3,r4
   30aac:	003e4406 	br	303c0 <__subdf3+0x84>
   30ab0:	2984b03a 	or	r2,r5,r6
   30ab4:	103e4226 	beq	r2,zero,303c0 <__subdf3+0x84>
   30ab8:	8989c83a 	sub	r4,r17,r6
   30abc:	8911803a 	cmpltu	r8,r17,r4
   30ac0:	1945c83a 	sub	r2,r3,r5
   30ac4:	1205c83a 	sub	r2,r2,r8
   30ac8:	1200202c 	andhi	r8,r2,128
   30acc:	403e9a26 	beq	r8,zero,30538 <__subdf3+0x1fc>
   30ad0:	3463c83a 	sub	r17,r6,r17
   30ad4:	28c5c83a 	sub	r2,r5,r3
   30ad8:	344d803a 	cmpltu	r6,r6,r17
   30adc:	1187c83a 	sub	r3,r2,r6
   30ae0:	3825883a 	mov	r18,r7
   30ae4:	003e3606 	br	303c0 <__subdf3+0x84>
   30ae8:	0101ffc4 	movi	r4,2047
   30aec:	493fc71e 	bne	r9,r4,30a0c <__subdf3+0x6d0>
   30af0:	2807883a 	mov	r3,r5
   30af4:	3023883a 	mov	r17,r6
   30af8:	4821883a 	mov	r16,r9
   30afc:	003e3006 	br	303c0 <__subdf3+0x84>
   30b00:	10003626 	beq	r2,zero,30bdc <__subdf3+0x8a0>
   30b04:	2984b03a 	or	r2,r5,r6
   30b08:	10001726 	beq	r2,zero,30b68 <__subdf3+0x82c>
   30b0c:	1808d0fa 	srli	r4,r3,3
   30b10:	8822d0fa 	srli	r17,r17,3
   30b14:	1806977a 	slli	r3,r3,29
   30b18:	2080022c 	andhi	r2,r4,8
   30b1c:	1c62b03a 	or	r17,r3,r17
   30b20:	10000726 	beq	r2,zero,30b40 <__subdf3+0x804>
   30b24:	2812d0fa 	srli	r9,r5,3
   30b28:	4880022c 	andhi	r2,r9,8
   30b2c:	1000041e 	bne	r2,zero,30b40 <__subdf3+0x804>
   30b30:	300cd0fa 	srli	r6,r6,3
   30b34:	2804977a 	slli	r2,r5,29
   30b38:	4809883a 	mov	r4,r9
   30b3c:	11a2b03a 	or	r17,r2,r6
   30b40:	8806d77a 	srli	r3,r17,29
   30b44:	200890fa 	slli	r4,r4,3
   30b48:	882290fa 	slli	r17,r17,3
   30b4c:	3825883a 	mov	r18,r7
   30b50:	1906b03a 	or	r3,r3,r4
   30b54:	0401ffc4 	movi	r16,2047
   30b58:	003e1906 	br	303c0 <__subdf3+0x84>
   30b5c:	000b883a 	mov	r5,zero
   30b60:	0005883a 	mov	r2,zero
   30b64:	003e2e06 	br	30420 <__subdf3+0xe4>
   30b68:	0401ffc4 	movi	r16,2047
   30b6c:	003e1406 	br	303c0 <__subdf3+0x84>
   30b70:	0005883a 	mov	r2,zero
   30b74:	003f7506 	br	3094c <__subdf3+0x610>
   30b78:	0005883a 	mov	r2,zero
   30b7c:	0009883a 	mov	r4,zero
   30b80:	003e7806 	br	30564 <__subdf3+0x228>
   30b84:	123ff804 	addi	r8,r2,-32
   30b88:	01000804 	movi	r4,32
   30b8c:	1a10d83a 	srl	r8,r3,r8
   30b90:	11002526 	beq	r2,r4,30c28 <__subdf3+0x8ec>
   30b94:	01001004 	movi	r4,64
   30b98:	2085c83a 	sub	r2,r4,r2
   30b9c:	1884983a 	sll	r2,r3,r2
   30ba0:	1444b03a 	or	r2,r2,r17
   30ba4:	1004c03a 	cmpne	r2,r2,zero
   30ba8:	40a2b03a 	or	r17,r8,r2
   30bac:	0005883a 	mov	r2,zero
   30bb0:	003f1606 	br	3080c <__subdf3+0x4d0>
   30bb4:	02000434 	movhi	r8,16
   30bb8:	0009883a 	mov	r4,zero
   30bbc:	423fffc4 	addi	r8,r8,-1
   30bc0:	00bfffc4 	movi	r2,-1
   30bc4:	0401ffc4 	movi	r16,2047
   30bc8:	003e6606 	br	30564 <__subdf3+0x228>
   30bcc:	1c62b03a 	or	r17,r3,r17
   30bd0:	8822c03a 	cmpne	r17,r17,zero
   30bd4:	0005883a 	mov	r2,zero
   30bd8:	003f9906 	br	30a40 <__subdf3+0x704>
   30bdc:	2807883a 	mov	r3,r5
   30be0:	3023883a 	mov	r17,r6
   30be4:	0401ffc4 	movi	r16,2047
   30be8:	003df506 	br	303c0 <__subdf3+0x84>
   30bec:	2807883a 	mov	r3,r5
   30bf0:	3023883a 	mov	r17,r6
   30bf4:	003df206 	br	303c0 <__subdf3+0x84>
   30bf8:	123ff804 	addi	r8,r2,-32
   30bfc:	01000804 	movi	r4,32
   30c00:	1a10d83a 	srl	r8,r3,r8
   30c04:	11000a26 	beq	r2,r4,30c30 <__subdf3+0x8f4>
   30c08:	01001004 	movi	r4,64
   30c0c:	2085c83a 	sub	r2,r4,r2
   30c10:	1884983a 	sll	r2,r3,r2
   30c14:	1444b03a 	or	r2,r2,r17
   30c18:	1004c03a 	cmpne	r2,r2,zero
   30c1c:	40a2b03a 	or	r17,r8,r2
   30c20:	0005883a 	mov	r2,zero
   30c24:	003f8606 	br	30a40 <__subdf3+0x704>
   30c28:	0005883a 	mov	r2,zero
   30c2c:	003fdc06 	br	30ba0 <__subdf3+0x864>
   30c30:	0005883a 	mov	r2,zero
   30c34:	003ff706 	br	30c14 <__subdf3+0x8d8>

00030c38 <__fixdfsi>:
   30c38:	280cd53a 	srli	r6,r5,20
   30c3c:	00c00434 	movhi	r3,16
   30c40:	18ffffc4 	addi	r3,r3,-1
   30c44:	3181ffcc 	andi	r6,r6,2047
   30c48:	01c0ff84 	movi	r7,1022
   30c4c:	28c6703a 	and	r3,r5,r3
   30c50:	280ad7fa 	srli	r5,r5,31
   30c54:	3980120e 	bge	r7,r6,30ca0 <__fixdfsi+0x68>
   30c58:	00810744 	movi	r2,1053
   30c5c:	11800c16 	blt	r2,r6,30c90 <__fixdfsi+0x58>
   30c60:	00810cc4 	movi	r2,1075
   30c64:	1185c83a 	sub	r2,r2,r6
   30c68:	01c007c4 	movi	r7,31
   30c6c:	18c00434 	orhi	r3,r3,16
   30c70:	38800d16 	blt	r7,r2,30ca8 <__fixdfsi+0x70>
   30c74:	31befb44 	addi	r6,r6,-1043
   30c78:	2084d83a 	srl	r2,r4,r2
   30c7c:	1986983a 	sll	r3,r3,r6
   30c80:	1884b03a 	or	r2,r3,r2
   30c84:	28000726 	beq	r5,zero,30ca4 <__fixdfsi+0x6c>
   30c88:	0085c83a 	sub	r2,zero,r2
   30c8c:	f800283a 	ret
   30c90:	00a00034 	movhi	r2,32768
   30c94:	10bfffc4 	addi	r2,r2,-1
   30c98:	2885883a 	add	r2,r5,r2
   30c9c:	f800283a 	ret
   30ca0:	0005883a 	mov	r2,zero
   30ca4:	f800283a 	ret
   30ca8:	008104c4 	movi	r2,1043
   30cac:	1185c83a 	sub	r2,r2,r6
   30cb0:	1884d83a 	srl	r2,r3,r2
   30cb4:	003ff306 	br	30c84 <__fixdfsi+0x4c>

00030cb8 <__floatsidf>:
   30cb8:	defffd04 	addi	sp,sp,-12
   30cbc:	dfc00215 	stw	ra,8(sp)
   30cc0:	dc400115 	stw	r17,4(sp)
   30cc4:	dc000015 	stw	r16,0(sp)
   30cc8:	20002b26 	beq	r4,zero,30d78 <__floatsidf+0xc0>
   30ccc:	2023883a 	mov	r17,r4
   30cd0:	2020d7fa 	srli	r16,r4,31
   30cd4:	20002d16 	blt	r4,zero,30d8c <__floatsidf+0xd4>
   30cd8:	8809883a 	mov	r4,r17
   30cdc:	0030e3c0 	call	30e3c <__clzsi2>
   30ce0:	01410784 	movi	r5,1054
   30ce4:	288bc83a 	sub	r5,r5,r2
   30ce8:	01010cc4 	movi	r4,1075
   30cec:	2149c83a 	sub	r4,r4,r5
   30cf0:	00c007c4 	movi	r3,31
   30cf4:	1900160e 	bge	r3,r4,30d50 <__floatsidf+0x98>
   30cf8:	00c104c4 	movi	r3,1043
   30cfc:	1947c83a 	sub	r3,r3,r5
   30d00:	88c6983a 	sll	r3,r17,r3
   30d04:	00800434 	movhi	r2,16
   30d08:	10bfffc4 	addi	r2,r2,-1
   30d0c:	1886703a 	and	r3,r3,r2
   30d10:	2941ffcc 	andi	r5,r5,2047
   30d14:	800d883a 	mov	r6,r16
   30d18:	0005883a 	mov	r2,zero
   30d1c:	280a953a 	slli	r5,r5,20
   30d20:	31803fcc 	andi	r6,r6,255
   30d24:	01000434 	movhi	r4,16
   30d28:	300c97fa 	slli	r6,r6,31
   30d2c:	213fffc4 	addi	r4,r4,-1
   30d30:	1906703a 	and	r3,r3,r4
   30d34:	1946b03a 	or	r3,r3,r5
   30d38:	1986b03a 	or	r3,r3,r6
   30d3c:	dfc00217 	ldw	ra,8(sp)
   30d40:	dc400117 	ldw	r17,4(sp)
   30d44:	dc000017 	ldw	r16,0(sp)
   30d48:	dec00304 	addi	sp,sp,12
   30d4c:	f800283a 	ret
   30d50:	00c002c4 	movi	r3,11
   30d54:	1887c83a 	sub	r3,r3,r2
   30d58:	88c6d83a 	srl	r3,r17,r3
   30d5c:	8904983a 	sll	r2,r17,r4
   30d60:	01000434 	movhi	r4,16
   30d64:	213fffc4 	addi	r4,r4,-1
   30d68:	2941ffcc 	andi	r5,r5,2047
   30d6c:	1906703a 	and	r3,r3,r4
   30d70:	800d883a 	mov	r6,r16
   30d74:	003fe906 	br	30d1c <__floatsidf+0x64>
   30d78:	000d883a 	mov	r6,zero
   30d7c:	000b883a 	mov	r5,zero
   30d80:	0007883a 	mov	r3,zero
   30d84:	0005883a 	mov	r2,zero
   30d88:	003fe406 	br	30d1c <__floatsidf+0x64>
   30d8c:	0123c83a 	sub	r17,zero,r4
   30d90:	003fd106 	br	30cd8 <__floatsidf+0x20>

00030d94 <__floatunsidf>:
   30d94:	defffe04 	addi	sp,sp,-8
   30d98:	dc000015 	stw	r16,0(sp)
   30d9c:	dfc00115 	stw	ra,4(sp)
   30da0:	2021883a 	mov	r16,r4
   30da4:	20002226 	beq	r4,zero,30e30 <__floatunsidf+0x9c>
   30da8:	0030e3c0 	call	30e3c <__clzsi2>
   30dac:	01010784 	movi	r4,1054
   30db0:	2089c83a 	sub	r4,r4,r2
   30db4:	01810cc4 	movi	r6,1075
   30db8:	310dc83a 	sub	r6,r6,r4
   30dbc:	00c007c4 	movi	r3,31
   30dc0:	1980120e 	bge	r3,r6,30e0c <__floatunsidf+0x78>
   30dc4:	00c104c4 	movi	r3,1043
   30dc8:	1907c83a 	sub	r3,r3,r4
   30dcc:	80ca983a 	sll	r5,r16,r3
   30dd0:	00800434 	movhi	r2,16
   30dd4:	10bfffc4 	addi	r2,r2,-1
   30dd8:	2101ffcc 	andi	r4,r4,2047
   30ddc:	0021883a 	mov	r16,zero
   30de0:	288a703a 	and	r5,r5,r2
   30de4:	2008953a 	slli	r4,r4,20
   30de8:	00c00434 	movhi	r3,16
   30dec:	18ffffc4 	addi	r3,r3,-1
   30df0:	28c6703a 	and	r3,r5,r3
   30df4:	8005883a 	mov	r2,r16
   30df8:	1906b03a 	or	r3,r3,r4
   30dfc:	dfc00117 	ldw	ra,4(sp)
   30e00:	dc000017 	ldw	r16,0(sp)
   30e04:	dec00204 	addi	sp,sp,8
   30e08:	f800283a 	ret
   30e0c:	00c002c4 	movi	r3,11
   30e10:	188bc83a 	sub	r5,r3,r2
   30e14:	814ad83a 	srl	r5,r16,r5
   30e18:	00c00434 	movhi	r3,16
   30e1c:	18ffffc4 	addi	r3,r3,-1
   30e20:	81a0983a 	sll	r16,r16,r6
   30e24:	2101ffcc 	andi	r4,r4,2047
   30e28:	28ca703a 	and	r5,r5,r3
   30e2c:	003fed06 	br	30de4 <__floatunsidf+0x50>
   30e30:	0009883a 	mov	r4,zero
   30e34:	000b883a 	mov	r5,zero
   30e38:	003fea06 	br	30de4 <__floatunsidf+0x50>

00030e3c <__clzsi2>:
   30e3c:	00bfffd4 	movui	r2,65535
   30e40:	11000536 	bltu	r2,r4,30e58 <__clzsi2+0x1c>
   30e44:	00803fc4 	movi	r2,255
   30e48:	11000f36 	bltu	r2,r4,30e88 <__clzsi2+0x4c>
   30e4c:	00800804 	movi	r2,32
   30e50:	0007883a 	mov	r3,zero
   30e54:	00000506 	br	30e6c <__clzsi2+0x30>
   30e58:	00804034 	movhi	r2,256
   30e5c:	10bfffc4 	addi	r2,r2,-1
   30e60:	11000c2e 	bgeu	r2,r4,30e94 <__clzsi2+0x58>
   30e64:	00800204 	movi	r2,8
   30e68:	00c00604 	movi	r3,24
   30e6c:	20c8d83a 	srl	r4,r4,r3
   30e70:	00c000f4 	movhi	r3,3
   30e74:	18cea504 	addi	r3,r3,14996
   30e78:	1909883a 	add	r4,r3,r4
   30e7c:	20c00003 	ldbu	r3,0(r4)
   30e80:	10c5c83a 	sub	r2,r2,r3
   30e84:	f800283a 	ret
   30e88:	00800604 	movi	r2,24
   30e8c:	00c00204 	movi	r3,8
   30e90:	003ff606 	br	30e6c <__clzsi2+0x30>
   30e94:	00800404 	movi	r2,16
   30e98:	1007883a 	mov	r3,r2
   30e9c:	003ff306 	br	30e6c <__clzsi2+0x30>

00030ea0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30ea0:	defffe04 	addi	sp,sp,-8
   30ea4:	dfc00115 	stw	ra,4(sp)
   30ea8:	df000015 	stw	fp,0(sp)
   30eac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30eb0:	d0a00d17 	ldw	r2,-32716(gp)
   30eb4:	10000326 	beq	r2,zero,30ec4 <alt_get_errno+0x24>
   30eb8:	d0a00d17 	ldw	r2,-32716(gp)
   30ebc:	103ee83a 	callr	r2
   30ec0:	00000106 	br	30ec8 <alt_get_errno+0x28>
   30ec4:	d0a6d504 	addi	r2,gp,-25772
}
   30ec8:	e037883a 	mov	sp,fp
   30ecc:	dfc00117 	ldw	ra,4(sp)
   30ed0:	df000017 	ldw	fp,0(sp)
   30ed4:	dec00204 	addi	sp,sp,8
   30ed8:	f800283a 	ret

00030edc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   30edc:	defffb04 	addi	sp,sp,-20
   30ee0:	dfc00415 	stw	ra,16(sp)
   30ee4:	df000315 	stw	fp,12(sp)
   30ee8:	df000304 	addi	fp,sp,12
   30eec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   30ef0:	e0bfff17 	ldw	r2,-4(fp)
   30ef4:	10000616 	blt	r2,zero,30f10 <close+0x34>
   30ef8:	e0bfff17 	ldw	r2,-4(fp)
   30efc:	10c00324 	muli	r3,r2,12
   30f00:	008000f4 	movhi	r2,3
   30f04:	10912504 	addi	r2,r2,17556
   30f08:	1885883a 	add	r2,r3,r2
   30f0c:	00000106 	br	30f14 <close+0x38>
   30f10:	0005883a 	mov	r2,zero
   30f14:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   30f18:	e0bffd17 	ldw	r2,-12(fp)
   30f1c:	10001926 	beq	r2,zero,30f84 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   30f20:	e0bffd17 	ldw	r2,-12(fp)
   30f24:	10800017 	ldw	r2,0(r2)
   30f28:	10800417 	ldw	r2,16(r2)
   30f2c:	10000626 	beq	r2,zero,30f48 <close+0x6c>
   30f30:	e0bffd17 	ldw	r2,-12(fp)
   30f34:	10800017 	ldw	r2,0(r2)
   30f38:	10800417 	ldw	r2,16(r2)
   30f3c:	e13ffd17 	ldw	r4,-12(fp)
   30f40:	103ee83a 	callr	r2
   30f44:	00000106 	br	30f4c <close+0x70>
   30f48:	0005883a 	mov	r2,zero
   30f4c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   30f50:	e13fff17 	ldw	r4,-4(fp)
   30f54:	003183c0 	call	3183c <alt_release_fd>
    if (rval < 0)
   30f58:	e0bffe17 	ldw	r2,-8(fp)
   30f5c:	1000070e 	bge	r2,zero,30f7c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   30f60:	0030ea00 	call	30ea0 <alt_get_errno>
   30f64:	1007883a 	mov	r3,r2
   30f68:	e0bffe17 	ldw	r2,-8(fp)
   30f6c:	0085c83a 	sub	r2,zero,r2
   30f70:	18800015 	stw	r2,0(r3)
      return -1;
   30f74:	00bfffc4 	movi	r2,-1
   30f78:	00000706 	br	30f98 <close+0xbc>
    }
    return 0;
   30f7c:	0005883a 	mov	r2,zero
   30f80:	00000506 	br	30f98 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   30f84:	0030ea00 	call	30ea0 <alt_get_errno>
   30f88:	1007883a 	mov	r3,r2
   30f8c:	00801444 	movi	r2,81
   30f90:	18800015 	stw	r2,0(r3)
    return -1;
   30f94:	00bfffc4 	movi	r2,-1
  }
}
   30f98:	e037883a 	mov	sp,fp
   30f9c:	dfc00117 	ldw	ra,4(sp)
   30fa0:	df000017 	ldw	fp,0(sp)
   30fa4:	dec00204 	addi	sp,sp,8
   30fa8:	f800283a 	ret

00030fac <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   30fac:	defffc04 	addi	sp,sp,-16
   30fb0:	df000315 	stw	fp,12(sp)
   30fb4:	df000304 	addi	fp,sp,12
   30fb8:	e13ffd15 	stw	r4,-12(fp)
   30fbc:	e17ffe15 	stw	r5,-8(fp)
   30fc0:	e1bfff15 	stw	r6,-4(fp)
  return len;
   30fc4:	e0bfff17 	ldw	r2,-4(fp)
}
   30fc8:	e037883a 	mov	sp,fp
   30fcc:	df000017 	ldw	fp,0(sp)
   30fd0:	dec00104 	addi	sp,sp,4
   30fd4:	f800283a 	ret

00030fd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30fd8:	defffe04 	addi	sp,sp,-8
   30fdc:	dfc00115 	stw	ra,4(sp)
   30fe0:	df000015 	stw	fp,0(sp)
   30fe4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30fe8:	d0a00d17 	ldw	r2,-32716(gp)
   30fec:	10000326 	beq	r2,zero,30ffc <alt_get_errno+0x24>
   30ff0:	d0a00d17 	ldw	r2,-32716(gp)
   30ff4:	103ee83a 	callr	r2
   30ff8:	00000106 	br	31000 <alt_get_errno+0x28>
   30ffc:	d0a6d504 	addi	r2,gp,-25772
}
   31000:	e037883a 	mov	sp,fp
   31004:	dfc00117 	ldw	ra,4(sp)
   31008:	df000017 	ldw	fp,0(sp)
   3100c:	dec00204 	addi	sp,sp,8
   31010:	f800283a 	ret

00031014 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   31014:	defffb04 	addi	sp,sp,-20
   31018:	dfc00415 	stw	ra,16(sp)
   3101c:	df000315 	stw	fp,12(sp)
   31020:	df000304 	addi	fp,sp,12
   31024:	e13ffe15 	stw	r4,-8(fp)
   31028:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   3102c:	e0bffe17 	ldw	r2,-8(fp)
   31030:	10000616 	blt	r2,zero,3104c <fstat+0x38>
   31034:	e0bffe17 	ldw	r2,-8(fp)
   31038:	10c00324 	muli	r3,r2,12
   3103c:	008000f4 	movhi	r2,3
   31040:	10912504 	addi	r2,r2,17556
   31044:	1885883a 	add	r2,r3,r2
   31048:	00000106 	br	31050 <fstat+0x3c>
   3104c:	0005883a 	mov	r2,zero
   31050:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   31054:	e0bffd17 	ldw	r2,-12(fp)
   31058:	10001026 	beq	r2,zero,3109c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   3105c:	e0bffd17 	ldw	r2,-12(fp)
   31060:	10800017 	ldw	r2,0(r2)
   31064:	10800817 	ldw	r2,32(r2)
   31068:	10000726 	beq	r2,zero,31088 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   3106c:	e0bffd17 	ldw	r2,-12(fp)
   31070:	10800017 	ldw	r2,0(r2)
   31074:	10800817 	ldw	r2,32(r2)
   31078:	e17fff17 	ldw	r5,-4(fp)
   3107c:	e13ffd17 	ldw	r4,-12(fp)
   31080:	103ee83a 	callr	r2
   31084:	00000a06 	br	310b0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   31088:	e0bfff17 	ldw	r2,-4(fp)
   3108c:	00c80004 	movi	r3,8192
   31090:	10c00115 	stw	r3,4(r2)
      return 0;
   31094:	0005883a 	mov	r2,zero
   31098:	00000506 	br	310b0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   3109c:	0030fd80 	call	30fd8 <alt_get_errno>
   310a0:	1007883a 	mov	r3,r2
   310a4:	00801444 	movi	r2,81
   310a8:	18800015 	stw	r2,0(r3)
    return -1;
   310ac:	00bfffc4 	movi	r2,-1
  }
}
   310b0:	e037883a 	mov	sp,fp
   310b4:	dfc00117 	ldw	ra,4(sp)
   310b8:	df000017 	ldw	fp,0(sp)
   310bc:	dec00204 	addi	sp,sp,8
   310c0:	f800283a 	ret

000310c4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   310c4:	defff904 	addi	sp,sp,-28
   310c8:	dfc00615 	stw	ra,24(sp)
   310cc:	df000515 	stw	fp,20(sp)
   310d0:	df000504 	addi	fp,sp,20
   310d4:	e13ffc15 	stw	r4,-16(fp)
   310d8:	e17ffd15 	stw	r5,-12(fp)
   310dc:	e1bffe15 	stw	r6,-8(fp)
   310e0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   310e4:	e0800217 	ldw	r2,8(fp)
   310e8:	d8800015 	stw	r2,0(sp)
   310ec:	e1ffff17 	ldw	r7,-4(fp)
   310f0:	e1bffe17 	ldw	r6,-8(fp)
   310f4:	e17ffd17 	ldw	r5,-12(fp)
   310f8:	e13ffc17 	ldw	r4,-16(fp)
   310fc:	00312740 	call	31274 <alt_iic_isr_register>
}  
   31100:	e037883a 	mov	sp,fp
   31104:	dfc00117 	ldw	ra,4(sp)
   31108:	df000017 	ldw	fp,0(sp)
   3110c:	dec00204 	addi	sp,sp,8
   31110:	f800283a 	ret

00031114 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   31114:	defff904 	addi	sp,sp,-28
   31118:	df000615 	stw	fp,24(sp)
   3111c:	df000604 	addi	fp,sp,24
   31120:	e13ffe15 	stw	r4,-8(fp)
   31124:	e17fff15 	stw	r5,-4(fp)
   31128:	e0bfff17 	ldw	r2,-4(fp)
   3112c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   31130:	0005303a 	rdctl	r2,status
   31134:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   31138:	e0fffb17 	ldw	r3,-20(fp)
   3113c:	00bfff84 	movi	r2,-2
   31140:	1884703a 	and	r2,r3,r2
   31144:	1001703a 	wrctl	status,r2
  
  return context;
   31148:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   3114c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   31150:	00c00044 	movi	r3,1
   31154:	e0bffa17 	ldw	r2,-24(fp)
   31158:	1884983a 	sll	r2,r3,r2
   3115c:	1007883a 	mov	r3,r2
   31160:	d0a6d617 	ldw	r2,-25768(gp)
   31164:	1884b03a 	or	r2,r3,r2
   31168:	d0a6d615 	stw	r2,-25768(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   3116c:	d0a6d617 	ldw	r2,-25768(gp)
   31170:	100170fa 	wrctl	ienable,r2
   31174:	e0bffc17 	ldw	r2,-16(fp)
   31178:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   3117c:	e0bffd17 	ldw	r2,-12(fp)
   31180:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   31184:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   31188:	0001883a 	nop
}
   3118c:	e037883a 	mov	sp,fp
   31190:	df000017 	ldw	fp,0(sp)
   31194:	dec00104 	addi	sp,sp,4
   31198:	f800283a 	ret

0003119c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   3119c:	defff904 	addi	sp,sp,-28
   311a0:	df000615 	stw	fp,24(sp)
   311a4:	df000604 	addi	fp,sp,24
   311a8:	e13ffe15 	stw	r4,-8(fp)
   311ac:	e17fff15 	stw	r5,-4(fp)
   311b0:	e0bfff17 	ldw	r2,-4(fp)
   311b4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   311b8:	0005303a 	rdctl	r2,status
   311bc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   311c0:	e0fffb17 	ldw	r3,-20(fp)
   311c4:	00bfff84 	movi	r2,-2
   311c8:	1884703a 	and	r2,r3,r2
   311cc:	1001703a 	wrctl	status,r2
  
  return context;
   311d0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   311d4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   311d8:	00c00044 	movi	r3,1
   311dc:	e0bffa17 	ldw	r2,-24(fp)
   311e0:	1884983a 	sll	r2,r3,r2
   311e4:	0084303a 	nor	r2,zero,r2
   311e8:	1007883a 	mov	r3,r2
   311ec:	d0a6d617 	ldw	r2,-25768(gp)
   311f0:	1884703a 	and	r2,r3,r2
   311f4:	d0a6d615 	stw	r2,-25768(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   311f8:	d0a6d617 	ldw	r2,-25768(gp)
   311fc:	100170fa 	wrctl	ienable,r2
   31200:	e0bffc17 	ldw	r2,-16(fp)
   31204:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   31208:	e0bffd17 	ldw	r2,-12(fp)
   3120c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   31210:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   31214:	0001883a 	nop
}
   31218:	e037883a 	mov	sp,fp
   3121c:	df000017 	ldw	fp,0(sp)
   31220:	dec00104 	addi	sp,sp,4
   31224:	f800283a 	ret

00031228 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   31228:	defffc04 	addi	sp,sp,-16
   3122c:	df000315 	stw	fp,12(sp)
   31230:	df000304 	addi	fp,sp,12
   31234:	e13ffe15 	stw	r4,-8(fp)
   31238:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   3123c:	000530fa 	rdctl	r2,ienable
   31240:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   31244:	00c00044 	movi	r3,1
   31248:	e0bfff17 	ldw	r2,-4(fp)
   3124c:	1884983a 	sll	r2,r3,r2
   31250:	1007883a 	mov	r3,r2
   31254:	e0bffd17 	ldw	r2,-12(fp)
   31258:	1884703a 	and	r2,r3,r2
   3125c:	1004c03a 	cmpne	r2,r2,zero
   31260:	10803fcc 	andi	r2,r2,255
}
   31264:	e037883a 	mov	sp,fp
   31268:	df000017 	ldw	fp,0(sp)
   3126c:	dec00104 	addi	sp,sp,4
   31270:	f800283a 	ret

00031274 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   31274:	defff504 	addi	sp,sp,-44
   31278:	dfc00a15 	stw	ra,40(sp)
   3127c:	df000915 	stw	fp,36(sp)
   31280:	df000904 	addi	fp,sp,36
   31284:	e13ffc15 	stw	r4,-16(fp)
   31288:	e17ffd15 	stw	r5,-12(fp)
   3128c:	e1bffe15 	stw	r6,-8(fp)
   31290:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   31294:	00bffa84 	movi	r2,-22
   31298:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   3129c:	e0bffd17 	ldw	r2,-12(fp)
   312a0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   312a4:	e0bff817 	ldw	r2,-32(fp)
   312a8:	10800808 	cmpgei	r2,r2,32
   312ac:	1000271e 	bne	r2,zero,3134c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   312b0:	0005303a 	rdctl	r2,status
   312b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   312b8:	e0fffb17 	ldw	r3,-20(fp)
   312bc:	00bfff84 	movi	r2,-2
   312c0:	1884703a 	and	r2,r3,r2
   312c4:	1001703a 	wrctl	status,r2
  
  return context;
   312c8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   312cc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   312d0:	008000f4 	movhi	r2,3
   312d4:	109c8404 	addi	r2,r2,29200
   312d8:	e0fff817 	ldw	r3,-32(fp)
   312dc:	180690fa 	slli	r3,r3,3
   312e0:	10c5883a 	add	r2,r2,r3
   312e4:	e0fffe17 	ldw	r3,-8(fp)
   312e8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   312ec:	008000f4 	movhi	r2,3
   312f0:	109c8404 	addi	r2,r2,29200
   312f4:	e0fff817 	ldw	r3,-32(fp)
   312f8:	180690fa 	slli	r3,r3,3
   312fc:	10c5883a 	add	r2,r2,r3
   31300:	10800104 	addi	r2,r2,4
   31304:	e0ffff17 	ldw	r3,-4(fp)
   31308:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   3130c:	e0bffe17 	ldw	r2,-8(fp)
   31310:	10000526 	beq	r2,zero,31328 <alt_iic_isr_register+0xb4>
   31314:	e0bff817 	ldw	r2,-32(fp)
   31318:	100b883a 	mov	r5,r2
   3131c:	e13ffc17 	ldw	r4,-16(fp)
   31320:	00311140 	call	31114 <alt_ic_irq_enable>
   31324:	00000406 	br	31338 <alt_iic_isr_register+0xc4>
   31328:	e0bff817 	ldw	r2,-32(fp)
   3132c:	100b883a 	mov	r5,r2
   31330:	e13ffc17 	ldw	r4,-16(fp)
   31334:	003119c0 	call	3119c <alt_ic_irq_disable>
   31338:	e0bff715 	stw	r2,-36(fp)
   3133c:	e0bffa17 	ldw	r2,-24(fp)
   31340:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   31344:	e0bff917 	ldw	r2,-28(fp)
   31348:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   3134c:	e0bff717 	ldw	r2,-36(fp)
}
   31350:	e037883a 	mov	sp,fp
   31354:	dfc00117 	ldw	ra,4(sp)
   31358:	df000017 	ldw	fp,0(sp)
   3135c:	dec00204 	addi	sp,sp,8
   31360:	f800283a 	ret

00031364 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31364:	defffe04 	addi	sp,sp,-8
   31368:	dfc00115 	stw	ra,4(sp)
   3136c:	df000015 	stw	fp,0(sp)
   31370:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31374:	d0a00d17 	ldw	r2,-32716(gp)
   31378:	10000326 	beq	r2,zero,31388 <alt_get_errno+0x24>
   3137c:	d0a00d17 	ldw	r2,-32716(gp)
   31380:	103ee83a 	callr	r2
   31384:	00000106 	br	3138c <alt_get_errno+0x28>
   31388:	d0a6d504 	addi	r2,gp,-25772
}
   3138c:	e037883a 	mov	sp,fp
   31390:	dfc00117 	ldw	ra,4(sp)
   31394:	df000017 	ldw	fp,0(sp)
   31398:	dec00204 	addi	sp,sp,8
   3139c:	f800283a 	ret

000313a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   313a0:	deffed04 	addi	sp,sp,-76
   313a4:	dfc01215 	stw	ra,72(sp)
   313a8:	df001115 	stw	fp,68(sp)
   313ac:	df001104 	addi	fp,sp,68
   313b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   313b4:	e0bfff17 	ldw	r2,-4(fp)
   313b8:	10000616 	blt	r2,zero,313d4 <isatty+0x34>
   313bc:	e0bfff17 	ldw	r2,-4(fp)
   313c0:	10c00324 	muli	r3,r2,12
   313c4:	008000f4 	movhi	r2,3
   313c8:	10912504 	addi	r2,r2,17556
   313cc:	1885883a 	add	r2,r3,r2
   313d0:	00000106 	br	313d8 <isatty+0x38>
   313d4:	0005883a 	mov	r2,zero
   313d8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   313dc:	e0bfef17 	ldw	r2,-68(fp)
   313e0:	10000e26 	beq	r2,zero,3141c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   313e4:	e0bfef17 	ldw	r2,-68(fp)
   313e8:	10800017 	ldw	r2,0(r2)
   313ec:	10800817 	ldw	r2,32(r2)
   313f0:	1000021e 	bne	r2,zero,313fc <isatty+0x5c>
    {
      return 1;
   313f4:	00800044 	movi	r2,1
   313f8:	00000d06 	br	31430 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   313fc:	e0bff004 	addi	r2,fp,-64
   31400:	100b883a 	mov	r5,r2
   31404:	e13fff17 	ldw	r4,-4(fp)
   31408:	00310140 	call	31014 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   3140c:	e0bff117 	ldw	r2,-60(fp)
   31410:	10880020 	cmpeqi	r2,r2,8192
   31414:	10803fcc 	andi	r2,r2,255
   31418:	00000506 	br	31430 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   3141c:	00313640 	call	31364 <alt_get_errno>
   31420:	1007883a 	mov	r3,r2
   31424:	00801444 	movi	r2,81
   31428:	18800015 	stw	r2,0(r3)
    return 0;
   3142c:	0005883a 	mov	r2,zero
  }
}
   31430:	e037883a 	mov	sp,fp
   31434:	dfc00117 	ldw	ra,4(sp)
   31438:	df000017 	ldw	fp,0(sp)
   3143c:	dec00204 	addi	sp,sp,8
   31440:	f800283a 	ret

00031444 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   31444:	defffc04 	addi	sp,sp,-16
   31448:	df000315 	stw	fp,12(sp)
   3144c:	df000304 	addi	fp,sp,12
   31450:	e13ffd15 	stw	r4,-12(fp)
   31454:	e17ffe15 	stw	r5,-8(fp)
   31458:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   3145c:	e0fffe17 	ldw	r3,-8(fp)
   31460:	e0bffd17 	ldw	r2,-12(fp)
   31464:	18800c26 	beq	r3,r2,31498 <alt_load_section+0x54>
  {
    while( to != end )
   31468:	00000806 	br	3148c <alt_load_section+0x48>
    {
      *to++ = *from++;
   3146c:	e0bffe17 	ldw	r2,-8(fp)
   31470:	10c00104 	addi	r3,r2,4
   31474:	e0fffe15 	stw	r3,-8(fp)
   31478:	e0fffd17 	ldw	r3,-12(fp)
   3147c:	19000104 	addi	r4,r3,4
   31480:	e13ffd15 	stw	r4,-12(fp)
   31484:	18c00017 	ldw	r3,0(r3)
   31488:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   3148c:	e0fffe17 	ldw	r3,-8(fp)
   31490:	e0bfff17 	ldw	r2,-4(fp)
   31494:	18bff51e 	bne	r3,r2,3146c <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   31498:	0001883a 	nop
   3149c:	e037883a 	mov	sp,fp
   314a0:	df000017 	ldw	fp,0(sp)
   314a4:	dec00104 	addi	sp,sp,4
   314a8:	f800283a 	ret

000314ac <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   314ac:	defffe04 	addi	sp,sp,-8
   314b0:	dfc00115 	stw	ra,4(sp)
   314b4:	df000015 	stw	fp,0(sp)
   314b8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   314bc:	018000f4 	movhi	r6,3
   314c0:	3195af04 	addi	r6,r6,22204
   314c4:	014000f4 	movhi	r5,3
   314c8:	294ef204 	addi	r5,r5,15304
   314cc:	010000f4 	movhi	r4,3
   314d0:	2115af04 	addi	r4,r4,22204
   314d4:	00314440 	call	31444 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   314d8:	018000b4 	movhi	r6,2
   314dc:	31809104 	addi	r6,r6,580
   314e0:	014000b4 	movhi	r5,2
   314e4:	29400804 	addi	r5,r5,32
   314e8:	010000b4 	movhi	r4,2
   314ec:	21000804 	addi	r4,r4,32
   314f0:	00314440 	call	31444 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   314f4:	018000f4 	movhi	r6,3
   314f8:	318ef204 	addi	r6,r6,15304
   314fc:	014000f4 	movhi	r5,3
   31500:	294dec04 	addi	r5,r5,14256
   31504:	010000f4 	movhi	r4,3
   31508:	210dec04 	addi	r4,r4,14256
   3150c:	00314440 	call	31444 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   31510:	00329640 	call	32964 <alt_dcache_flush_all>
  alt_icache_flush_all();
   31514:	0032b240 	call	32b24 <alt_icache_flush_all>
}
   31518:	0001883a 	nop
   3151c:	e037883a 	mov	sp,fp
   31520:	dfc00117 	ldw	ra,4(sp)
   31524:	df000017 	ldw	fp,0(sp)
   31528:	dec00204 	addi	sp,sp,8
   3152c:	f800283a 	ret

00031530 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31530:	defffe04 	addi	sp,sp,-8
   31534:	dfc00115 	stw	ra,4(sp)
   31538:	df000015 	stw	fp,0(sp)
   3153c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31540:	d0a00d17 	ldw	r2,-32716(gp)
   31544:	10000326 	beq	r2,zero,31554 <alt_get_errno+0x24>
   31548:	d0a00d17 	ldw	r2,-32716(gp)
   3154c:	103ee83a 	callr	r2
   31550:	00000106 	br	31558 <alt_get_errno+0x28>
   31554:	d0a6d504 	addi	r2,gp,-25772
}
   31558:	e037883a 	mov	sp,fp
   3155c:	dfc00117 	ldw	ra,4(sp)
   31560:	df000017 	ldw	fp,0(sp)
   31564:	dec00204 	addi	sp,sp,8
   31568:	f800283a 	ret

0003156c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   3156c:	defff904 	addi	sp,sp,-28
   31570:	dfc00615 	stw	ra,24(sp)
   31574:	df000515 	stw	fp,20(sp)
   31578:	df000504 	addi	fp,sp,20
   3157c:	e13ffd15 	stw	r4,-12(fp)
   31580:	e17ffe15 	stw	r5,-8(fp)
   31584:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   31588:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   3158c:	e0bffd17 	ldw	r2,-12(fp)
   31590:	10000616 	blt	r2,zero,315ac <lseek+0x40>
   31594:	e0bffd17 	ldw	r2,-12(fp)
   31598:	10c00324 	muli	r3,r2,12
   3159c:	008000f4 	movhi	r2,3
   315a0:	10912504 	addi	r2,r2,17556
   315a4:	1885883a 	add	r2,r3,r2
   315a8:	00000106 	br	315b0 <lseek+0x44>
   315ac:	0005883a 	mov	r2,zero
   315b0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   315b4:	e0bffc17 	ldw	r2,-16(fp)
   315b8:	10001026 	beq	r2,zero,315fc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   315bc:	e0bffc17 	ldw	r2,-16(fp)
   315c0:	10800017 	ldw	r2,0(r2)
   315c4:	10800717 	ldw	r2,28(r2)
   315c8:	10000926 	beq	r2,zero,315f0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   315cc:	e0bffc17 	ldw	r2,-16(fp)
   315d0:	10800017 	ldw	r2,0(r2)
   315d4:	10800717 	ldw	r2,28(r2)
   315d8:	e1bfff17 	ldw	r6,-4(fp)
   315dc:	e17ffe17 	ldw	r5,-8(fp)
   315e0:	e13ffc17 	ldw	r4,-16(fp)
   315e4:	103ee83a 	callr	r2
   315e8:	e0bffb15 	stw	r2,-20(fp)
   315ec:	00000506 	br	31604 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   315f0:	00bfde84 	movi	r2,-134
   315f4:	e0bffb15 	stw	r2,-20(fp)
   315f8:	00000206 	br	31604 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   315fc:	00bfebc4 	movi	r2,-81
   31600:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   31604:	e0bffb17 	ldw	r2,-20(fp)
   31608:	1000070e 	bge	r2,zero,31628 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   3160c:	00315300 	call	31530 <alt_get_errno>
   31610:	1007883a 	mov	r3,r2
   31614:	e0bffb17 	ldw	r2,-20(fp)
   31618:	0085c83a 	sub	r2,zero,r2
   3161c:	18800015 	stw	r2,0(r3)
    rc = -1;
   31620:	00bfffc4 	movi	r2,-1
   31624:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   31628:	e0bffb17 	ldw	r2,-20(fp)
}
   3162c:	e037883a 	mov	sp,fp
   31630:	dfc00117 	ldw	ra,4(sp)
   31634:	df000017 	ldw	fp,0(sp)
   31638:	dec00204 	addi	sp,sp,8
   3163c:	f800283a 	ret

00031640 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   31640:	defffd04 	addi	sp,sp,-12
   31644:	dfc00215 	stw	ra,8(sp)
   31648:	df000115 	stw	fp,4(sp)
   3164c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   31650:	0009883a 	mov	r4,zero
   31654:	0031ae80 	call	31ae8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   31658:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   3165c:	0031b200 	call	31b20 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   31660:	018000f4 	movhi	r6,3
   31664:	318ee804 	addi	r6,r6,15264
   31668:	014000f4 	movhi	r5,3
   3166c:	294ee804 	addi	r5,r5,15264
   31670:	010000f4 	movhi	r4,3
   31674:	210ee804 	addi	r4,r4,15264
   31678:	0032cb80 	call	32cb8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   3167c:	0032a640 	call	32a64 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   31680:	010000f4 	movhi	r4,3
   31684:	210ab104 	addi	r4,r4,10948
   31688:	003341c0 	call	3341c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   3168c:	d0a6d717 	ldw	r2,-25764(gp)
   31690:	d0e6d817 	ldw	r3,-25760(gp)
   31694:	d126d917 	ldw	r4,-25756(gp)
   31698:	200d883a 	mov	r6,r4
   3169c:	180b883a 	mov	r5,r3
   316a0:	1009883a 	mov	r4,r2
   316a4:	00206600 	call	20660 <main>
   316a8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   316ac:	01000044 	movi	r4,1
   316b0:	0030edc0 	call	30edc <close>
  exit (result);
   316b4:	e13fff17 	ldw	r4,-4(fp)
   316b8:	00334300 	call	33430 <exit>

000316bc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   316bc:	defffe04 	addi	sp,sp,-8
   316c0:	df000115 	stw	fp,4(sp)
   316c4:	df000104 	addi	fp,sp,4
   316c8:	e13fff15 	stw	r4,-4(fp)
}
   316cc:	0001883a 	nop
   316d0:	e037883a 	mov	sp,fp
   316d4:	df000017 	ldw	fp,0(sp)
   316d8:	dec00104 	addi	sp,sp,4
   316dc:	f800283a 	ret

000316e0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   316e0:	defffe04 	addi	sp,sp,-8
   316e4:	df000115 	stw	fp,4(sp)
   316e8:	df000104 	addi	fp,sp,4
   316ec:	e13fff15 	stw	r4,-4(fp)
}
   316f0:	0001883a 	nop
   316f4:	e037883a 	mov	sp,fp
   316f8:	df000017 	ldw	fp,0(sp)
   316fc:	dec00104 	addi	sp,sp,4
   31700:	f800283a 	ret

00031704 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31704:	defffe04 	addi	sp,sp,-8
   31708:	dfc00115 	stw	ra,4(sp)
   3170c:	df000015 	stw	fp,0(sp)
   31710:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31714:	d0a00d17 	ldw	r2,-32716(gp)
   31718:	10000326 	beq	r2,zero,31728 <alt_get_errno+0x24>
   3171c:	d0a00d17 	ldw	r2,-32716(gp)
   31720:	103ee83a 	callr	r2
   31724:	00000106 	br	3172c <alt_get_errno+0x28>
   31728:	d0a6d504 	addi	r2,gp,-25772
}
   3172c:	e037883a 	mov	sp,fp
   31730:	dfc00117 	ldw	ra,4(sp)
   31734:	df000017 	ldw	fp,0(sp)
   31738:	dec00204 	addi	sp,sp,8
   3173c:	f800283a 	ret

00031740 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   31740:	defff904 	addi	sp,sp,-28
   31744:	dfc00615 	stw	ra,24(sp)
   31748:	df000515 	stw	fp,20(sp)
   3174c:	df000504 	addi	fp,sp,20
   31750:	e13ffd15 	stw	r4,-12(fp)
   31754:	e17ffe15 	stw	r5,-8(fp)
   31758:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   3175c:	e0bffd17 	ldw	r2,-12(fp)
   31760:	10000616 	blt	r2,zero,3177c <read+0x3c>
   31764:	e0bffd17 	ldw	r2,-12(fp)
   31768:	10c00324 	muli	r3,r2,12
   3176c:	008000f4 	movhi	r2,3
   31770:	10912504 	addi	r2,r2,17556
   31774:	1885883a 	add	r2,r3,r2
   31778:	00000106 	br	31780 <read+0x40>
   3177c:	0005883a 	mov	r2,zero
   31780:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   31784:	e0bffb17 	ldw	r2,-20(fp)
   31788:	10002226 	beq	r2,zero,31814 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   3178c:	e0bffb17 	ldw	r2,-20(fp)
   31790:	10800217 	ldw	r2,8(r2)
   31794:	108000cc 	andi	r2,r2,3
   31798:	10800060 	cmpeqi	r2,r2,1
   3179c:	1000181e 	bne	r2,zero,31800 <read+0xc0>
        (fd->dev->read))
   317a0:	e0bffb17 	ldw	r2,-20(fp)
   317a4:	10800017 	ldw	r2,0(r2)
   317a8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   317ac:	10001426 	beq	r2,zero,31800 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   317b0:	e0bffb17 	ldw	r2,-20(fp)
   317b4:	10800017 	ldw	r2,0(r2)
   317b8:	10800517 	ldw	r2,20(r2)
   317bc:	e0ffff17 	ldw	r3,-4(fp)
   317c0:	180d883a 	mov	r6,r3
   317c4:	e17ffe17 	ldw	r5,-8(fp)
   317c8:	e13ffb17 	ldw	r4,-20(fp)
   317cc:	103ee83a 	callr	r2
   317d0:	e0bffc15 	stw	r2,-16(fp)
   317d4:	e0bffc17 	ldw	r2,-16(fp)
   317d8:	1000070e 	bge	r2,zero,317f8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   317dc:	00317040 	call	31704 <alt_get_errno>
   317e0:	1007883a 	mov	r3,r2
   317e4:	e0bffc17 	ldw	r2,-16(fp)
   317e8:	0085c83a 	sub	r2,zero,r2
   317ec:	18800015 	stw	r2,0(r3)
          return -1;
   317f0:	00bfffc4 	movi	r2,-1
   317f4:	00000c06 	br	31828 <read+0xe8>
        }
        return rval;
   317f8:	e0bffc17 	ldw	r2,-16(fp)
   317fc:	00000a06 	br	31828 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   31800:	00317040 	call	31704 <alt_get_errno>
   31804:	1007883a 	mov	r3,r2
   31808:	00800344 	movi	r2,13
   3180c:	18800015 	stw	r2,0(r3)
   31810:	00000406 	br	31824 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   31814:	00317040 	call	31704 <alt_get_errno>
   31818:	1007883a 	mov	r3,r2
   3181c:	00801444 	movi	r2,81
   31820:	18800015 	stw	r2,0(r3)
  }
  return -1;
   31824:	00bfffc4 	movi	r2,-1
}
   31828:	e037883a 	mov	sp,fp
   3182c:	dfc00117 	ldw	ra,4(sp)
   31830:	df000017 	ldw	fp,0(sp)
   31834:	dec00204 	addi	sp,sp,8
   31838:	f800283a 	ret

0003183c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   3183c:	defffe04 	addi	sp,sp,-8
   31840:	df000115 	stw	fp,4(sp)
   31844:	df000104 	addi	fp,sp,4
   31848:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   3184c:	e0bfff17 	ldw	r2,-4(fp)
   31850:	108000d0 	cmplti	r2,r2,3
   31854:	10000d1e 	bne	r2,zero,3188c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   31858:	008000f4 	movhi	r2,3
   3185c:	10912504 	addi	r2,r2,17556
   31860:	e0ffff17 	ldw	r3,-4(fp)
   31864:	18c00324 	muli	r3,r3,12
   31868:	10c5883a 	add	r2,r2,r3
   3186c:	10800204 	addi	r2,r2,8
   31870:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   31874:	008000f4 	movhi	r2,3
   31878:	10912504 	addi	r2,r2,17556
   3187c:	e0ffff17 	ldw	r3,-4(fp)
   31880:	18c00324 	muli	r3,r3,12
   31884:	10c5883a 	add	r2,r2,r3
   31888:	10000015 	stw	zero,0(r2)
  }
}
   3188c:	0001883a 	nop
   31890:	e037883a 	mov	sp,fp
   31894:	df000017 	ldw	fp,0(sp)
   31898:	dec00104 	addi	sp,sp,4
   3189c:	f800283a 	ret

000318a0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   318a0:	defff904 	addi	sp,sp,-28
   318a4:	df000615 	stw	fp,24(sp)
   318a8:	df000604 	addi	fp,sp,24
   318ac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   318b0:	0005303a 	rdctl	r2,status
   318b4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   318b8:	e0fffe17 	ldw	r3,-8(fp)
   318bc:	00bfff84 	movi	r2,-2
   318c0:	1884703a 	and	r2,r3,r2
   318c4:	1001703a 	wrctl	status,r2
  
  return context;
   318c8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   318cc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   318d0:	d0a00f17 	ldw	r2,-32708(gp)
   318d4:	10c000c4 	addi	r3,r2,3
   318d8:	00bfff04 	movi	r2,-4
   318dc:	1884703a 	and	r2,r3,r2
   318e0:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   318e4:	d0e00f17 	ldw	r3,-32708(gp)
   318e8:	e0bfff17 	ldw	r2,-4(fp)
   318ec:	1887883a 	add	r3,r3,r2
   318f0:	00800134 	movhi	r2,4
   318f4:	10b80004 	addi	r2,r2,-8192
   318f8:	10c0062e 	bgeu	r2,r3,31914 <sbrk+0x74>
   318fc:	e0bffb17 	ldw	r2,-20(fp)
   31900:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   31904:	e0bffa17 	ldw	r2,-24(fp)
   31908:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   3190c:	00bfffc4 	movi	r2,-1
   31910:	00000b06 	br	31940 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   31914:	d0a00f17 	ldw	r2,-32708(gp)
   31918:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   3191c:	d0e00f17 	ldw	r3,-32708(gp)
   31920:	e0bfff17 	ldw	r2,-4(fp)
   31924:	1885883a 	add	r2,r3,r2
   31928:	d0a00f15 	stw	r2,-32708(gp)
   3192c:	e0bffb17 	ldw	r2,-20(fp)
   31930:	e0bffc15 	stw	r2,-16(fp)
   31934:	e0bffc17 	ldw	r2,-16(fp)
   31938:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   3193c:	e0bffd17 	ldw	r2,-12(fp)
} 
   31940:	e037883a 	mov	sp,fp
   31944:	df000017 	ldw	fp,0(sp)
   31948:	dec00104 	addi	sp,sp,4
   3194c:	f800283a 	ret

00031950 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   31950:	defffd04 	addi	sp,sp,-12
   31954:	dfc00215 	stw	ra,8(sp)
   31958:	df000115 	stw	fp,4(sp)
   3195c:	df000104 	addi	fp,sp,4
   31960:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   31964:	e13fff17 	ldw	r4,-4(fp)
   31968:	003280c0 	call	3280c <alt_busy_sleep>
}
   3196c:	e037883a 	mov	sp,fp
   31970:	dfc00117 	ldw	ra,4(sp)
   31974:	df000017 	ldw	fp,0(sp)
   31978:	dec00204 	addi	sp,sp,8
   3197c:	f800283a 	ret

00031980 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31980:	defffe04 	addi	sp,sp,-8
   31984:	dfc00115 	stw	ra,4(sp)
   31988:	df000015 	stw	fp,0(sp)
   3198c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31990:	d0a00d17 	ldw	r2,-32716(gp)
   31994:	10000326 	beq	r2,zero,319a4 <alt_get_errno+0x24>
   31998:	d0a00d17 	ldw	r2,-32716(gp)
   3199c:	103ee83a 	callr	r2
   319a0:	00000106 	br	319a8 <alt_get_errno+0x28>
   319a4:	d0a6d504 	addi	r2,gp,-25772
}
   319a8:	e037883a 	mov	sp,fp
   319ac:	dfc00117 	ldw	ra,4(sp)
   319b0:	df000017 	ldw	fp,0(sp)
   319b4:	dec00204 	addi	sp,sp,8
   319b8:	f800283a 	ret

000319bc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   319bc:	defff904 	addi	sp,sp,-28
   319c0:	dfc00615 	stw	ra,24(sp)
   319c4:	df000515 	stw	fp,20(sp)
   319c8:	df000504 	addi	fp,sp,20
   319cc:	e13ffd15 	stw	r4,-12(fp)
   319d0:	e17ffe15 	stw	r5,-8(fp)
   319d4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   319d8:	e0bffd17 	ldw	r2,-12(fp)
   319dc:	10000616 	blt	r2,zero,319f8 <write+0x3c>
   319e0:	e0bffd17 	ldw	r2,-12(fp)
   319e4:	10c00324 	muli	r3,r2,12
   319e8:	008000f4 	movhi	r2,3
   319ec:	10912504 	addi	r2,r2,17556
   319f0:	1885883a 	add	r2,r3,r2
   319f4:	00000106 	br	319fc <write+0x40>
   319f8:	0005883a 	mov	r2,zero
   319fc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   31a00:	e0bffb17 	ldw	r2,-20(fp)
   31a04:	10002126 	beq	r2,zero,31a8c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   31a08:	e0bffb17 	ldw	r2,-20(fp)
   31a0c:	10800217 	ldw	r2,8(r2)
   31a10:	108000cc 	andi	r2,r2,3
   31a14:	10001826 	beq	r2,zero,31a78 <write+0xbc>
   31a18:	e0bffb17 	ldw	r2,-20(fp)
   31a1c:	10800017 	ldw	r2,0(r2)
   31a20:	10800617 	ldw	r2,24(r2)
   31a24:	10001426 	beq	r2,zero,31a78 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   31a28:	e0bffb17 	ldw	r2,-20(fp)
   31a2c:	10800017 	ldw	r2,0(r2)
   31a30:	10800617 	ldw	r2,24(r2)
   31a34:	e0ffff17 	ldw	r3,-4(fp)
   31a38:	180d883a 	mov	r6,r3
   31a3c:	e17ffe17 	ldw	r5,-8(fp)
   31a40:	e13ffb17 	ldw	r4,-20(fp)
   31a44:	103ee83a 	callr	r2
   31a48:	e0bffc15 	stw	r2,-16(fp)
   31a4c:	e0bffc17 	ldw	r2,-16(fp)
   31a50:	1000070e 	bge	r2,zero,31a70 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   31a54:	00319800 	call	31980 <alt_get_errno>
   31a58:	1007883a 	mov	r3,r2
   31a5c:	e0bffc17 	ldw	r2,-16(fp)
   31a60:	0085c83a 	sub	r2,zero,r2
   31a64:	18800015 	stw	r2,0(r3)
        return -1;
   31a68:	00bfffc4 	movi	r2,-1
   31a6c:	00000c06 	br	31aa0 <write+0xe4>
      }
      return rval;
   31a70:	e0bffc17 	ldw	r2,-16(fp)
   31a74:	00000a06 	br	31aa0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   31a78:	00319800 	call	31980 <alt_get_errno>
   31a7c:	1007883a 	mov	r3,r2
   31a80:	00800344 	movi	r2,13
   31a84:	18800015 	stw	r2,0(r3)
   31a88:	00000406 	br	31a9c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   31a8c:	00319800 	call	31980 <alt_get_errno>
   31a90:	1007883a 	mov	r3,r2
   31a94:	00801444 	movi	r2,81
   31a98:	18800015 	stw	r2,0(r3)
  }
  return -1;
   31a9c:	00bfffc4 	movi	r2,-1
}
   31aa0:	e037883a 	mov	sp,fp
   31aa4:	dfc00117 	ldw	ra,4(sp)
   31aa8:	df000017 	ldw	fp,0(sp)
   31aac:	dec00204 	addi	sp,sp,8
   31ab0:	f800283a 	ret

00031ab4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   31ab4:	defffd04 	addi	sp,sp,-12
   31ab8:	dfc00215 	stw	ra,8(sp)
   31abc:	df000115 	stw	fp,4(sp)
   31ac0:	df000104 	addi	fp,sp,4
   31ac4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   31ac8:	d1600a04 	addi	r5,gp,-32728
   31acc:	e13fff17 	ldw	r4,-4(fp)
   31ad0:	00329c00 	call	329c0 <alt_dev_llist_insert>
}
   31ad4:	e037883a 	mov	sp,fp
   31ad8:	dfc00117 	ldw	ra,4(sp)
   31adc:	df000017 	ldw	fp,0(sp)
   31ae0:	dec00204 	addi	sp,sp,8
   31ae4:	f800283a 	ret

00031ae8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   31ae8:	defffd04 	addi	sp,sp,-12
   31aec:	dfc00215 	stw	ra,8(sp)
   31af0:	df000115 	stw	fp,4(sp)
   31af4:	df000104 	addi	fp,sp,4
   31af8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOSII_CPU, NiosII_CPU);
   31afc:	003312c0 	call	3312c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   31b00:	00800044 	movi	r2,1
   31b04:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   31b08:	0001883a 	nop
   31b0c:	e037883a 	mov	sp,fp
   31b10:	dfc00117 	ldw	ra,4(sp)
   31b14:	df000017 	ldw	fp,0(sp)
   31b18:	dec00204 	addi	sp,sp,8
   31b1c:	f800283a 	ret

00031b20 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   31b20:	defffe04 	addi	sp,sp,-8
   31b24:	dfc00115 	stw	ra,4(sp)
   31b28:	df000015 	stw	fp,0(sp)
   31b2c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, SYS_CLK_timer);
   31b30:	01c0fa04 	movi	r7,1000
   31b34:	000d883a 	mov	r6,zero
   31b38:	000b883a 	mov	r5,zero
   31b3c:	01000134 	movhi	r4,4
   31b40:	21041004 	addi	r4,r4,4160
   31b44:	00326640 	call	32664 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( SYS_MEL, SYS_MEL);
    ALTERA_AVALON_TIMER_INIT ( SYS_SEC, SYS_SEC);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   31b48:	01800404 	movi	r6,16
   31b4c:	000b883a 	mov	r5,zero
   31b50:	010000f4 	movhi	r4,3
   31b54:	21118f04 	addi	r4,r4,17980
   31b58:	0031ce80 	call	31ce8 <altera_avalon_jtag_uart_init>
   31b5c:	010000f4 	movhi	r4,3
   31b60:	21118504 	addi	r4,r4,17940
   31b64:	0031ab40 	call	31ab4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
   31b68:	0001883a 	nop
}
   31b6c:	0001883a 	nop
   31b70:	e037883a 	mov	sp,fp
   31b74:	dfc00117 	ldw	ra,4(sp)
   31b78:	df000017 	ldw	fp,0(sp)
   31b7c:	dec00204 	addi	sp,sp,8
   31b80:	f800283a 	ret

00031b84 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   31b84:	defffa04 	addi	sp,sp,-24
   31b88:	dfc00515 	stw	ra,20(sp)
   31b8c:	df000415 	stw	fp,16(sp)
   31b90:	df000404 	addi	fp,sp,16
   31b94:	e13ffd15 	stw	r4,-12(fp)
   31b98:	e17ffe15 	stw	r5,-8(fp)
   31b9c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   31ba0:	e0bffd17 	ldw	r2,-12(fp)
   31ba4:	10800017 	ldw	r2,0(r2)
   31ba8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   31bac:	e0bffc17 	ldw	r2,-16(fp)
   31bb0:	10c00a04 	addi	r3,r2,40
   31bb4:	e0bffd17 	ldw	r2,-12(fp)
   31bb8:	10800217 	ldw	r2,8(r2)
   31bbc:	100f883a 	mov	r7,r2
   31bc0:	e1bfff17 	ldw	r6,-4(fp)
   31bc4:	e17ffe17 	ldw	r5,-8(fp)
   31bc8:	1809883a 	mov	r4,r3
   31bcc:	00321ac0 	call	321ac <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   31bd0:	e037883a 	mov	sp,fp
   31bd4:	dfc00117 	ldw	ra,4(sp)
   31bd8:	df000017 	ldw	fp,0(sp)
   31bdc:	dec00204 	addi	sp,sp,8
   31be0:	f800283a 	ret

00031be4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   31be4:	defffa04 	addi	sp,sp,-24
   31be8:	dfc00515 	stw	ra,20(sp)
   31bec:	df000415 	stw	fp,16(sp)
   31bf0:	df000404 	addi	fp,sp,16
   31bf4:	e13ffd15 	stw	r4,-12(fp)
   31bf8:	e17ffe15 	stw	r5,-8(fp)
   31bfc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   31c00:	e0bffd17 	ldw	r2,-12(fp)
   31c04:	10800017 	ldw	r2,0(r2)
   31c08:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   31c0c:	e0bffc17 	ldw	r2,-16(fp)
   31c10:	10c00a04 	addi	r3,r2,40
   31c14:	e0bffd17 	ldw	r2,-12(fp)
   31c18:	10800217 	ldw	r2,8(r2)
   31c1c:	100f883a 	mov	r7,r2
   31c20:	e1bfff17 	ldw	r6,-4(fp)
   31c24:	e17ffe17 	ldw	r5,-8(fp)
   31c28:	1809883a 	mov	r4,r3
   31c2c:	00323c80 	call	323c8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   31c30:	e037883a 	mov	sp,fp
   31c34:	dfc00117 	ldw	ra,4(sp)
   31c38:	df000017 	ldw	fp,0(sp)
   31c3c:	dec00204 	addi	sp,sp,8
   31c40:	f800283a 	ret

00031c44 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   31c44:	defffc04 	addi	sp,sp,-16
   31c48:	dfc00315 	stw	ra,12(sp)
   31c4c:	df000215 	stw	fp,8(sp)
   31c50:	df000204 	addi	fp,sp,8
   31c54:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   31c58:	e0bfff17 	ldw	r2,-4(fp)
   31c5c:	10800017 	ldw	r2,0(r2)
   31c60:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   31c64:	e0bffe17 	ldw	r2,-8(fp)
   31c68:	10c00a04 	addi	r3,r2,40
   31c6c:	e0bfff17 	ldw	r2,-4(fp)
   31c70:	10800217 	ldw	r2,8(r2)
   31c74:	100b883a 	mov	r5,r2
   31c78:	1809883a 	mov	r4,r3
   31c7c:	00320540 	call	32054 <altera_avalon_jtag_uart_close>
}
   31c80:	e037883a 	mov	sp,fp
   31c84:	dfc00117 	ldw	ra,4(sp)
   31c88:	df000017 	ldw	fp,0(sp)
   31c8c:	dec00204 	addi	sp,sp,8
   31c90:	f800283a 	ret

00031c94 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   31c94:	defffa04 	addi	sp,sp,-24
   31c98:	dfc00515 	stw	ra,20(sp)
   31c9c:	df000415 	stw	fp,16(sp)
   31ca0:	df000404 	addi	fp,sp,16
   31ca4:	e13ffd15 	stw	r4,-12(fp)
   31ca8:	e17ffe15 	stw	r5,-8(fp)
   31cac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   31cb0:	e0bffd17 	ldw	r2,-12(fp)
   31cb4:	10800017 	ldw	r2,0(r2)
   31cb8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   31cbc:	e0bffc17 	ldw	r2,-16(fp)
   31cc0:	10800a04 	addi	r2,r2,40
   31cc4:	e1bfff17 	ldw	r6,-4(fp)
   31cc8:	e17ffe17 	ldw	r5,-8(fp)
   31ccc:	1009883a 	mov	r4,r2
   31cd0:	00320bc0 	call	320bc <altera_avalon_jtag_uart_ioctl>
}
   31cd4:	e037883a 	mov	sp,fp
   31cd8:	dfc00117 	ldw	ra,4(sp)
   31cdc:	df000017 	ldw	fp,0(sp)
   31ce0:	dec00204 	addi	sp,sp,8
   31ce4:	f800283a 	ret

00031ce8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   31ce8:	defffa04 	addi	sp,sp,-24
   31cec:	dfc00515 	stw	ra,20(sp)
   31cf0:	df000415 	stw	fp,16(sp)
   31cf4:	df000404 	addi	fp,sp,16
   31cf8:	e13ffd15 	stw	r4,-12(fp)
   31cfc:	e17ffe15 	stw	r5,-8(fp)
   31d00:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   31d04:	e0bffd17 	ldw	r2,-12(fp)
   31d08:	00c00044 	movi	r3,1
   31d0c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   31d10:	e0bffd17 	ldw	r2,-12(fp)
   31d14:	10800017 	ldw	r2,0(r2)
   31d18:	10800104 	addi	r2,r2,4
   31d1c:	1007883a 	mov	r3,r2
   31d20:	e0bffd17 	ldw	r2,-12(fp)
   31d24:	10800817 	ldw	r2,32(r2)
   31d28:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   31d2c:	e0bffe17 	ldw	r2,-8(fp)
   31d30:	e0ffff17 	ldw	r3,-4(fp)
   31d34:	d8000015 	stw	zero,0(sp)
   31d38:	e1fffd17 	ldw	r7,-12(fp)
   31d3c:	018000f4 	movhi	r6,3
   31d40:	31876a04 	addi	r6,r6,7592
   31d44:	180b883a 	mov	r5,r3
   31d48:	1009883a 	mov	r4,r2
   31d4c:	00310c40 	call	310c4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   31d50:	e0bffd17 	ldw	r2,-12(fp)
   31d54:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   31d58:	e0bffd17 	ldw	r2,-12(fp)
   31d5c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   31d60:	d0e6db17 	ldw	r3,-25748(gp)
   31d64:	e1fffd17 	ldw	r7,-12(fp)
   31d68:	018000f4 	movhi	r6,3
   31d6c:	3187ed04 	addi	r6,r6,8116
   31d70:	180b883a 	mov	r5,r3
   31d74:	1009883a 	mov	r4,r2
   31d78:	00326e00 	call	326e0 <alt_alarm_start>
   31d7c:	1000040e 	bge	r2,zero,31d90 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   31d80:	e0fffd17 	ldw	r3,-12(fp)
   31d84:	00a00034 	movhi	r2,32768
   31d88:	10bfffc4 	addi	r2,r2,-1
   31d8c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   31d90:	0001883a 	nop
   31d94:	e037883a 	mov	sp,fp
   31d98:	dfc00117 	ldw	ra,4(sp)
   31d9c:	df000017 	ldw	fp,0(sp)
   31da0:	dec00204 	addi	sp,sp,8
   31da4:	f800283a 	ret

00031da8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   31da8:	defff804 	addi	sp,sp,-32
   31dac:	df000715 	stw	fp,28(sp)
   31db0:	df000704 	addi	fp,sp,28
   31db4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   31db8:	e0bfff17 	ldw	r2,-4(fp)
   31dbc:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   31dc0:	e0bffb17 	ldw	r2,-20(fp)
   31dc4:	10800017 	ldw	r2,0(r2)
   31dc8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31dcc:	e0bffc17 	ldw	r2,-16(fp)
   31dd0:	10800104 	addi	r2,r2,4
   31dd4:	10800037 	ldwio	r2,0(r2)
   31dd8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   31ddc:	e0bffd17 	ldw	r2,-12(fp)
   31de0:	1080c00c 	andi	r2,r2,768
   31de4:	10006d26 	beq	r2,zero,31f9c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   31de8:	e0bffd17 	ldw	r2,-12(fp)
   31dec:	1080400c 	andi	r2,r2,256
   31df0:	10003526 	beq	r2,zero,31ec8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   31df4:	00800074 	movhi	r2,1
   31df8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31dfc:	e0bffb17 	ldw	r2,-20(fp)
   31e00:	10800a17 	ldw	r2,40(r2)
   31e04:	10800044 	addi	r2,r2,1
   31e08:	1081ffcc 	andi	r2,r2,2047
   31e0c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   31e10:	e0bffb17 	ldw	r2,-20(fp)
   31e14:	10c00b17 	ldw	r3,44(r2)
   31e18:	e0bffe17 	ldw	r2,-8(fp)
   31e1c:	18801526 	beq	r3,r2,31e74 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   31e20:	e0bffc17 	ldw	r2,-16(fp)
   31e24:	10800037 	ldwio	r2,0(r2)
   31e28:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   31e2c:	e0bff917 	ldw	r2,-28(fp)
   31e30:	10a0000c 	andi	r2,r2,32768
   31e34:	10001126 	beq	r2,zero,31e7c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   31e38:	e0bffb17 	ldw	r2,-20(fp)
   31e3c:	10800a17 	ldw	r2,40(r2)
   31e40:	e0fff917 	ldw	r3,-28(fp)
   31e44:	1809883a 	mov	r4,r3
   31e48:	e0fffb17 	ldw	r3,-20(fp)
   31e4c:	1885883a 	add	r2,r3,r2
   31e50:	10800e04 	addi	r2,r2,56
   31e54:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31e58:	e0bffb17 	ldw	r2,-20(fp)
   31e5c:	10800a17 	ldw	r2,40(r2)
   31e60:	10800044 	addi	r2,r2,1
   31e64:	10c1ffcc 	andi	r3,r2,2047
   31e68:	e0bffb17 	ldw	r2,-20(fp)
   31e6c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   31e70:	003fe206 	br	31dfc <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   31e74:	0001883a 	nop
   31e78:	00000106 	br	31e80 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   31e7c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   31e80:	e0bff917 	ldw	r2,-28(fp)
   31e84:	10bfffec 	andhi	r2,r2,65535
   31e88:	10000f26 	beq	r2,zero,31ec8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   31e8c:	e0bffb17 	ldw	r2,-20(fp)
   31e90:	10c00817 	ldw	r3,32(r2)
   31e94:	00bfff84 	movi	r2,-2
   31e98:	1886703a 	and	r3,r3,r2
   31e9c:	e0bffb17 	ldw	r2,-20(fp)
   31ea0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   31ea4:	e0bffc17 	ldw	r2,-16(fp)
   31ea8:	10800104 	addi	r2,r2,4
   31eac:	1007883a 	mov	r3,r2
   31eb0:	e0bffb17 	ldw	r2,-20(fp)
   31eb4:	10800817 	ldw	r2,32(r2)
   31eb8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31ebc:	e0bffc17 	ldw	r2,-16(fp)
   31ec0:	10800104 	addi	r2,r2,4
   31ec4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   31ec8:	e0bffd17 	ldw	r2,-12(fp)
   31ecc:	1080800c 	andi	r2,r2,512
   31ed0:	103fbe26 	beq	r2,zero,31dcc <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   31ed4:	e0bffd17 	ldw	r2,-12(fp)
   31ed8:	1004d43a 	srli	r2,r2,16
   31edc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   31ee0:	00001406 	br	31f34 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   31ee4:	e0bffc17 	ldw	r2,-16(fp)
   31ee8:	e0fffb17 	ldw	r3,-20(fp)
   31eec:	18c00d17 	ldw	r3,52(r3)
   31ef0:	e13ffb17 	ldw	r4,-20(fp)
   31ef4:	20c7883a 	add	r3,r4,r3
   31ef8:	18c20e04 	addi	r3,r3,2104
   31efc:	18c00003 	ldbu	r3,0(r3)
   31f00:	18c03fcc 	andi	r3,r3,255
   31f04:	18c0201c 	xori	r3,r3,128
   31f08:	18ffe004 	addi	r3,r3,-128
   31f0c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31f10:	e0bffb17 	ldw	r2,-20(fp)
   31f14:	10800d17 	ldw	r2,52(r2)
   31f18:	10800044 	addi	r2,r2,1
   31f1c:	10c1ffcc 	andi	r3,r2,2047
   31f20:	e0bffb17 	ldw	r2,-20(fp)
   31f24:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   31f28:	e0bffa17 	ldw	r2,-24(fp)
   31f2c:	10bfffc4 	addi	r2,r2,-1
   31f30:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   31f34:	e0bffa17 	ldw	r2,-24(fp)
   31f38:	10000526 	beq	r2,zero,31f50 <altera_avalon_jtag_uart_irq+0x1a8>
   31f3c:	e0bffb17 	ldw	r2,-20(fp)
   31f40:	10c00d17 	ldw	r3,52(r2)
   31f44:	e0bffb17 	ldw	r2,-20(fp)
   31f48:	10800c17 	ldw	r2,48(r2)
   31f4c:	18bfe51e 	bne	r3,r2,31ee4 <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   31f50:	e0bffa17 	ldw	r2,-24(fp)
   31f54:	103f9d26 	beq	r2,zero,31dcc <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   31f58:	e0bffb17 	ldw	r2,-20(fp)
   31f5c:	10c00817 	ldw	r3,32(r2)
   31f60:	00bfff44 	movi	r2,-3
   31f64:	1886703a 	and	r3,r3,r2
   31f68:	e0bffb17 	ldw	r2,-20(fp)
   31f6c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   31f70:	e0bffb17 	ldw	r2,-20(fp)
   31f74:	10800017 	ldw	r2,0(r2)
   31f78:	10800104 	addi	r2,r2,4
   31f7c:	1007883a 	mov	r3,r2
   31f80:	e0bffb17 	ldw	r2,-20(fp)
   31f84:	10800817 	ldw	r2,32(r2)
   31f88:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31f8c:	e0bffc17 	ldw	r2,-16(fp)
   31f90:	10800104 	addi	r2,r2,4
   31f94:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   31f98:	003f8c06 	br	31dcc <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   31f9c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   31fa0:	0001883a 	nop
   31fa4:	e037883a 	mov	sp,fp
   31fa8:	df000017 	ldw	fp,0(sp)
   31fac:	dec00104 	addi	sp,sp,4
   31fb0:	f800283a 	ret

00031fb4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   31fb4:	defff804 	addi	sp,sp,-32
   31fb8:	df000715 	stw	fp,28(sp)
   31fbc:	df000704 	addi	fp,sp,28
   31fc0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   31fc4:	e0bffb17 	ldw	r2,-20(fp)
   31fc8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   31fcc:	e0bff917 	ldw	r2,-28(fp)
   31fd0:	10800017 	ldw	r2,0(r2)
   31fd4:	10800104 	addi	r2,r2,4
   31fd8:	10800037 	ldwio	r2,0(r2)
   31fdc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   31fe0:	e0bffa17 	ldw	r2,-24(fp)
   31fe4:	1081000c 	andi	r2,r2,1024
   31fe8:	10000b26 	beq	r2,zero,32018 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   31fec:	e0bff917 	ldw	r2,-28(fp)
   31ff0:	10800017 	ldw	r2,0(r2)
   31ff4:	10800104 	addi	r2,r2,4
   31ff8:	1007883a 	mov	r3,r2
   31ffc:	e0bff917 	ldw	r2,-28(fp)
   32000:	10800817 	ldw	r2,32(r2)
   32004:	10810014 	ori	r2,r2,1024
   32008:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   3200c:	e0bff917 	ldw	r2,-28(fp)
   32010:	10000915 	stw	zero,36(r2)
   32014:	00000a06 	br	32040 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   32018:	e0bff917 	ldw	r2,-28(fp)
   3201c:	10c00917 	ldw	r3,36(r2)
   32020:	00a00034 	movhi	r2,32768
   32024:	10bfff04 	addi	r2,r2,-4
   32028:	10c00536 	bltu	r2,r3,32040 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   3202c:	e0bff917 	ldw	r2,-28(fp)
   32030:	10800917 	ldw	r2,36(r2)
   32034:	10c00044 	addi	r3,r2,1
   32038:	e0bff917 	ldw	r2,-28(fp)
   3203c:	10c00915 	stw	r3,36(r2)
   32040:	d0a6db17 	ldw	r2,-25748(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   32044:	e037883a 	mov	sp,fp
   32048:	df000017 	ldw	fp,0(sp)
   3204c:	dec00104 	addi	sp,sp,4
   32050:	f800283a 	ret

00032054 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   32054:	defffd04 	addi	sp,sp,-12
   32058:	df000215 	stw	fp,8(sp)
   3205c:	df000204 	addi	fp,sp,8
   32060:	e13ffe15 	stw	r4,-8(fp)
   32064:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   32068:	00000506 	br	32080 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   3206c:	e0bfff17 	ldw	r2,-4(fp)
   32070:	1090000c 	andi	r2,r2,16384
   32074:	10000226 	beq	r2,zero,32080 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   32078:	00bffd44 	movi	r2,-11
   3207c:	00000b06 	br	320ac <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   32080:	e0bffe17 	ldw	r2,-8(fp)
   32084:	10c00d17 	ldw	r3,52(r2)
   32088:	e0bffe17 	ldw	r2,-8(fp)
   3208c:	10800c17 	ldw	r2,48(r2)
   32090:	18800526 	beq	r3,r2,320a8 <altera_avalon_jtag_uart_close+0x54>
   32094:	e0bffe17 	ldw	r2,-8(fp)
   32098:	10c00917 	ldw	r3,36(r2)
   3209c:	e0bffe17 	ldw	r2,-8(fp)
   320a0:	10800117 	ldw	r2,4(r2)
   320a4:	18bff136 	bltu	r3,r2,3206c <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   320a8:	0005883a 	mov	r2,zero
}
   320ac:	e037883a 	mov	sp,fp
   320b0:	df000017 	ldw	fp,0(sp)
   320b4:	dec00104 	addi	sp,sp,4
   320b8:	f800283a 	ret

000320bc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   320bc:	defffa04 	addi	sp,sp,-24
   320c0:	df000515 	stw	fp,20(sp)
   320c4:	df000504 	addi	fp,sp,20
   320c8:	e13ffd15 	stw	r4,-12(fp)
   320cc:	e17ffe15 	stw	r5,-8(fp)
   320d0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   320d4:	00bff9c4 	movi	r2,-25
   320d8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   320dc:	e0bffe17 	ldw	r2,-8(fp)
   320e0:	10da8060 	cmpeqi	r3,r2,27137
   320e4:	1800031e 	bne	r3,zero,320f4 <altera_avalon_jtag_uart_ioctl+0x38>
   320e8:	109a80a0 	cmpeqi	r2,r2,27138
   320ec:	1000181e 	bne	r2,zero,32150 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   320f0:	00002906 	br	32198 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   320f4:	e0bffd17 	ldw	r2,-12(fp)
   320f8:	10c00117 	ldw	r3,4(r2)
   320fc:	00a00034 	movhi	r2,32768
   32100:	10bfffc4 	addi	r2,r2,-1
   32104:	18802126 	beq	r3,r2,3218c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   32108:	e0bfff17 	ldw	r2,-4(fp)
   3210c:	10800017 	ldw	r2,0(r2)
   32110:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   32114:	e0bffc17 	ldw	r2,-16(fp)
   32118:	10800090 	cmplti	r2,r2,2
   3211c:	1000061e 	bne	r2,zero,32138 <altera_avalon_jtag_uart_ioctl+0x7c>
   32120:	e0fffc17 	ldw	r3,-16(fp)
   32124:	00a00034 	movhi	r2,32768
   32128:	10bfffc4 	addi	r2,r2,-1
   3212c:	18800226 	beq	r3,r2,32138 <altera_avalon_jtag_uart_ioctl+0x7c>
   32130:	e0bffc17 	ldw	r2,-16(fp)
   32134:	00000206 	br	32140 <altera_avalon_jtag_uart_ioctl+0x84>
   32138:	00a00034 	movhi	r2,32768
   3213c:	10bfff84 	addi	r2,r2,-2
   32140:	e0fffd17 	ldw	r3,-12(fp)
   32144:	18800115 	stw	r2,4(r3)
      rc = 0;
   32148:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   3214c:	00000f06 	br	3218c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   32150:	e0bffd17 	ldw	r2,-12(fp)
   32154:	10c00117 	ldw	r3,4(r2)
   32158:	00a00034 	movhi	r2,32768
   3215c:	10bfffc4 	addi	r2,r2,-1
   32160:	18800c26 	beq	r3,r2,32194 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   32164:	e0bffd17 	ldw	r2,-12(fp)
   32168:	10c00917 	ldw	r3,36(r2)
   3216c:	e0bffd17 	ldw	r2,-12(fp)
   32170:	10800117 	ldw	r2,4(r2)
   32174:	1885803a 	cmpltu	r2,r3,r2
   32178:	10c03fcc 	andi	r3,r2,255
   3217c:	e0bfff17 	ldw	r2,-4(fp)
   32180:	10c00015 	stw	r3,0(r2)
      rc = 0;
   32184:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   32188:	00000206 	br	32194 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   3218c:	0001883a 	nop
   32190:	00000106 	br	32198 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   32194:	0001883a 	nop

  default:
    break;
  }

  return rc;
   32198:	e0bffb17 	ldw	r2,-20(fp)
}
   3219c:	e037883a 	mov	sp,fp
   321a0:	df000017 	ldw	fp,0(sp)
   321a4:	dec00104 	addi	sp,sp,4
   321a8:	f800283a 	ret

000321ac <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   321ac:	defff304 	addi	sp,sp,-52
   321b0:	dfc00c15 	stw	ra,48(sp)
   321b4:	df000b15 	stw	fp,44(sp)
   321b8:	df000b04 	addi	fp,sp,44
   321bc:	e13ffc15 	stw	r4,-16(fp)
   321c0:	e17ffd15 	stw	r5,-12(fp)
   321c4:	e1bffe15 	stw	r6,-8(fp)
   321c8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   321cc:	e0bffd17 	ldw	r2,-12(fp)
   321d0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   321d4:	00004706 	br	322f4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   321d8:	e0bffc17 	ldw	r2,-16(fp)
   321dc:	10800a17 	ldw	r2,40(r2)
   321e0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   321e4:	e0bffc17 	ldw	r2,-16(fp)
   321e8:	10800b17 	ldw	r2,44(r2)
   321ec:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   321f0:	e0fff717 	ldw	r3,-36(fp)
   321f4:	e0bff817 	ldw	r2,-32(fp)
   321f8:	18800536 	bltu	r3,r2,32210 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   321fc:	e0fff717 	ldw	r3,-36(fp)
   32200:	e0bff817 	ldw	r2,-32(fp)
   32204:	1885c83a 	sub	r2,r3,r2
   32208:	e0bff615 	stw	r2,-40(fp)
   3220c:	00000406 	br	32220 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   32210:	00c20004 	movi	r3,2048
   32214:	e0bff817 	ldw	r2,-32(fp)
   32218:	1885c83a 	sub	r2,r3,r2
   3221c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   32220:	e0bff617 	ldw	r2,-40(fp)
   32224:	10001e26 	beq	r2,zero,322a0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   32228:	e0fffe17 	ldw	r3,-8(fp)
   3222c:	e0bff617 	ldw	r2,-40(fp)
   32230:	1880022e 	bgeu	r3,r2,3223c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   32234:	e0bffe17 	ldw	r2,-8(fp)
   32238:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   3223c:	e0bffc17 	ldw	r2,-16(fp)
   32240:	10c00e04 	addi	r3,r2,56
   32244:	e0bff817 	ldw	r2,-32(fp)
   32248:	1885883a 	add	r2,r3,r2
   3224c:	e1bff617 	ldw	r6,-40(fp)
   32250:	100b883a 	mov	r5,r2
   32254:	e13ff517 	ldw	r4,-44(fp)
   32258:	0028c400 	call	28c40 <memcpy>
      ptr   += n;
   3225c:	e0fff517 	ldw	r3,-44(fp)
   32260:	e0bff617 	ldw	r2,-40(fp)
   32264:	1885883a 	add	r2,r3,r2
   32268:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   3226c:	e0fffe17 	ldw	r3,-8(fp)
   32270:	e0bff617 	ldw	r2,-40(fp)
   32274:	1885c83a 	sub	r2,r3,r2
   32278:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   3227c:	e0fff817 	ldw	r3,-32(fp)
   32280:	e0bff617 	ldw	r2,-40(fp)
   32284:	1885883a 	add	r2,r3,r2
   32288:	10c1ffcc 	andi	r3,r2,2047
   3228c:	e0bffc17 	ldw	r2,-16(fp)
   32290:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   32294:	e0bffe17 	ldw	r2,-8(fp)
   32298:	00bfcf16 	blt	zero,r2,321d8 <altera_avalon_jtag_uart_read+0x2c>
   3229c:	00000106 	br	322a4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   322a0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   322a4:	e0fff517 	ldw	r3,-44(fp)
   322a8:	e0bffd17 	ldw	r2,-12(fp)
   322ac:	1880141e 	bne	r3,r2,32300 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   322b0:	e0bfff17 	ldw	r2,-4(fp)
   322b4:	1090000c 	andi	r2,r2,16384
   322b8:	1000131e 	bne	r2,zero,32308 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   322bc:	0001883a 	nop
   322c0:	e0bffc17 	ldw	r2,-16(fp)
   322c4:	10c00a17 	ldw	r3,40(r2)
   322c8:	e0bff717 	ldw	r2,-36(fp)
   322cc:	1880051e 	bne	r3,r2,322e4 <altera_avalon_jtag_uart_read+0x138>
   322d0:	e0bffc17 	ldw	r2,-16(fp)
   322d4:	10c00917 	ldw	r3,36(r2)
   322d8:	e0bffc17 	ldw	r2,-16(fp)
   322dc:	10800117 	ldw	r2,4(r2)
   322e0:	18bff736 	bltu	r3,r2,322c0 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   322e4:	e0bffc17 	ldw	r2,-16(fp)
   322e8:	10c00a17 	ldw	r3,40(r2)
   322ec:	e0bff717 	ldw	r2,-36(fp)
   322f0:	18800726 	beq	r3,r2,32310 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   322f4:	e0bffe17 	ldw	r2,-8(fp)
   322f8:	00bfb716 	blt	zero,r2,321d8 <altera_avalon_jtag_uart_read+0x2c>
   322fc:	00000506 	br	32314 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   32300:	0001883a 	nop
   32304:	00000306 	br	32314 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   32308:	0001883a 	nop
   3230c:	00000106 	br	32314 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   32310:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   32314:	e0fff517 	ldw	r3,-44(fp)
   32318:	e0bffd17 	ldw	r2,-12(fp)
   3231c:	18801826 	beq	r3,r2,32380 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32320:	0005303a 	rdctl	r2,status
   32324:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32328:	e0fffb17 	ldw	r3,-20(fp)
   3232c:	00bfff84 	movi	r2,-2
   32330:	1884703a 	and	r2,r3,r2
   32334:	1001703a 	wrctl	status,r2
  
  return context;
   32338:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   3233c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   32340:	e0bffc17 	ldw	r2,-16(fp)
   32344:	10800817 	ldw	r2,32(r2)
   32348:	10c00054 	ori	r3,r2,1
   3234c:	e0bffc17 	ldw	r2,-16(fp)
   32350:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   32354:	e0bffc17 	ldw	r2,-16(fp)
   32358:	10800017 	ldw	r2,0(r2)
   3235c:	10800104 	addi	r2,r2,4
   32360:	1007883a 	mov	r3,r2
   32364:	e0bffc17 	ldw	r2,-16(fp)
   32368:	10800817 	ldw	r2,32(r2)
   3236c:	18800035 	stwio	r2,0(r3)
   32370:	e0bffa17 	ldw	r2,-24(fp)
   32374:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32378:	e0bff917 	ldw	r2,-28(fp)
   3237c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   32380:	e0fff517 	ldw	r3,-44(fp)
   32384:	e0bffd17 	ldw	r2,-12(fp)
   32388:	18800426 	beq	r3,r2,3239c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   3238c:	e0fff517 	ldw	r3,-44(fp)
   32390:	e0bffd17 	ldw	r2,-12(fp)
   32394:	1885c83a 	sub	r2,r3,r2
   32398:	00000606 	br	323b4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   3239c:	e0bfff17 	ldw	r2,-4(fp)
   323a0:	1090000c 	andi	r2,r2,16384
   323a4:	10000226 	beq	r2,zero,323b0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   323a8:	00bffd44 	movi	r2,-11
   323ac:	00000106 	br	323b4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   323b0:	00bffec4 	movi	r2,-5
}
   323b4:	e037883a 	mov	sp,fp
   323b8:	dfc00117 	ldw	ra,4(sp)
   323bc:	df000017 	ldw	fp,0(sp)
   323c0:	dec00204 	addi	sp,sp,8
   323c4:	f800283a 	ret

000323c8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   323c8:	defff304 	addi	sp,sp,-52
   323cc:	dfc00c15 	stw	ra,48(sp)
   323d0:	df000b15 	stw	fp,44(sp)
   323d4:	df000b04 	addi	fp,sp,44
   323d8:	e13ffc15 	stw	r4,-16(fp)
   323dc:	e17ffd15 	stw	r5,-12(fp)
   323e0:	e1bffe15 	stw	r6,-8(fp)
   323e4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   323e8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   323ec:	e0bffd17 	ldw	r2,-12(fp)
   323f0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   323f4:	00003706 	br	324d4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   323f8:	e0bffc17 	ldw	r2,-16(fp)
   323fc:	10800c17 	ldw	r2,48(r2)
   32400:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   32404:	e0bffc17 	ldw	r2,-16(fp)
   32408:	10800d17 	ldw	r2,52(r2)
   3240c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   32410:	e0fff917 	ldw	r3,-28(fp)
   32414:	e0bff517 	ldw	r2,-44(fp)
   32418:	1880062e 	bgeu	r3,r2,32434 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   3241c:	e0fff517 	ldw	r3,-44(fp)
   32420:	e0bff917 	ldw	r2,-28(fp)
   32424:	1885c83a 	sub	r2,r3,r2
   32428:	10bfffc4 	addi	r2,r2,-1
   3242c:	e0bff615 	stw	r2,-40(fp)
   32430:	00000b06 	br	32460 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   32434:	e0bff517 	ldw	r2,-44(fp)
   32438:	10000526 	beq	r2,zero,32450 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   3243c:	00c20004 	movi	r3,2048
   32440:	e0bff917 	ldw	r2,-28(fp)
   32444:	1885c83a 	sub	r2,r3,r2
   32448:	e0bff615 	stw	r2,-40(fp)
   3244c:	00000406 	br	32460 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   32450:	00c1ffc4 	movi	r3,2047
   32454:	e0bff917 	ldw	r2,-28(fp)
   32458:	1885c83a 	sub	r2,r3,r2
   3245c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   32460:	e0bff617 	ldw	r2,-40(fp)
   32464:	10001e26 	beq	r2,zero,324e0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   32468:	e0fffe17 	ldw	r3,-8(fp)
   3246c:	e0bff617 	ldw	r2,-40(fp)
   32470:	1880022e 	bgeu	r3,r2,3247c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   32474:	e0bffe17 	ldw	r2,-8(fp)
   32478:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   3247c:	e0bffc17 	ldw	r2,-16(fp)
   32480:	10c20e04 	addi	r3,r2,2104
   32484:	e0bff917 	ldw	r2,-28(fp)
   32488:	1885883a 	add	r2,r3,r2
   3248c:	e1bff617 	ldw	r6,-40(fp)
   32490:	e17ffd17 	ldw	r5,-12(fp)
   32494:	1009883a 	mov	r4,r2
   32498:	0028c400 	call	28c40 <memcpy>
      ptr   += n;
   3249c:	e0fffd17 	ldw	r3,-12(fp)
   324a0:	e0bff617 	ldw	r2,-40(fp)
   324a4:	1885883a 	add	r2,r3,r2
   324a8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   324ac:	e0fffe17 	ldw	r3,-8(fp)
   324b0:	e0bff617 	ldw	r2,-40(fp)
   324b4:	1885c83a 	sub	r2,r3,r2
   324b8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   324bc:	e0fff917 	ldw	r3,-28(fp)
   324c0:	e0bff617 	ldw	r2,-40(fp)
   324c4:	1885883a 	add	r2,r3,r2
   324c8:	10c1ffcc 	andi	r3,r2,2047
   324cc:	e0bffc17 	ldw	r2,-16(fp)
   324d0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   324d4:	e0bffe17 	ldw	r2,-8(fp)
   324d8:	00bfc716 	blt	zero,r2,323f8 <altera_avalon_jtag_uart_write+0x30>
   324dc:	00000106 	br	324e4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   324e0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   324e4:	0005303a 	rdctl	r2,status
   324e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   324ec:	e0fffb17 	ldw	r3,-20(fp)
   324f0:	00bfff84 	movi	r2,-2
   324f4:	1884703a 	and	r2,r3,r2
   324f8:	1001703a 	wrctl	status,r2
  
  return context;
   324fc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   32500:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   32504:	e0bffc17 	ldw	r2,-16(fp)
   32508:	10800817 	ldw	r2,32(r2)
   3250c:	10c00094 	ori	r3,r2,2
   32510:	e0bffc17 	ldw	r2,-16(fp)
   32514:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   32518:	e0bffc17 	ldw	r2,-16(fp)
   3251c:	10800017 	ldw	r2,0(r2)
   32520:	10800104 	addi	r2,r2,4
   32524:	1007883a 	mov	r3,r2
   32528:	e0bffc17 	ldw	r2,-16(fp)
   3252c:	10800817 	ldw	r2,32(r2)
   32530:	18800035 	stwio	r2,0(r3)
   32534:	e0bffa17 	ldw	r2,-24(fp)
   32538:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   3253c:	e0bff817 	ldw	r2,-32(fp)
   32540:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   32544:	e0bffe17 	ldw	r2,-8(fp)
   32548:	0080100e 	bge	zero,r2,3258c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   3254c:	e0bfff17 	ldw	r2,-4(fp)
   32550:	1090000c 	andi	r2,r2,16384
   32554:	1000101e 	bne	r2,zero,32598 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   32558:	0001883a 	nop
   3255c:	e0bffc17 	ldw	r2,-16(fp)
   32560:	10c00d17 	ldw	r3,52(r2)
   32564:	e0bff517 	ldw	r2,-44(fp)
   32568:	1880051e 	bne	r3,r2,32580 <altera_avalon_jtag_uart_write+0x1b8>
   3256c:	e0bffc17 	ldw	r2,-16(fp)
   32570:	10c00917 	ldw	r3,36(r2)
   32574:	e0bffc17 	ldw	r2,-16(fp)
   32578:	10800117 	ldw	r2,4(r2)
   3257c:	18bff736 	bltu	r3,r2,3255c <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   32580:	e0bffc17 	ldw	r2,-16(fp)
   32584:	10800917 	ldw	r2,36(r2)
   32588:	1000051e 	bne	r2,zero,325a0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   3258c:	e0bffe17 	ldw	r2,-8(fp)
   32590:	00bfd016 	blt	zero,r2,324d4 <altera_avalon_jtag_uart_write+0x10c>
   32594:	00000306 	br	325a4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   32598:	0001883a 	nop
   3259c:	00000106 	br	325a4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   325a0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   325a4:	e0fffd17 	ldw	r3,-12(fp)
   325a8:	e0bff717 	ldw	r2,-36(fp)
   325ac:	18800426 	beq	r3,r2,325c0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   325b0:	e0fffd17 	ldw	r3,-12(fp)
   325b4:	e0bff717 	ldw	r2,-36(fp)
   325b8:	1885c83a 	sub	r2,r3,r2
   325bc:	00000606 	br	325d8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   325c0:	e0bfff17 	ldw	r2,-4(fp)
   325c4:	1090000c 	andi	r2,r2,16384
   325c8:	10000226 	beq	r2,zero,325d4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   325cc:	00bffd44 	movi	r2,-11
   325d0:	00000106 	br	325d8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   325d4:	00bffec4 	movi	r2,-5
}
   325d8:	e037883a 	mov	sp,fp
   325dc:	dfc00117 	ldw	ra,4(sp)
   325e0:	df000017 	ldw	fp,0(sp)
   325e4:	dec00204 	addi	sp,sp,8
   325e8:	f800283a 	ret

000325ec <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   325ec:	defffa04 	addi	sp,sp,-24
   325f0:	dfc00515 	stw	ra,20(sp)
   325f4:	df000415 	stw	fp,16(sp)
   325f8:	df000404 	addi	fp,sp,16
   325fc:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   32600:	0007883a 	mov	r3,zero
   32604:	e0bfff17 	ldw	r2,-4(fp)
   32608:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   3260c:	e0bfff17 	ldw	r2,-4(fp)
   32610:	10800104 	addi	r2,r2,4
   32614:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32618:	0005303a 	rdctl	r2,status
   3261c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32620:	e0fffd17 	ldw	r3,-12(fp)
   32624:	00bfff84 	movi	r2,-2
   32628:	1884703a 	and	r2,r3,r2
   3262c:	1001703a 	wrctl	status,r2
  
  return context;
   32630:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   32634:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   32638:	00330240 	call	33024 <alt_tick>
   3263c:	e0bffc17 	ldw	r2,-16(fp)
   32640:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32644:	e0bffe17 	ldw	r2,-8(fp)
   32648:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   3264c:	0001883a 	nop
   32650:	e037883a 	mov	sp,fp
   32654:	dfc00117 	ldw	ra,4(sp)
   32658:	df000017 	ldw	fp,0(sp)
   3265c:	dec00204 	addi	sp,sp,8
   32660:	f800283a 	ret

00032664 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   32664:	defff804 	addi	sp,sp,-32
   32668:	dfc00715 	stw	ra,28(sp)
   3266c:	df000615 	stw	fp,24(sp)
   32670:	df000604 	addi	fp,sp,24
   32674:	e13ffc15 	stw	r4,-16(fp)
   32678:	e17ffd15 	stw	r5,-12(fp)
   3267c:	e1bffe15 	stw	r6,-8(fp)
   32680:	e1ffff15 	stw	r7,-4(fp)
   32684:	e0bfff17 	ldw	r2,-4(fp)
   32688:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   3268c:	d0a6db17 	ldw	r2,-25748(gp)
   32690:	1000021e 	bne	r2,zero,3269c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   32694:	e0bffb17 	ldw	r2,-20(fp)
   32698:	d0a6db15 	stw	r2,-25748(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   3269c:	e0bffc17 	ldw	r2,-16(fp)
   326a0:	10800104 	addi	r2,r2,4
   326a4:	00c001c4 	movi	r3,7
   326a8:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   326ac:	d8000015 	stw	zero,0(sp)
   326b0:	e1fffc17 	ldw	r7,-16(fp)
   326b4:	018000f4 	movhi	r6,3
   326b8:	31897b04 	addi	r6,r6,9708
   326bc:	e17ffe17 	ldw	r5,-8(fp)
   326c0:	e13ffd17 	ldw	r4,-12(fp)
   326c4:	00310c40 	call	310c4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   326c8:	0001883a 	nop
   326cc:	e037883a 	mov	sp,fp
   326d0:	dfc00117 	ldw	ra,4(sp)
   326d4:	df000017 	ldw	fp,0(sp)
   326d8:	dec00204 	addi	sp,sp,8
   326dc:	f800283a 	ret

000326e0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   326e0:	defff504 	addi	sp,sp,-44
   326e4:	df000a15 	stw	fp,40(sp)
   326e8:	df000a04 	addi	fp,sp,40
   326ec:	e13ffc15 	stw	r4,-16(fp)
   326f0:	e17ffd15 	stw	r5,-12(fp)
   326f4:	e1bffe15 	stw	r6,-8(fp)
   326f8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   326fc:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   32700:	d0a6db17 	ldw	r2,-25748(gp)
  
  if (alt_ticks_per_second ())
   32704:	10003c26 	beq	r2,zero,327f8 <alt_alarm_start+0x118>
  {
    if (alarm)
   32708:	e0bffc17 	ldw	r2,-16(fp)
   3270c:	10003826 	beq	r2,zero,327f0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   32710:	e0bffc17 	ldw	r2,-16(fp)
   32714:	e0fffe17 	ldw	r3,-8(fp)
   32718:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   3271c:	e0bffc17 	ldw	r2,-16(fp)
   32720:	e0ffff17 	ldw	r3,-4(fp)
   32724:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32728:	0005303a 	rdctl	r2,status
   3272c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32730:	e0fff917 	ldw	r3,-28(fp)
   32734:	00bfff84 	movi	r2,-2
   32738:	1884703a 	and	r2,r3,r2
   3273c:	1001703a 	wrctl	status,r2
  
  return context;
   32740:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   32744:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   32748:	d0a6dc17 	ldw	r2,-25744(gp)
      
      current_nticks = alt_nticks();
   3274c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   32750:	e0fffd17 	ldw	r3,-12(fp)
   32754:	e0bff617 	ldw	r2,-40(fp)
   32758:	1885883a 	add	r2,r3,r2
   3275c:	10c00044 	addi	r3,r2,1
   32760:	e0bffc17 	ldw	r2,-16(fp)
   32764:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   32768:	e0bffc17 	ldw	r2,-16(fp)
   3276c:	10c00217 	ldw	r3,8(r2)
   32770:	e0bff617 	ldw	r2,-40(fp)
   32774:	1880042e 	bgeu	r3,r2,32788 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   32778:	e0bffc17 	ldw	r2,-16(fp)
   3277c:	00c00044 	movi	r3,1
   32780:	10c00405 	stb	r3,16(r2)
   32784:	00000206 	br	32790 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   32788:	e0bffc17 	ldw	r2,-16(fp)
   3278c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   32790:	e0bffc17 	ldw	r2,-16(fp)
   32794:	d0e01004 	addi	r3,gp,-32704
   32798:	e0fffa15 	stw	r3,-24(fp)
   3279c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   327a0:	e0bffb17 	ldw	r2,-20(fp)
   327a4:	e0fffa17 	ldw	r3,-24(fp)
   327a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   327ac:	e0bffa17 	ldw	r2,-24(fp)
   327b0:	10c00017 	ldw	r3,0(r2)
   327b4:	e0bffb17 	ldw	r2,-20(fp)
   327b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   327bc:	e0bffa17 	ldw	r2,-24(fp)
   327c0:	10800017 	ldw	r2,0(r2)
   327c4:	e0fffb17 	ldw	r3,-20(fp)
   327c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   327cc:	e0bffa17 	ldw	r2,-24(fp)
   327d0:	e0fffb17 	ldw	r3,-20(fp)
   327d4:	10c00015 	stw	r3,0(r2)
   327d8:	e0bff817 	ldw	r2,-32(fp)
   327dc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   327e0:	e0bff717 	ldw	r2,-36(fp)
   327e4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   327e8:	0005883a 	mov	r2,zero
   327ec:	00000306 	br	327fc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   327f0:	00bffa84 	movi	r2,-22
   327f4:	00000106 	br	327fc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   327f8:	00bfde84 	movi	r2,-134
  }
}
   327fc:	e037883a 	mov	sp,fp
   32800:	df000017 	ldw	fp,0(sp)
   32804:	dec00104 	addi	sp,sp,4
   32808:	f800283a 	ret

0003280c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   3280c:	defffa04 	addi	sp,sp,-24
   32810:	dfc00515 	stw	ra,20(sp)
   32814:	df000415 	stw	fp,16(sp)
   32818:	df000404 	addi	fp,sp,16
   3281c:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   32820:	008000c4 	movi	r2,3
   32824:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   32828:	e0fffd17 	ldw	r3,-12(fp)
   3282c:	008003f4 	movhi	r2,15
   32830:	10909004 	addi	r2,r2,16960
   32834:	1885383a 	mul	r2,r3,r2
   32838:	100b883a 	mov	r5,r2
   3283c:	0100bef4 	movhi	r4,763
   32840:	213c2004 	addi	r4,r4,-3968
   32844:	002e77c0 	call	2e77c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   32848:	100b883a 	mov	r5,r2
   3284c:	01200034 	movhi	r4,32768
   32850:	213fffc4 	addi	r4,r4,-1
   32854:	002e77c0 	call	2e77c <__udivsi3>
   32858:	100b883a 	mov	r5,r2
   3285c:	e13fff17 	ldw	r4,-4(fp)
   32860:	002e77c0 	call	2e77c <__udivsi3>
   32864:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   32868:	e0bffe17 	ldw	r2,-8(fp)
   3286c:	10002a26 	beq	r2,zero,32918 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   32870:	e03ffc15 	stw	zero,-16(fp)
   32874:	00001706 	br	328d4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   32878:	00a00034 	movhi	r2,32768
   3287c:	10bfffc4 	addi	r2,r2,-1
   32880:	10bfffc4 	addi	r2,r2,-1
   32884:	103ffe1e 	bne	r2,zero,32880 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   32888:	e0fffd17 	ldw	r3,-12(fp)
   3288c:	008003f4 	movhi	r2,15
   32890:	10909004 	addi	r2,r2,16960
   32894:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   32898:	100b883a 	mov	r5,r2
   3289c:	0100bef4 	movhi	r4,763
   328a0:	213c2004 	addi	r4,r4,-3968
   328a4:	002e77c0 	call	2e77c <__udivsi3>
   328a8:	100b883a 	mov	r5,r2
   328ac:	01200034 	movhi	r4,32768
   328b0:	213fffc4 	addi	r4,r4,-1
   328b4:	002e77c0 	call	2e77c <__udivsi3>
   328b8:	1007883a 	mov	r3,r2
   328bc:	e0bfff17 	ldw	r2,-4(fp)
   328c0:	10c5c83a 	sub	r2,r2,r3
   328c4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   328c8:	e0bffc17 	ldw	r2,-16(fp)
   328cc:	10800044 	addi	r2,r2,1
   328d0:	e0bffc15 	stw	r2,-16(fp)
   328d4:	e0fffc17 	ldw	r3,-16(fp)
   328d8:	e0bffe17 	ldw	r2,-8(fp)
   328dc:	18bfe616 	blt	r3,r2,32878 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   328e0:	e0fffd17 	ldw	r3,-12(fp)
   328e4:	008003f4 	movhi	r2,15
   328e8:	10909004 	addi	r2,r2,16960
   328ec:	1885383a 	mul	r2,r3,r2
   328f0:	100b883a 	mov	r5,r2
   328f4:	0100bef4 	movhi	r4,763
   328f8:	213c2004 	addi	r4,r4,-3968
   328fc:	002e77c0 	call	2e77c <__udivsi3>
   32900:	1007883a 	mov	r3,r2
   32904:	e0bfff17 	ldw	r2,-4(fp)
   32908:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   3290c:	10bfffc4 	addi	r2,r2,-1
   32910:	103ffe1e 	bne	r2,zero,3290c <alt_busy_sleep+0x100>
   32914:	00000d06 	br	3294c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   32918:	e0fffd17 	ldw	r3,-12(fp)
   3291c:	008003f4 	movhi	r2,15
   32920:	10909004 	addi	r2,r2,16960
   32924:	1885383a 	mul	r2,r3,r2
   32928:	100b883a 	mov	r5,r2
   3292c:	0100bef4 	movhi	r4,763
   32930:	213c2004 	addi	r4,r4,-3968
   32934:	002e77c0 	call	2e77c <__udivsi3>
   32938:	1007883a 	mov	r3,r2
   3293c:	e0bfff17 	ldw	r2,-4(fp)
   32940:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   32944:	10bfffc4 	addi	r2,r2,-1
   32948:	00bffe16 	blt	zero,r2,32944 <alt_busy_sleep+0x138>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   3294c:	0005883a 	mov	r2,zero
}
   32950:	e037883a 	mov	sp,fp
   32954:	dfc00117 	ldw	ra,4(sp)
   32958:	df000017 	ldw	fp,0(sp)
   3295c:	dec00204 	addi	sp,sp,8
   32960:	f800283a 	ret

00032964 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   32964:	deffff04 	addi	sp,sp,-4
   32968:	df000015 	stw	fp,0(sp)
   3296c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   32970:	0001883a 	nop
   32974:	e037883a 	mov	sp,fp
   32978:	df000017 	ldw	fp,0(sp)
   3297c:	dec00104 	addi	sp,sp,4
   32980:	f800283a 	ret

00032984 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   32984:	defffe04 	addi	sp,sp,-8
   32988:	dfc00115 	stw	ra,4(sp)
   3298c:	df000015 	stw	fp,0(sp)
   32990:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   32994:	d0a00d17 	ldw	r2,-32716(gp)
   32998:	10000326 	beq	r2,zero,329a8 <alt_get_errno+0x24>
   3299c:	d0a00d17 	ldw	r2,-32716(gp)
   329a0:	103ee83a 	callr	r2
   329a4:	00000106 	br	329ac <alt_get_errno+0x28>
   329a8:	d0a6d504 	addi	r2,gp,-25772
}
   329ac:	e037883a 	mov	sp,fp
   329b0:	dfc00117 	ldw	ra,4(sp)
   329b4:	df000017 	ldw	fp,0(sp)
   329b8:	dec00204 	addi	sp,sp,8
   329bc:	f800283a 	ret

000329c0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   329c0:	defffa04 	addi	sp,sp,-24
   329c4:	dfc00515 	stw	ra,20(sp)
   329c8:	df000415 	stw	fp,16(sp)
   329cc:	df000404 	addi	fp,sp,16
   329d0:	e13ffe15 	stw	r4,-8(fp)
   329d4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   329d8:	e0bffe17 	ldw	r2,-8(fp)
   329dc:	10000326 	beq	r2,zero,329ec <alt_dev_llist_insert+0x2c>
   329e0:	e0bffe17 	ldw	r2,-8(fp)
   329e4:	10800217 	ldw	r2,8(r2)
   329e8:	1000061e 	bne	r2,zero,32a04 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   329ec:	00329840 	call	32984 <alt_get_errno>
   329f0:	1007883a 	mov	r3,r2
   329f4:	00800584 	movi	r2,22
   329f8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   329fc:	00bffa84 	movi	r2,-22
   32a00:	00001306 	br	32a50 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   32a04:	e0bffe17 	ldw	r2,-8(fp)
   32a08:	e0ffff17 	ldw	r3,-4(fp)
   32a0c:	e0fffc15 	stw	r3,-16(fp)
   32a10:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   32a14:	e0bffd17 	ldw	r2,-12(fp)
   32a18:	e0fffc17 	ldw	r3,-16(fp)
   32a1c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   32a20:	e0bffc17 	ldw	r2,-16(fp)
   32a24:	10c00017 	ldw	r3,0(r2)
   32a28:	e0bffd17 	ldw	r2,-12(fp)
   32a2c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   32a30:	e0bffc17 	ldw	r2,-16(fp)
   32a34:	10800017 	ldw	r2,0(r2)
   32a38:	e0fffd17 	ldw	r3,-12(fp)
   32a3c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   32a40:	e0bffc17 	ldw	r2,-16(fp)
   32a44:	e0fffd17 	ldw	r3,-12(fp)
   32a48:	10c00015 	stw	r3,0(r2)

  return 0;  
   32a4c:	0005883a 	mov	r2,zero
}
   32a50:	e037883a 	mov	sp,fp
   32a54:	dfc00117 	ldw	ra,4(sp)
   32a58:	df000017 	ldw	fp,0(sp)
   32a5c:	dec00204 	addi	sp,sp,8
   32a60:	f800283a 	ret

00032a64 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   32a64:	defffd04 	addi	sp,sp,-12
   32a68:	dfc00215 	stw	ra,8(sp)
   32a6c:	df000115 	stw	fp,4(sp)
   32a70:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   32a74:	008000f4 	movhi	r2,3
   32a78:	108deb04 	addi	r2,r2,14252
   32a7c:	e0bfff15 	stw	r2,-4(fp)
   32a80:	00000606 	br	32a9c <_do_ctors+0x38>
        (*ctor) (); 
   32a84:	e0bfff17 	ldw	r2,-4(fp)
   32a88:	10800017 	ldw	r2,0(r2)
   32a8c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   32a90:	e0bfff17 	ldw	r2,-4(fp)
   32a94:	10bfff04 	addi	r2,r2,-4
   32a98:	e0bfff15 	stw	r2,-4(fp)
   32a9c:	e0ffff17 	ldw	r3,-4(fp)
   32aa0:	008000f4 	movhi	r2,3
   32aa4:	108dec04 	addi	r2,r2,14256
   32aa8:	18bff62e 	bgeu	r3,r2,32a84 <_do_ctors+0x20>
        (*ctor) (); 
}
   32aac:	0001883a 	nop
   32ab0:	e037883a 	mov	sp,fp
   32ab4:	dfc00117 	ldw	ra,4(sp)
   32ab8:	df000017 	ldw	fp,0(sp)
   32abc:	dec00204 	addi	sp,sp,8
   32ac0:	f800283a 	ret

00032ac4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   32ac4:	defffd04 	addi	sp,sp,-12
   32ac8:	dfc00215 	stw	ra,8(sp)
   32acc:	df000115 	stw	fp,4(sp)
   32ad0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   32ad4:	008000f4 	movhi	r2,3
   32ad8:	108deb04 	addi	r2,r2,14252
   32adc:	e0bfff15 	stw	r2,-4(fp)
   32ae0:	00000606 	br	32afc <_do_dtors+0x38>
        (*dtor) (); 
   32ae4:	e0bfff17 	ldw	r2,-4(fp)
   32ae8:	10800017 	ldw	r2,0(r2)
   32aec:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   32af0:	e0bfff17 	ldw	r2,-4(fp)
   32af4:	10bfff04 	addi	r2,r2,-4
   32af8:	e0bfff15 	stw	r2,-4(fp)
   32afc:	e0ffff17 	ldw	r3,-4(fp)
   32b00:	008000f4 	movhi	r2,3
   32b04:	108dec04 	addi	r2,r2,14256
   32b08:	18bff62e 	bgeu	r3,r2,32ae4 <_do_dtors+0x20>
        (*dtor) (); 
}
   32b0c:	0001883a 	nop
   32b10:	e037883a 	mov	sp,fp
   32b14:	dfc00117 	ldw	ra,4(sp)
   32b18:	df000017 	ldw	fp,0(sp)
   32b1c:	dec00204 	addi	sp,sp,8
   32b20:	f800283a 	ret

00032b24 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   32b24:	defffe04 	addi	sp,sp,-8
   32b28:	dfc00115 	stw	ra,4(sp)
   32b2c:	df000015 	stw	fp,0(sp)
   32b30:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   32b34:	01420004 	movi	r5,2048
   32b38:	0009883a 	mov	r4,zero
   32b3c:	003338c0 	call	3338c <alt_icache_flush>
#endif
}
   32b40:	0001883a 	nop
   32b44:	e037883a 	mov	sp,fp
   32b48:	dfc00117 	ldw	ra,4(sp)
   32b4c:	df000017 	ldw	fp,0(sp)
   32b50:	dec00204 	addi	sp,sp,8
   32b54:	f800283a 	ret

00032b58 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   32b58:	defffe04 	addi	sp,sp,-8
   32b5c:	df000115 	stw	fp,4(sp)
   32b60:	df000104 	addi	fp,sp,4
   32b64:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   32b68:	e0bfff17 	ldw	r2,-4(fp)
   32b6c:	10bffe84 	addi	r2,r2,-6
   32b70:	10c00428 	cmpgeui	r3,r2,16
   32b74:	18001a1e 	bne	r3,zero,32be0 <alt_exception_cause_generated_bad_addr+0x88>
   32b78:	100690ba 	slli	r3,r2,2
   32b7c:	008000f4 	movhi	r2,3
   32b80:	108ae404 	addi	r2,r2,11152
   32b84:	1885883a 	add	r2,r3,r2
   32b88:	10800017 	ldw	r2,0(r2)
   32b8c:	1000683a 	jmp	r2
   32b90:	00032bd0 	cmplti	zero,zero,3247
   32b94:	00032bd0 	cmplti	zero,zero,3247
   32b98:	00032be0 	cmpeqi	zero,zero,3247
   32b9c:	00032be0 	cmpeqi	zero,zero,3247
   32ba0:	00032be0 	cmpeqi	zero,zero,3247
   32ba4:	00032bd0 	cmplti	zero,zero,3247
   32ba8:	00032bd8 	cmpnei	zero,zero,3247
   32bac:	00032be0 	cmpeqi	zero,zero,3247
   32bb0:	00032bd0 	cmplti	zero,zero,3247
   32bb4:	00032bd0 	cmplti	zero,zero,3247
   32bb8:	00032be0 	cmpeqi	zero,zero,3247
   32bbc:	00032bd0 	cmplti	zero,zero,3247
   32bc0:	00032bd8 	cmpnei	zero,zero,3247
   32bc4:	00032be0 	cmpeqi	zero,zero,3247
   32bc8:	00032be0 	cmpeqi	zero,zero,3247
   32bcc:	00032bd0 	cmplti	zero,zero,3247
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   32bd0:	00800044 	movi	r2,1
   32bd4:	00000306 	br	32be4 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   32bd8:	0005883a 	mov	r2,zero
   32bdc:	00000106 	br	32be4 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   32be0:	0005883a 	mov	r2,zero
  }
}
   32be4:	e037883a 	mov	sp,fp
   32be8:	df000017 	ldw	fp,0(sp)
   32bec:	dec00104 	addi	sp,sp,4
   32bf0:	f800283a 	ret

00032bf4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   32bf4:	defff904 	addi	sp,sp,-28
   32bf8:	dfc00615 	stw	ra,24(sp)
   32bfc:	df000515 	stw	fp,20(sp)
   32c00:	df000504 	addi	fp,sp,20
   32c04:	e13ffc15 	stw	r4,-16(fp)
   32c08:	e17ffd15 	stw	r5,-12(fp)
   32c0c:	e1bffe15 	stw	r6,-8(fp)
   32c10:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   32c14:	e1bfff17 	ldw	r6,-4(fp)
   32c18:	e17ffe17 	ldw	r5,-8(fp)
   32c1c:	e13ffd17 	ldw	r4,-12(fp)
   32c20:	0032e340 	call	32e34 <open>
   32c24:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   32c28:	e0bffb17 	ldw	r2,-20(fp)
   32c2c:	10001c16 	blt	r2,zero,32ca0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   32c30:	008000f4 	movhi	r2,3
   32c34:	10912504 	addi	r2,r2,17556
   32c38:	e0fffb17 	ldw	r3,-20(fp)
   32c3c:	18c00324 	muli	r3,r3,12
   32c40:	10c5883a 	add	r2,r2,r3
   32c44:	10c00017 	ldw	r3,0(r2)
   32c48:	e0bffc17 	ldw	r2,-16(fp)
   32c4c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   32c50:	008000f4 	movhi	r2,3
   32c54:	10912504 	addi	r2,r2,17556
   32c58:	e0fffb17 	ldw	r3,-20(fp)
   32c5c:	18c00324 	muli	r3,r3,12
   32c60:	10c5883a 	add	r2,r2,r3
   32c64:	10800104 	addi	r2,r2,4
   32c68:	10c00017 	ldw	r3,0(r2)
   32c6c:	e0bffc17 	ldw	r2,-16(fp)
   32c70:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   32c74:	008000f4 	movhi	r2,3
   32c78:	10912504 	addi	r2,r2,17556
   32c7c:	e0fffb17 	ldw	r3,-20(fp)
   32c80:	18c00324 	muli	r3,r3,12
   32c84:	10c5883a 	add	r2,r2,r3
   32c88:	10800204 	addi	r2,r2,8
   32c8c:	10c00017 	ldw	r3,0(r2)
   32c90:	e0bffc17 	ldw	r2,-16(fp)
   32c94:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   32c98:	e13ffb17 	ldw	r4,-20(fp)
   32c9c:	003183c0 	call	3183c <alt_release_fd>
  }
} 
   32ca0:	0001883a 	nop
   32ca4:	e037883a 	mov	sp,fp
   32ca8:	dfc00117 	ldw	ra,4(sp)
   32cac:	df000017 	ldw	fp,0(sp)
   32cb0:	dec00204 	addi	sp,sp,8
   32cb4:	f800283a 	ret

00032cb8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   32cb8:	defffb04 	addi	sp,sp,-20
   32cbc:	dfc00415 	stw	ra,16(sp)
   32cc0:	df000315 	stw	fp,12(sp)
   32cc4:	df000304 	addi	fp,sp,12
   32cc8:	e13ffd15 	stw	r4,-12(fp)
   32ccc:	e17ffe15 	stw	r5,-8(fp)
   32cd0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   32cd4:	01c07fc4 	movi	r7,511
   32cd8:	01800044 	movi	r6,1
   32cdc:	e17ffd17 	ldw	r5,-12(fp)
   32ce0:	010000f4 	movhi	r4,3
   32ce4:	21112804 	addi	r4,r4,17568
   32ce8:	0032bf40 	call	32bf4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   32cec:	01c07fc4 	movi	r7,511
   32cf0:	000d883a 	mov	r6,zero
   32cf4:	e17ffe17 	ldw	r5,-8(fp)
   32cf8:	010000f4 	movhi	r4,3
   32cfc:	21112504 	addi	r4,r4,17556
   32d00:	0032bf40 	call	32bf4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   32d04:	01c07fc4 	movi	r7,511
   32d08:	01800044 	movi	r6,1
   32d0c:	e17fff17 	ldw	r5,-4(fp)
   32d10:	010000f4 	movhi	r4,3
   32d14:	21112b04 	addi	r4,r4,17580
   32d18:	0032bf40 	call	32bf4 <alt_open_fd>
}  
   32d1c:	0001883a 	nop
   32d20:	e037883a 	mov	sp,fp
   32d24:	dfc00117 	ldw	ra,4(sp)
   32d28:	df000017 	ldw	fp,0(sp)
   32d2c:	dec00204 	addi	sp,sp,8
   32d30:	f800283a 	ret

00032d34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   32d34:	defffe04 	addi	sp,sp,-8
   32d38:	dfc00115 	stw	ra,4(sp)
   32d3c:	df000015 	stw	fp,0(sp)
   32d40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   32d44:	d0a00d17 	ldw	r2,-32716(gp)
   32d48:	10000326 	beq	r2,zero,32d58 <alt_get_errno+0x24>
   32d4c:	d0a00d17 	ldw	r2,-32716(gp)
   32d50:	103ee83a 	callr	r2
   32d54:	00000106 	br	32d5c <alt_get_errno+0x28>
   32d58:	d0a6d504 	addi	r2,gp,-25772
}
   32d5c:	e037883a 	mov	sp,fp
   32d60:	dfc00117 	ldw	ra,4(sp)
   32d64:	df000017 	ldw	fp,0(sp)
   32d68:	dec00204 	addi	sp,sp,8
   32d6c:	f800283a 	ret

00032d70 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   32d70:	defffd04 	addi	sp,sp,-12
   32d74:	df000215 	stw	fp,8(sp)
   32d78:	df000204 	addi	fp,sp,8
   32d7c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   32d80:	e0bfff17 	ldw	r2,-4(fp)
   32d84:	10800217 	ldw	r2,8(r2)
   32d88:	10d00034 	orhi	r3,r2,16384
   32d8c:	e0bfff17 	ldw	r2,-4(fp)
   32d90:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   32d94:	e03ffe15 	stw	zero,-8(fp)
   32d98:	00001d06 	br	32e10 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   32d9c:	008000f4 	movhi	r2,3
   32da0:	10912504 	addi	r2,r2,17556
   32da4:	e0fffe17 	ldw	r3,-8(fp)
   32da8:	18c00324 	muli	r3,r3,12
   32dac:	10c5883a 	add	r2,r2,r3
   32db0:	10c00017 	ldw	r3,0(r2)
   32db4:	e0bfff17 	ldw	r2,-4(fp)
   32db8:	10800017 	ldw	r2,0(r2)
   32dbc:	1880111e 	bne	r3,r2,32e04 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   32dc0:	008000f4 	movhi	r2,3
   32dc4:	10912504 	addi	r2,r2,17556
   32dc8:	e0fffe17 	ldw	r3,-8(fp)
   32dcc:	18c00324 	muli	r3,r3,12
   32dd0:	10c5883a 	add	r2,r2,r3
   32dd4:	10800204 	addi	r2,r2,8
   32dd8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   32ddc:	1000090e 	bge	r2,zero,32e04 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   32de0:	e0bffe17 	ldw	r2,-8(fp)
   32de4:	10c00324 	muli	r3,r2,12
   32de8:	008000f4 	movhi	r2,3
   32dec:	10912504 	addi	r2,r2,17556
   32df0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   32df4:	e0bfff17 	ldw	r2,-4(fp)
   32df8:	18800226 	beq	r3,r2,32e04 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   32dfc:	00bffcc4 	movi	r2,-13
   32e00:	00000806 	br	32e24 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   32e04:	e0bffe17 	ldw	r2,-8(fp)
   32e08:	10800044 	addi	r2,r2,1
   32e0c:	e0bffe15 	stw	r2,-8(fp)
   32e10:	d0a00c17 	ldw	r2,-32720(gp)
   32e14:	1007883a 	mov	r3,r2
   32e18:	e0bffe17 	ldw	r2,-8(fp)
   32e1c:	18bfdf2e 	bgeu	r3,r2,32d9c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   32e20:	0005883a 	mov	r2,zero
}
   32e24:	e037883a 	mov	sp,fp
   32e28:	df000017 	ldw	fp,0(sp)
   32e2c:	dec00104 	addi	sp,sp,4
   32e30:	f800283a 	ret

00032e34 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   32e34:	defff604 	addi	sp,sp,-40
   32e38:	dfc00915 	stw	ra,36(sp)
   32e3c:	df000815 	stw	fp,32(sp)
   32e40:	df000804 	addi	fp,sp,32
   32e44:	e13ffd15 	stw	r4,-12(fp)
   32e48:	e17ffe15 	stw	r5,-8(fp)
   32e4c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   32e50:	00bfffc4 	movi	r2,-1
   32e54:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   32e58:	00bffb44 	movi	r2,-19
   32e5c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   32e60:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   32e64:	d1600a04 	addi	r5,gp,-32728
   32e68:	e13ffd17 	ldw	r4,-12(fp)
   32e6c:	00331500 	call	33150 <alt_find_dev>
   32e70:	e0bff815 	stw	r2,-32(fp)
   32e74:	e0bff817 	ldw	r2,-32(fp)
   32e78:	1000051e 	bne	r2,zero,32e90 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   32e7c:	e13ffd17 	ldw	r4,-12(fp)
   32e80:	00331e00 	call	331e0 <alt_find_file>
   32e84:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   32e88:	00800044 	movi	r2,1
   32e8c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   32e90:	e0bff817 	ldw	r2,-32(fp)
   32e94:	10002926 	beq	r2,zero,32f3c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   32e98:	e13ff817 	ldw	r4,-32(fp)
   32e9c:	00332e80 	call	332e8 <alt_get_fd>
   32ea0:	e0bff915 	stw	r2,-28(fp)
   32ea4:	e0bff917 	ldw	r2,-28(fp)
   32ea8:	1000030e 	bge	r2,zero,32eb8 <open+0x84>
    {
      status = index;
   32eac:	e0bff917 	ldw	r2,-28(fp)
   32eb0:	e0bffa15 	stw	r2,-24(fp)
   32eb4:	00002306 	br	32f44 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   32eb8:	e0bff917 	ldw	r2,-28(fp)
   32ebc:	10c00324 	muli	r3,r2,12
   32ec0:	008000f4 	movhi	r2,3
   32ec4:	10912504 	addi	r2,r2,17556
   32ec8:	1885883a 	add	r2,r3,r2
   32ecc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   32ed0:	e0fffe17 	ldw	r3,-8(fp)
   32ed4:	00900034 	movhi	r2,16384
   32ed8:	10bfffc4 	addi	r2,r2,-1
   32edc:	1886703a 	and	r3,r3,r2
   32ee0:	e0bffc17 	ldw	r2,-16(fp)
   32ee4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   32ee8:	e0bffb17 	ldw	r2,-20(fp)
   32eec:	1000051e 	bne	r2,zero,32f04 <open+0xd0>
   32ef0:	e13ffc17 	ldw	r4,-16(fp)
   32ef4:	0032d700 	call	32d70 <alt_file_locked>
   32ef8:	e0bffa15 	stw	r2,-24(fp)
   32efc:	e0bffa17 	ldw	r2,-24(fp)
   32f00:	10001016 	blt	r2,zero,32f44 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   32f04:	e0bff817 	ldw	r2,-32(fp)
   32f08:	10800317 	ldw	r2,12(r2)
   32f0c:	10000826 	beq	r2,zero,32f30 <open+0xfc>
   32f10:	e0bff817 	ldw	r2,-32(fp)
   32f14:	10800317 	ldw	r2,12(r2)
   32f18:	e1ffff17 	ldw	r7,-4(fp)
   32f1c:	e1bffe17 	ldw	r6,-8(fp)
   32f20:	e17ffd17 	ldw	r5,-12(fp)
   32f24:	e13ffc17 	ldw	r4,-16(fp)
   32f28:	103ee83a 	callr	r2
   32f2c:	00000106 	br	32f34 <open+0x100>
   32f30:	0005883a 	mov	r2,zero
   32f34:	e0bffa15 	stw	r2,-24(fp)
   32f38:	00000206 	br	32f44 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   32f3c:	00bffb44 	movi	r2,-19
   32f40:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   32f44:	e0bffa17 	ldw	r2,-24(fp)
   32f48:	1000090e 	bge	r2,zero,32f70 <open+0x13c>
  {
    alt_release_fd (index);  
   32f4c:	e13ff917 	ldw	r4,-28(fp)
   32f50:	003183c0 	call	3183c <alt_release_fd>
    ALT_ERRNO = -status;
   32f54:	0032d340 	call	32d34 <alt_get_errno>
   32f58:	1007883a 	mov	r3,r2
   32f5c:	e0bffa17 	ldw	r2,-24(fp)
   32f60:	0085c83a 	sub	r2,zero,r2
   32f64:	18800015 	stw	r2,0(r3)
    return -1;
   32f68:	00bfffc4 	movi	r2,-1
   32f6c:	00000106 	br	32f74 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   32f70:	e0bff917 	ldw	r2,-28(fp)
}
   32f74:	e037883a 	mov	sp,fp
   32f78:	dfc00117 	ldw	ra,4(sp)
   32f7c:	df000017 	ldw	fp,0(sp)
   32f80:	dec00204 	addi	sp,sp,8
   32f84:	f800283a 	ret

00032f88 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   32f88:	defffa04 	addi	sp,sp,-24
   32f8c:	df000515 	stw	fp,20(sp)
   32f90:	df000504 	addi	fp,sp,20
   32f94:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32f98:	0005303a 	rdctl	r2,status
   32f9c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32fa0:	e0fffc17 	ldw	r3,-16(fp)
   32fa4:	00bfff84 	movi	r2,-2
   32fa8:	1884703a 	and	r2,r3,r2
   32fac:	1001703a 	wrctl	status,r2
  
  return context;
   32fb0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   32fb4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   32fb8:	e0bfff17 	ldw	r2,-4(fp)
   32fbc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   32fc0:	e0bffd17 	ldw	r2,-12(fp)
   32fc4:	10800017 	ldw	r2,0(r2)
   32fc8:	e0fffd17 	ldw	r3,-12(fp)
   32fcc:	18c00117 	ldw	r3,4(r3)
   32fd0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   32fd4:	e0bffd17 	ldw	r2,-12(fp)
   32fd8:	10800117 	ldw	r2,4(r2)
   32fdc:	e0fffd17 	ldw	r3,-12(fp)
   32fe0:	18c00017 	ldw	r3,0(r3)
   32fe4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   32fe8:	e0bffd17 	ldw	r2,-12(fp)
   32fec:	e0fffd17 	ldw	r3,-12(fp)
   32ff0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   32ff4:	e0bffd17 	ldw	r2,-12(fp)
   32ff8:	e0fffd17 	ldw	r3,-12(fp)
   32ffc:	10c00015 	stw	r3,0(r2)
   33000:	e0bffb17 	ldw	r2,-20(fp)
   33004:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   33008:	e0bffe17 	ldw	r2,-8(fp)
   3300c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   33010:	0001883a 	nop
   33014:	e037883a 	mov	sp,fp
   33018:	df000017 	ldw	fp,0(sp)
   3301c:	dec00104 	addi	sp,sp,4
   33020:	f800283a 	ret

00033024 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   33024:	defffb04 	addi	sp,sp,-20
   33028:	dfc00415 	stw	ra,16(sp)
   3302c:	df000315 	stw	fp,12(sp)
   33030:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   33034:	d0a01017 	ldw	r2,-32704(gp)
   33038:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   3303c:	d0a6dc17 	ldw	r2,-25744(gp)
   33040:	10800044 	addi	r2,r2,1
   33044:	d0a6dc15 	stw	r2,-25744(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   33048:	00002e06 	br	33104 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   3304c:	e0bffd17 	ldw	r2,-12(fp)
   33050:	10800017 	ldw	r2,0(r2)
   33054:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   33058:	e0bffd17 	ldw	r2,-12(fp)
   3305c:	10800403 	ldbu	r2,16(r2)
   33060:	10803fcc 	andi	r2,r2,255
   33064:	10000426 	beq	r2,zero,33078 <alt_tick+0x54>
   33068:	d0a6dc17 	ldw	r2,-25744(gp)
   3306c:	1000021e 	bne	r2,zero,33078 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   33070:	e0bffd17 	ldw	r2,-12(fp)
   33074:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   33078:	e0bffd17 	ldw	r2,-12(fp)
   3307c:	10800217 	ldw	r2,8(r2)
   33080:	d0e6dc17 	ldw	r3,-25744(gp)
   33084:	18801d36 	bltu	r3,r2,330fc <alt_tick+0xd8>
   33088:	e0bffd17 	ldw	r2,-12(fp)
   3308c:	10800403 	ldbu	r2,16(r2)
   33090:	10803fcc 	andi	r2,r2,255
   33094:	1000191e 	bne	r2,zero,330fc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   33098:	e0bffd17 	ldw	r2,-12(fp)
   3309c:	10800317 	ldw	r2,12(r2)
   330a0:	e0fffd17 	ldw	r3,-12(fp)
   330a4:	18c00517 	ldw	r3,20(r3)
   330a8:	1809883a 	mov	r4,r3
   330ac:	103ee83a 	callr	r2
   330b0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   330b4:	e0bfff17 	ldw	r2,-4(fp)
   330b8:	1000031e 	bne	r2,zero,330c8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   330bc:	e13ffd17 	ldw	r4,-12(fp)
   330c0:	0032f880 	call	32f88 <alt_alarm_stop>
   330c4:	00000d06 	br	330fc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   330c8:	e0bffd17 	ldw	r2,-12(fp)
   330cc:	10c00217 	ldw	r3,8(r2)
   330d0:	e0bfff17 	ldw	r2,-4(fp)
   330d4:	1887883a 	add	r3,r3,r2
   330d8:	e0bffd17 	ldw	r2,-12(fp)
   330dc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   330e0:	e0bffd17 	ldw	r2,-12(fp)
   330e4:	10c00217 	ldw	r3,8(r2)
   330e8:	d0a6dc17 	ldw	r2,-25744(gp)
   330ec:	1880032e 	bgeu	r3,r2,330fc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   330f0:	e0bffd17 	ldw	r2,-12(fp)
   330f4:	00c00044 	movi	r3,1
   330f8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   330fc:	e0bffe17 	ldw	r2,-8(fp)
   33100:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   33104:	e0fffd17 	ldw	r3,-12(fp)
   33108:	d0a01004 	addi	r2,gp,-32704
   3310c:	18bfcf1e 	bne	r3,r2,3304c <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   33110:	0001883a 	nop
}
   33114:	0001883a 	nop
   33118:	e037883a 	mov	sp,fp
   3311c:	dfc00117 	ldw	ra,4(sp)
   33120:	df000017 	ldw	fp,0(sp)
   33124:	dec00204 	addi	sp,sp,8
   33128:	f800283a 	ret

0003312c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   3312c:	deffff04 	addi	sp,sp,-4
   33130:	df000015 	stw	fp,0(sp)
   33134:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   33138:	000170fa 	wrctl	ienable,zero
}
   3313c:	0001883a 	nop
   33140:	e037883a 	mov	sp,fp
   33144:	df000017 	ldw	fp,0(sp)
   33148:	dec00104 	addi	sp,sp,4
   3314c:	f800283a 	ret

00033150 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   33150:	defffa04 	addi	sp,sp,-24
   33154:	dfc00515 	stw	ra,20(sp)
   33158:	df000415 	stw	fp,16(sp)
   3315c:	df000404 	addi	fp,sp,16
   33160:	e13ffe15 	stw	r4,-8(fp)
   33164:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   33168:	e0bfff17 	ldw	r2,-4(fp)
   3316c:	10800017 	ldw	r2,0(r2)
   33170:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   33174:	e13ffe17 	ldw	r4,-8(fp)
   33178:	00210dc0 	call	210dc <strlen>
   3317c:	10800044 	addi	r2,r2,1
   33180:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   33184:	00000d06 	br	331bc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   33188:	e0bffc17 	ldw	r2,-16(fp)
   3318c:	10800217 	ldw	r2,8(r2)
   33190:	e0fffd17 	ldw	r3,-12(fp)
   33194:	180d883a 	mov	r6,r3
   33198:	e17ffe17 	ldw	r5,-8(fp)
   3319c:	1009883a 	mov	r4,r2
   331a0:	00334680 	call	33468 <memcmp>
   331a4:	1000021e 	bne	r2,zero,331b0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   331a8:	e0bffc17 	ldw	r2,-16(fp)
   331ac:	00000706 	br	331cc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   331b0:	e0bffc17 	ldw	r2,-16(fp)
   331b4:	10800017 	ldw	r2,0(r2)
   331b8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   331bc:	e0fffc17 	ldw	r3,-16(fp)
   331c0:	e0bfff17 	ldw	r2,-4(fp)
   331c4:	18bff01e 	bne	r3,r2,33188 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   331c8:	0005883a 	mov	r2,zero
}
   331cc:	e037883a 	mov	sp,fp
   331d0:	dfc00117 	ldw	ra,4(sp)
   331d4:	df000017 	ldw	fp,0(sp)
   331d8:	dec00204 	addi	sp,sp,8
   331dc:	f800283a 	ret

000331e0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   331e0:	defffb04 	addi	sp,sp,-20
   331e4:	dfc00415 	stw	ra,16(sp)
   331e8:	df000315 	stw	fp,12(sp)
   331ec:	df000304 	addi	fp,sp,12
   331f0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   331f4:	d0a00817 	ldw	r2,-32736(gp)
   331f8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   331fc:	00003106 	br	332c4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   33200:	e0bffd17 	ldw	r2,-12(fp)
   33204:	10800217 	ldw	r2,8(r2)
   33208:	1009883a 	mov	r4,r2
   3320c:	00210dc0 	call	210dc <strlen>
   33210:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   33214:	e0bffd17 	ldw	r2,-12(fp)
   33218:	10c00217 	ldw	r3,8(r2)
   3321c:	e0bffe17 	ldw	r2,-8(fp)
   33220:	10bfffc4 	addi	r2,r2,-1
   33224:	1885883a 	add	r2,r3,r2
   33228:	10800003 	ldbu	r2,0(r2)
   3322c:	10803fcc 	andi	r2,r2,255
   33230:	1080201c 	xori	r2,r2,128
   33234:	10bfe004 	addi	r2,r2,-128
   33238:	10800bd8 	cmpnei	r2,r2,47
   3323c:	1000031e 	bne	r2,zero,3324c <alt_find_file+0x6c>
    {
      len -= 1;
   33240:	e0bffe17 	ldw	r2,-8(fp)
   33244:	10bfffc4 	addi	r2,r2,-1
   33248:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   3324c:	e0bffe17 	ldw	r2,-8(fp)
   33250:	e0ffff17 	ldw	r3,-4(fp)
   33254:	1885883a 	add	r2,r3,r2
   33258:	10800003 	ldbu	r2,0(r2)
   3325c:	10803fcc 	andi	r2,r2,255
   33260:	1080201c 	xori	r2,r2,128
   33264:	10bfe004 	addi	r2,r2,-128
   33268:	10800be0 	cmpeqi	r2,r2,47
   3326c:	1000081e 	bne	r2,zero,33290 <alt_find_file+0xb0>
   33270:	e0bffe17 	ldw	r2,-8(fp)
   33274:	e0ffff17 	ldw	r3,-4(fp)
   33278:	1885883a 	add	r2,r3,r2
   3327c:	10800003 	ldbu	r2,0(r2)
   33280:	10803fcc 	andi	r2,r2,255
   33284:	1080201c 	xori	r2,r2,128
   33288:	10bfe004 	addi	r2,r2,-128
   3328c:	10000a1e 	bne	r2,zero,332b8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   33290:	e0bffd17 	ldw	r2,-12(fp)
   33294:	10800217 	ldw	r2,8(r2)
   33298:	e0fffe17 	ldw	r3,-8(fp)
   3329c:	180d883a 	mov	r6,r3
   332a0:	e17fff17 	ldw	r5,-4(fp)
   332a4:	1009883a 	mov	r4,r2
   332a8:	00334680 	call	33468 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   332ac:	1000021e 	bne	r2,zero,332b8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   332b0:	e0bffd17 	ldw	r2,-12(fp)
   332b4:	00000706 	br	332d4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   332b8:	e0bffd17 	ldw	r2,-12(fp)
   332bc:	10800017 	ldw	r2,0(r2)
   332c0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   332c4:	e0fffd17 	ldw	r3,-12(fp)
   332c8:	d0a00804 	addi	r2,gp,-32736
   332cc:	18bfcc1e 	bne	r3,r2,33200 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   332d0:	0005883a 	mov	r2,zero
}
   332d4:	e037883a 	mov	sp,fp
   332d8:	dfc00117 	ldw	ra,4(sp)
   332dc:	df000017 	ldw	fp,0(sp)
   332e0:	dec00204 	addi	sp,sp,8
   332e4:	f800283a 	ret

000332e8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   332e8:	defffc04 	addi	sp,sp,-16
   332ec:	df000315 	stw	fp,12(sp)
   332f0:	df000304 	addi	fp,sp,12
   332f4:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   332f8:	00bffa04 	movi	r2,-24
   332fc:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   33300:	e03ffd15 	stw	zero,-12(fp)
   33304:	00001906 	br	3336c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   33308:	008000f4 	movhi	r2,3
   3330c:	10912504 	addi	r2,r2,17556
   33310:	e0fffd17 	ldw	r3,-12(fp)
   33314:	18c00324 	muli	r3,r3,12
   33318:	10c5883a 	add	r2,r2,r3
   3331c:	10800017 	ldw	r2,0(r2)
   33320:	10000f1e 	bne	r2,zero,33360 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   33324:	008000f4 	movhi	r2,3
   33328:	10912504 	addi	r2,r2,17556
   3332c:	e0fffd17 	ldw	r3,-12(fp)
   33330:	18c00324 	muli	r3,r3,12
   33334:	10c5883a 	add	r2,r2,r3
   33338:	e0ffff17 	ldw	r3,-4(fp)
   3333c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   33340:	d0e00c17 	ldw	r3,-32720(gp)
   33344:	e0bffd17 	ldw	r2,-12(fp)
   33348:	1880020e 	bge	r3,r2,33354 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   3334c:	e0bffd17 	ldw	r2,-12(fp)
   33350:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
   33354:	e0bffd17 	ldw	r2,-12(fp)
   33358:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   3335c:	00000606 	br	33378 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   33360:	e0bffd17 	ldw	r2,-12(fp)
   33364:	10800044 	addi	r2,r2,1
   33368:	e0bffd15 	stw	r2,-12(fp)
   3336c:	e0bffd17 	ldw	r2,-12(fp)
   33370:	10800810 	cmplti	r2,r2,32
   33374:	103fe41e 	bne	r2,zero,33308 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   33378:	e0bffe17 	ldw	r2,-8(fp)
}
   3337c:	e037883a 	mov	sp,fp
   33380:	df000017 	ldw	fp,0(sp)
   33384:	dec00104 	addi	sp,sp,4
   33388:	f800283a 	ret

0003338c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   3338c:	defffb04 	addi	sp,sp,-20
   33390:	df000415 	stw	fp,16(sp)
   33394:	df000404 	addi	fp,sp,16
   33398:	e13ffe15 	stw	r4,-8(fp)
   3339c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   333a0:	e0bfff17 	ldw	r2,-4(fp)
   333a4:	10820070 	cmpltui	r2,r2,2049
   333a8:	1000021e 	bne	r2,zero,333b4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   333ac:	00820004 	movi	r2,2048
   333b0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   333b4:	e0fffe17 	ldw	r3,-8(fp)
   333b8:	e0bfff17 	ldw	r2,-4(fp)
   333bc:	1885883a 	add	r2,r3,r2
   333c0:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   333c4:	e0bffe17 	ldw	r2,-8(fp)
   333c8:	e0bffc15 	stw	r2,-16(fp)
   333cc:	00000506 	br	333e4 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   333d0:	e0bffc17 	ldw	r2,-16(fp)
   333d4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   333d8:	e0bffc17 	ldw	r2,-16(fp)
   333dc:	10800804 	addi	r2,r2,32
   333e0:	e0bffc15 	stw	r2,-16(fp)
   333e4:	e0fffc17 	ldw	r3,-16(fp)
   333e8:	e0bffd17 	ldw	r2,-12(fp)
   333ec:	18bff836 	bltu	r3,r2,333d0 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   333f0:	e0bffe17 	ldw	r2,-8(fp)
   333f4:	108007cc 	andi	r2,r2,31
   333f8:	10000226 	beq	r2,zero,33404 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   333fc:	e0bffc17 	ldw	r2,-16(fp)
   33400:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   33404:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   33408:	0001883a 	nop
   3340c:	e037883a 	mov	sp,fp
   33410:	df000017 	ldw	fp,0(sp)
   33414:	dec00104 	addi	sp,sp,4
   33418:	f800283a 	ret

0003341c <atexit>:
   3341c:	200b883a 	mov	r5,r4
   33420:	000f883a 	mov	r7,zero
   33424:	000d883a 	mov	r6,zero
   33428:	0009883a 	mov	r4,zero
   3342c:	00334e41 	jmpi	334e4 <__register_exitproc>

00033430 <exit>:
   33430:	defffe04 	addi	sp,sp,-8
   33434:	000b883a 	mov	r5,zero
   33438:	dc000015 	stw	r16,0(sp)
   3343c:	dfc00115 	stw	ra,4(sp)
   33440:	2021883a 	mov	r16,r4
   33444:	00335fc0 	call	335fc <__call_exitprocs>
   33448:	008000f4 	movhi	r2,3
   3344c:	10959f04 	addi	r2,r2,22140
   33450:	11000017 	ldw	r4,0(r2)
   33454:	20800f17 	ldw	r2,60(r4)
   33458:	10000126 	beq	r2,zero,33460 <exit+0x30>
   3345c:	103ee83a 	callr	r2
   33460:	8009883a 	mov	r4,r16
   33464:	003377c0 	call	3377c <_exit>

00033468 <memcmp>:
   33468:	01c000c4 	movi	r7,3
   3346c:	3980192e 	bgeu	r7,r6,334d4 <memcmp+0x6c>
   33470:	2144b03a 	or	r2,r4,r5
   33474:	11c4703a 	and	r2,r2,r7
   33478:	10000f26 	beq	r2,zero,334b8 <memcmp+0x50>
   3347c:	20800003 	ldbu	r2,0(r4)
   33480:	28c00003 	ldbu	r3,0(r5)
   33484:	10c0151e 	bne	r2,r3,334dc <memcmp+0x74>
   33488:	31bfff84 	addi	r6,r6,-2
   3348c:	01ffffc4 	movi	r7,-1
   33490:	00000406 	br	334a4 <memcmp+0x3c>
   33494:	20800003 	ldbu	r2,0(r4)
   33498:	28c00003 	ldbu	r3,0(r5)
   3349c:	31bfffc4 	addi	r6,r6,-1
   334a0:	10c00e1e 	bne	r2,r3,334dc <memcmp+0x74>
   334a4:	21000044 	addi	r4,r4,1
   334a8:	29400044 	addi	r5,r5,1
   334ac:	31fff91e 	bne	r6,r7,33494 <memcmp+0x2c>
   334b0:	0005883a 	mov	r2,zero
   334b4:	f800283a 	ret
   334b8:	20c00017 	ldw	r3,0(r4)
   334bc:	28800017 	ldw	r2,0(r5)
   334c0:	18bfee1e 	bne	r3,r2,3347c <memcmp+0x14>
   334c4:	31bfff04 	addi	r6,r6,-4
   334c8:	21000104 	addi	r4,r4,4
   334cc:	29400104 	addi	r5,r5,4
   334d0:	39bff936 	bltu	r7,r6,334b8 <memcmp+0x50>
   334d4:	303fe91e 	bne	r6,zero,3347c <memcmp+0x14>
   334d8:	003ff506 	br	334b0 <memcmp+0x48>
   334dc:	10c5c83a 	sub	r2,r2,r3
   334e0:	f800283a 	ret

000334e4 <__register_exitproc>:
   334e4:	defffa04 	addi	sp,sp,-24
   334e8:	dc000315 	stw	r16,12(sp)
   334ec:	040000f4 	movhi	r16,3
   334f0:	84159f04 	addi	r16,r16,22140
   334f4:	80c00017 	ldw	r3,0(r16)
   334f8:	dc400415 	stw	r17,16(sp)
   334fc:	dfc00515 	stw	ra,20(sp)
   33500:	18805217 	ldw	r2,328(r3)
   33504:	2023883a 	mov	r17,r4
   33508:	10003726 	beq	r2,zero,335e8 <__register_exitproc+0x104>
   3350c:	10c00117 	ldw	r3,4(r2)
   33510:	010007c4 	movi	r4,31
   33514:	20c00e16 	blt	r4,r3,33550 <__register_exitproc+0x6c>
   33518:	1a000044 	addi	r8,r3,1
   3351c:	8800221e 	bne	r17,zero,335a8 <__register_exitproc+0xc4>
   33520:	18c00084 	addi	r3,r3,2
   33524:	18c7883a 	add	r3,r3,r3
   33528:	18c7883a 	add	r3,r3,r3
   3352c:	12000115 	stw	r8,4(r2)
   33530:	10c7883a 	add	r3,r2,r3
   33534:	19400015 	stw	r5,0(r3)
   33538:	0005883a 	mov	r2,zero
   3353c:	dfc00517 	ldw	ra,20(sp)
   33540:	dc400417 	ldw	r17,16(sp)
   33544:	dc000317 	ldw	r16,12(sp)
   33548:	dec00604 	addi	sp,sp,24
   3354c:	f800283a 	ret
   33550:	00800034 	movhi	r2,0
   33554:	10800004 	addi	r2,r2,0
   33558:	10002626 	beq	r2,zero,335f4 <__register_exitproc+0x110>
   3355c:	01006404 	movi	r4,400
   33560:	d9400015 	stw	r5,0(sp)
   33564:	d9800115 	stw	r6,4(sp)
   33568:	d9c00215 	stw	r7,8(sp)
   3356c:	00000000 	call	0 <__alt_mem_MEMOIRE_ONCHIP-0x20000>
   33570:	d9400017 	ldw	r5,0(sp)
   33574:	d9800117 	ldw	r6,4(sp)
   33578:	d9c00217 	ldw	r7,8(sp)
   3357c:	10001d26 	beq	r2,zero,335f4 <__register_exitproc+0x110>
   33580:	81000017 	ldw	r4,0(r16)
   33584:	10000115 	stw	zero,4(r2)
   33588:	02000044 	movi	r8,1
   3358c:	22405217 	ldw	r9,328(r4)
   33590:	0007883a 	mov	r3,zero
   33594:	12400015 	stw	r9,0(r2)
   33598:	20805215 	stw	r2,328(r4)
   3359c:	10006215 	stw	zero,392(r2)
   335a0:	10006315 	stw	zero,396(r2)
   335a4:	883fde26 	beq	r17,zero,33520 <__register_exitproc+0x3c>
   335a8:	18c9883a 	add	r4,r3,r3
   335ac:	2109883a 	add	r4,r4,r4
   335b0:	1109883a 	add	r4,r2,r4
   335b4:	21802215 	stw	r6,136(r4)
   335b8:	01800044 	movi	r6,1
   335bc:	12406217 	ldw	r9,392(r2)
   335c0:	30cc983a 	sll	r6,r6,r3
   335c4:	4992b03a 	or	r9,r9,r6
   335c8:	12406215 	stw	r9,392(r2)
   335cc:	21c04215 	stw	r7,264(r4)
   335d0:	01000084 	movi	r4,2
   335d4:	893fd21e 	bne	r17,r4,33520 <__register_exitproc+0x3c>
   335d8:	11006317 	ldw	r4,396(r2)
   335dc:	218cb03a 	or	r6,r4,r6
   335e0:	11806315 	stw	r6,396(r2)
   335e4:	003fce06 	br	33520 <__register_exitproc+0x3c>
   335e8:	18805304 	addi	r2,r3,332
   335ec:	18805215 	stw	r2,328(r3)
   335f0:	003fc606 	br	3350c <__register_exitproc+0x28>
   335f4:	00bfffc4 	movi	r2,-1
   335f8:	003fd006 	br	3353c <__register_exitproc+0x58>

000335fc <__call_exitprocs>:
   335fc:	defff504 	addi	sp,sp,-44
   33600:	df000915 	stw	fp,36(sp)
   33604:	dd400615 	stw	r21,24(sp)
   33608:	dc800315 	stw	r18,12(sp)
   3360c:	dfc00a15 	stw	ra,40(sp)
   33610:	ddc00815 	stw	r23,32(sp)
   33614:	dd800715 	stw	r22,28(sp)
   33618:	dd000515 	stw	r20,20(sp)
   3361c:	dcc00415 	stw	r19,16(sp)
   33620:	dc400215 	stw	r17,8(sp)
   33624:	dc000115 	stw	r16,4(sp)
   33628:	d9000015 	stw	r4,0(sp)
   3362c:	2839883a 	mov	fp,r5
   33630:	04800044 	movi	r18,1
   33634:	057fffc4 	movi	r21,-1
   33638:	008000f4 	movhi	r2,3
   3363c:	10959f04 	addi	r2,r2,22140
   33640:	12000017 	ldw	r8,0(r2)
   33644:	45005217 	ldw	r20,328(r8)
   33648:	44c05204 	addi	r19,r8,328
   3364c:	a0001c26 	beq	r20,zero,336c0 <__call_exitprocs+0xc4>
   33650:	a0800117 	ldw	r2,4(r20)
   33654:	15ffffc4 	addi	r23,r2,-1
   33658:	b8000d16 	blt	r23,zero,33690 <__call_exitprocs+0x94>
   3365c:	14000044 	addi	r16,r2,1
   33660:	8421883a 	add	r16,r16,r16
   33664:	8421883a 	add	r16,r16,r16
   33668:	84402004 	addi	r17,r16,128
   3366c:	a463883a 	add	r17,r20,r17
   33670:	a421883a 	add	r16,r20,r16
   33674:	e0001e26 	beq	fp,zero,336f0 <__call_exitprocs+0xf4>
   33678:	80804017 	ldw	r2,256(r16)
   3367c:	e0801c26 	beq	fp,r2,336f0 <__call_exitprocs+0xf4>
   33680:	bdffffc4 	addi	r23,r23,-1
   33684:	843fff04 	addi	r16,r16,-4
   33688:	8c7fff04 	addi	r17,r17,-4
   3368c:	bd7ff91e 	bne	r23,r21,33674 <__call_exitprocs+0x78>
   33690:	00800034 	movhi	r2,0
   33694:	10800004 	addi	r2,r2,0
   33698:	10000926 	beq	r2,zero,336c0 <__call_exitprocs+0xc4>
   3369c:	a0800117 	ldw	r2,4(r20)
   336a0:	1000301e 	bne	r2,zero,33764 <__call_exitprocs+0x168>
   336a4:	a0800017 	ldw	r2,0(r20)
   336a8:	10003226 	beq	r2,zero,33774 <__call_exitprocs+0x178>
   336ac:	a009883a 	mov	r4,r20
   336b0:	98800015 	stw	r2,0(r19)
   336b4:	00000000 	call	0 <__alt_mem_MEMOIRE_ONCHIP-0x20000>
   336b8:	9d000017 	ldw	r20,0(r19)
   336bc:	a03fe41e 	bne	r20,zero,33650 <__call_exitprocs+0x54>
   336c0:	dfc00a17 	ldw	ra,40(sp)
   336c4:	df000917 	ldw	fp,36(sp)
   336c8:	ddc00817 	ldw	r23,32(sp)
   336cc:	dd800717 	ldw	r22,28(sp)
   336d0:	dd400617 	ldw	r21,24(sp)
   336d4:	dd000517 	ldw	r20,20(sp)
   336d8:	dcc00417 	ldw	r19,16(sp)
   336dc:	dc800317 	ldw	r18,12(sp)
   336e0:	dc400217 	ldw	r17,8(sp)
   336e4:	dc000117 	ldw	r16,4(sp)
   336e8:	dec00b04 	addi	sp,sp,44
   336ec:	f800283a 	ret
   336f0:	a0800117 	ldw	r2,4(r20)
   336f4:	80c00017 	ldw	r3,0(r16)
   336f8:	10bfffc4 	addi	r2,r2,-1
   336fc:	15c01426 	beq	r2,r23,33750 <__call_exitprocs+0x154>
   33700:	80000015 	stw	zero,0(r16)
   33704:	183fde26 	beq	r3,zero,33680 <__call_exitprocs+0x84>
   33708:	95c8983a 	sll	r4,r18,r23
   3370c:	a0806217 	ldw	r2,392(r20)
   33710:	a5800117 	ldw	r22,4(r20)
   33714:	2084703a 	and	r2,r4,r2
   33718:	10000b26 	beq	r2,zero,33748 <__call_exitprocs+0x14c>
   3371c:	a0806317 	ldw	r2,396(r20)
   33720:	2088703a 	and	r4,r4,r2
   33724:	20000c1e 	bne	r4,zero,33758 <__call_exitprocs+0x15c>
   33728:	89400017 	ldw	r5,0(r17)
   3372c:	d9000017 	ldw	r4,0(sp)
   33730:	183ee83a 	callr	r3
   33734:	a0800117 	ldw	r2,4(r20)
   33738:	15bfbf1e 	bne	r2,r22,33638 <__call_exitprocs+0x3c>
   3373c:	98800017 	ldw	r2,0(r19)
   33740:	153fcf26 	beq	r2,r20,33680 <__call_exitprocs+0x84>
   33744:	003fbc06 	br	33638 <__call_exitprocs+0x3c>
   33748:	183ee83a 	callr	r3
   3374c:	003ff906 	br	33734 <__call_exitprocs+0x138>
   33750:	a5c00115 	stw	r23,4(r20)
   33754:	003feb06 	br	33704 <__call_exitprocs+0x108>
   33758:	89000017 	ldw	r4,0(r17)
   3375c:	183ee83a 	callr	r3
   33760:	003ff406 	br	33734 <__call_exitprocs+0x138>
   33764:	a0800017 	ldw	r2,0(r20)
   33768:	a027883a 	mov	r19,r20
   3376c:	1029883a 	mov	r20,r2
   33770:	003fb606 	br	3364c <__call_exitprocs+0x50>
   33774:	0005883a 	mov	r2,zero
   33778:	003ffb06 	br	33768 <__call_exitprocs+0x16c>

0003377c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   3377c:	defffd04 	addi	sp,sp,-12
   33780:	df000215 	stw	fp,8(sp)
   33784:	df000204 	addi	fp,sp,8
   33788:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   3378c:	0001883a 	nop
   33790:	e0bfff17 	ldw	r2,-4(fp)
   33794:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   33798:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   3379c:	10000226 	beq	r2,zero,337a8 <_exit+0x2c>
    ALT_SIM_FAIL();
   337a0:	002af070 	cmpltui	zero,zero,43969
   337a4:	00000106 	br	337ac <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   337a8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   337ac:	003fff06 	br	337ac <_exit+0x30>
